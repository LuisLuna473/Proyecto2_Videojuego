
ILI9341.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000685c  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002068  08006a2c  08006a2c  00007a2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008a94  08008a94  0001d7c4  2**0
                  CONTENTS
  4 .ARM          00000008  08008a94  08008a94  00009a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008a9c  08008a9c  0001d7c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008a9c  08008a9c  00009a9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008aa0  08008aa0  00009aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000137c4  20000000  08008aa4  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002ac  200137c4  0801c268  0001d7c4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20013a70  0801c268  0001da70  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001d7c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e04b  00000000  00000000  0001d7f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000028a9  00000000  00000000  0002b83f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000c40  00000000  00000000  0002e0e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000932  00000000  00000000  0002ed28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000242e9  00000000  00000000  0002f65a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000111a5  00000000  00000000  00053943  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cf31c  00000000  00000000  00064ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00133e04  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000039d4  00000000  00000000  00133e48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000057  00000000  00000000  0013781c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200137c4 	.word	0x200137c4
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08006a14 	.word	0x08006a14

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200137c8 	.word	0x200137c8
 800020c:	08006a14 	.word	0x08006a14

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b96a 	b.w	80005ac <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	460c      	mov	r4, r1
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	d14e      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fc:	4694      	mov	ip, r2
 80002fe:	458c      	cmp	ip, r1
 8000300:	4686      	mov	lr, r0
 8000302:	fab2 f282 	clz	r2, r2
 8000306:	d962      	bls.n	80003ce <__udivmoddi4+0xde>
 8000308:	b14a      	cbz	r2, 800031e <__udivmoddi4+0x2e>
 800030a:	f1c2 0320 	rsb	r3, r2, #32
 800030e:	4091      	lsls	r1, r2
 8000310:	fa20 f303 	lsr.w	r3, r0, r3
 8000314:	fa0c fc02 	lsl.w	ip, ip, r2
 8000318:	4319      	orrs	r1, r3
 800031a:	fa00 fe02 	lsl.w	lr, r0, r2
 800031e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000322:	fa1f f68c 	uxth.w	r6, ip
 8000326:	fbb1 f4f7 	udiv	r4, r1, r7
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb07 1114 	mls	r1, r7, r4, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb04 f106 	mul.w	r1, r4, r6
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f104 30ff 	add.w	r0, r4, #4294967295
 8000346:	f080 8112 	bcs.w	800056e <__udivmoddi4+0x27e>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 810f 	bls.w	800056e <__udivmoddi4+0x27e>
 8000350:	3c02      	subs	r4, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a59      	subs	r1, r3, r1
 8000356:	fa1f f38e 	uxth.w	r3, lr
 800035a:	fbb1 f0f7 	udiv	r0, r1, r7
 800035e:	fb07 1110 	mls	r1, r7, r0, r1
 8000362:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000366:	fb00 f606 	mul.w	r6, r0, r6
 800036a:	429e      	cmp	r6, r3
 800036c:	d90a      	bls.n	8000384 <__udivmoddi4+0x94>
 800036e:	eb1c 0303 	adds.w	r3, ip, r3
 8000372:	f100 31ff 	add.w	r1, r0, #4294967295
 8000376:	f080 80fc 	bcs.w	8000572 <__udivmoddi4+0x282>
 800037a:	429e      	cmp	r6, r3
 800037c:	f240 80f9 	bls.w	8000572 <__udivmoddi4+0x282>
 8000380:	4463      	add	r3, ip
 8000382:	3802      	subs	r0, #2
 8000384:	1b9b      	subs	r3, r3, r6
 8000386:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800038a:	2100      	movs	r1, #0
 800038c:	b11d      	cbz	r5, 8000396 <__udivmoddi4+0xa6>
 800038e:	40d3      	lsrs	r3, r2
 8000390:	2200      	movs	r2, #0
 8000392:	e9c5 3200 	strd	r3, r2, [r5]
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d905      	bls.n	80003aa <__udivmoddi4+0xba>
 800039e:	b10d      	cbz	r5, 80003a4 <__udivmoddi4+0xb4>
 80003a0:	e9c5 0100 	strd	r0, r1, [r5]
 80003a4:	2100      	movs	r1, #0
 80003a6:	4608      	mov	r0, r1
 80003a8:	e7f5      	b.n	8000396 <__udivmoddi4+0xa6>
 80003aa:	fab3 f183 	clz	r1, r3
 80003ae:	2900      	cmp	r1, #0
 80003b0:	d146      	bne.n	8000440 <__udivmoddi4+0x150>
 80003b2:	42a3      	cmp	r3, r4
 80003b4:	d302      	bcc.n	80003bc <__udivmoddi4+0xcc>
 80003b6:	4290      	cmp	r0, r2
 80003b8:	f0c0 80f0 	bcc.w	800059c <__udivmoddi4+0x2ac>
 80003bc:	1a86      	subs	r6, r0, r2
 80003be:	eb64 0303 	sbc.w	r3, r4, r3
 80003c2:	2001      	movs	r0, #1
 80003c4:	2d00      	cmp	r5, #0
 80003c6:	d0e6      	beq.n	8000396 <__udivmoddi4+0xa6>
 80003c8:	e9c5 6300 	strd	r6, r3, [r5]
 80003cc:	e7e3      	b.n	8000396 <__udivmoddi4+0xa6>
 80003ce:	2a00      	cmp	r2, #0
 80003d0:	f040 8090 	bne.w	80004f4 <__udivmoddi4+0x204>
 80003d4:	eba1 040c 	sub.w	r4, r1, ip
 80003d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003dc:	fa1f f78c 	uxth.w	r7, ip
 80003e0:	2101      	movs	r1, #1
 80003e2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003e6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ea:	fb08 4416 	mls	r4, r8, r6, r4
 80003ee:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003f2:	fb07 f006 	mul.w	r0, r7, r6
 80003f6:	4298      	cmp	r0, r3
 80003f8:	d908      	bls.n	800040c <__udivmoddi4+0x11c>
 80003fa:	eb1c 0303 	adds.w	r3, ip, r3
 80003fe:	f106 34ff 	add.w	r4, r6, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x11a>
 8000404:	4298      	cmp	r0, r3
 8000406:	f200 80cd 	bhi.w	80005a4 <__udivmoddi4+0x2b4>
 800040a:	4626      	mov	r6, r4
 800040c:	1a1c      	subs	r4, r3, r0
 800040e:	fa1f f38e 	uxth.w	r3, lr
 8000412:	fbb4 f0f8 	udiv	r0, r4, r8
 8000416:	fb08 4410 	mls	r4, r8, r0, r4
 800041a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800041e:	fb00 f707 	mul.w	r7, r0, r7
 8000422:	429f      	cmp	r7, r3
 8000424:	d908      	bls.n	8000438 <__udivmoddi4+0x148>
 8000426:	eb1c 0303 	adds.w	r3, ip, r3
 800042a:	f100 34ff 	add.w	r4, r0, #4294967295
 800042e:	d202      	bcs.n	8000436 <__udivmoddi4+0x146>
 8000430:	429f      	cmp	r7, r3
 8000432:	f200 80b0 	bhi.w	8000596 <__udivmoddi4+0x2a6>
 8000436:	4620      	mov	r0, r4
 8000438:	1bdb      	subs	r3, r3, r7
 800043a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800043e:	e7a5      	b.n	800038c <__udivmoddi4+0x9c>
 8000440:	f1c1 0620 	rsb	r6, r1, #32
 8000444:	408b      	lsls	r3, r1
 8000446:	fa22 f706 	lsr.w	r7, r2, r6
 800044a:	431f      	orrs	r7, r3
 800044c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000450:	fa04 f301 	lsl.w	r3, r4, r1
 8000454:	ea43 030c 	orr.w	r3, r3, ip
 8000458:	40f4      	lsrs	r4, r6
 800045a:	fa00 f801 	lsl.w	r8, r0, r1
 800045e:	0c38      	lsrs	r0, r7, #16
 8000460:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000464:	fbb4 fef0 	udiv	lr, r4, r0
 8000468:	fa1f fc87 	uxth.w	ip, r7
 800046c:	fb00 441e 	mls	r4, r0, lr, r4
 8000470:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000474:	fb0e f90c 	mul.w	r9, lr, ip
 8000478:	45a1      	cmp	r9, r4
 800047a:	fa02 f201 	lsl.w	r2, r2, r1
 800047e:	d90a      	bls.n	8000496 <__udivmoddi4+0x1a6>
 8000480:	193c      	adds	r4, r7, r4
 8000482:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000486:	f080 8084 	bcs.w	8000592 <__udivmoddi4+0x2a2>
 800048a:	45a1      	cmp	r9, r4
 800048c:	f240 8081 	bls.w	8000592 <__udivmoddi4+0x2a2>
 8000490:	f1ae 0e02 	sub.w	lr, lr, #2
 8000494:	443c      	add	r4, r7
 8000496:	eba4 0409 	sub.w	r4, r4, r9
 800049a:	fa1f f983 	uxth.w	r9, r3
 800049e:	fbb4 f3f0 	udiv	r3, r4, r0
 80004a2:	fb00 4413 	mls	r4, r0, r3, r4
 80004a6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80004aa:	fb03 fc0c 	mul.w	ip, r3, ip
 80004ae:	45a4      	cmp	ip, r4
 80004b0:	d907      	bls.n	80004c2 <__udivmoddi4+0x1d2>
 80004b2:	193c      	adds	r4, r7, r4
 80004b4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004b8:	d267      	bcs.n	800058a <__udivmoddi4+0x29a>
 80004ba:	45a4      	cmp	ip, r4
 80004bc:	d965      	bls.n	800058a <__udivmoddi4+0x29a>
 80004be:	3b02      	subs	r3, #2
 80004c0:	443c      	add	r4, r7
 80004c2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004c6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ca:	eba4 040c 	sub.w	r4, r4, ip
 80004ce:	429c      	cmp	r4, r3
 80004d0:	46ce      	mov	lr, r9
 80004d2:	469c      	mov	ip, r3
 80004d4:	d351      	bcc.n	800057a <__udivmoddi4+0x28a>
 80004d6:	d04e      	beq.n	8000576 <__udivmoddi4+0x286>
 80004d8:	b155      	cbz	r5, 80004f0 <__udivmoddi4+0x200>
 80004da:	ebb8 030e 	subs.w	r3, r8, lr
 80004de:	eb64 040c 	sbc.w	r4, r4, ip
 80004e2:	fa04 f606 	lsl.w	r6, r4, r6
 80004e6:	40cb      	lsrs	r3, r1
 80004e8:	431e      	orrs	r6, r3
 80004ea:	40cc      	lsrs	r4, r1
 80004ec:	e9c5 6400 	strd	r6, r4, [r5]
 80004f0:	2100      	movs	r1, #0
 80004f2:	e750      	b.n	8000396 <__udivmoddi4+0xa6>
 80004f4:	f1c2 0320 	rsb	r3, r2, #32
 80004f8:	fa20 f103 	lsr.w	r1, r0, r3
 80004fc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000500:	fa24 f303 	lsr.w	r3, r4, r3
 8000504:	4094      	lsls	r4, r2
 8000506:	430c      	orrs	r4, r1
 8000508:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800050c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000510:	fa1f f78c 	uxth.w	r7, ip
 8000514:	fbb3 f0f8 	udiv	r0, r3, r8
 8000518:	fb08 3110 	mls	r1, r8, r0, r3
 800051c:	0c23      	lsrs	r3, r4, #16
 800051e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000522:	fb00 f107 	mul.w	r1, r0, r7
 8000526:	4299      	cmp	r1, r3
 8000528:	d908      	bls.n	800053c <__udivmoddi4+0x24c>
 800052a:	eb1c 0303 	adds.w	r3, ip, r3
 800052e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000532:	d22c      	bcs.n	800058e <__udivmoddi4+0x29e>
 8000534:	4299      	cmp	r1, r3
 8000536:	d92a      	bls.n	800058e <__udivmoddi4+0x29e>
 8000538:	3802      	subs	r0, #2
 800053a:	4463      	add	r3, ip
 800053c:	1a5b      	subs	r3, r3, r1
 800053e:	b2a4      	uxth	r4, r4
 8000540:	fbb3 f1f8 	udiv	r1, r3, r8
 8000544:	fb08 3311 	mls	r3, r8, r1, r3
 8000548:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800054c:	fb01 f307 	mul.w	r3, r1, r7
 8000550:	42a3      	cmp	r3, r4
 8000552:	d908      	bls.n	8000566 <__udivmoddi4+0x276>
 8000554:	eb1c 0404 	adds.w	r4, ip, r4
 8000558:	f101 36ff 	add.w	r6, r1, #4294967295
 800055c:	d213      	bcs.n	8000586 <__udivmoddi4+0x296>
 800055e:	42a3      	cmp	r3, r4
 8000560:	d911      	bls.n	8000586 <__udivmoddi4+0x296>
 8000562:	3902      	subs	r1, #2
 8000564:	4464      	add	r4, ip
 8000566:	1ae4      	subs	r4, r4, r3
 8000568:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800056c:	e739      	b.n	80003e2 <__udivmoddi4+0xf2>
 800056e:	4604      	mov	r4, r0
 8000570:	e6f0      	b.n	8000354 <__udivmoddi4+0x64>
 8000572:	4608      	mov	r0, r1
 8000574:	e706      	b.n	8000384 <__udivmoddi4+0x94>
 8000576:	45c8      	cmp	r8, r9
 8000578:	d2ae      	bcs.n	80004d8 <__udivmoddi4+0x1e8>
 800057a:	ebb9 0e02 	subs.w	lr, r9, r2
 800057e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000582:	3801      	subs	r0, #1
 8000584:	e7a8      	b.n	80004d8 <__udivmoddi4+0x1e8>
 8000586:	4631      	mov	r1, r6
 8000588:	e7ed      	b.n	8000566 <__udivmoddi4+0x276>
 800058a:	4603      	mov	r3, r0
 800058c:	e799      	b.n	80004c2 <__udivmoddi4+0x1d2>
 800058e:	4630      	mov	r0, r6
 8000590:	e7d4      	b.n	800053c <__udivmoddi4+0x24c>
 8000592:	46d6      	mov	lr, sl
 8000594:	e77f      	b.n	8000496 <__udivmoddi4+0x1a6>
 8000596:	4463      	add	r3, ip
 8000598:	3802      	subs	r0, #2
 800059a:	e74d      	b.n	8000438 <__udivmoddi4+0x148>
 800059c:	4606      	mov	r6, r0
 800059e:	4623      	mov	r3, r4
 80005a0:	4608      	mov	r0, r1
 80005a2:	e70f      	b.n	80003c4 <__udivmoddi4+0xd4>
 80005a4:	3e02      	subs	r6, #2
 80005a6:	4463      	add	r3, ip
 80005a8:	e730      	b.n	800040c <__udivmoddi4+0x11c>
 80005aa:	bf00      	nop

080005ac <__aeabi_idiv0>:
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop

080005b0 <SELECT>:
 80005b0:	b580      	push	{r7, lr}
 80005b2:	af00      	add	r7, sp, #0
 80005b4:	2200      	movs	r2, #0
 80005b6:	2140      	movs	r1, #64	@ 0x40
 80005b8:	4803      	ldr	r0, [pc, #12]	@ (80005c8 <SELECT+0x18>)
 80005ba:	f002 ffe3 	bl	8003584 <HAL_GPIO_WritePin>
 80005be:	2001      	movs	r0, #1
 80005c0:	f002 f98e 	bl	80028e0 <HAL_Delay>
 80005c4:	bf00      	nop
 80005c6:	bd80      	pop	{r7, pc}
 80005c8:	40020400 	.word	0x40020400

080005cc <DESELECT>:
 80005cc:	b580      	push	{r7, lr}
 80005ce:	af00      	add	r7, sp, #0
 80005d0:	2201      	movs	r2, #1
 80005d2:	2140      	movs	r1, #64	@ 0x40
 80005d4:	4803      	ldr	r0, [pc, #12]	@ (80005e4 <DESELECT+0x18>)
 80005d6:	f002 ffd5 	bl	8003584 <HAL_GPIO_WritePin>
 80005da:	2001      	movs	r0, #1
 80005dc:	f002 f980 	bl	80028e0 <HAL_Delay>
 80005e0:	bf00      	nop
 80005e2:	bd80      	pop	{r7, pc}
 80005e4:	40020400 	.word	0x40020400

080005e8 <SPI_TxByte>:
 80005e8:	b580      	push	{r7, lr}
 80005ea:	b082      	sub	sp, #8
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	4603      	mov	r3, r0
 80005f0:	71fb      	strb	r3, [r7, #7]
 80005f2:	bf00      	nop
 80005f4:	4b08      	ldr	r3, [pc, #32]	@ (8000618 <SPI_TxByte+0x30>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	689b      	ldr	r3, [r3, #8]
 80005fa:	f003 0302 	and.w	r3, r3, #2
 80005fe:	2b02      	cmp	r3, #2
 8000600:	d1f8      	bne.n	80005f4 <SPI_TxByte+0xc>
 8000602:	1df9      	adds	r1, r7, #7
 8000604:	2364      	movs	r3, #100	@ 0x64
 8000606:	2201      	movs	r2, #1
 8000608:	4803      	ldr	r0, [pc, #12]	@ (8000618 <SPI_TxByte+0x30>)
 800060a:	f003 fdc0 	bl	800418e <HAL_SPI_Transmit>
 800060e:	bf00      	nop
 8000610:	3708      	adds	r7, #8
 8000612:	46bd      	mov	sp, r7
 8000614:	bd80      	pop	{r7, pc}
 8000616:	bf00      	nop
 8000618:	200137e8 	.word	0x200137e8

0800061c <SPI_TxBuffer>:
 800061c:	b580      	push	{r7, lr}
 800061e:	b082      	sub	sp, #8
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	807b      	strh	r3, [r7, #2]
 8000628:	bf00      	nop
 800062a:	4b08      	ldr	r3, [pc, #32]	@ (800064c <SPI_TxBuffer+0x30>)
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	689b      	ldr	r3, [r3, #8]
 8000630:	f003 0302 	and.w	r3, r3, #2
 8000634:	2b02      	cmp	r3, #2
 8000636:	d1f8      	bne.n	800062a <SPI_TxBuffer+0xe>
 8000638:	887a      	ldrh	r2, [r7, #2]
 800063a:	2364      	movs	r3, #100	@ 0x64
 800063c:	6879      	ldr	r1, [r7, #4]
 800063e:	4803      	ldr	r0, [pc, #12]	@ (800064c <SPI_TxBuffer+0x30>)
 8000640:	f003 fda5 	bl	800418e <HAL_SPI_Transmit>
 8000644:	bf00      	nop
 8000646:	3708      	adds	r7, #8
 8000648:	46bd      	mov	sp, r7
 800064a:	bd80      	pop	{r7, pc}
 800064c:	200137e8 	.word	0x200137e8

08000650 <SPI_RxByte>:
 8000650:	b580      	push	{r7, lr}
 8000652:	b084      	sub	sp, #16
 8000654:	af02      	add	r7, sp, #8
 8000656:	23ff      	movs	r3, #255	@ 0xff
 8000658:	71fb      	strb	r3, [r7, #7]
 800065a:	bf00      	nop
 800065c:	4b09      	ldr	r3, [pc, #36]	@ (8000684 <SPI_RxByte+0x34>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	689b      	ldr	r3, [r3, #8]
 8000662:	f003 0302 	and.w	r3, r3, #2
 8000666:	2b02      	cmp	r3, #2
 8000668:	d1f8      	bne.n	800065c <SPI_RxByte+0xc>
 800066a:	1dba      	adds	r2, r7, #6
 800066c:	1df9      	adds	r1, r7, #7
 800066e:	2364      	movs	r3, #100	@ 0x64
 8000670:	9300      	str	r3, [sp, #0]
 8000672:	2301      	movs	r3, #1
 8000674:	4803      	ldr	r0, [pc, #12]	@ (8000684 <SPI_RxByte+0x34>)
 8000676:	f003 fece 	bl	8004416 <HAL_SPI_TransmitReceive>
 800067a:	79bb      	ldrb	r3, [r7, #6]
 800067c:	4618      	mov	r0, r3
 800067e:	3708      	adds	r7, #8
 8000680:	46bd      	mov	sp, r7
 8000682:	bd80      	pop	{r7, pc}
 8000684:	200137e8 	.word	0x200137e8

08000688 <SPI_RxBytePtr>:
 8000688:	b580      	push	{r7, lr}
 800068a:	b082      	sub	sp, #8
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	f7ff ffde 	bl	8000650 <SPI_RxByte>
 8000694:	4603      	mov	r3, r0
 8000696:	461a      	mov	r2, r3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	701a      	strb	r2, [r3, #0]
 800069c:	bf00      	nop
 800069e:	3708      	adds	r7, #8
 80006a0:	46bd      	mov	sp, r7
 80006a2:	bd80      	pop	{r7, pc}

080006a4 <SD_ReadyWait>:
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b082      	sub	sp, #8
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	4b0a      	ldr	r3, [pc, #40]	@ (80006d4 <SD_ReadyWait+0x30>)
 80006ac:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 80006b0:	801a      	strh	r2, [r3, #0]
 80006b2:	f7ff ffcd 	bl	8000650 <SPI_RxByte>
 80006b6:	4603      	mov	r3, r0
 80006b8:	71fb      	strb	r3, [r7, #7]
 80006ba:	79fb      	ldrb	r3, [r7, #7]
 80006bc:	2bff      	cmp	r3, #255	@ 0xff
 80006be:	d003      	beq.n	80006c8 <SD_ReadyWait+0x24>
 80006c0:	4b04      	ldr	r3, [pc, #16]	@ (80006d4 <SD_ReadyWait+0x30>)
 80006c2:	881b      	ldrh	r3, [r3, #0]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d1f4      	bne.n	80006b2 <SD_ReadyWait+0xe>
 80006c8:	79fb      	ldrb	r3, [r7, #7]
 80006ca:	4618      	mov	r0, r3
 80006cc:	3708      	adds	r7, #8
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bd80      	pop	{r7, pc}
 80006d2:	bf00      	nop
 80006d4:	200137e2 	.word	0x200137e2

080006d8 <SD_PowerOn>:
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
 80006de:	f641 73ff 	movw	r3, #8191	@ 0x1fff
 80006e2:	60fb      	str	r3, [r7, #12]
 80006e4:	f7ff ff72 	bl	80005cc <DESELECT>
 80006e8:	2300      	movs	r3, #0
 80006ea:	60bb      	str	r3, [r7, #8]
 80006ec:	e005      	b.n	80006fa <SD_PowerOn+0x22>
 80006ee:	20ff      	movs	r0, #255	@ 0xff
 80006f0:	f7ff ff7a 	bl	80005e8 <SPI_TxByte>
 80006f4:	68bb      	ldr	r3, [r7, #8]
 80006f6:	3301      	adds	r3, #1
 80006f8:	60bb      	str	r3, [r7, #8]
 80006fa:	68bb      	ldr	r3, [r7, #8]
 80006fc:	2b09      	cmp	r3, #9
 80006fe:	ddf6      	ble.n	80006ee <SD_PowerOn+0x16>
 8000700:	f7ff ff56 	bl	80005b0 <SELECT>
 8000704:	2340      	movs	r3, #64	@ 0x40
 8000706:	703b      	strb	r3, [r7, #0]
 8000708:	2300      	movs	r3, #0
 800070a:	707b      	strb	r3, [r7, #1]
 800070c:	2300      	movs	r3, #0
 800070e:	70bb      	strb	r3, [r7, #2]
 8000710:	2300      	movs	r3, #0
 8000712:	70fb      	strb	r3, [r7, #3]
 8000714:	2300      	movs	r3, #0
 8000716:	713b      	strb	r3, [r7, #4]
 8000718:	2395      	movs	r3, #149	@ 0x95
 800071a:	717b      	strb	r3, [r7, #5]
 800071c:	463b      	mov	r3, r7
 800071e:	2106      	movs	r1, #6
 8000720:	4618      	mov	r0, r3
 8000722:	f7ff ff7b 	bl	800061c <SPI_TxBuffer>
 8000726:	e002      	b.n	800072e <SD_PowerOn+0x56>
 8000728:	68fb      	ldr	r3, [r7, #12]
 800072a:	3b01      	subs	r3, #1
 800072c:	60fb      	str	r3, [r7, #12]
 800072e:	f7ff ff8f 	bl	8000650 <SPI_RxByte>
 8000732:	4603      	mov	r3, r0
 8000734:	2b01      	cmp	r3, #1
 8000736:	d002      	beq.n	800073e <SD_PowerOn+0x66>
 8000738:	68fb      	ldr	r3, [r7, #12]
 800073a:	2b00      	cmp	r3, #0
 800073c:	d1f4      	bne.n	8000728 <SD_PowerOn+0x50>
 800073e:	f7ff ff45 	bl	80005cc <DESELECT>
 8000742:	20ff      	movs	r0, #255	@ 0xff
 8000744:	f7ff ff50 	bl	80005e8 <SPI_TxByte>
 8000748:	4b03      	ldr	r3, [pc, #12]	@ (8000758 <SD_PowerOn+0x80>)
 800074a:	2201      	movs	r2, #1
 800074c:	701a      	strb	r2, [r3, #0]
 800074e:	bf00      	nop
 8000750:	3710      	adds	r7, #16
 8000752:	46bd      	mov	sp, r7
 8000754:	bd80      	pop	{r7, pc}
 8000756:	bf00      	nop
 8000758:	200137e5 	.word	0x200137e5

0800075c <SD_PowerOff>:
 800075c:	b480      	push	{r7}
 800075e:	af00      	add	r7, sp, #0
 8000760:	4b03      	ldr	r3, [pc, #12]	@ (8000770 <SD_PowerOff+0x14>)
 8000762:	2200      	movs	r2, #0
 8000764:	701a      	strb	r2, [r3, #0]
 8000766:	bf00      	nop
 8000768:	46bd      	mov	sp, r7
 800076a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076e:	4770      	bx	lr
 8000770:	200137e5 	.word	0x200137e5

08000774 <SD_CheckPower>:
 8000774:	b480      	push	{r7}
 8000776:	af00      	add	r7, sp, #0
 8000778:	4b03      	ldr	r3, [pc, #12]	@ (8000788 <SD_CheckPower+0x14>)
 800077a:	781b      	ldrb	r3, [r3, #0]
 800077c:	4618      	mov	r0, r3
 800077e:	46bd      	mov	sp, r7
 8000780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000784:	4770      	bx	lr
 8000786:	bf00      	nop
 8000788:	200137e5 	.word	0x200137e5

0800078c <SD_RxDataBlock>:
 800078c:	b580      	push	{r7, lr}
 800078e:	b084      	sub	sp, #16
 8000790:	af00      	add	r7, sp, #0
 8000792:	6078      	str	r0, [r7, #4]
 8000794:	6039      	str	r1, [r7, #0]
 8000796:	4b13      	ldr	r3, [pc, #76]	@ (80007e4 <SD_RxDataBlock+0x58>)
 8000798:	22c8      	movs	r2, #200	@ 0xc8
 800079a:	801a      	strh	r2, [r3, #0]
 800079c:	f7ff ff58 	bl	8000650 <SPI_RxByte>
 80007a0:	4603      	mov	r3, r0
 80007a2:	73fb      	strb	r3, [r7, #15]
 80007a4:	7bfb      	ldrb	r3, [r7, #15]
 80007a6:	2bff      	cmp	r3, #255	@ 0xff
 80007a8:	d103      	bne.n	80007b2 <SD_RxDataBlock+0x26>
 80007aa:	4b0e      	ldr	r3, [pc, #56]	@ (80007e4 <SD_RxDataBlock+0x58>)
 80007ac:	881b      	ldrh	r3, [r3, #0]
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	d1f4      	bne.n	800079c <SD_RxDataBlock+0x10>
 80007b2:	7bfb      	ldrb	r3, [r7, #15]
 80007b4:	2bfe      	cmp	r3, #254	@ 0xfe
 80007b6:	d001      	beq.n	80007bc <SD_RxDataBlock+0x30>
 80007b8:	2300      	movs	r3, #0
 80007ba:	e00f      	b.n	80007dc <SD_RxDataBlock+0x50>
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	1c5a      	adds	r2, r3, #1
 80007c0:	607a      	str	r2, [r7, #4]
 80007c2:	4618      	mov	r0, r3
 80007c4:	f7ff ff60 	bl	8000688 <SPI_RxBytePtr>
 80007c8:	683b      	ldr	r3, [r7, #0]
 80007ca:	1e5a      	subs	r2, r3, #1
 80007cc:	603a      	str	r2, [r7, #0]
 80007ce:	2b00      	cmp	r3, #0
 80007d0:	d1f4      	bne.n	80007bc <SD_RxDataBlock+0x30>
 80007d2:	f7ff ff3d 	bl	8000650 <SPI_RxByte>
 80007d6:	f7ff ff3b 	bl	8000650 <SPI_RxByte>
 80007da:	2301      	movs	r3, #1
 80007dc:	4618      	mov	r0, r3
 80007de:	3710      	adds	r7, #16
 80007e0:	46bd      	mov	sp, r7
 80007e2:	bd80      	pop	{r7, pc}
 80007e4:	200137e0 	.word	0x200137e0

080007e8 <SD_TxDataBlock>:
 80007e8:	b580      	push	{r7, lr}
 80007ea:	b084      	sub	sp, #16
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
 80007f0:	460b      	mov	r3, r1
 80007f2:	70fb      	strb	r3, [r7, #3]
 80007f4:	2300      	movs	r3, #0
 80007f6:	73bb      	strb	r3, [r7, #14]
 80007f8:	f7ff ff54 	bl	80006a4 <SD_ReadyWait>
 80007fc:	4603      	mov	r3, r0
 80007fe:	2bff      	cmp	r3, #255	@ 0xff
 8000800:	d001      	beq.n	8000806 <SD_TxDataBlock+0x1e>
 8000802:	2300      	movs	r3, #0
 8000804:	e02f      	b.n	8000866 <SD_TxDataBlock+0x7e>
 8000806:	78fb      	ldrb	r3, [r7, #3]
 8000808:	4618      	mov	r0, r3
 800080a:	f7ff feed 	bl	80005e8 <SPI_TxByte>
 800080e:	78fb      	ldrb	r3, [r7, #3]
 8000810:	2bfd      	cmp	r3, #253	@ 0xfd
 8000812:	d020      	beq.n	8000856 <SD_TxDataBlock+0x6e>
 8000814:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000818:	6878      	ldr	r0, [r7, #4]
 800081a:	f7ff feff 	bl	800061c <SPI_TxBuffer>
 800081e:	f7ff ff17 	bl	8000650 <SPI_RxByte>
 8000822:	f7ff ff15 	bl	8000650 <SPI_RxByte>
 8000826:	e00b      	b.n	8000840 <SD_TxDataBlock+0x58>
 8000828:	f7ff ff12 	bl	8000650 <SPI_RxByte>
 800082c:	4603      	mov	r3, r0
 800082e:	73fb      	strb	r3, [r7, #15]
 8000830:	7bfb      	ldrb	r3, [r7, #15]
 8000832:	f003 031f 	and.w	r3, r3, #31
 8000836:	2b05      	cmp	r3, #5
 8000838:	d006      	beq.n	8000848 <SD_TxDataBlock+0x60>
 800083a:	7bbb      	ldrb	r3, [r7, #14]
 800083c:	3301      	adds	r3, #1
 800083e:	73bb      	strb	r3, [r7, #14]
 8000840:	7bbb      	ldrb	r3, [r7, #14]
 8000842:	2b40      	cmp	r3, #64	@ 0x40
 8000844:	d9f0      	bls.n	8000828 <SD_TxDataBlock+0x40>
 8000846:	e000      	b.n	800084a <SD_TxDataBlock+0x62>
 8000848:	bf00      	nop
 800084a:	bf00      	nop
 800084c:	f7ff ff00 	bl	8000650 <SPI_RxByte>
 8000850:	4603      	mov	r3, r0
 8000852:	2b00      	cmp	r3, #0
 8000854:	d0fa      	beq.n	800084c <SD_TxDataBlock+0x64>
 8000856:	7bfb      	ldrb	r3, [r7, #15]
 8000858:	f003 031f 	and.w	r3, r3, #31
 800085c:	2b05      	cmp	r3, #5
 800085e:	d101      	bne.n	8000864 <SD_TxDataBlock+0x7c>
 8000860:	2301      	movs	r3, #1
 8000862:	e000      	b.n	8000866 <SD_TxDataBlock+0x7e>
 8000864:	2300      	movs	r3, #0
 8000866:	4618      	mov	r0, r3
 8000868:	3710      	adds	r7, #16
 800086a:	46bd      	mov	sp, r7
 800086c:	bd80      	pop	{r7, pc}

0800086e <SD_SendCmd>:
 800086e:	b580      	push	{r7, lr}
 8000870:	b084      	sub	sp, #16
 8000872:	af00      	add	r7, sp, #0
 8000874:	4603      	mov	r3, r0
 8000876:	6039      	str	r1, [r7, #0]
 8000878:	71fb      	strb	r3, [r7, #7]
 800087a:	f7ff ff13 	bl	80006a4 <SD_ReadyWait>
 800087e:	4603      	mov	r3, r0
 8000880:	2bff      	cmp	r3, #255	@ 0xff
 8000882:	d001      	beq.n	8000888 <SD_SendCmd+0x1a>
 8000884:	23ff      	movs	r3, #255	@ 0xff
 8000886:	e042      	b.n	800090e <SD_SendCmd+0xa0>
 8000888:	79fb      	ldrb	r3, [r7, #7]
 800088a:	4618      	mov	r0, r3
 800088c:	f7ff feac 	bl	80005e8 <SPI_TxByte>
 8000890:	683b      	ldr	r3, [r7, #0]
 8000892:	0e1b      	lsrs	r3, r3, #24
 8000894:	b2db      	uxtb	r3, r3
 8000896:	4618      	mov	r0, r3
 8000898:	f7ff fea6 	bl	80005e8 <SPI_TxByte>
 800089c:	683b      	ldr	r3, [r7, #0]
 800089e:	0c1b      	lsrs	r3, r3, #16
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	4618      	mov	r0, r3
 80008a4:	f7ff fea0 	bl	80005e8 <SPI_TxByte>
 80008a8:	683b      	ldr	r3, [r7, #0]
 80008aa:	0a1b      	lsrs	r3, r3, #8
 80008ac:	b2db      	uxtb	r3, r3
 80008ae:	4618      	mov	r0, r3
 80008b0:	f7ff fe9a 	bl	80005e8 <SPI_TxByte>
 80008b4:	683b      	ldr	r3, [r7, #0]
 80008b6:	b2db      	uxtb	r3, r3
 80008b8:	4618      	mov	r0, r3
 80008ba:	f7ff fe95 	bl	80005e8 <SPI_TxByte>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b40      	cmp	r3, #64	@ 0x40
 80008c2:	d102      	bne.n	80008ca <SD_SendCmd+0x5c>
 80008c4:	2395      	movs	r3, #149	@ 0x95
 80008c6:	73fb      	strb	r3, [r7, #15]
 80008c8:	e007      	b.n	80008da <SD_SendCmd+0x6c>
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b48      	cmp	r3, #72	@ 0x48
 80008ce:	d102      	bne.n	80008d6 <SD_SendCmd+0x68>
 80008d0:	2387      	movs	r3, #135	@ 0x87
 80008d2:	73fb      	strb	r3, [r7, #15]
 80008d4:	e001      	b.n	80008da <SD_SendCmd+0x6c>
 80008d6:	2301      	movs	r3, #1
 80008d8:	73fb      	strb	r3, [r7, #15]
 80008da:	7bfb      	ldrb	r3, [r7, #15]
 80008dc:	4618      	mov	r0, r3
 80008de:	f7ff fe83 	bl	80005e8 <SPI_TxByte>
 80008e2:	79fb      	ldrb	r3, [r7, #7]
 80008e4:	2b4c      	cmp	r3, #76	@ 0x4c
 80008e6:	d101      	bne.n	80008ec <SD_SendCmd+0x7e>
 80008e8:	f7ff feb2 	bl	8000650 <SPI_RxByte>
 80008ec:	230a      	movs	r3, #10
 80008ee:	73bb      	strb	r3, [r7, #14]
 80008f0:	f7ff feae 	bl	8000650 <SPI_RxByte>
 80008f4:	4603      	mov	r3, r0
 80008f6:	737b      	strb	r3, [r7, #13]
 80008f8:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80008fc:	2b00      	cmp	r3, #0
 80008fe:	da05      	bge.n	800090c <SD_SendCmd+0x9e>
 8000900:	7bbb      	ldrb	r3, [r7, #14]
 8000902:	3b01      	subs	r3, #1
 8000904:	73bb      	strb	r3, [r7, #14]
 8000906:	7bbb      	ldrb	r3, [r7, #14]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d1f1      	bne.n	80008f0 <SD_SendCmd+0x82>
 800090c:	7b7b      	ldrb	r3, [r7, #13]
 800090e:	4618      	mov	r0, r3
 8000910:	3710      	adds	r7, #16
 8000912:	46bd      	mov	sp, r7
 8000914:	bd80      	pop	{r7, pc}
	...

08000918 <SD_disk_initialize>:
 8000918:	b590      	push	{r4, r7, lr}
 800091a:	b085      	sub	sp, #20
 800091c:	af00      	add	r7, sp, #0
 800091e:	4603      	mov	r3, r0
 8000920:	71fb      	strb	r3, [r7, #7]
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	2b00      	cmp	r3, #0
 8000926:	d001      	beq.n	800092c <SD_disk_initialize+0x14>
 8000928:	2301      	movs	r3, #1
 800092a:	e0d1      	b.n	8000ad0 <SD_disk_initialize+0x1b8>
 800092c:	4b6a      	ldr	r3, [pc, #424]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 800092e:	781b      	ldrb	r3, [r3, #0]
 8000930:	b2db      	uxtb	r3, r3
 8000932:	f003 0302 	and.w	r3, r3, #2
 8000936:	2b00      	cmp	r3, #0
 8000938:	d003      	beq.n	8000942 <SD_disk_initialize+0x2a>
 800093a:	4b67      	ldr	r3, [pc, #412]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 800093c:	781b      	ldrb	r3, [r3, #0]
 800093e:	b2db      	uxtb	r3, r3
 8000940:	e0c6      	b.n	8000ad0 <SD_disk_initialize+0x1b8>
 8000942:	f7ff fec9 	bl	80006d8 <SD_PowerOn>
 8000946:	f7ff fe33 	bl	80005b0 <SELECT>
 800094a:	2300      	movs	r3, #0
 800094c:	73bb      	strb	r3, [r7, #14]
 800094e:	2100      	movs	r1, #0
 8000950:	2040      	movs	r0, #64	@ 0x40
 8000952:	f7ff ff8c 	bl	800086e <SD_SendCmd>
 8000956:	4603      	mov	r3, r0
 8000958:	2b01      	cmp	r3, #1
 800095a:	f040 80a1 	bne.w	8000aa0 <SD_disk_initialize+0x188>
 800095e:	4b5f      	ldr	r3, [pc, #380]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000960:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000964:	801a      	strh	r2, [r3, #0]
 8000966:	f44f 71d5 	mov.w	r1, #426	@ 0x1aa
 800096a:	2048      	movs	r0, #72	@ 0x48
 800096c:	f7ff ff7f 	bl	800086e <SD_SendCmd>
 8000970:	4603      	mov	r3, r0
 8000972:	2b01      	cmp	r3, #1
 8000974:	d155      	bne.n	8000a22 <SD_disk_initialize+0x10a>
 8000976:	2300      	movs	r3, #0
 8000978:	73fb      	strb	r3, [r7, #15]
 800097a:	e00c      	b.n	8000996 <SD_disk_initialize+0x7e>
 800097c:	7bfc      	ldrb	r4, [r7, #15]
 800097e:	f7ff fe67 	bl	8000650 <SPI_RxByte>
 8000982:	4603      	mov	r3, r0
 8000984:	461a      	mov	r2, r3
 8000986:	f104 0310 	add.w	r3, r4, #16
 800098a:	443b      	add	r3, r7
 800098c:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000990:	7bfb      	ldrb	r3, [r7, #15]
 8000992:	3301      	adds	r3, #1
 8000994:	73fb      	strb	r3, [r7, #15]
 8000996:	7bfb      	ldrb	r3, [r7, #15]
 8000998:	2b03      	cmp	r3, #3
 800099a:	d9ef      	bls.n	800097c <SD_disk_initialize+0x64>
 800099c:	7abb      	ldrb	r3, [r7, #10]
 800099e:	2b01      	cmp	r3, #1
 80009a0:	d17e      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009a2:	7afb      	ldrb	r3, [r7, #11]
 80009a4:	2baa      	cmp	r3, #170	@ 0xaa
 80009a6:	d17b      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009a8:	2100      	movs	r1, #0
 80009aa:	2077      	movs	r0, #119	@ 0x77
 80009ac:	f7ff ff5f 	bl	800086e <SD_SendCmd>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b01      	cmp	r3, #1
 80009b4:	d807      	bhi.n	80009c6 <SD_disk_initialize+0xae>
 80009b6:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 80009ba:	2069      	movs	r0, #105	@ 0x69
 80009bc:	f7ff ff57 	bl	800086e <SD_SendCmd>
 80009c0:	4603      	mov	r3, r0
 80009c2:	2b00      	cmp	r3, #0
 80009c4:	d004      	beq.n	80009d0 <SD_disk_initialize+0xb8>
 80009c6:	4b45      	ldr	r3, [pc, #276]	@ (8000adc <SD_disk_initialize+0x1c4>)
 80009c8:	881b      	ldrh	r3, [r3, #0]
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d1ec      	bne.n	80009a8 <SD_disk_initialize+0x90>
 80009ce:	e000      	b.n	80009d2 <SD_disk_initialize+0xba>
 80009d0:	bf00      	nop
 80009d2:	4b42      	ldr	r3, [pc, #264]	@ (8000adc <SD_disk_initialize+0x1c4>)
 80009d4:	881b      	ldrh	r3, [r3, #0]
 80009d6:	2b00      	cmp	r3, #0
 80009d8:	d062      	beq.n	8000aa0 <SD_disk_initialize+0x188>
 80009da:	2100      	movs	r1, #0
 80009dc:	207a      	movs	r0, #122	@ 0x7a
 80009de:	f7ff ff46 	bl	800086e <SD_SendCmd>
 80009e2:	4603      	mov	r3, r0
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d15b      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009e8:	2300      	movs	r3, #0
 80009ea:	73fb      	strb	r3, [r7, #15]
 80009ec:	e00c      	b.n	8000a08 <SD_disk_initialize+0xf0>
 80009ee:	7bfc      	ldrb	r4, [r7, #15]
 80009f0:	f7ff fe2e 	bl	8000650 <SPI_RxByte>
 80009f4:	4603      	mov	r3, r0
 80009f6:	461a      	mov	r2, r3
 80009f8:	f104 0310 	add.w	r3, r4, #16
 80009fc:	443b      	add	r3, r7
 80009fe:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000a02:	7bfb      	ldrb	r3, [r7, #15]
 8000a04:	3301      	adds	r3, #1
 8000a06:	73fb      	strb	r3, [r7, #15]
 8000a08:	7bfb      	ldrb	r3, [r7, #15]
 8000a0a:	2b03      	cmp	r3, #3
 8000a0c:	d9ef      	bls.n	80009ee <SD_disk_initialize+0xd6>
 8000a0e:	7a3b      	ldrb	r3, [r7, #8]
 8000a10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d001      	beq.n	8000a1c <SD_disk_initialize+0x104>
 8000a18:	230c      	movs	r3, #12
 8000a1a:	e000      	b.n	8000a1e <SD_disk_initialize+0x106>
 8000a1c:	2304      	movs	r3, #4
 8000a1e:	73bb      	strb	r3, [r7, #14]
 8000a20:	e03e      	b.n	8000aa0 <SD_disk_initialize+0x188>
 8000a22:	2100      	movs	r1, #0
 8000a24:	2077      	movs	r0, #119	@ 0x77
 8000a26:	f7ff ff22 	bl	800086e <SD_SendCmd>
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	2b01      	cmp	r3, #1
 8000a2e:	d808      	bhi.n	8000a42 <SD_disk_initialize+0x12a>
 8000a30:	2100      	movs	r1, #0
 8000a32:	2069      	movs	r0, #105	@ 0x69
 8000a34:	f7ff ff1b 	bl	800086e <SD_SendCmd>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	2b01      	cmp	r3, #1
 8000a3c:	d801      	bhi.n	8000a42 <SD_disk_initialize+0x12a>
 8000a3e:	2302      	movs	r3, #2
 8000a40:	e000      	b.n	8000a44 <SD_disk_initialize+0x12c>
 8000a42:	2301      	movs	r3, #1
 8000a44:	73bb      	strb	r3, [r7, #14]
 8000a46:	7bbb      	ldrb	r3, [r7, #14]
 8000a48:	2b02      	cmp	r3, #2
 8000a4a:	d10e      	bne.n	8000a6a <SD_disk_initialize+0x152>
 8000a4c:	2100      	movs	r1, #0
 8000a4e:	2077      	movs	r0, #119	@ 0x77
 8000a50:	f7ff ff0d 	bl	800086e <SD_SendCmd>
 8000a54:	4603      	mov	r3, r0
 8000a56:	2b01      	cmp	r3, #1
 8000a58:	d80e      	bhi.n	8000a78 <SD_disk_initialize+0x160>
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	2069      	movs	r0, #105	@ 0x69
 8000a5e:	f7ff ff06 	bl	800086e <SD_SendCmd>
 8000a62:	4603      	mov	r3, r0
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d107      	bne.n	8000a78 <SD_disk_initialize+0x160>
 8000a68:	e00c      	b.n	8000a84 <SD_disk_initialize+0x16c>
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	2041      	movs	r0, #65	@ 0x41
 8000a6e:	f7ff fefe 	bl	800086e <SD_SendCmd>
 8000a72:	4603      	mov	r3, r0
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d004      	beq.n	8000a82 <SD_disk_initialize+0x16a>
 8000a78:	4b18      	ldr	r3, [pc, #96]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000a7a:	881b      	ldrh	r3, [r3, #0]
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d1e2      	bne.n	8000a46 <SD_disk_initialize+0x12e>
 8000a80:	e000      	b.n	8000a84 <SD_disk_initialize+0x16c>
 8000a82:	bf00      	nop
 8000a84:	4b15      	ldr	r3, [pc, #84]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000a86:	881b      	ldrh	r3, [r3, #0]
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d007      	beq.n	8000a9c <SD_disk_initialize+0x184>
 8000a8c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000a90:	2050      	movs	r0, #80	@ 0x50
 8000a92:	f7ff feec 	bl	800086e <SD_SendCmd>
 8000a96:	4603      	mov	r3, r0
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d001      	beq.n	8000aa0 <SD_disk_initialize+0x188>
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	73bb      	strb	r3, [r7, #14]
 8000aa0:	4a0f      	ldr	r2, [pc, #60]	@ (8000ae0 <SD_disk_initialize+0x1c8>)
 8000aa2:	7bbb      	ldrb	r3, [r7, #14]
 8000aa4:	7013      	strb	r3, [r2, #0]
 8000aa6:	f7ff fd91 	bl	80005cc <DESELECT>
 8000aaa:	f7ff fdd1 	bl	8000650 <SPI_RxByte>
 8000aae:	7bbb      	ldrb	r3, [r7, #14]
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	d008      	beq.n	8000ac6 <SD_disk_initialize+0x1ae>
 8000ab4:	4b08      	ldr	r3, [pc, #32]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000ab6:	781b      	ldrb	r3, [r3, #0]
 8000ab8:	b2db      	uxtb	r3, r3
 8000aba:	f023 0301 	bic.w	r3, r3, #1
 8000abe:	b2da      	uxtb	r2, r3
 8000ac0:	4b05      	ldr	r3, [pc, #20]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000ac2:	701a      	strb	r2, [r3, #0]
 8000ac4:	e001      	b.n	8000aca <SD_disk_initialize+0x1b2>
 8000ac6:	f7ff fe49 	bl	800075c <SD_PowerOff>
 8000aca:	4b03      	ldr	r3, [pc, #12]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	b2db      	uxtb	r3, r3
 8000ad0:	4618      	mov	r0, r3
 8000ad2:	3714      	adds	r7, #20
 8000ad4:	46bd      	mov	sp, r7
 8000ad6:	bd90      	pop	{r4, r7, pc}
 8000ad8:	20000000 	.word	0x20000000
 8000adc:	200137e0 	.word	0x200137e0
 8000ae0:	200137e4 	.word	0x200137e4

08000ae4 <SD_disk_status>:
 8000ae4:	b480      	push	{r7}
 8000ae6:	b083      	sub	sp, #12
 8000ae8:	af00      	add	r7, sp, #0
 8000aea:	4603      	mov	r3, r0
 8000aec:	71fb      	strb	r3, [r7, #7]
 8000aee:	79fb      	ldrb	r3, [r7, #7]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d001      	beq.n	8000af8 <SD_disk_status+0x14>
 8000af4:	2301      	movs	r3, #1
 8000af6:	e002      	b.n	8000afe <SD_disk_status+0x1a>
 8000af8:	4b04      	ldr	r3, [pc, #16]	@ (8000b0c <SD_disk_status+0x28>)
 8000afa:	781b      	ldrb	r3, [r3, #0]
 8000afc:	b2db      	uxtb	r3, r3
 8000afe:	4618      	mov	r0, r3
 8000b00:	370c      	adds	r7, #12
 8000b02:	46bd      	mov	sp, r7
 8000b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b08:	4770      	bx	lr
 8000b0a:	bf00      	nop
 8000b0c:	20000000 	.word	0x20000000

08000b10 <SD_disk_read>:
 8000b10:	b580      	push	{r7, lr}
 8000b12:	b084      	sub	sp, #16
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	60b9      	str	r1, [r7, #8]
 8000b18:	607a      	str	r2, [r7, #4]
 8000b1a:	603b      	str	r3, [r7, #0]
 8000b1c:	4603      	mov	r3, r0
 8000b1e:	73fb      	strb	r3, [r7, #15]
 8000b20:	7bfb      	ldrb	r3, [r7, #15]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d102      	bne.n	8000b2c <SD_disk_read+0x1c>
 8000b26:	683b      	ldr	r3, [r7, #0]
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d101      	bne.n	8000b30 <SD_disk_read+0x20>
 8000b2c:	2304      	movs	r3, #4
 8000b2e:	e051      	b.n	8000bd4 <SD_disk_read+0xc4>
 8000b30:	4b2a      	ldr	r3, [pc, #168]	@ (8000bdc <SD_disk_read+0xcc>)
 8000b32:	781b      	ldrb	r3, [r3, #0]
 8000b34:	b2db      	uxtb	r3, r3
 8000b36:	f003 0301 	and.w	r3, r3, #1
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d001      	beq.n	8000b42 <SD_disk_read+0x32>
 8000b3e:	2303      	movs	r3, #3
 8000b40:	e048      	b.n	8000bd4 <SD_disk_read+0xc4>
 8000b42:	4b27      	ldr	r3, [pc, #156]	@ (8000be0 <SD_disk_read+0xd0>)
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	f003 0304 	and.w	r3, r3, #4
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d102      	bne.n	8000b54 <SD_disk_read+0x44>
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	025b      	lsls	r3, r3, #9
 8000b52:	607b      	str	r3, [r7, #4]
 8000b54:	f7ff fd2c 	bl	80005b0 <SELECT>
 8000b58:	683b      	ldr	r3, [r7, #0]
 8000b5a:	2b01      	cmp	r3, #1
 8000b5c:	d111      	bne.n	8000b82 <SD_disk_read+0x72>
 8000b5e:	6879      	ldr	r1, [r7, #4]
 8000b60:	2051      	movs	r0, #81	@ 0x51
 8000b62:	f7ff fe84 	bl	800086e <SD_SendCmd>
 8000b66:	4603      	mov	r3, r0
 8000b68:	2b00      	cmp	r3, #0
 8000b6a:	d129      	bne.n	8000bc0 <SD_disk_read+0xb0>
 8000b6c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b70:	68b8      	ldr	r0, [r7, #8]
 8000b72:	f7ff fe0b 	bl	800078c <SD_RxDataBlock>
 8000b76:	4603      	mov	r3, r0
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	d021      	beq.n	8000bc0 <SD_disk_read+0xb0>
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	603b      	str	r3, [r7, #0]
 8000b80:	e01e      	b.n	8000bc0 <SD_disk_read+0xb0>
 8000b82:	6879      	ldr	r1, [r7, #4]
 8000b84:	2052      	movs	r0, #82	@ 0x52
 8000b86:	f7ff fe72 	bl	800086e <SD_SendCmd>
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d117      	bne.n	8000bc0 <SD_disk_read+0xb0>
 8000b90:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b94:	68b8      	ldr	r0, [r7, #8]
 8000b96:	f7ff fdf9 	bl	800078c <SD_RxDataBlock>
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	d00a      	beq.n	8000bb6 <SD_disk_read+0xa6>
 8000ba0:	68bb      	ldr	r3, [r7, #8]
 8000ba2:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000ba6:	60bb      	str	r3, [r7, #8]
 8000ba8:	683b      	ldr	r3, [r7, #0]
 8000baa:	3b01      	subs	r3, #1
 8000bac:	603b      	str	r3, [r7, #0]
 8000bae:	683b      	ldr	r3, [r7, #0]
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	d1ed      	bne.n	8000b90 <SD_disk_read+0x80>
 8000bb4:	e000      	b.n	8000bb8 <SD_disk_read+0xa8>
 8000bb6:	bf00      	nop
 8000bb8:	2100      	movs	r1, #0
 8000bba:	204c      	movs	r0, #76	@ 0x4c
 8000bbc:	f7ff fe57 	bl	800086e <SD_SendCmd>
 8000bc0:	f7ff fd04 	bl	80005cc <DESELECT>
 8000bc4:	f7ff fd44 	bl	8000650 <SPI_RxByte>
 8000bc8:	683b      	ldr	r3, [r7, #0]
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	bf14      	ite	ne
 8000bce:	2301      	movne	r3, #1
 8000bd0:	2300      	moveq	r3, #0
 8000bd2:	b2db      	uxtb	r3, r3
 8000bd4:	4618      	mov	r0, r3
 8000bd6:	3710      	adds	r7, #16
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	bd80      	pop	{r7, pc}
 8000bdc:	20000000 	.word	0x20000000
 8000be0:	200137e4 	.word	0x200137e4

08000be4 <SD_disk_write>:
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b084      	sub	sp, #16
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	60b9      	str	r1, [r7, #8]
 8000bec:	607a      	str	r2, [r7, #4]
 8000bee:	603b      	str	r3, [r7, #0]
 8000bf0:	4603      	mov	r3, r0
 8000bf2:	73fb      	strb	r3, [r7, #15]
 8000bf4:	7bfb      	ldrb	r3, [r7, #15]
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d102      	bne.n	8000c00 <SD_disk_write+0x1c>
 8000bfa:	683b      	ldr	r3, [r7, #0]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d101      	bne.n	8000c04 <SD_disk_write+0x20>
 8000c00:	2304      	movs	r3, #4
 8000c02:	e06b      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c04:	4b37      	ldr	r3, [pc, #220]	@ (8000ce4 <SD_disk_write+0x100>)
 8000c06:	781b      	ldrb	r3, [r3, #0]
 8000c08:	b2db      	uxtb	r3, r3
 8000c0a:	f003 0301 	and.w	r3, r3, #1
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d001      	beq.n	8000c16 <SD_disk_write+0x32>
 8000c12:	2303      	movs	r3, #3
 8000c14:	e062      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c16:	4b33      	ldr	r3, [pc, #204]	@ (8000ce4 <SD_disk_write+0x100>)
 8000c18:	781b      	ldrb	r3, [r3, #0]
 8000c1a:	b2db      	uxtb	r3, r3
 8000c1c:	f003 0304 	and.w	r3, r3, #4
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d001      	beq.n	8000c28 <SD_disk_write+0x44>
 8000c24:	2302      	movs	r3, #2
 8000c26:	e059      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c28:	4b2f      	ldr	r3, [pc, #188]	@ (8000ce8 <SD_disk_write+0x104>)
 8000c2a:	781b      	ldrb	r3, [r3, #0]
 8000c2c:	f003 0304 	and.w	r3, r3, #4
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d102      	bne.n	8000c3a <SD_disk_write+0x56>
 8000c34:	687b      	ldr	r3, [r7, #4]
 8000c36:	025b      	lsls	r3, r3, #9
 8000c38:	607b      	str	r3, [r7, #4]
 8000c3a:	f7ff fcb9 	bl	80005b0 <SELECT>
 8000c3e:	683b      	ldr	r3, [r7, #0]
 8000c40:	2b01      	cmp	r3, #1
 8000c42:	d110      	bne.n	8000c66 <SD_disk_write+0x82>
 8000c44:	6879      	ldr	r1, [r7, #4]
 8000c46:	2058      	movs	r0, #88	@ 0x58
 8000c48:	f7ff fe11 	bl	800086e <SD_SendCmd>
 8000c4c:	4603      	mov	r3, r0
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d13a      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000c52:	21fe      	movs	r1, #254	@ 0xfe
 8000c54:	68b8      	ldr	r0, [r7, #8]
 8000c56:	f7ff fdc7 	bl	80007e8 <SD_TxDataBlock>
 8000c5a:	4603      	mov	r3, r0
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d033      	beq.n	8000cc8 <SD_disk_write+0xe4>
 8000c60:	2300      	movs	r3, #0
 8000c62:	603b      	str	r3, [r7, #0]
 8000c64:	e030      	b.n	8000cc8 <SD_disk_write+0xe4>
 8000c66:	4b20      	ldr	r3, [pc, #128]	@ (8000ce8 <SD_disk_write+0x104>)
 8000c68:	781b      	ldrb	r3, [r3, #0]
 8000c6a:	f003 0302 	and.w	r3, r3, #2
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d007      	beq.n	8000c82 <SD_disk_write+0x9e>
 8000c72:	2100      	movs	r1, #0
 8000c74:	2077      	movs	r0, #119	@ 0x77
 8000c76:	f7ff fdfa 	bl	800086e <SD_SendCmd>
 8000c7a:	6839      	ldr	r1, [r7, #0]
 8000c7c:	2057      	movs	r0, #87	@ 0x57
 8000c7e:	f7ff fdf6 	bl	800086e <SD_SendCmd>
 8000c82:	6879      	ldr	r1, [r7, #4]
 8000c84:	2059      	movs	r0, #89	@ 0x59
 8000c86:	f7ff fdf2 	bl	800086e <SD_SendCmd>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d11b      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000c90:	21fc      	movs	r1, #252	@ 0xfc
 8000c92:	68b8      	ldr	r0, [r7, #8]
 8000c94:	f7ff fda8 	bl	80007e8 <SD_TxDataBlock>
 8000c98:	4603      	mov	r3, r0
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	d00a      	beq.n	8000cb4 <SD_disk_write+0xd0>
 8000c9e:	68bb      	ldr	r3, [r7, #8]
 8000ca0:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000ca4:	60bb      	str	r3, [r7, #8]
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	3b01      	subs	r3, #1
 8000caa:	603b      	str	r3, [r7, #0]
 8000cac:	683b      	ldr	r3, [r7, #0]
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d1ee      	bne.n	8000c90 <SD_disk_write+0xac>
 8000cb2:	e000      	b.n	8000cb6 <SD_disk_write+0xd2>
 8000cb4:	bf00      	nop
 8000cb6:	21fd      	movs	r1, #253	@ 0xfd
 8000cb8:	2000      	movs	r0, #0
 8000cba:	f7ff fd95 	bl	80007e8 <SD_TxDataBlock>
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d101      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000cc4:	2301      	movs	r3, #1
 8000cc6:	603b      	str	r3, [r7, #0]
 8000cc8:	f7ff fc80 	bl	80005cc <DESELECT>
 8000ccc:	f7ff fcc0 	bl	8000650 <SPI_RxByte>
 8000cd0:	683b      	ldr	r3, [r7, #0]
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	bf14      	ite	ne
 8000cd6:	2301      	movne	r3, #1
 8000cd8:	2300      	moveq	r3, #0
 8000cda:	b2db      	uxtb	r3, r3
 8000cdc:	4618      	mov	r0, r3
 8000cde:	3710      	adds	r7, #16
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	bd80      	pop	{r7, pc}
 8000ce4:	20000000 	.word	0x20000000
 8000ce8:	200137e4 	.word	0x200137e4

08000cec <SD_disk_ioctl>:
 8000cec:	b590      	push	{r4, r7, lr}
 8000cee:	b08b      	sub	sp, #44	@ 0x2c
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	603a      	str	r2, [r7, #0]
 8000cf6:	71fb      	strb	r3, [r7, #7]
 8000cf8:	460b      	mov	r3, r1
 8000cfa:	71bb      	strb	r3, [r7, #6]
 8000cfc:	683b      	ldr	r3, [r7, #0]
 8000cfe:	623b      	str	r3, [r7, #32]
 8000d00:	79fb      	ldrb	r3, [r7, #7]
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d001      	beq.n	8000d0a <SD_disk_ioctl+0x1e>
 8000d06:	2304      	movs	r3, #4
 8000d08:	e113      	b.n	8000f32 <SD_disk_ioctl+0x246>
 8000d0a:	2301      	movs	r3, #1
 8000d0c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d10:	79bb      	ldrb	r3, [r7, #6]
 8000d12:	2b05      	cmp	r3, #5
 8000d14:	d124      	bne.n	8000d60 <SD_disk_ioctl+0x74>
 8000d16:	6a3b      	ldr	r3, [r7, #32]
 8000d18:	781b      	ldrb	r3, [r3, #0]
 8000d1a:	2b02      	cmp	r3, #2
 8000d1c:	d012      	beq.n	8000d44 <SD_disk_ioctl+0x58>
 8000d1e:	2b02      	cmp	r3, #2
 8000d20:	dc1a      	bgt.n	8000d58 <SD_disk_ioctl+0x6c>
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d002      	beq.n	8000d2c <SD_disk_ioctl+0x40>
 8000d26:	2b01      	cmp	r3, #1
 8000d28:	d006      	beq.n	8000d38 <SD_disk_ioctl+0x4c>
 8000d2a:	e015      	b.n	8000d58 <SD_disk_ioctl+0x6c>
 8000d2c:	f7ff fd16 	bl	800075c <SD_PowerOff>
 8000d30:	2300      	movs	r3, #0
 8000d32:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d36:	e0fa      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d38:	f7ff fcce 	bl	80006d8 <SD_PowerOn>
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d42:	e0f4      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d44:	6a3b      	ldr	r3, [r7, #32]
 8000d46:	1c5c      	adds	r4, r3, #1
 8000d48:	f7ff fd14 	bl	8000774 <SD_CheckPower>
 8000d4c:	4603      	mov	r3, r0
 8000d4e:	7023      	strb	r3, [r4, #0]
 8000d50:	2300      	movs	r3, #0
 8000d52:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d56:	e0ea      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d58:	2304      	movs	r3, #4
 8000d5a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d5e:	e0e6      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d60:	4b76      	ldr	r3, [pc, #472]	@ (8000f3c <SD_disk_ioctl+0x250>)
 8000d62:	781b      	ldrb	r3, [r3, #0]
 8000d64:	b2db      	uxtb	r3, r3
 8000d66:	f003 0301 	and.w	r3, r3, #1
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	d001      	beq.n	8000d72 <SD_disk_ioctl+0x86>
 8000d6e:	2303      	movs	r3, #3
 8000d70:	e0df      	b.n	8000f32 <SD_disk_ioctl+0x246>
 8000d72:	f7ff fc1d 	bl	80005b0 <SELECT>
 8000d76:	79bb      	ldrb	r3, [r7, #6]
 8000d78:	2b0d      	cmp	r3, #13
 8000d7a:	f200 80c9 	bhi.w	8000f10 <SD_disk_ioctl+0x224>
 8000d7e:	a201      	add	r2, pc, #4	@ (adr r2, 8000d84 <SD_disk_ioctl+0x98>)
 8000d80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d84:	08000e7b 	.word	0x08000e7b
 8000d88:	08000dbd 	.word	0x08000dbd
 8000d8c:	08000e6b 	.word	0x08000e6b
 8000d90:	08000f11 	.word	0x08000f11
 8000d94:	08000f11 	.word	0x08000f11
 8000d98:	08000f11 	.word	0x08000f11
 8000d9c:	08000f11 	.word	0x08000f11
 8000da0:	08000f11 	.word	0x08000f11
 8000da4:	08000f11 	.word	0x08000f11
 8000da8:	08000f11 	.word	0x08000f11
 8000dac:	08000f11 	.word	0x08000f11
 8000db0:	08000e8d 	.word	0x08000e8d
 8000db4:	08000eb1 	.word	0x08000eb1
 8000db8:	08000ed5 	.word	0x08000ed5
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	2049      	movs	r0, #73	@ 0x49
 8000dc0:	f7ff fd55 	bl	800086e <SD_SendCmd>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	f040 80a6 	bne.w	8000f18 <SD_disk_ioctl+0x22c>
 8000dcc:	f107 030c 	add.w	r3, r7, #12
 8000dd0:	2110      	movs	r1, #16
 8000dd2:	4618      	mov	r0, r3
 8000dd4:	f7ff fcda 	bl	800078c <SD_RxDataBlock>
 8000dd8:	4603      	mov	r3, r0
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	f000 809c 	beq.w	8000f18 <SD_disk_ioctl+0x22c>
 8000de0:	7b3b      	ldrb	r3, [r7, #12]
 8000de2:	099b      	lsrs	r3, r3, #6
 8000de4:	b2db      	uxtb	r3, r3
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d10d      	bne.n	8000e06 <SD_disk_ioctl+0x11a>
 8000dea:	7d7b      	ldrb	r3, [r7, #21]
 8000dec:	461a      	mov	r2, r3
 8000dee:	7d3b      	ldrb	r3, [r7, #20]
 8000df0:	021b      	lsls	r3, r3, #8
 8000df2:	b29b      	uxth	r3, r3
 8000df4:	4413      	add	r3, r2
 8000df6:	b29b      	uxth	r3, r3
 8000df8:	3301      	adds	r3, #1
 8000dfa:	83fb      	strh	r3, [r7, #30]
 8000dfc:	8bfb      	ldrh	r3, [r7, #30]
 8000dfe:	029a      	lsls	r2, r3, #10
 8000e00:	683b      	ldr	r3, [r7, #0]
 8000e02:	601a      	str	r2, [r3, #0]
 8000e04:	e02d      	b.n	8000e62 <SD_disk_ioctl+0x176>
 8000e06:	7c7b      	ldrb	r3, [r7, #17]
 8000e08:	f003 030f 	and.w	r3, r3, #15
 8000e0c:	b2da      	uxtb	r2, r3
 8000e0e:	7dbb      	ldrb	r3, [r7, #22]
 8000e10:	09db      	lsrs	r3, r3, #7
 8000e12:	b2db      	uxtb	r3, r3
 8000e14:	4413      	add	r3, r2
 8000e16:	b2da      	uxtb	r2, r3
 8000e18:	7d7b      	ldrb	r3, [r7, #21]
 8000e1a:	005b      	lsls	r3, r3, #1
 8000e1c:	b2db      	uxtb	r3, r3
 8000e1e:	f003 0306 	and.w	r3, r3, #6
 8000e22:	b2db      	uxtb	r3, r3
 8000e24:	4413      	add	r3, r2
 8000e26:	b2db      	uxtb	r3, r3
 8000e28:	3302      	adds	r3, #2
 8000e2a:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000e2e:	7d3b      	ldrb	r3, [r7, #20]
 8000e30:	099b      	lsrs	r3, r3, #6
 8000e32:	b2db      	uxtb	r3, r3
 8000e34:	461a      	mov	r2, r3
 8000e36:	7cfb      	ldrb	r3, [r7, #19]
 8000e38:	009b      	lsls	r3, r3, #2
 8000e3a:	b29b      	uxth	r3, r3
 8000e3c:	4413      	add	r3, r2
 8000e3e:	b29a      	uxth	r2, r3
 8000e40:	7cbb      	ldrb	r3, [r7, #18]
 8000e42:	029b      	lsls	r3, r3, #10
 8000e44:	b29b      	uxth	r3, r3
 8000e46:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8000e4a:	b29b      	uxth	r3, r3
 8000e4c:	4413      	add	r3, r2
 8000e4e:	b29b      	uxth	r3, r3
 8000e50:	3301      	adds	r3, #1
 8000e52:	83fb      	strh	r3, [r7, #30]
 8000e54:	8bfa      	ldrh	r2, [r7, #30]
 8000e56:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000e5a:	3b09      	subs	r3, #9
 8000e5c:	409a      	lsls	r2, r3
 8000e5e:	683b      	ldr	r3, [r7, #0]
 8000e60:	601a      	str	r2, [r3, #0]
 8000e62:	2300      	movs	r3, #0
 8000e64:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e68:	e056      	b.n	8000f18 <SD_disk_ioctl+0x22c>
 8000e6a:	683b      	ldr	r3, [r7, #0]
 8000e6c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000e70:	801a      	strh	r2, [r3, #0]
 8000e72:	2300      	movs	r3, #0
 8000e74:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e78:	e055      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000e7a:	f7ff fc13 	bl	80006a4 <SD_ReadyWait>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2bff      	cmp	r3, #255	@ 0xff
 8000e82:	d14b      	bne.n	8000f1c <SD_disk_ioctl+0x230>
 8000e84:	2300      	movs	r3, #0
 8000e86:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e8a:	e047      	b.n	8000f1c <SD_disk_ioctl+0x230>
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	2049      	movs	r0, #73	@ 0x49
 8000e90:	f7ff fced 	bl	800086e <SD_SendCmd>
 8000e94:	4603      	mov	r3, r0
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d142      	bne.n	8000f20 <SD_disk_ioctl+0x234>
 8000e9a:	2110      	movs	r1, #16
 8000e9c:	6a38      	ldr	r0, [r7, #32]
 8000e9e:	f7ff fc75 	bl	800078c <SD_RxDataBlock>
 8000ea2:	4603      	mov	r3, r0
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	d03b      	beq.n	8000f20 <SD_disk_ioctl+0x234>
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000eae:	e037      	b.n	8000f20 <SD_disk_ioctl+0x234>
 8000eb0:	2100      	movs	r1, #0
 8000eb2:	204a      	movs	r0, #74	@ 0x4a
 8000eb4:	f7ff fcdb 	bl	800086e <SD_SendCmd>
 8000eb8:	4603      	mov	r3, r0
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d132      	bne.n	8000f24 <SD_disk_ioctl+0x238>
 8000ebe:	2110      	movs	r1, #16
 8000ec0:	6a38      	ldr	r0, [r7, #32]
 8000ec2:	f7ff fc63 	bl	800078c <SD_RxDataBlock>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d02b      	beq.n	8000f24 <SD_disk_ioctl+0x238>
 8000ecc:	2300      	movs	r3, #0
 8000ece:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000ed2:	e027      	b.n	8000f24 <SD_disk_ioctl+0x238>
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	207a      	movs	r0, #122	@ 0x7a
 8000ed8:	f7ff fcc9 	bl	800086e <SD_SendCmd>
 8000edc:	4603      	mov	r3, r0
 8000ede:	2b00      	cmp	r3, #0
 8000ee0:	d116      	bne.n	8000f10 <SD_disk_ioctl+0x224>
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000ee8:	e00b      	b.n	8000f02 <SD_disk_ioctl+0x216>
 8000eea:	6a3c      	ldr	r4, [r7, #32]
 8000eec:	1c63      	adds	r3, r4, #1
 8000eee:	623b      	str	r3, [r7, #32]
 8000ef0:	f7ff fbae 	bl	8000650 <SPI_RxByte>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	7023      	strb	r3, [r4, #0]
 8000ef8:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000efc:	3301      	adds	r3, #1
 8000efe:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000f02:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000f06:	2b03      	cmp	r3, #3
 8000f08:	d9ef      	bls.n	8000eea <SD_disk_ioctl+0x1fe>
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f10:	2304      	movs	r3, #4
 8000f12:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f16:	e006      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f18:	bf00      	nop
 8000f1a:	e004      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f1c:	bf00      	nop
 8000f1e:	e002      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f20:	bf00      	nop
 8000f22:	e000      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f24:	bf00      	nop
 8000f26:	f7ff fb51 	bl	80005cc <DESELECT>
 8000f2a:	f7ff fb91 	bl	8000650 <SPI_RxByte>
 8000f2e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f32:	4618      	mov	r0, r3
 8000f34:	372c      	adds	r7, #44	@ 0x2c
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bd90      	pop	{r4, r7, pc}
 8000f3a:	bf00      	nop
 8000f3c:	20000000 	.word	0x20000000

08000f40 <LCD_Init>:
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	2201      	movs	r2, #1
 8000f46:	2101      	movs	r1, #1
 8000f48:	4878      	ldr	r0, [pc, #480]	@ (800112c <LCD_Init+0x1ec>)
 8000f4a:	f002 fb1b 	bl	8003584 <HAL_GPIO_WritePin>
 8000f4e:	2201      	movs	r2, #1
 8000f50:	2113      	movs	r1, #19
 8000f52:	4877      	ldr	r0, [pc, #476]	@ (8001130 <LCD_Init+0x1f0>)
 8000f54:	f002 fb16 	bl	8003584 <HAL_GPIO_WritePin>
 8000f58:	2201      	movs	r2, #1
 8000f5a:	2102      	movs	r1, #2
 8000f5c:	4875      	ldr	r0, [pc, #468]	@ (8001134 <LCD_Init+0x1f4>)
 8000f5e:	f002 fb11 	bl	8003584 <HAL_GPIO_WritePin>
 8000f62:	2005      	movs	r0, #5
 8000f64:	f001 fcbc 	bl	80028e0 <HAL_Delay>
 8000f68:	2200      	movs	r2, #0
 8000f6a:	2102      	movs	r1, #2
 8000f6c:	4871      	ldr	r0, [pc, #452]	@ (8001134 <LCD_Init+0x1f4>)
 8000f6e:	f002 fb09 	bl	8003584 <HAL_GPIO_WritePin>
 8000f72:	2014      	movs	r0, #20
 8000f74:	f001 fcb4 	bl	80028e0 <HAL_Delay>
 8000f78:	2201      	movs	r2, #1
 8000f7a:	2102      	movs	r1, #2
 8000f7c:	486d      	ldr	r0, [pc, #436]	@ (8001134 <LCD_Init+0x1f4>)
 8000f7e:	f002 fb01 	bl	8003584 <HAL_GPIO_WritePin>
 8000f82:	2096      	movs	r0, #150	@ 0x96
 8000f84:	f001 fcac 	bl	80028e0 <HAL_Delay>
 8000f88:	2200      	movs	r2, #0
 8000f8a:	2101      	movs	r1, #1
 8000f8c:	4867      	ldr	r0, [pc, #412]	@ (800112c <LCD_Init+0x1ec>)
 8000f8e:	f002 faf9 	bl	8003584 <HAL_GPIO_WritePin>
 8000f92:	20e9      	movs	r0, #233	@ 0xe9
 8000f94:	f000 f8d0 	bl	8001138 <LCD_CMD>
 8000f98:	2020      	movs	r0, #32
 8000f9a:	f000 f973 	bl	8001284 <LCD_DATA>
 8000f9e:	2011      	movs	r0, #17
 8000fa0:	f000 f8ca 	bl	8001138 <LCD_CMD>
 8000fa4:	2064      	movs	r0, #100	@ 0x64
 8000fa6:	f001 fc9b 	bl	80028e0 <HAL_Delay>
 8000faa:	20d1      	movs	r0, #209	@ 0xd1
 8000fac:	f000 f8c4 	bl	8001138 <LCD_CMD>
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	f000 f967 	bl	8001284 <LCD_DATA>
 8000fb6:	2071      	movs	r0, #113	@ 0x71
 8000fb8:	f000 f964 	bl	8001284 <LCD_DATA>
 8000fbc:	2019      	movs	r0, #25
 8000fbe:	f000 f961 	bl	8001284 <LCD_DATA>
 8000fc2:	20d0      	movs	r0, #208	@ 0xd0
 8000fc4:	f000 f8b8 	bl	8001138 <LCD_CMD>
 8000fc8:	2007      	movs	r0, #7
 8000fca:	f000 f95b 	bl	8001284 <LCD_DATA>
 8000fce:	2001      	movs	r0, #1
 8000fd0:	f000 f958 	bl	8001284 <LCD_DATA>
 8000fd4:	2008      	movs	r0, #8
 8000fd6:	f000 f955 	bl	8001284 <LCD_DATA>
 8000fda:	2036      	movs	r0, #54	@ 0x36
 8000fdc:	f000 f8ac 	bl	8001138 <LCD_CMD>
 8000fe0:	20e8      	movs	r0, #232	@ 0xe8
 8000fe2:	f000 f94f 	bl	8001284 <LCD_DATA>
 8000fe6:	203a      	movs	r0, #58	@ 0x3a
 8000fe8:	f000 f8a6 	bl	8001138 <LCD_CMD>
 8000fec:	2005      	movs	r0, #5
 8000fee:	f000 f949 	bl	8001284 <LCD_DATA>
 8000ff2:	20c1      	movs	r0, #193	@ 0xc1
 8000ff4:	f000 f8a0 	bl	8001138 <LCD_CMD>
 8000ff8:	2010      	movs	r0, #16
 8000ffa:	f000 f943 	bl	8001284 <LCD_DATA>
 8000ffe:	2010      	movs	r0, #16
 8001000:	f000 f940 	bl	8001284 <LCD_DATA>
 8001004:	2002      	movs	r0, #2
 8001006:	f000 f93d 	bl	8001284 <LCD_DATA>
 800100a:	2002      	movs	r0, #2
 800100c:	f000 f93a 	bl	8001284 <LCD_DATA>
 8001010:	20c0      	movs	r0, #192	@ 0xc0
 8001012:	f000 f891 	bl	8001138 <LCD_CMD>
 8001016:	2000      	movs	r0, #0
 8001018:	f000 f934 	bl	8001284 <LCD_DATA>
 800101c:	2035      	movs	r0, #53	@ 0x35
 800101e:	f000 f931 	bl	8001284 <LCD_DATA>
 8001022:	2000      	movs	r0, #0
 8001024:	f000 f92e 	bl	8001284 <LCD_DATA>
 8001028:	2000      	movs	r0, #0
 800102a:	f000 f92b 	bl	8001284 <LCD_DATA>
 800102e:	2001      	movs	r0, #1
 8001030:	f000 f928 	bl	8001284 <LCD_DATA>
 8001034:	2002      	movs	r0, #2
 8001036:	f000 f925 	bl	8001284 <LCD_DATA>
 800103a:	20c5      	movs	r0, #197	@ 0xc5
 800103c:	f000 f87c 	bl	8001138 <LCD_CMD>
 8001040:	2004      	movs	r0, #4
 8001042:	f000 f91f 	bl	8001284 <LCD_DATA>
 8001046:	20d2      	movs	r0, #210	@ 0xd2
 8001048:	f000 f876 	bl	8001138 <LCD_CMD>
 800104c:	2001      	movs	r0, #1
 800104e:	f000 f919 	bl	8001284 <LCD_DATA>
 8001052:	2044      	movs	r0, #68	@ 0x44
 8001054:	f000 f916 	bl	8001284 <LCD_DATA>
 8001058:	20c8      	movs	r0, #200	@ 0xc8
 800105a:	f000 f86d 	bl	8001138 <LCD_CMD>
 800105e:	2004      	movs	r0, #4
 8001060:	f000 f910 	bl	8001284 <LCD_DATA>
 8001064:	2067      	movs	r0, #103	@ 0x67
 8001066:	f000 f90d 	bl	8001284 <LCD_DATA>
 800106a:	2035      	movs	r0, #53	@ 0x35
 800106c:	f000 f90a 	bl	8001284 <LCD_DATA>
 8001070:	2004      	movs	r0, #4
 8001072:	f000 f907 	bl	8001284 <LCD_DATA>
 8001076:	2008      	movs	r0, #8
 8001078:	f000 f904 	bl	8001284 <LCD_DATA>
 800107c:	2006      	movs	r0, #6
 800107e:	f000 f901 	bl	8001284 <LCD_DATA>
 8001082:	2024      	movs	r0, #36	@ 0x24
 8001084:	f000 f8fe 	bl	8001284 <LCD_DATA>
 8001088:	2001      	movs	r0, #1
 800108a:	f000 f8fb 	bl	8001284 <LCD_DATA>
 800108e:	2037      	movs	r0, #55	@ 0x37
 8001090:	f000 f8f8 	bl	8001284 <LCD_DATA>
 8001094:	2040      	movs	r0, #64	@ 0x40
 8001096:	f000 f8f5 	bl	8001284 <LCD_DATA>
 800109a:	2003      	movs	r0, #3
 800109c:	f000 f8f2 	bl	8001284 <LCD_DATA>
 80010a0:	2010      	movs	r0, #16
 80010a2:	f000 f8ef 	bl	8001284 <LCD_DATA>
 80010a6:	2008      	movs	r0, #8
 80010a8:	f000 f8ec 	bl	8001284 <LCD_DATA>
 80010ac:	2080      	movs	r0, #128	@ 0x80
 80010ae:	f000 f8e9 	bl	8001284 <LCD_DATA>
 80010b2:	2000      	movs	r0, #0
 80010b4:	f000 f8e6 	bl	8001284 <LCD_DATA>
 80010b8:	202a      	movs	r0, #42	@ 0x2a
 80010ba:	f000 f83d 	bl	8001138 <LCD_CMD>
 80010be:	2000      	movs	r0, #0
 80010c0:	f000 f8e0 	bl	8001284 <LCD_DATA>
 80010c4:	2000      	movs	r0, #0
 80010c6:	f000 f8dd 	bl	8001284 <LCD_DATA>
 80010ca:	2001      	movs	r0, #1
 80010cc:	f000 f8da 	bl	8001284 <LCD_DATA>
 80010d0:	203f      	movs	r0, #63	@ 0x3f
 80010d2:	f000 f8d7 	bl	8001284 <LCD_DATA>
 80010d6:	202b      	movs	r0, #43	@ 0x2b
 80010d8:	f000 f82e 	bl	8001138 <LCD_CMD>
 80010dc:	2000      	movs	r0, #0
 80010de:	f000 f8d1 	bl	8001284 <LCD_DATA>
 80010e2:	2000      	movs	r0, #0
 80010e4:	f000 f8ce 	bl	8001284 <LCD_DATA>
 80010e8:	2001      	movs	r0, #1
 80010ea:	f000 f8cb 	bl	8001284 <LCD_DATA>
 80010ee:	20e0      	movs	r0, #224	@ 0xe0
 80010f0:	f000 f8c8 	bl	8001284 <LCD_DATA>
 80010f4:	2029      	movs	r0, #41	@ 0x29
 80010f6:	f000 f81f 	bl	8001138 <LCD_CMD>
 80010fa:	202c      	movs	r0, #44	@ 0x2c
 80010fc:	f000 f81c 	bl	8001138 <LCD_CMD>
 8001100:	2020      	movs	r0, #32
 8001102:	f000 f819 	bl	8001138 <LCD_CMD>
 8001106:	2078      	movs	r0, #120	@ 0x78
 8001108:	f001 fbea 	bl	80028e0 <HAL_Delay>
 800110c:	2011      	movs	r0, #17
 800110e:	f000 f813 	bl	8001138 <LCD_CMD>
 8001112:	2078      	movs	r0, #120	@ 0x78
 8001114:	f001 fbe4 	bl	80028e0 <HAL_Delay>
 8001118:	2029      	movs	r0, #41	@ 0x29
 800111a:	f000 f80d 	bl	8001138 <LCD_CMD>
 800111e:	2201      	movs	r2, #1
 8001120:	2101      	movs	r1, #1
 8001122:	4802      	ldr	r0, [pc, #8]	@ (800112c <LCD_Init+0x1ec>)
 8001124:	f002 fa2e 	bl	8003584 <HAL_GPIO_WritePin>
 8001128:	bf00      	nop
 800112a:	bd80      	pop	{r7, pc}
 800112c:	40020400 	.word	0x40020400
 8001130:	40020000 	.word	0x40020000
 8001134:	40020800 	.word	0x40020800

08001138 <LCD_CMD>:
 8001138:	b580      	push	{r7, lr}
 800113a:	b082      	sub	sp, #8
 800113c:	af00      	add	r7, sp, #0
 800113e:	4603      	mov	r3, r0
 8001140:	71fb      	strb	r3, [r7, #7]
 8001142:	2200      	movs	r2, #0
 8001144:	2110      	movs	r1, #16
 8001146:	484c      	ldr	r0, [pc, #304]	@ (8001278 <LCD_CMD+0x140>)
 8001148:	f002 fa1c 	bl	8003584 <HAL_GPIO_WritePin>
 800114c:	2200      	movs	r2, #0
 800114e:	2102      	movs	r1, #2
 8001150:	4849      	ldr	r0, [pc, #292]	@ (8001278 <LCD_CMD+0x140>)
 8001152:	f002 fa17 	bl	8003584 <HAL_GPIO_WritePin>
 8001156:	79fb      	ldrb	r3, [r7, #7]
 8001158:	f003 0301 	and.w	r3, r3, #1
 800115c:	2b00      	cmp	r3, #0
 800115e:	d006      	beq.n	800116e <LCD_CMD+0x36>
 8001160:	2201      	movs	r2, #1
 8001162:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001166:	4844      	ldr	r0, [pc, #272]	@ (8001278 <LCD_CMD+0x140>)
 8001168:	f002 fa0c 	bl	8003584 <HAL_GPIO_WritePin>
 800116c:	e005      	b.n	800117a <LCD_CMD+0x42>
 800116e:	2200      	movs	r2, #0
 8001170:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001174:	4840      	ldr	r0, [pc, #256]	@ (8001278 <LCD_CMD+0x140>)
 8001176:	f002 fa05 	bl	8003584 <HAL_GPIO_WritePin>
 800117a:	79fb      	ldrb	r3, [r7, #7]
 800117c:	f003 0302 	and.w	r3, r3, #2
 8001180:	2b00      	cmp	r3, #0
 8001182:	d005      	beq.n	8001190 <LCD_CMD+0x58>
 8001184:	2201      	movs	r2, #1
 8001186:	2180      	movs	r1, #128	@ 0x80
 8001188:	483c      	ldr	r0, [pc, #240]	@ (800127c <LCD_CMD+0x144>)
 800118a:	f002 f9fb 	bl	8003584 <HAL_GPIO_WritePin>
 800118e:	e004      	b.n	800119a <LCD_CMD+0x62>
 8001190:	2200      	movs	r2, #0
 8001192:	2180      	movs	r1, #128	@ 0x80
 8001194:	4839      	ldr	r0, [pc, #228]	@ (800127c <LCD_CMD+0x144>)
 8001196:	f002 f9f5 	bl	8003584 <HAL_GPIO_WritePin>
 800119a:	79fb      	ldrb	r3, [r7, #7]
 800119c:	f003 0304 	and.w	r3, r3, #4
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d006      	beq.n	80011b2 <LCD_CMD+0x7a>
 80011a4:	2201      	movs	r2, #1
 80011a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011aa:	4833      	ldr	r0, [pc, #204]	@ (8001278 <LCD_CMD+0x140>)
 80011ac:	f002 f9ea 	bl	8003584 <HAL_GPIO_WritePin>
 80011b0:	e005      	b.n	80011be <LCD_CMD+0x86>
 80011b2:	2200      	movs	r2, #0
 80011b4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011b8:	482f      	ldr	r0, [pc, #188]	@ (8001278 <LCD_CMD+0x140>)
 80011ba:	f002 f9e3 	bl	8003584 <HAL_GPIO_WritePin>
 80011be:	79fb      	ldrb	r3, [r7, #7]
 80011c0:	f003 0308 	and.w	r3, r3, #8
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d005      	beq.n	80011d4 <LCD_CMD+0x9c>
 80011c8:	2201      	movs	r2, #1
 80011ca:	2108      	movs	r1, #8
 80011cc:	482c      	ldr	r0, [pc, #176]	@ (8001280 <LCD_CMD+0x148>)
 80011ce:	f002 f9d9 	bl	8003584 <HAL_GPIO_WritePin>
 80011d2:	e004      	b.n	80011de <LCD_CMD+0xa6>
 80011d4:	2200      	movs	r2, #0
 80011d6:	2108      	movs	r1, #8
 80011d8:	4829      	ldr	r0, [pc, #164]	@ (8001280 <LCD_CMD+0x148>)
 80011da:	f002 f9d3 	bl	8003584 <HAL_GPIO_WritePin>
 80011de:	79fb      	ldrb	r3, [r7, #7]
 80011e0:	f003 0310 	and.w	r3, r3, #16
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d005      	beq.n	80011f4 <LCD_CMD+0xbc>
 80011e8:	2201      	movs	r2, #1
 80011ea:	2120      	movs	r1, #32
 80011ec:	4824      	ldr	r0, [pc, #144]	@ (8001280 <LCD_CMD+0x148>)
 80011ee:	f002 f9c9 	bl	8003584 <HAL_GPIO_WritePin>
 80011f2:	e004      	b.n	80011fe <LCD_CMD+0xc6>
 80011f4:	2200      	movs	r2, #0
 80011f6:	2120      	movs	r1, #32
 80011f8:	4821      	ldr	r0, [pc, #132]	@ (8001280 <LCD_CMD+0x148>)
 80011fa:	f002 f9c3 	bl	8003584 <HAL_GPIO_WritePin>
 80011fe:	79fb      	ldrb	r3, [r7, #7]
 8001200:	f003 0320 	and.w	r3, r3, #32
 8001204:	2b00      	cmp	r3, #0
 8001206:	d005      	beq.n	8001214 <LCD_CMD+0xdc>
 8001208:	2201      	movs	r2, #1
 800120a:	2110      	movs	r1, #16
 800120c:	481c      	ldr	r0, [pc, #112]	@ (8001280 <LCD_CMD+0x148>)
 800120e:	f002 f9b9 	bl	8003584 <HAL_GPIO_WritePin>
 8001212:	e004      	b.n	800121e <LCD_CMD+0xe6>
 8001214:	2200      	movs	r2, #0
 8001216:	2110      	movs	r1, #16
 8001218:	4819      	ldr	r0, [pc, #100]	@ (8001280 <LCD_CMD+0x148>)
 800121a:	f002 f9b3 	bl	8003584 <HAL_GPIO_WritePin>
 800121e:	79fb      	ldrb	r3, [r7, #7]
 8001220:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001224:	2b00      	cmp	r3, #0
 8001226:	d006      	beq.n	8001236 <LCD_CMD+0xfe>
 8001228:	2201      	movs	r2, #1
 800122a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800122e:	4814      	ldr	r0, [pc, #80]	@ (8001280 <LCD_CMD+0x148>)
 8001230:	f002 f9a8 	bl	8003584 <HAL_GPIO_WritePin>
 8001234:	e005      	b.n	8001242 <LCD_CMD+0x10a>
 8001236:	2200      	movs	r2, #0
 8001238:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800123c:	4810      	ldr	r0, [pc, #64]	@ (8001280 <LCD_CMD+0x148>)
 800123e:	f002 f9a1 	bl	8003584 <HAL_GPIO_WritePin>
 8001242:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001246:	2b00      	cmp	r3, #0
 8001248:	da06      	bge.n	8001258 <LCD_CMD+0x120>
 800124a:	2201      	movs	r2, #1
 800124c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001250:	4809      	ldr	r0, [pc, #36]	@ (8001278 <LCD_CMD+0x140>)
 8001252:	f002 f997 	bl	8003584 <HAL_GPIO_WritePin>
 8001256:	e005      	b.n	8001264 <LCD_CMD+0x12c>
 8001258:	2200      	movs	r2, #0
 800125a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800125e:	4806      	ldr	r0, [pc, #24]	@ (8001278 <LCD_CMD+0x140>)
 8001260:	f002 f990 	bl	8003584 <HAL_GPIO_WritePin>
 8001264:	2201      	movs	r2, #1
 8001266:	2102      	movs	r1, #2
 8001268:	4803      	ldr	r0, [pc, #12]	@ (8001278 <LCD_CMD+0x140>)
 800126a:	f002 f98b 	bl	8003584 <HAL_GPIO_WritePin>
 800126e:	bf00      	nop
 8001270:	3708      	adds	r7, #8
 8001272:	46bd      	mov	sp, r7
 8001274:	bd80      	pop	{r7, pc}
 8001276:	bf00      	nop
 8001278:	40020000 	.word	0x40020000
 800127c:	40020800 	.word	0x40020800
 8001280:	40020400 	.word	0x40020400

08001284 <LCD_DATA>:
 8001284:	b580      	push	{r7, lr}
 8001286:	b082      	sub	sp, #8
 8001288:	af00      	add	r7, sp, #0
 800128a:	4603      	mov	r3, r0
 800128c:	71fb      	strb	r3, [r7, #7]
 800128e:	2201      	movs	r2, #1
 8001290:	2110      	movs	r1, #16
 8001292:	484c      	ldr	r0, [pc, #304]	@ (80013c4 <LCD_DATA+0x140>)
 8001294:	f002 f976 	bl	8003584 <HAL_GPIO_WritePin>
 8001298:	2200      	movs	r2, #0
 800129a:	2102      	movs	r1, #2
 800129c:	4849      	ldr	r0, [pc, #292]	@ (80013c4 <LCD_DATA+0x140>)
 800129e:	f002 f971 	bl	8003584 <HAL_GPIO_WritePin>
 80012a2:	79fb      	ldrb	r3, [r7, #7]
 80012a4:	f003 0301 	and.w	r3, r3, #1
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d006      	beq.n	80012ba <LCD_DATA+0x36>
 80012ac:	2201      	movs	r2, #1
 80012ae:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80012b2:	4844      	ldr	r0, [pc, #272]	@ (80013c4 <LCD_DATA+0x140>)
 80012b4:	f002 f966 	bl	8003584 <HAL_GPIO_WritePin>
 80012b8:	e005      	b.n	80012c6 <LCD_DATA+0x42>
 80012ba:	2200      	movs	r2, #0
 80012bc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80012c0:	4840      	ldr	r0, [pc, #256]	@ (80013c4 <LCD_DATA+0x140>)
 80012c2:	f002 f95f 	bl	8003584 <HAL_GPIO_WritePin>
 80012c6:	79fb      	ldrb	r3, [r7, #7]
 80012c8:	f003 0302 	and.w	r3, r3, #2
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d005      	beq.n	80012dc <LCD_DATA+0x58>
 80012d0:	2201      	movs	r2, #1
 80012d2:	2180      	movs	r1, #128	@ 0x80
 80012d4:	483c      	ldr	r0, [pc, #240]	@ (80013c8 <LCD_DATA+0x144>)
 80012d6:	f002 f955 	bl	8003584 <HAL_GPIO_WritePin>
 80012da:	e004      	b.n	80012e6 <LCD_DATA+0x62>
 80012dc:	2200      	movs	r2, #0
 80012de:	2180      	movs	r1, #128	@ 0x80
 80012e0:	4839      	ldr	r0, [pc, #228]	@ (80013c8 <LCD_DATA+0x144>)
 80012e2:	f002 f94f 	bl	8003584 <HAL_GPIO_WritePin>
 80012e6:	79fb      	ldrb	r3, [r7, #7]
 80012e8:	f003 0304 	and.w	r3, r3, #4
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d006      	beq.n	80012fe <LCD_DATA+0x7a>
 80012f0:	2201      	movs	r2, #1
 80012f2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80012f6:	4833      	ldr	r0, [pc, #204]	@ (80013c4 <LCD_DATA+0x140>)
 80012f8:	f002 f944 	bl	8003584 <HAL_GPIO_WritePin>
 80012fc:	e005      	b.n	800130a <LCD_DATA+0x86>
 80012fe:	2200      	movs	r2, #0
 8001300:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001304:	482f      	ldr	r0, [pc, #188]	@ (80013c4 <LCD_DATA+0x140>)
 8001306:	f002 f93d 	bl	8003584 <HAL_GPIO_WritePin>
 800130a:	79fb      	ldrb	r3, [r7, #7]
 800130c:	f003 0308 	and.w	r3, r3, #8
 8001310:	2b00      	cmp	r3, #0
 8001312:	d005      	beq.n	8001320 <LCD_DATA+0x9c>
 8001314:	2201      	movs	r2, #1
 8001316:	2108      	movs	r1, #8
 8001318:	482c      	ldr	r0, [pc, #176]	@ (80013cc <LCD_DATA+0x148>)
 800131a:	f002 f933 	bl	8003584 <HAL_GPIO_WritePin>
 800131e:	e004      	b.n	800132a <LCD_DATA+0xa6>
 8001320:	2200      	movs	r2, #0
 8001322:	2108      	movs	r1, #8
 8001324:	4829      	ldr	r0, [pc, #164]	@ (80013cc <LCD_DATA+0x148>)
 8001326:	f002 f92d 	bl	8003584 <HAL_GPIO_WritePin>
 800132a:	79fb      	ldrb	r3, [r7, #7]
 800132c:	f003 0310 	and.w	r3, r3, #16
 8001330:	2b00      	cmp	r3, #0
 8001332:	d005      	beq.n	8001340 <LCD_DATA+0xbc>
 8001334:	2201      	movs	r2, #1
 8001336:	2120      	movs	r1, #32
 8001338:	4824      	ldr	r0, [pc, #144]	@ (80013cc <LCD_DATA+0x148>)
 800133a:	f002 f923 	bl	8003584 <HAL_GPIO_WritePin>
 800133e:	e004      	b.n	800134a <LCD_DATA+0xc6>
 8001340:	2200      	movs	r2, #0
 8001342:	2120      	movs	r1, #32
 8001344:	4821      	ldr	r0, [pc, #132]	@ (80013cc <LCD_DATA+0x148>)
 8001346:	f002 f91d 	bl	8003584 <HAL_GPIO_WritePin>
 800134a:	79fb      	ldrb	r3, [r7, #7]
 800134c:	f003 0320 	and.w	r3, r3, #32
 8001350:	2b00      	cmp	r3, #0
 8001352:	d005      	beq.n	8001360 <LCD_DATA+0xdc>
 8001354:	2201      	movs	r2, #1
 8001356:	2110      	movs	r1, #16
 8001358:	481c      	ldr	r0, [pc, #112]	@ (80013cc <LCD_DATA+0x148>)
 800135a:	f002 f913 	bl	8003584 <HAL_GPIO_WritePin>
 800135e:	e004      	b.n	800136a <LCD_DATA+0xe6>
 8001360:	2200      	movs	r2, #0
 8001362:	2110      	movs	r1, #16
 8001364:	4819      	ldr	r0, [pc, #100]	@ (80013cc <LCD_DATA+0x148>)
 8001366:	f002 f90d 	bl	8003584 <HAL_GPIO_WritePin>
 800136a:	79fb      	ldrb	r3, [r7, #7]
 800136c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001370:	2b00      	cmp	r3, #0
 8001372:	d006      	beq.n	8001382 <LCD_DATA+0xfe>
 8001374:	2201      	movs	r2, #1
 8001376:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800137a:	4814      	ldr	r0, [pc, #80]	@ (80013cc <LCD_DATA+0x148>)
 800137c:	f002 f902 	bl	8003584 <HAL_GPIO_WritePin>
 8001380:	e005      	b.n	800138e <LCD_DATA+0x10a>
 8001382:	2200      	movs	r2, #0
 8001384:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001388:	4810      	ldr	r0, [pc, #64]	@ (80013cc <LCD_DATA+0x148>)
 800138a:	f002 f8fb 	bl	8003584 <HAL_GPIO_WritePin>
 800138e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001392:	2b00      	cmp	r3, #0
 8001394:	da06      	bge.n	80013a4 <LCD_DATA+0x120>
 8001396:	2201      	movs	r2, #1
 8001398:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800139c:	4809      	ldr	r0, [pc, #36]	@ (80013c4 <LCD_DATA+0x140>)
 800139e:	f002 f8f1 	bl	8003584 <HAL_GPIO_WritePin>
 80013a2:	e005      	b.n	80013b0 <LCD_DATA+0x12c>
 80013a4:	2200      	movs	r2, #0
 80013a6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013aa:	4806      	ldr	r0, [pc, #24]	@ (80013c4 <LCD_DATA+0x140>)
 80013ac:	f002 f8ea 	bl	8003584 <HAL_GPIO_WritePin>
 80013b0:	2201      	movs	r2, #1
 80013b2:	2102      	movs	r1, #2
 80013b4:	4803      	ldr	r0, [pc, #12]	@ (80013c4 <LCD_DATA+0x140>)
 80013b6:	f002 f8e5 	bl	8003584 <HAL_GPIO_WritePin>
 80013ba:	bf00      	nop
 80013bc:	3708      	adds	r7, #8
 80013be:	46bd      	mov	sp, r7
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	40020000 	.word	0x40020000
 80013c8:	40020800 	.word	0x40020800
 80013cc:	40020400 	.word	0x40020400

080013d0 <SetWindows>:
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b084      	sub	sp, #16
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	60f8      	str	r0, [r7, #12]
 80013d8:	60b9      	str	r1, [r7, #8]
 80013da:	607a      	str	r2, [r7, #4]
 80013dc:	603b      	str	r3, [r7, #0]
 80013de:	202a      	movs	r0, #42	@ 0x2a
 80013e0:	f7ff feaa 	bl	8001138 <LCD_CMD>
 80013e4:	68fb      	ldr	r3, [r7, #12]
 80013e6:	0a1b      	lsrs	r3, r3, #8
 80013e8:	b2db      	uxtb	r3, r3
 80013ea:	4618      	mov	r0, r3
 80013ec:	f7ff ff4a 	bl	8001284 <LCD_DATA>
 80013f0:	68fb      	ldr	r3, [r7, #12]
 80013f2:	b2db      	uxtb	r3, r3
 80013f4:	4618      	mov	r0, r3
 80013f6:	f7ff ff45 	bl	8001284 <LCD_DATA>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	0a1b      	lsrs	r3, r3, #8
 80013fe:	b2db      	uxtb	r3, r3
 8001400:	4618      	mov	r0, r3
 8001402:	f7ff ff3f 	bl	8001284 <LCD_DATA>
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	b2db      	uxtb	r3, r3
 800140a:	4618      	mov	r0, r3
 800140c:	f7ff ff3a 	bl	8001284 <LCD_DATA>
 8001410:	202b      	movs	r0, #43	@ 0x2b
 8001412:	f7ff fe91 	bl	8001138 <LCD_CMD>
 8001416:	68bb      	ldr	r3, [r7, #8]
 8001418:	0a1b      	lsrs	r3, r3, #8
 800141a:	b2db      	uxtb	r3, r3
 800141c:	4618      	mov	r0, r3
 800141e:	f7ff ff31 	bl	8001284 <LCD_DATA>
 8001422:	68bb      	ldr	r3, [r7, #8]
 8001424:	b2db      	uxtb	r3, r3
 8001426:	4618      	mov	r0, r3
 8001428:	f7ff ff2c 	bl	8001284 <LCD_DATA>
 800142c:	683b      	ldr	r3, [r7, #0]
 800142e:	0a1b      	lsrs	r3, r3, #8
 8001430:	b2db      	uxtb	r3, r3
 8001432:	4618      	mov	r0, r3
 8001434:	f7ff ff26 	bl	8001284 <LCD_DATA>
 8001438:	683b      	ldr	r3, [r7, #0]
 800143a:	b2db      	uxtb	r3, r3
 800143c:	4618      	mov	r0, r3
 800143e:	f7ff ff21 	bl	8001284 <LCD_DATA>
 8001442:	202c      	movs	r0, #44	@ 0x2c
 8001444:	f7ff fe78 	bl	8001138 <LCD_CMD>
 8001448:	bf00      	nop
 800144a:	3710      	adds	r7, #16
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}

08001450 <LCD_Clear>:
 8001450:	b580      	push	{r7, lr}
 8001452:	b084      	sub	sp, #16
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	202c      	movs	r0, #44	@ 0x2c
 800145a:	f7ff fe6d 	bl	8001138 <LCD_CMD>
 800145e:	2201      	movs	r2, #1
 8001460:	2110      	movs	r1, #16
 8001462:	481b      	ldr	r0, [pc, #108]	@ (80014d0 <LCD_Clear+0x80>)
 8001464:	f002 f88e 	bl	8003584 <HAL_GPIO_WritePin>
 8001468:	2200      	movs	r2, #0
 800146a:	2101      	movs	r1, #1
 800146c:	4819      	ldr	r0, [pc, #100]	@ (80014d4 <LCD_Clear+0x84>)
 800146e:	f002 f889 	bl	8003584 <HAL_GPIO_WritePin>
 8001472:	23ef      	movs	r3, #239	@ 0xef
 8001474:	f240 123f 	movw	r2, #319	@ 0x13f
 8001478:	2100      	movs	r1, #0
 800147a:	2000      	movs	r0, #0
 800147c:	f7ff ffa8 	bl	80013d0 <SetWindows>
 8001480:	2300      	movs	r3, #0
 8001482:	60fb      	str	r3, [r7, #12]
 8001484:	e016      	b.n	80014b4 <LCD_Clear+0x64>
 8001486:	2300      	movs	r3, #0
 8001488:	60bb      	str	r3, [r7, #8]
 800148a:	e00d      	b.n	80014a8 <LCD_Clear+0x58>
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	0a1b      	lsrs	r3, r3, #8
 8001490:	b2db      	uxtb	r3, r3
 8001492:	4618      	mov	r0, r3
 8001494:	f7ff fef6 	bl	8001284 <LCD_DATA>
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	b2db      	uxtb	r3, r3
 800149c:	4618      	mov	r0, r3
 800149e:	f7ff fef1 	bl	8001284 <LCD_DATA>
 80014a2:	68bb      	ldr	r3, [r7, #8]
 80014a4:	3301      	adds	r3, #1
 80014a6:	60bb      	str	r3, [r7, #8]
 80014a8:	68bb      	ldr	r3, [r7, #8]
 80014aa:	2bef      	cmp	r3, #239	@ 0xef
 80014ac:	d9ee      	bls.n	800148c <LCD_Clear+0x3c>
 80014ae:	68fb      	ldr	r3, [r7, #12]
 80014b0:	3301      	adds	r3, #1
 80014b2:	60fb      	str	r3, [r7, #12]
 80014b4:	68fb      	ldr	r3, [r7, #12]
 80014b6:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80014ba:	d3e4      	bcc.n	8001486 <LCD_Clear+0x36>
 80014bc:	2201      	movs	r2, #1
 80014be:	2101      	movs	r1, #1
 80014c0:	4804      	ldr	r0, [pc, #16]	@ (80014d4 <LCD_Clear+0x84>)
 80014c2:	f002 f85f 	bl	8003584 <HAL_GPIO_WritePin>
 80014c6:	bf00      	nop
 80014c8:	3710      	adds	r7, #16
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}
 80014ce:	bf00      	nop
 80014d0:	40020000 	.word	0x40020000
 80014d4:	40020400 	.word	0x40020400

080014d8 <FillRect>:
 80014d8:	b580      	push	{r7, lr}
 80014da:	b08a      	sub	sp, #40	@ 0x28
 80014dc:	af00      	add	r7, sp, #0
 80014de:	60f8      	str	r0, [r7, #12]
 80014e0:	60b9      	str	r1, [r7, #8]
 80014e2:	607a      	str	r2, [r7, #4]
 80014e4:	603b      	str	r3, [r7, #0]
 80014e6:	202c      	movs	r0, #44	@ 0x2c
 80014e8:	f7ff fe26 	bl	8001138 <LCD_CMD>
 80014ec:	2201      	movs	r2, #1
 80014ee:	2110      	movs	r1, #16
 80014f0:	4824      	ldr	r0, [pc, #144]	@ (8001584 <FillRect+0xac>)
 80014f2:	f002 f847 	bl	8003584 <HAL_GPIO_WritePin>
 80014f6:	2200      	movs	r2, #0
 80014f8:	2101      	movs	r1, #1
 80014fa:	4823      	ldr	r0, [pc, #140]	@ (8001588 <FillRect+0xb0>)
 80014fc:	f002 f842 	bl	8003584 <HAL_GPIO_WritePin>
 8001500:	68fa      	ldr	r2, [r7, #12]
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	4413      	add	r3, r2
 8001506:	61bb      	str	r3, [r7, #24]
 8001508:	68ba      	ldr	r2, [r7, #8]
 800150a:	683b      	ldr	r3, [r7, #0]
 800150c:	4413      	add	r3, r2
 800150e:	617b      	str	r3, [r7, #20]
 8001510:	69bb      	ldr	r3, [r7, #24]
 8001512:	1e5a      	subs	r2, r3, #1
 8001514:	697b      	ldr	r3, [r7, #20]
 8001516:	3b01      	subs	r3, #1
 8001518:	68b9      	ldr	r1, [r7, #8]
 800151a:	68f8      	ldr	r0, [r7, #12]
 800151c:	f7ff ff58 	bl	80013d0 <SetWindows>
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	683a      	ldr	r2, [r7, #0]
 8001524:	fb02 f303 	mul.w	r3, r2, r3
 8001528:	005b      	lsls	r3, r3, #1
 800152a:	3b01      	subs	r3, #1
 800152c:	627b      	str	r3, [r7, #36]	@ 0x24
 800152e:	2300      	movs	r3, #0
 8001530:	623b      	str	r3, [r7, #32]
 8001532:	e01a      	b.n	800156a <FillRect+0x92>
 8001534:	2300      	movs	r3, #0
 8001536:	61fb      	str	r3, [r7, #28]
 8001538:	e010      	b.n	800155c <FillRect+0x84>
 800153a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800153c:	0a1b      	lsrs	r3, r3, #8
 800153e:	b2db      	uxtb	r3, r3
 8001540:	4618      	mov	r0, r3
 8001542:	f7ff fe9f 	bl	8001284 <LCD_DATA>
 8001546:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001548:	b2db      	uxtb	r3, r3
 800154a:	4618      	mov	r0, r3
 800154c:	f7ff fe9a 	bl	8001284 <LCD_DATA>
 8001550:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001552:	3b02      	subs	r3, #2
 8001554:	627b      	str	r3, [r7, #36]	@ 0x24
 8001556:	69fb      	ldr	r3, [r7, #28]
 8001558:	3301      	adds	r3, #1
 800155a:	61fb      	str	r3, [r7, #28]
 800155c:	69fb      	ldr	r3, [r7, #28]
 800155e:	683a      	ldr	r2, [r7, #0]
 8001560:	429a      	cmp	r2, r3
 8001562:	d8ea      	bhi.n	800153a <FillRect+0x62>
 8001564:	6a3b      	ldr	r3, [r7, #32]
 8001566:	3301      	adds	r3, #1
 8001568:	623b      	str	r3, [r7, #32]
 800156a:	6a3b      	ldr	r3, [r7, #32]
 800156c:	687a      	ldr	r2, [r7, #4]
 800156e:	429a      	cmp	r2, r3
 8001570:	d8e0      	bhi.n	8001534 <FillRect+0x5c>
 8001572:	2201      	movs	r2, #1
 8001574:	2101      	movs	r1, #1
 8001576:	4804      	ldr	r0, [pc, #16]	@ (8001588 <FillRect+0xb0>)
 8001578:	f002 f804 	bl	8003584 <HAL_GPIO_WritePin>
 800157c:	bf00      	nop
 800157e:	3728      	adds	r7, #40	@ 0x28
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}
 8001584:	40020000 	.word	0x40020000
 8001588:	40020400 	.word	0x40020400

0800158c <LCD_Print>:
 800158c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001590:	b093      	sub	sp, #76	@ 0x4c
 8001592:	af00      	add	r7, sp, #0
 8001594:	60f8      	str	r0, [r7, #12]
 8001596:	60b9      	str	r1, [r7, #8]
 8001598:	607a      	str	r2, [r7, #4]
 800159a:	603b      	str	r3, [r7, #0]
 800159c:	466b      	mov	r3, sp
 800159e:	461e      	mov	r6, r3
 80015a0:	683b      	ldr	r3, [r7, #0]
 80015a2:	2b01      	cmp	r3, #1
 80015a4:	d103      	bne.n	80015ae <LCD_Print+0x22>
 80015a6:	2308      	movs	r3, #8
 80015a8:	647b      	str	r3, [r7, #68]	@ 0x44
 80015aa:	230c      	movs	r3, #12
 80015ac:	643b      	str	r3, [r7, #64]	@ 0x40
 80015ae:	683b      	ldr	r3, [r7, #0]
 80015b0:	2b02      	cmp	r3, #2
 80015b2:	d103      	bne.n	80015bc <LCD_Print+0x30>
 80015b4:	2310      	movs	r3, #16
 80015b6:	647b      	str	r3, [r7, #68]	@ 0x44
 80015b8:	2310      	movs	r3, #16
 80015ba:	643b      	str	r3, [r7, #64]	@ 0x40
 80015bc:	683b      	ldr	r3, [r7, #0]
 80015be:	2b03      	cmp	r3, #3
 80015c0:	d103      	bne.n	80015ca <LCD_Print+0x3e>
 80015c2:	2320      	movs	r3, #32
 80015c4:	647b      	str	r3, [r7, #68]	@ 0x44
 80015c6:	2332      	movs	r3, #50	@ 0x32
 80015c8:	643b      	str	r3, [r7, #64]	@ 0x40
 80015ca:	68f8      	ldr	r0, [r7, #12]
 80015cc:	f7fe fe20 	bl	8000210 <strlen>
 80015d0:	4603      	mov	r3, r0
 80015d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015d6:	1c59      	adds	r1, r3, #1
 80015d8:	1e4b      	subs	r3, r1, #1
 80015da:	623b      	str	r3, [r7, #32]
 80015dc:	460a      	mov	r2, r1
 80015de:	2300      	movs	r3, #0
 80015e0:	4690      	mov	r8, r2
 80015e2:	4699      	mov	r9, r3
 80015e4:	f04f 0200 	mov.w	r2, #0
 80015e8:	f04f 0300 	mov.w	r3, #0
 80015ec:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80015f0:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80015f4:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80015f8:	460a      	mov	r2, r1
 80015fa:	2300      	movs	r3, #0
 80015fc:	4614      	mov	r4, r2
 80015fe:	461d      	mov	r5, r3
 8001600:	f04f 0200 	mov.w	r2, #0
 8001604:	f04f 0300 	mov.w	r3, #0
 8001608:	00eb      	lsls	r3, r5, #3
 800160a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800160e:	00e2      	lsls	r2, r4, #3
 8001610:	460b      	mov	r3, r1
 8001612:	3307      	adds	r3, #7
 8001614:	08db      	lsrs	r3, r3, #3
 8001616:	00db      	lsls	r3, r3, #3
 8001618:	ebad 0d03 	sub.w	sp, sp, r3
 800161c:	466b      	mov	r3, sp
 800161e:	3300      	adds	r3, #0
 8001620:	61fb      	str	r3, [r7, #28]
 8001622:	2300      	movs	r3, #0
 8001624:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001626:	e00b      	b.n	8001640 <LCD_Print+0xb4>
 8001628:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800162a:	68fa      	ldr	r2, [r7, #12]
 800162c:	4413      	add	r3, r2
 800162e:	7819      	ldrb	r1, [r3, #0]
 8001630:	69fa      	ldr	r2, [r7, #28]
 8001632:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001634:	4413      	add	r3, r2
 8001636:	460a      	mov	r2, r1
 8001638:	701a      	strb	r2, [r3, #0]
 800163a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800163c:	3301      	adds	r3, #1
 800163e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001640:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001642:	68fa      	ldr	r2, [r7, #12]
 8001644:	4413      	add	r3, r2
 8001646:	781b      	ldrb	r3, [r3, #0]
 8001648:	2b00      	cmp	r3, #0
 800164a:	d1ed      	bne.n	8001628 <LCD_Print+0x9c>
 800164c:	2300      	movs	r3, #0
 800164e:	637b      	str	r3, [r7, #52]	@ 0x34
 8001650:	e077      	b.n	8001742 <LCD_Print+0x1b6>
 8001652:	69fa      	ldr	r2, [r7, #28]
 8001654:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001656:	4413      	add	r3, r2
 8001658:	781b      	ldrb	r3, [r3, #0]
 800165a:	76fb      	strb	r3, [r7, #27]
 800165c:	7efb      	ldrb	r3, [r7, #27]
 800165e:	617b      	str	r3, [r7, #20]
 8001660:	2200      	movs	r2, #0
 8001662:	2101      	movs	r1, #1
 8001664:	483c      	ldr	r0, [pc, #240]	@ (8001758 <LCD_Print+0x1cc>)
 8001666:	f001 ff8d 	bl	8003584 <HAL_GPIO_WritePin>
 800166a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800166c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800166e:	fb03 f202 	mul.w	r2, r3, r2
 8001672:	68bb      	ldr	r3, [r7, #8]
 8001674:	4413      	add	r3, r2
 8001676:	4618      	mov	r0, r3
 8001678:	6879      	ldr	r1, [r7, #4]
 800167a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800167c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800167e:	fb03 f202 	mul.w	r2, r3, r2
 8001682:	68bb      	ldr	r3, [r7, #8]
 8001684:	441a      	add	r2, r3
 8001686:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001688:	4413      	add	r3, r2
 800168a:	3b01      	subs	r3, #1
 800168c:	461c      	mov	r4, r3
 800168e:	687a      	ldr	r2, [r7, #4]
 8001690:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001692:	4413      	add	r3, r2
 8001694:	4622      	mov	r2, r4
 8001696:	f7ff fe9b 	bl	80013d0 <SetWindows>
 800169a:	2300      	movs	r3, #0
 800169c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800169e:	e044      	b.n	800172a <LCD_Print+0x19e>
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	2b01      	cmp	r3, #1
 80016a4:	d10b      	bne.n	80016be <LCD_Print+0x132>
 80016a6:	697b      	ldr	r3, [r7, #20]
 80016a8:	3b20      	subs	r3, #32
 80016aa:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80016ac:	fb02 f303 	mul.w	r3, r2, r3
 80016b0:	461a      	mov	r2, r3
 80016b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016b4:	4413      	add	r3, r2
 80016b6:	4a29      	ldr	r2, [pc, #164]	@ (800175c <LCD_Print+0x1d0>)
 80016b8:	4413      	add	r3, r2
 80016ba:	881b      	ldrh	r3, [r3, #0]
 80016bc:	633b      	str	r3, [r7, #48]	@ 0x30
 80016be:	683b      	ldr	r3, [r7, #0]
 80016c0:	2b02      	cmp	r3, #2
 80016c2:	d10c      	bne.n	80016de <LCD_Print+0x152>
 80016c4:	697b      	ldr	r3, [r7, #20]
 80016c6:	3b20      	subs	r3, #32
 80016c8:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80016ca:	fb02 f303 	mul.w	r3, r2, r3
 80016ce:	461a      	mov	r2, r3
 80016d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016d2:	4413      	add	r3, r2
 80016d4:	005b      	lsls	r3, r3, #1
 80016d6:	4a22      	ldr	r2, [pc, #136]	@ (8001760 <LCD_Print+0x1d4>)
 80016d8:	4413      	add	r3, r2
 80016da:	881b      	ldrh	r3, [r3, #0]
 80016dc:	633b      	str	r3, [r7, #48]	@ 0x30
 80016de:	2301      	movs	r3, #1
 80016e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80016e2:	e01b      	b.n	800171c <LCD_Print+0x190>
 80016e4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80016e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80016e8:	1ad3      	subs	r3, r2, r3
 80016ea:	2201      	movs	r2, #1
 80016ec:	409a      	lsls	r2, r3
 80016ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80016f0:	4013      	ands	r3, r2
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	dd02      	ble.n	80016fc <LCD_Print+0x170>
 80016f6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80016f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80016fa:	e001      	b.n	8001700 <LCD_Print+0x174>
 80016fc:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80016fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001700:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001702:	121b      	asrs	r3, r3, #8
 8001704:	b2db      	uxtb	r3, r3
 8001706:	4618      	mov	r0, r3
 8001708:	f7ff fdbc 	bl	8001284 <LCD_DATA>
 800170c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800170e:	b2db      	uxtb	r3, r3
 8001710:	4618      	mov	r0, r3
 8001712:	f7ff fdb7 	bl	8001284 <LCD_DATA>
 8001716:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001718:	3301      	adds	r3, #1
 800171a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800171c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800171e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001720:	429a      	cmp	r2, r3
 8001722:	dadf      	bge.n	80016e4 <LCD_Print+0x158>
 8001724:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001726:	3301      	adds	r3, #1
 8001728:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800172a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800172c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800172e:	429a      	cmp	r2, r3
 8001730:	dbb6      	blt.n	80016a0 <LCD_Print+0x114>
 8001732:	2201      	movs	r2, #1
 8001734:	2101      	movs	r1, #1
 8001736:	4808      	ldr	r0, [pc, #32]	@ (8001758 <LCD_Print+0x1cc>)
 8001738:	f001 ff24 	bl	8003584 <HAL_GPIO_WritePin>
 800173c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800173e:	3301      	adds	r3, #1
 8001740:	637b      	str	r3, [r7, #52]	@ 0x34
 8001742:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8001744:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001746:	429a      	cmp	r2, r3
 8001748:	db83      	blt.n	8001652 <LCD_Print+0xc6>
 800174a:	46b5      	mov	sp, r6
 800174c:	bf00      	nop
 800174e:	374c      	adds	r7, #76	@ 0x4c
 8001750:	46bd      	mov	sp, r7
 8001752:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001756:	bf00      	nop
 8001758:	40020400 	.word	0x40020400
 800175c:	08006a40 	.word	0x08006a40
 8001760:	08006eb4 	.word	0x08006eb4

08001764 <LCD_Bitmap>:
 8001764:	b580      	push	{r7, lr}
 8001766:	b08a      	sub	sp, #40	@ 0x28
 8001768:	af00      	add	r7, sp, #0
 800176a:	60f8      	str	r0, [r7, #12]
 800176c:	60b9      	str	r1, [r7, #8]
 800176e:	607a      	str	r2, [r7, #4]
 8001770:	603b      	str	r3, [r7, #0]
 8001772:	202c      	movs	r0, #44	@ 0x2c
 8001774:	f7ff fce0 	bl	8001138 <LCD_CMD>
 8001778:	2201      	movs	r2, #1
 800177a:	2110      	movs	r1, #16
 800177c:	4824      	ldr	r0, [pc, #144]	@ (8001810 <LCD_Bitmap+0xac>)
 800177e:	f001 ff01 	bl	8003584 <HAL_GPIO_WritePin>
 8001782:	2200      	movs	r2, #0
 8001784:	2101      	movs	r1, #1
 8001786:	4823      	ldr	r0, [pc, #140]	@ (8001814 <LCD_Bitmap+0xb0>)
 8001788:	f001 fefc 	bl	8003584 <HAL_GPIO_WritePin>
 800178c:	68fa      	ldr	r2, [r7, #12]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	4413      	add	r3, r2
 8001792:	61bb      	str	r3, [r7, #24]
 8001794:	68ba      	ldr	r2, [r7, #8]
 8001796:	683b      	ldr	r3, [r7, #0]
 8001798:	4413      	add	r3, r2
 800179a:	617b      	str	r3, [r7, #20]
 800179c:	69bb      	ldr	r3, [r7, #24]
 800179e:	1e5a      	subs	r2, r3, #1
 80017a0:	697b      	ldr	r3, [r7, #20]
 80017a2:	3b01      	subs	r3, #1
 80017a4:	68b9      	ldr	r1, [r7, #8]
 80017a6:	68f8      	ldr	r0, [r7, #12]
 80017a8:	f7ff fe12 	bl	80013d0 <SetWindows>
 80017ac:	2300      	movs	r3, #0
 80017ae:	627b      	str	r3, [r7, #36]	@ 0x24
 80017b0:	2300      	movs	r3, #0
 80017b2:	623b      	str	r3, [r7, #32]
 80017b4:	e01e      	b.n	80017f4 <LCD_Bitmap+0x90>
 80017b6:	2300      	movs	r3, #0
 80017b8:	61fb      	str	r3, [r7, #28]
 80017ba:	e014      	b.n	80017e6 <LCD_Bitmap+0x82>
 80017bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80017be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017c0:	4413      	add	r3, r2
 80017c2:	781b      	ldrb	r3, [r3, #0]
 80017c4:	4618      	mov	r0, r3
 80017c6:	f7ff fd5d 	bl	8001284 <LCD_DATA>
 80017ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017cc:	3301      	adds	r3, #1
 80017ce:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80017d0:	4413      	add	r3, r2
 80017d2:	781b      	ldrb	r3, [r3, #0]
 80017d4:	4618      	mov	r0, r3
 80017d6:	f7ff fd55 	bl	8001284 <LCD_DATA>
 80017da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017dc:	3302      	adds	r3, #2
 80017de:	627b      	str	r3, [r7, #36]	@ 0x24
 80017e0:	69fb      	ldr	r3, [r7, #28]
 80017e2:	3301      	adds	r3, #1
 80017e4:	61fb      	str	r3, [r7, #28]
 80017e6:	69fb      	ldr	r3, [r7, #28]
 80017e8:	683a      	ldr	r2, [r7, #0]
 80017ea:	429a      	cmp	r2, r3
 80017ec:	d8e6      	bhi.n	80017bc <LCD_Bitmap+0x58>
 80017ee:	6a3b      	ldr	r3, [r7, #32]
 80017f0:	3301      	adds	r3, #1
 80017f2:	623b      	str	r3, [r7, #32]
 80017f4:	6a3b      	ldr	r3, [r7, #32]
 80017f6:	687a      	ldr	r2, [r7, #4]
 80017f8:	429a      	cmp	r2, r3
 80017fa:	d8dc      	bhi.n	80017b6 <LCD_Bitmap+0x52>
 80017fc:	2201      	movs	r2, #1
 80017fe:	2101      	movs	r1, #1
 8001800:	4804      	ldr	r0, [pc, #16]	@ (8001814 <LCD_Bitmap+0xb0>)
 8001802:	f001 febf 	bl	8003584 <HAL_GPIO_WritePin>
 8001806:	bf00      	nop
 8001808:	3728      	adds	r7, #40	@ 0x28
 800180a:	46bd      	mov	sp, r7
 800180c:	bd80      	pop	{r7, pc}
 800180e:	bf00      	nop
 8001810:	40020000 	.word	0x40020000
 8001814:	40020400 	.word	0x40020400

08001818 <borrar_puntero>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

// Función para borrar el puntero de la pantalla
void borrar_puntero() {
 8001818:	b590      	push	{r4, r7, lr}
 800181a:	b083      	sub	sp, #12
 800181c:	af02      	add	r7, sp, #8
    FillRect(PUNTERO_X, OPCION1_Y, PUNTERO_ANCHO, PUNTERO_ALTO, 0x001F); // Borra puntero en Opción 1
 800181e:	4b1b      	ldr	r3, [pc, #108]	@ (800188c <borrar_puntero+0x74>)
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	4618      	mov	r0, r3
 8001824:	4b1a      	ldr	r3, [pc, #104]	@ (8001890 <borrar_puntero+0x78>)
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	4619      	mov	r1, r3
 800182a:	4b1a      	ldr	r3, [pc, #104]	@ (8001894 <borrar_puntero+0x7c>)
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	461a      	mov	r2, r3
 8001830:	4b19      	ldr	r3, [pc, #100]	@ (8001898 <borrar_puntero+0x80>)
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	461c      	mov	r4, r3
 8001836:	231f      	movs	r3, #31
 8001838:	9300      	str	r3, [sp, #0]
 800183a:	4623      	mov	r3, r4
 800183c:	f7ff fe4c 	bl	80014d8 <FillRect>
    FillRect(PUNTERO_X, OPCION2_Y, PUNTERO_ANCHO, PUNTERO_ALTO, 0x001F); // Borra puntero en Opción 2
 8001840:	4b12      	ldr	r3, [pc, #72]	@ (800188c <borrar_puntero+0x74>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	4618      	mov	r0, r3
 8001846:	4b15      	ldr	r3, [pc, #84]	@ (800189c <borrar_puntero+0x84>)
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	4619      	mov	r1, r3
 800184c:	4b11      	ldr	r3, [pc, #68]	@ (8001894 <borrar_puntero+0x7c>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	461a      	mov	r2, r3
 8001852:	4b11      	ldr	r3, [pc, #68]	@ (8001898 <borrar_puntero+0x80>)
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	461c      	mov	r4, r3
 8001858:	231f      	movs	r3, #31
 800185a:	9300      	str	r3, [sp, #0]
 800185c:	4623      	mov	r3, r4
 800185e:	f7ff fe3b 	bl	80014d8 <FillRect>
    FillRect(PUNTERO_X, OPCION3_Y, PUNTERO_ANCHO, PUNTERO_ALTO, 0x001F); // Borra puntero en Opción 3
 8001862:	4b0a      	ldr	r3, [pc, #40]	@ (800188c <borrar_puntero+0x74>)
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	4618      	mov	r0, r3
 8001868:	4b0d      	ldr	r3, [pc, #52]	@ (80018a0 <borrar_puntero+0x88>)
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	4619      	mov	r1, r3
 800186e:	4b09      	ldr	r3, [pc, #36]	@ (8001894 <borrar_puntero+0x7c>)
 8001870:	681b      	ldr	r3, [r3, #0]
 8001872:	461a      	mov	r2, r3
 8001874:	4b08      	ldr	r3, [pc, #32]	@ (8001898 <borrar_puntero+0x80>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	461c      	mov	r4, r3
 800187a:	231f      	movs	r3, #31
 800187c:	9300      	str	r3, [sp, #0]
 800187e:	4623      	mov	r3, r4
 8001880:	f7ff fe2a 	bl	80014d8 <FillRect>
}
 8001884:	bf00      	nop
 8001886:	3704      	adds	r7, #4
 8001888:	46bd      	mov	sp, r7
 800188a:	bd90      	pop	{r4, r7, pc}
 800188c:	20013738 	.word	0x20013738
 8001890:	2001372c 	.word	0x2001372c
 8001894:	2001373c 	.word	0x2001373c
 8001898:	20013740 	.word	0x20013740
 800189c:	20013730 	.word	0x20013730
 80018a0:	20013734 	.word	0x20013734

080018a4 <dibujar_puntero>:

// Función para dibujar el puntero en la opción seleccionada
void dibujar_puntero(uint8_t opcion) {
 80018a4:	b590      	push	{r4, r7, lr}
 80018a6:	b085      	sub	sp, #20
 80018a8:	af02      	add	r7, sp, #8
 80018aa:	4603      	mov	r3, r0
 80018ac:	71fb      	strb	r3, [r7, #7]

    if(opcion == 1){
 80018ae:	79fb      	ldrb	r3, [r7, #7]
 80018b0:	2b01      	cmp	r3, #1
 80018b2:	d111      	bne.n	80018d8 <dibujar_puntero+0x34>
    	LCD_Bitmap(PUNTERO_X, OPCION1_Y, PUNTERO_ANCHO, PUNTERO_ALTO, PUNTERO);
 80018b4:	4b1f      	ldr	r3, [pc, #124]	@ (8001934 <dibujar_puntero+0x90>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	4618      	mov	r0, r3
 80018ba:	4b1f      	ldr	r3, [pc, #124]	@ (8001938 <dibujar_puntero+0x94>)
 80018bc:	681b      	ldr	r3, [r3, #0]
 80018be:	4619      	mov	r1, r3
 80018c0:	4b1e      	ldr	r3, [pc, #120]	@ (800193c <dibujar_puntero+0x98>)
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	461a      	mov	r2, r3
 80018c6:	4b1e      	ldr	r3, [pc, #120]	@ (8001940 <dibujar_puntero+0x9c>)
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	461c      	mov	r4, r3
 80018cc:	4b1d      	ldr	r3, [pc, #116]	@ (8001944 <dibujar_puntero+0xa0>)
 80018ce:	9300      	str	r3, [sp, #0]
 80018d0:	4623      	mov	r3, r4
 80018d2:	f7ff ff47 	bl	8001764 <LCD_Bitmap>
    }else if(opcion == 2){
    	LCD_Bitmap(PUNTERO_X, OPCION2_Y, PUNTERO_ANCHO, PUNTERO_ALTO, PUNTERO);
    }else if(opcion == 3){
    	LCD_Bitmap(PUNTERO_X, OPCION3_Y, PUNTERO_ANCHO, PUNTERO_ALTO, PUNTERO);
    }
}
 80018d6:	e028      	b.n	800192a <dibujar_puntero+0x86>
    }else if(opcion == 2){
 80018d8:	79fb      	ldrb	r3, [r7, #7]
 80018da:	2b02      	cmp	r3, #2
 80018dc:	d111      	bne.n	8001902 <dibujar_puntero+0x5e>
    	LCD_Bitmap(PUNTERO_X, OPCION2_Y, PUNTERO_ANCHO, PUNTERO_ALTO, PUNTERO);
 80018de:	4b15      	ldr	r3, [pc, #84]	@ (8001934 <dibujar_puntero+0x90>)
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	4618      	mov	r0, r3
 80018e4:	4b18      	ldr	r3, [pc, #96]	@ (8001948 <dibujar_puntero+0xa4>)
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	4619      	mov	r1, r3
 80018ea:	4b14      	ldr	r3, [pc, #80]	@ (800193c <dibujar_puntero+0x98>)
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	461a      	mov	r2, r3
 80018f0:	4b13      	ldr	r3, [pc, #76]	@ (8001940 <dibujar_puntero+0x9c>)
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	461c      	mov	r4, r3
 80018f6:	4b13      	ldr	r3, [pc, #76]	@ (8001944 <dibujar_puntero+0xa0>)
 80018f8:	9300      	str	r3, [sp, #0]
 80018fa:	4623      	mov	r3, r4
 80018fc:	f7ff ff32 	bl	8001764 <LCD_Bitmap>
}
 8001900:	e013      	b.n	800192a <dibujar_puntero+0x86>
    }else if(opcion == 3){
 8001902:	79fb      	ldrb	r3, [r7, #7]
 8001904:	2b03      	cmp	r3, #3
 8001906:	d110      	bne.n	800192a <dibujar_puntero+0x86>
    	LCD_Bitmap(PUNTERO_X, OPCION3_Y, PUNTERO_ANCHO, PUNTERO_ALTO, PUNTERO);
 8001908:	4b0a      	ldr	r3, [pc, #40]	@ (8001934 <dibujar_puntero+0x90>)
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	4618      	mov	r0, r3
 800190e:	4b0f      	ldr	r3, [pc, #60]	@ (800194c <dibujar_puntero+0xa8>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	4619      	mov	r1, r3
 8001914:	4b09      	ldr	r3, [pc, #36]	@ (800193c <dibujar_puntero+0x98>)
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	461a      	mov	r2, r3
 800191a:	4b09      	ldr	r3, [pc, #36]	@ (8001940 <dibujar_puntero+0x9c>)
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	461c      	mov	r4, r3
 8001920:	4b08      	ldr	r3, [pc, #32]	@ (8001944 <dibujar_puntero+0xa0>)
 8001922:	9300      	str	r3, [sp, #0]
 8001924:	4623      	mov	r3, r4
 8001926:	f7ff ff1d 	bl	8001764 <LCD_Bitmap>
}
 800192a:	bf00      	nop
 800192c:	370c      	adds	r7, #12
 800192e:	46bd      	mov	sp, r7
 8001930:	bd90      	pop	{r4, r7, pc}
 8001932:	bf00      	nop
 8001934:	20013738 	.word	0x20013738
 8001938:	2001372c 	.word	0x2001372c
 800193c:	2001373c 	.word	0x2001373c
 8001940:	20013740 	.word	0x20013740
 8001944:	20008984 	.word	0x20008984
 8001948:	20013730 	.word	0x20013730
 800194c:	20013734 	.word	0x20013734

08001950 <mover_puntero>:

// Función para mover el puntero según el comando recibido
void mover_puntero(char comando) {
 8001950:	b580      	push	{r7, lr}
 8001952:	b082      	sub	sp, #8
 8001954:	af00      	add	r7, sp, #0
 8001956:	4603      	mov	r3, r0
 8001958:	71fb      	strb	r3, [r7, #7]
    // Borrar el puntero actual
    borrar_puntero();
 800195a:	f7ff ff5d 	bl	8001818 <borrar_puntero>

    // Mover el puntero hacia arriba ('g') o hacia abajo ('h')
    if (received_char == 'g') {
 800195e:	4b14      	ldr	r3, [pc, #80]	@ (80019b0 <mover_puntero+0x60>)
 8001960:	781b      	ldrb	r3, [r3, #0]
 8001962:	b2db      	uxtb	r3, r3
 8001964:	2b67      	cmp	r3, #103	@ 0x67
 8001966:	d10a      	bne.n	800197e <mover_puntero+0x2e>
        if (seleccion_actual > 1) {
 8001968:	4b12      	ldr	r3, [pc, #72]	@ (80019b4 <mover_puntero+0x64>)
 800196a:	781b      	ldrb	r3, [r3, #0]
 800196c:	2b01      	cmp	r3, #1
 800196e:	d915      	bls.n	800199c <mover_puntero+0x4c>
            seleccion_actual--; // Mover hacia arriba
 8001970:	4b10      	ldr	r3, [pc, #64]	@ (80019b4 <mover_puntero+0x64>)
 8001972:	781b      	ldrb	r3, [r3, #0]
 8001974:	3b01      	subs	r3, #1
 8001976:	b2da      	uxtb	r2, r3
 8001978:	4b0e      	ldr	r3, [pc, #56]	@ (80019b4 <mover_puntero+0x64>)
 800197a:	701a      	strb	r2, [r3, #0]
 800197c:	e00e      	b.n	800199c <mover_puntero+0x4c>
        }
    } else if (received_char == 'h') {
 800197e:	4b0c      	ldr	r3, [pc, #48]	@ (80019b0 <mover_puntero+0x60>)
 8001980:	781b      	ldrb	r3, [r3, #0]
 8001982:	b2db      	uxtb	r3, r3
 8001984:	2b68      	cmp	r3, #104	@ 0x68
 8001986:	d109      	bne.n	800199c <mover_puntero+0x4c>
        if (seleccion_actual < 3) {
 8001988:	4b0a      	ldr	r3, [pc, #40]	@ (80019b4 <mover_puntero+0x64>)
 800198a:	781b      	ldrb	r3, [r3, #0]
 800198c:	2b02      	cmp	r3, #2
 800198e:	d805      	bhi.n	800199c <mover_puntero+0x4c>
            seleccion_actual++; // Mover hacia abajo
 8001990:	4b08      	ldr	r3, [pc, #32]	@ (80019b4 <mover_puntero+0x64>)
 8001992:	781b      	ldrb	r3, [r3, #0]
 8001994:	3301      	adds	r3, #1
 8001996:	b2da      	uxtb	r2, r3
 8001998:	4b06      	ldr	r3, [pc, #24]	@ (80019b4 <mover_puntero+0x64>)
 800199a:	701a      	strb	r2, [r3, #0]
        }
    }


    // Dibujar el puntero en la nueva posición
    dibujar_puntero(seleccion_actual);
 800199c:	4b05      	ldr	r3, [pc, #20]	@ (80019b4 <mover_puntero+0x64>)
 800199e:	781b      	ldrb	r3, [r3, #0]
 80019a0:	4618      	mov	r0, r3
 80019a2:	f7ff ff7f 	bl	80018a4 <dibujar_puntero>
}
 80019a6:	bf00      	nop
 80019a8:	3708      	adds	r7, #8
 80019aa:	46bd      	mov	sp, r7
 80019ac:	bd80      	pop	{r7, pc}
 80019ae:	bf00      	nop
 80019b0:	200138f8 	.word	0x200138f8
 80019b4:	20013744 	.word	0x20013744

080019b8 <check_collision>:

int check_collision(int jug_x, int jug_y, int green_x, int green_y) {
 80019b8:	b480      	push	{r7}
 80019ba:	b085      	sub	sp, #20
 80019bc:	af00      	add	r7, sp, #0
 80019be:	60f8      	str	r0, [r7, #12]
 80019c0:	60b9      	str	r1, [r7, #8]
 80019c2:	607a      	str	r2, [r7, #4]
 80019c4:	603b      	str	r3, [r7, #0]
    return (jug_x < green_x + green_rect_width &&
 80019c6:	4b12      	ldr	r3, [pc, #72]	@ (8001a10 <check_collision+0x58>)
 80019c8:	681a      	ldr	r2, [r3, #0]
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	4413      	add	r3, r2
            jug_x + jug_width > green_x &&
            jug_y < green_y + green_rect_height &&
 80019ce:	68fa      	ldr	r2, [r7, #12]
 80019d0:	429a      	cmp	r2, r3
 80019d2:	da16      	bge.n	8001a02 <check_collision+0x4a>
            jug_x + jug_width > green_x &&
 80019d4:	4b0f      	ldr	r3, [pc, #60]	@ (8001a14 <check_collision+0x5c>)
 80019d6:	681a      	ldr	r2, [r3, #0]
 80019d8:	68fb      	ldr	r3, [r7, #12]
 80019da:	4413      	add	r3, r2
    return (jug_x < green_x + green_rect_width &&
 80019dc:	687a      	ldr	r2, [r7, #4]
 80019de:	429a      	cmp	r2, r3
 80019e0:	da0f      	bge.n	8001a02 <check_collision+0x4a>
            jug_y < green_y + green_rect_height &&
 80019e2:	4b0d      	ldr	r3, [pc, #52]	@ (8001a18 <check_collision+0x60>)
 80019e4:	681a      	ldr	r2, [r3, #0]
 80019e6:	683b      	ldr	r3, [r7, #0]
 80019e8:	4413      	add	r3, r2
            jug_x + jug_width > green_x &&
 80019ea:	68ba      	ldr	r2, [r7, #8]
 80019ec:	429a      	cmp	r2, r3
 80019ee:	da08      	bge.n	8001a02 <check_collision+0x4a>
            jug_y + jug_height > green_y);
 80019f0:	4b0a      	ldr	r3, [pc, #40]	@ (8001a1c <check_collision+0x64>)
 80019f2:	681a      	ldr	r2, [r3, #0]
 80019f4:	68bb      	ldr	r3, [r7, #8]
 80019f6:	4413      	add	r3, r2
            jug_y < green_y + green_rect_height &&
 80019f8:	683a      	ldr	r2, [r7, #0]
 80019fa:	429a      	cmp	r2, r3
 80019fc:	da01      	bge.n	8001a02 <check_collision+0x4a>
 80019fe:	2301      	movs	r3, #1
 8001a00:	e000      	b.n	8001a04 <check_collision+0x4c>
 8001a02:	2300      	movs	r3, #0
}
 8001a04:	4618      	mov	r0, r3
 8001a06:	3714      	adds	r7, #20
 8001a08:	46bd      	mov	sp, r7
 8001a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a0e:	4770      	bx	lr
 8001a10:	20013718 	.word	0x20013718
 8001a14:	20013708 	.word	0x20013708
 8001a18:	2001371c 	.word	0x2001371c
 8001a1c:	2001370c 	.word	0x2001370c

08001a20 <clear_previous_sprite>:

    // Dibujar el cubo verde en la nueva posición
    FillRect(green_rect_x, green_rect_y, green_rect_width, green_rect_height, 0x07E0);  // Verde
}

void clear_previous_sprite(int x, int y, int width, int height) {
 8001a20:	b590      	push	{r4, r7, lr}
 8001a22:	b087      	sub	sp, #28
 8001a24:	af02      	add	r7, sp, #8
 8001a26:	60f8      	str	r0, [r7, #12]
 8001a28:	60b9      	str	r1, [r7, #8]
 8001a2a:	607a      	str	r2, [r7, #4]
 8001a2c:	603b      	str	r3, [r7, #0]
    // Limpia la posición anterior del sprite dibujando un rectángulo blanco
    FillRect(x, y, width, height, 0xEDCC);  // Color blanco (0xFFFF) para limpiar
 8001a2e:	68f8      	ldr	r0, [r7, #12]
 8001a30:	68b9      	ldr	r1, [r7, #8]
 8001a32:	687a      	ldr	r2, [r7, #4]
 8001a34:	683b      	ldr	r3, [r7, #0]
 8001a36:	f64e 54cc 	movw	r4, #60876	@ 0xedcc
 8001a3a:	9400      	str	r4, [sp, #0]
 8001a3c:	f7ff fd4c 	bl	80014d8 <FillRect>
}
 8001a40:	bf00      	nop
 8001a42:	3714      	adds	r7, #20
 8001a44:	46bd      	mov	sp, r7
 8001a46:	bd90      	pop	{r4, r7, pc}

08001a48 <move_sprite_up>:

void move_sprite_up() {
 8001a48:	b590      	push	{r4, r7, lr}
 8001a4a:	b083      	sub	sp, #12
 8001a4c:	af02      	add	r7, sp, #8
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x, sprite_y, sprite_width, sprite_height);
 8001a4e:	4b1e      	ldr	r3, [pc, #120]	@ (8001ac8 <move_sprite_up+0x80>)
 8001a50:	6818      	ldr	r0, [r3, #0]
 8001a52:	4b1e      	ldr	r3, [pc, #120]	@ (8001acc <move_sprite_up+0x84>)
 8001a54:	6819      	ldr	r1, [r3, #0]
 8001a56:	221e      	movs	r2, #30
 8001a58:	231d      	movs	r3, #29
 8001a5a:	f7ff ffe1 	bl	8001a20 <clear_previous_sprite>

    // Verificar si no se sale del límite superior antes de mover
    if (sprite_y - move_step >= y_limit_min) {
 8001a5e:	4b1b      	ldr	r3, [pc, #108]	@ (8001acc <move_sprite_up+0x84>)
 8001a60:	681a      	ldr	r2, [r3, #0]
 8001a62:	4b1b      	ldr	r3, [pc, #108]	@ (8001ad0 <move_sprite_up+0x88>)
 8001a64:	681b      	ldr	r3, [r3, #0]
 8001a66:	1ad2      	subs	r2, r2, r3
 8001a68:	4b1a      	ldr	r3, [pc, #104]	@ (8001ad4 <move_sprite_up+0x8c>)
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	429a      	cmp	r2, r3
 8001a6e:	db06      	blt.n	8001a7e <move_sprite_up+0x36>
        sprite_y -= move_step;  // Mover hacia arriba
 8001a70:	4b16      	ldr	r3, [pc, #88]	@ (8001acc <move_sprite_up+0x84>)
 8001a72:	681a      	ldr	r2, [r3, #0]
 8001a74:	4b16      	ldr	r3, [pc, #88]	@ (8001ad0 <move_sprite_up+0x88>)
 8001a76:	681b      	ldr	r3, [r3, #0]
 8001a78:	1ad3      	subs	r3, r2, r3
 8001a7a:	4a14      	ldr	r2, [pc, #80]	@ (8001acc <move_sprite_up+0x84>)
 8001a7c:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    //LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, movjug1, 2, anima1, 0, 1);  // Dibuja el sprite en su nueva posición
    LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
 8001a7e:	4b12      	ldr	r3, [pc, #72]	@ (8001ac8 <move_sprite_up+0x80>)
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	4618      	mov	r0, r3
 8001a84:	4b11      	ldr	r3, [pc, #68]	@ (8001acc <move_sprite_up+0x84>)
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	4619      	mov	r1, r3
 8001a8a:	231e      	movs	r3, #30
 8001a8c:	461a      	mov	r2, r3
 8001a8e:	231d      	movs	r3, #29
 8001a90:	461c      	mov	r4, r3
 8001a92:	4b11      	ldr	r3, [pc, #68]	@ (8001ad8 <move_sprite_up+0x90>)
 8001a94:	9300      	str	r3, [sp, #0]
 8001a96:	4623      	mov	r3, r4
 8001a98:	f7ff fe64 	bl	8001764 <LCD_Bitmap>
    if (check_collision(sprite_x, sprite_y, z, 150)) { //check_collision(sprite_x, sprite_y, green_rect_x, green_rect_y
 8001a9c:	4b0a      	ldr	r3, [pc, #40]	@ (8001ac8 <move_sprite_up+0x80>)
 8001a9e:	6818      	ldr	r0, [r3, #0]
 8001aa0:	4b0a      	ldr	r3, [pc, #40]	@ (8001acc <move_sprite_up+0x84>)
 8001aa2:	6819      	ldr	r1, [r3, #0]
 8001aa4:	4b0d      	ldr	r3, [pc, #52]	@ (8001adc <move_sprite_up+0x94>)
 8001aa6:	681a      	ldr	r2, [r3, #0]
 8001aa8:	2396      	movs	r3, #150	@ 0x96
 8001aaa:	f7ff ff85 	bl	80019b8 <check_collision>
 8001aae:	4603      	mov	r3, r0
 8001ab0:	2b00      	cmp	r3, #0
 8001ab2:	d004      	beq.n	8001abe <move_sprite_up+0x76>
        	colision++;
 8001ab4:	4b0a      	ldr	r3, [pc, #40]	@ (8001ae0 <move_sprite_up+0x98>)
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	3301      	adds	r3, #1
 8001aba:	4a09      	ldr	r2, [pc, #36]	@ (8001ae0 <move_sprite_up+0x98>)
 8001abc:	6013      	str	r3, [r2, #0]

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);*/  // Imprimir colisiones en la pantalla

}
 8001abe:	bf00      	nop
 8001ac0:	3704      	adds	r7, #4
 8001ac2:	46bd      	mov	sp, r7
 8001ac4:	bd90      	pop	{r4, r7, pc}
 8001ac6:	bf00      	nop
 8001ac8:	20013724 	.word	0x20013724
 8001acc:	20013728 	.word	0x20013728
 8001ad0:	20013704 	.word	0x20013704
 8001ad4:	20013710 	.word	0x20013710
 8001ad8:	08007a94 	.word	0x08007a94
 8001adc:	20013720 	.word	0x20013720
 8001ae0:	200138fc 	.word	0x200138fc

08001ae4 <move_sprite_down>:

void move_sprite_down() {
 8001ae4:	b590      	push	{r4, r7, lr}
 8001ae6:	b083      	sub	sp, #12
 8001ae8:	af02      	add	r7, sp, #8
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x, sprite_y, sprite_width, sprite_height);
 8001aea:	4b1f      	ldr	r3, [pc, #124]	@ (8001b68 <move_sprite_down+0x84>)
 8001aec:	6818      	ldr	r0, [r3, #0]
 8001aee:	4b1f      	ldr	r3, [pc, #124]	@ (8001b6c <move_sprite_down+0x88>)
 8001af0:	6819      	ldr	r1, [r3, #0]
 8001af2:	221e      	movs	r2, #30
 8001af4:	231d      	movs	r3, #29
 8001af6:	f7ff ff93 	bl	8001a20 <clear_previous_sprite>

    // Verificar si no se sale del límite inferior antes de mover
    if (sprite_y + move_step + sprite_height <= y_limit_max) {
 8001afa:	4b1c      	ldr	r3, [pc, #112]	@ (8001b6c <move_sprite_down+0x88>)
 8001afc:	681a      	ldr	r2, [r3, #0]
 8001afe:	4b1c      	ldr	r3, [pc, #112]	@ (8001b70 <move_sprite_down+0x8c>)
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	4413      	add	r3, r2
 8001b04:	221d      	movs	r2, #29
 8001b06:	441a      	add	r2, r3
 8001b08:	4b1a      	ldr	r3, [pc, #104]	@ (8001b74 <move_sprite_down+0x90>)
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	429a      	cmp	r2, r3
 8001b0e:	dc06      	bgt.n	8001b1e <move_sprite_down+0x3a>
        sprite_y += move_step;  // Mover hacia abajo
 8001b10:	4b16      	ldr	r3, [pc, #88]	@ (8001b6c <move_sprite_down+0x88>)
 8001b12:	681a      	ldr	r2, [r3, #0]
 8001b14:	4b16      	ldr	r3, [pc, #88]	@ (8001b70 <move_sprite_down+0x8c>)
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	4413      	add	r3, r2
 8001b1a:	4a14      	ldr	r2, [pc, #80]	@ (8001b6c <move_sprite_down+0x88>)
 8001b1c:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    //LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, movjug1, 2, anima1, 0, 1);  // Dibuja el sprite en su nueva posición

    LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
 8001b1e:	4b12      	ldr	r3, [pc, #72]	@ (8001b68 <move_sprite_down+0x84>)
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	4618      	mov	r0, r3
 8001b24:	4b11      	ldr	r3, [pc, #68]	@ (8001b6c <move_sprite_down+0x88>)
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	4619      	mov	r1, r3
 8001b2a:	231e      	movs	r3, #30
 8001b2c:	461a      	mov	r2, r3
 8001b2e:	231d      	movs	r3, #29
 8001b30:	461c      	mov	r4, r3
 8001b32:	4b11      	ldr	r3, [pc, #68]	@ (8001b78 <move_sprite_down+0x94>)
 8001b34:	9300      	str	r3, [sp, #0]
 8001b36:	4623      	mov	r3, r4
 8001b38:	f7ff fe14 	bl	8001764 <LCD_Bitmap>
    if (check_collision(sprite_x, sprite_y, z, 200)) {
 8001b3c:	4b0a      	ldr	r3, [pc, #40]	@ (8001b68 <move_sprite_down+0x84>)
 8001b3e:	6818      	ldr	r0, [r3, #0]
 8001b40:	4b0a      	ldr	r3, [pc, #40]	@ (8001b6c <move_sprite_down+0x88>)
 8001b42:	6819      	ldr	r1, [r3, #0]
 8001b44:	4b0d      	ldr	r3, [pc, #52]	@ (8001b7c <move_sprite_down+0x98>)
 8001b46:	681a      	ldr	r2, [r3, #0]
 8001b48:	23c8      	movs	r3, #200	@ 0xc8
 8001b4a:	f7ff ff35 	bl	80019b8 <check_collision>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d004      	beq.n	8001b5e <move_sprite_down+0x7a>
    	colision++;
 8001b54:	4b0a      	ldr	r3, [pc, #40]	@ (8001b80 <move_sprite_down+0x9c>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	3301      	adds	r3, #1
 8001b5a:	4a09      	ldr	r2, [pc, #36]	@ (8001b80 <move_sprite_down+0x9c>)
 8001b5c:	6013      	str	r3, [r2, #0]
    }

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);  // Imprimir colisiones en la pantalla*/
}
 8001b5e:	bf00      	nop
 8001b60:	3704      	adds	r7, #4
 8001b62:	46bd      	mov	sp, r7
 8001b64:	bd90      	pop	{r4, r7, pc}
 8001b66:	bf00      	nop
 8001b68:	20013724 	.word	0x20013724
 8001b6c:	20013728 	.word	0x20013728
 8001b70:	20013704 	.word	0x20013704
 8001b74:	20013714 	.word	0x20013714
 8001b78:	08007a94 	.word	0x08007a94
 8001b7c:	20013720 	.word	0x20013720
 8001b80:	200138fc 	.word	0x200138fc

08001b84 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b84:	b580      	push	{r7, lr}
 8001b86:	b086      	sub	sp, #24
 8001b88:	af02      	add	r7, sp, #8

  /* USER CODE BEGIN 1 */
	srand(time(NULL));
 8001b8a:	2000      	movs	r0, #0
 8001b8c:	f004 f87a 	bl	8005c84 <time>
 8001b90:	4602      	mov	r2, r0
 8001b92:	460b      	mov	r3, r1
 8001b94:	4613      	mov	r3, r2
 8001b96:	4618      	mov	r0, r3
 8001b98:	f003 fefa 	bl	8005990 <srand>
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001b9c:	f000 fe2e 	bl	80027fc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001ba0:	f000 fa2c 	bl	8001ffc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001ba4:	f000 fb16 	bl	80021d4 <MX_GPIO_Init>
  MX_DMA_Init();
 8001ba8:	f000 faf4 	bl	8002194 <MX_DMA_Init>
  MX_SPI1_Init();
 8001bac:	f000 fa92 	bl	80020d4 <MX_SPI1_Init>
  MX_USART3_UART_Init();
 8001bb0:	f000 fac6 	bl	8002140 <MX_USART3_UART_Init>
  MX_FATFS_Init();
 8001bb4:	f003 fe28 	bl	8005808 <MX_FATFS_Init>
  /* USER CODE BEGIN 2 */
    HAL_UART_Receive_IT(&huart3, data, 1);
 8001bb8:	2201      	movs	r2, #1
 8001bba:	492c      	ldr	r1, [pc, #176]	@ (8001c6c <main+0xe8>)
 8001bbc:	482c      	ldr	r0, [pc, #176]	@ (8001c70 <main+0xec>)
 8001bbe:	f002 feff 	bl	80049c0 <HAL_UART_Receive_IT>
	LCD_Init();
 8001bc2:	f7ff f9bd 	bl	8000f40 <LCD_Init>

	LCD_Clear(0x00);
 8001bc6:	2000      	movs	r0, #0
 8001bc8:	f7ff fc42 	bl	8001450 <LCD_Clear>
	/*FillRect(0, 0, 319, 239, 0xFFFF);
	FillRect(50, 60, 20, 20, 0xF800);
	FillRect(70, 60, 20, 20, 0x07E0);*/
	//LCD_Bitmap(0, 0, 320, 240, FONDOINICIO);

	LCD_Clear(0x2817);
 8001bcc:	f642 0017 	movw	r0, #10263	@ 0x2817
 8001bd0:	f7ff fc3e 	bl	8001450 <LCD_Clear>
	LCD_Bitmap(53, 25, 214, 85, LOGOEX);
 8001bd4:	4b27      	ldr	r3, [pc, #156]	@ (8001c74 <main+0xf0>)
 8001bd6:	9300      	str	r3, [sp, #0]
 8001bd8:	2355      	movs	r3, #85	@ 0x55
 8001bda:	22d6      	movs	r2, #214	@ 0xd6
 8001bdc:	2119      	movs	r1, #25
 8001bde:	2035      	movs	r0, #53	@ 0x35
 8001be0:	f7ff fdc0 	bl	8001764 <LCD_Bitmap>
	LCD_Bitmap(110, 130, 98, 12, OPCION1);
 8001be4:	4b24      	ldr	r3, [pc, #144]	@ (8001c78 <main+0xf4>)
 8001be6:	9300      	str	r3, [sp, #0]
 8001be8:	230c      	movs	r3, #12
 8001bea:	2262      	movs	r2, #98	@ 0x62
 8001bec:	2182      	movs	r1, #130	@ 0x82
 8001bee:	206e      	movs	r0, #110	@ 0x6e
 8001bf0:	f7ff fdb8 	bl	8001764 <LCD_Bitmap>
	LCD_Bitmap(110, 162, 142, 13, OPCION2);
 8001bf4:	4b21      	ldr	r3, [pc, #132]	@ (8001c7c <main+0xf8>)
 8001bf6:	9300      	str	r3, [sp, #0]
 8001bf8:	230d      	movs	r3, #13
 8001bfa:	228e      	movs	r2, #142	@ 0x8e
 8001bfc:	21a2      	movs	r1, #162	@ 0xa2
 8001bfe:	206e      	movs	r0, #110	@ 0x6e
 8001c00:	f7ff fdb0 	bl	8001764 <LCD_Bitmap>
	LCD_Bitmap(110, 195, 84, 11, OPCION3);
 8001c04:	4b1e      	ldr	r3, [pc, #120]	@ (8001c80 <main+0xfc>)
 8001c06:	9300      	str	r3, [sp, #0]
 8001c08:	230b      	movs	r3, #11
 8001c0a:	2254      	movs	r2, #84	@ 0x54
 8001c0c:	21c3      	movs	r1, #195	@ 0xc3
 8001c0e:	206e      	movs	r0, #110	@ 0x6e
 8001c10:	f7ff fda8 	bl	8001764 <LCD_Bitmap>
	LCD_Bitmap(80, 130, 14, 15, PUNTERO);
 8001c14:	4b1b      	ldr	r3, [pc, #108]	@ (8001c84 <main+0x100>)
 8001c16:	9300      	str	r3, [sp, #0]
 8001c18:	230f      	movs	r3, #15
 8001c1a:	220e      	movs	r2, #14
 8001c1c:	2182      	movs	r1, #130	@ 0x82
 8001c1e:	2050      	movs	r0, #80	@ 0x50
 8001c20:	f7ff fda0 	bl	8001764 <LCD_Bitmap>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
		if(inicio == 3){
 8001c24:	4b18      	ldr	r3, [pc, #96]	@ (8001c88 <main+0x104>)
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	2b03      	cmp	r3, #3
 8001c2a:	d105      	bne.n	8001c38 <main+0xb4>
			mover_puntero(received_char);
 8001c2c:	4b17      	ldr	r3, [pc, #92]	@ (8001c8c <main+0x108>)
 8001c2e:	781b      	ldrb	r3, [r3, #0]
 8001c30:	b2db      	uxtb	r3, r3
 8001c32:	4618      	mov	r0, r3
 8001c34:	f7ff fe8c 	bl	8001950 <mover_puntero>
		}
		if(received_char == 'a' && opcion == 1){
 8001c38:	4b14      	ldr	r3, [pc, #80]	@ (8001c8c <main+0x108>)
 8001c3a:	781b      	ldrb	r3, [r3, #0]
 8001c3c:	b2db      	uxtb	r3, r3
 8001c3e:	2b61      	cmp	r3, #97	@ 0x61
 8001c40:	d109      	bne.n	8001c56 <main+0xd2>
 8001c42:	4b13      	ldr	r3, [pc, #76]	@ (8001c90 <main+0x10c>)
 8001c44:	781b      	ldrb	r3, [r3, #0]
 8001c46:	2b01      	cmp	r3, #1
 8001c48:	d105      	bne.n	8001c56 <main+0xd2>
			inicio = 0;
 8001c4a:	4b0f      	ldr	r3, [pc, #60]	@ (8001c88 <main+0x104>)
 8001c4c:	2200      	movs	r2, #0
 8001c4e:	601a      	str	r2, [r3, #0]
			pintjueg = 1;
 8001c50:	4b10      	ldr	r3, [pc, #64]	@ (8001c94 <main+0x110>)
 8001c52:	2201      	movs	r2, #1
 8001c54:	601a      	str	r2, [r3, #0]
		}

		switch (inicio){
 8001c56:	4b0c      	ldr	r3, [pc, #48]	@ (8001c88 <main+0x104>)
 8001c58:	681b      	ldr	r3, [r3, #0]
 8001c5a:	2b02      	cmp	r3, #2
 8001c5c:	f000 81c0 	beq.w	8001fe0 <main+0x45c>
 8001c60:	2b02      	cmp	r3, #2
 8001c62:	dcdf      	bgt.n	8001c24 <main+0xa0>
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d017      	beq.n	8001c98 <main+0x114>
 8001c68:	2b01      	cmp	r3, #1
					c = 0;
				}*/
				break;
			case 1:

				break;
 8001c6a:	e1bc      	b.n	8001fe6 <main+0x462>
 8001c6c:	200138e8 	.word	0x200138e8
 8001c70:	200138a0 	.word	0x200138a0
 8001c74:	20008b28 	.word	0x20008b28
 8001c78:	20011944 	.word	0x20011944
 8001c7c:	20012274 	.word	0x20012274
 8001c80:	20012fc4 	.word	0x20012fc4
 8001c84:	20008984 	.word	0x20008984
 8001c88:	200136fc 	.word	0x200136fc
 8001c8c:	200138f8 	.word	0x200138f8
 8001c90:	20013700 	.word	0x20013700
 8001c94:	200138f0 	.word	0x200138f0
				LCD_Clear(0xEDCC);
 8001c98:	f64e 50cc 	movw	r0, #60876	@ 0xedcc
 8001c9c:	f7ff fbd8 	bl	8001450 <LCD_Clear>
				if(pintjueg == 1){
 8001ca0:	4b9a      	ldr	r3, [pc, #616]	@ (8001f0c <main+0x388>)
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	2b01      	cmp	r3, #1
 8001ca6:	f040 8098 	bne.w	8001dda <main+0x256>
					LCD_Bitmap(0, 120, 120,19, DIVISION);
 8001caa:	4b99      	ldr	r3, [pc, #612]	@ (8001f10 <main+0x38c>)
 8001cac:	9300      	str	r3, [sp, #0]
 8001cae:	2313      	movs	r3, #19
 8001cb0:	2278      	movs	r2, #120	@ 0x78
 8001cb2:	2178      	movs	r1, #120	@ 0x78
 8001cb4:	2000      	movs	r0, #0
 8001cb6:	f7ff fd55 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(125, 120, 120,19, DIVISION);
 8001cba:	4b95      	ldr	r3, [pc, #596]	@ (8001f10 <main+0x38c>)
 8001cbc:	9300      	str	r3, [sp, #0]
 8001cbe:	2313      	movs	r3, #19
 8001cc0:	2278      	movs	r2, #120	@ 0x78
 8001cc2:	2178      	movs	r1, #120	@ 0x78
 8001cc4:	207d      	movs	r0, #125	@ 0x7d
 8001cc6:	f7ff fd4d 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(200, 120, 120,19, DIVISION);
 8001cca:	4b91      	ldr	r3, [pc, #580]	@ (8001f10 <main+0x38c>)
 8001ccc:	9300      	str	r3, [sp, #0]
 8001cce:	2313      	movs	r3, #19
 8001cd0:	2278      	movs	r2, #120	@ 0x78
 8001cd2:	2178      	movs	r1, #120	@ 0x78
 8001cd4:	20c8      	movs	r0, #200	@ 0xc8
 8001cd6:	f7ff fd45 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(0, 220, 80,18, DIVISIONBAJA);
 8001cda:	4b8e      	ldr	r3, [pc, #568]	@ (8001f14 <main+0x390>)
 8001cdc:	9300      	str	r3, [sp, #0]
 8001cde:	2312      	movs	r3, #18
 8001ce0:	2250      	movs	r2, #80	@ 0x50
 8001ce2:	21dc      	movs	r1, #220	@ 0xdc
 8001ce4:	2000      	movs	r0, #0
 8001ce6:	f7ff fd3d 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(80, 220, 80,18, DIVISIONBAJA);
 8001cea:	4b8a      	ldr	r3, [pc, #552]	@ (8001f14 <main+0x390>)
 8001cec:	9300      	str	r3, [sp, #0]
 8001cee:	2312      	movs	r3, #18
 8001cf0:	2250      	movs	r2, #80	@ 0x50
 8001cf2:	21dc      	movs	r1, #220	@ 0xdc
 8001cf4:	2050      	movs	r0, #80	@ 0x50
 8001cf6:	f7ff fd35 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(160, 220, 80,18, DIVISIONBAJA);
 8001cfa:	4b86      	ldr	r3, [pc, #536]	@ (8001f14 <main+0x390>)
 8001cfc:	9300      	str	r3, [sp, #0]
 8001cfe:	2312      	movs	r3, #18
 8001d00:	2250      	movs	r2, #80	@ 0x50
 8001d02:	21dc      	movs	r1, #220	@ 0xdc
 8001d04:	20a0      	movs	r0, #160	@ 0xa0
 8001d06:	f7ff fd2d 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(240, 220, 80,18, DIVISIONBAJA);
 8001d0a:	4b82      	ldr	r3, [pc, #520]	@ (8001f14 <main+0x390>)
 8001d0c:	9300      	str	r3, [sp, #0]
 8001d0e:	2312      	movs	r3, #18
 8001d10:	2250      	movs	r2, #80	@ 0x50
 8001d12:	21dc      	movs	r1, #220	@ 0xdc
 8001d14:	20f0      	movs	r0, #240	@ 0xf0
 8001d16:	f7ff fd25 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(0, 0,320, 45 , TRACK);
 8001d1a:	4b7f      	ldr	r3, [pc, #508]	@ (8001f18 <main+0x394>)
 8001d1c:	9300      	str	r3, [sp, #0]
 8001d1e:	232d      	movs	r3, #45	@ 0x2d
 8001d20:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001d24:	2100      	movs	r1, #0
 8001d26:	2000      	movs	r0, #0
 8001d28:	f7ff fd1c 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(0, 0, 32, 31, Jug1);
 8001d2c:	4b7b      	ldr	r3, [pc, #492]	@ (8001f1c <main+0x398>)
 8001d2e:	9300      	str	r3, [sp, #0]
 8001d30:	231f      	movs	r3, #31
 8001d32:	2220      	movs	r2, #32
 8001d34:	2100      	movs	r1, #0
 8001d36:	2000      	movs	r0, #0
 8001d38:	f7ff fd14 	bl	8001764 <LCD_Bitmap>
					FillRect(33, 0, 20, 20, 0xF800); //Vidas Jug1
 8001d3c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001d40:	9300      	str	r3, [sp, #0]
 8001d42:	2314      	movs	r3, #20
 8001d44:	2214      	movs	r2, #20
 8001d46:	2100      	movs	r1, #0
 8001d48:	2021      	movs	r0, #33	@ 0x21
 8001d4a:	f7ff fbc5 	bl	80014d8 <FillRect>
					FillRect(53, 0, 20, 20, 0xF800);
 8001d4e:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001d52:	9300      	str	r3, [sp, #0]
 8001d54:	2314      	movs	r3, #20
 8001d56:	2214      	movs	r2, #20
 8001d58:	2100      	movs	r1, #0
 8001d5a:	2035      	movs	r0, #53	@ 0x35
 8001d5c:	f7ff fbbc 	bl	80014d8 <FillRect>
					FillRect(73, 0, 20, 20, 0xF800);
 8001d60:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001d64:	9300      	str	r3, [sp, #0]
 8001d66:	2314      	movs	r3, #20
 8001d68:	2214      	movs	r2, #20
 8001d6a:	2100      	movs	r1, #0
 8001d6c:	2049      	movs	r0, #73	@ 0x49
 8001d6e:	f7ff fbb3 	bl	80014d8 <FillRect>
					FillRect(93, 0, 20, 20, 0xF800);
 8001d72:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001d76:	9300      	str	r3, [sp, #0]
 8001d78:	2314      	movs	r3, #20
 8001d7a:	2214      	movs	r2, #20
 8001d7c:	2100      	movs	r1, #0
 8001d7e:	205d      	movs	r0, #93	@ 0x5d
 8001d80:	f7ff fbaa 	bl	80014d8 <FillRect>
					LCD_Bitmap(0, 210, 32, 31, Jug2);
 8001d84:	4b66      	ldr	r3, [pc, #408]	@ (8001f20 <main+0x39c>)
 8001d86:	9300      	str	r3, [sp, #0]
 8001d88:	231f      	movs	r3, #31
 8001d8a:	2220      	movs	r2, #32
 8001d8c:	21d2      	movs	r1, #210	@ 0xd2
 8001d8e:	2000      	movs	r0, #0
 8001d90:	f7ff fce8 	bl	8001764 <LCD_Bitmap>
					FillRect(33, 220, 20, 20, 0x001F); //Vidas Jug2
 8001d94:	231f      	movs	r3, #31
 8001d96:	9300      	str	r3, [sp, #0]
 8001d98:	2314      	movs	r3, #20
 8001d9a:	2214      	movs	r2, #20
 8001d9c:	21dc      	movs	r1, #220	@ 0xdc
 8001d9e:	2021      	movs	r0, #33	@ 0x21
 8001da0:	f7ff fb9a 	bl	80014d8 <FillRect>
					FillRect(53, 220, 20, 20, 0x001F);
 8001da4:	231f      	movs	r3, #31
 8001da6:	9300      	str	r3, [sp, #0]
 8001da8:	2314      	movs	r3, #20
 8001daa:	2214      	movs	r2, #20
 8001dac:	21dc      	movs	r1, #220	@ 0xdc
 8001dae:	2035      	movs	r0, #53	@ 0x35
 8001db0:	f7ff fb92 	bl	80014d8 <FillRect>
					FillRect(73, 220, 20, 20, 0x001F);
 8001db4:	231f      	movs	r3, #31
 8001db6:	9300      	str	r3, [sp, #0]
 8001db8:	2314      	movs	r3, #20
 8001dba:	2214      	movs	r2, #20
 8001dbc:	21dc      	movs	r1, #220	@ 0xdc
 8001dbe:	2049      	movs	r0, #73	@ 0x49
 8001dc0:	f7ff fb8a 	bl	80014d8 <FillRect>
					FillRect(93, 220, 20, 20, 0x001F);
 8001dc4:	231f      	movs	r3, #31
 8001dc6:	9300      	str	r3, [sp, #0]
 8001dc8:	2314      	movs	r3, #20
 8001dca:	2214      	movs	r2, #20
 8001dcc:	21dc      	movs	r1, #220	@ 0xdc
 8001dce:	205d      	movs	r0, #93	@ 0x5d
 8001dd0:	f7ff fb82 	bl	80014d8 <FillRect>
					pintjueg = 0;
 8001dd4:	4b4d      	ldr	r3, [pc, #308]	@ (8001f0c <main+0x388>)
 8001dd6:	2200      	movs	r2, #0
 8001dd8:	601a      	str	r2, [r3, #0]
				uint32_t current_time = HAL_GetTick();
 8001dda:	f000 fd75 	bl	80028c8 <HAL_GetTick>
 8001dde:	60f8      	str	r0, [r7, #12]
				int random_number = (rand() % 5) + 1;//Numeros random del 1 al 5
 8001de0:	f003 fe04 	bl	80059ec <rand>
 8001de4:	4601      	mov	r1, r0
 8001de6:	4b4f      	ldr	r3, [pc, #316]	@ (8001f24 <main+0x3a0>)
 8001de8:	fb83 2301 	smull	r2, r3, r3, r1
 8001dec:	105a      	asrs	r2, r3, #1
 8001dee:	17cb      	asrs	r3, r1, #31
 8001df0:	1ad2      	subs	r2, r2, r3
 8001df2:	4613      	mov	r3, r2
 8001df4:	009b      	lsls	r3, r3, #2
 8001df6:	4413      	add	r3, r2
 8001df8:	1aca      	subs	r2, r1, r3
 8001dfa:	1c53      	adds	r3, r2, #1
 8001dfc:	60bb      	str	r3, [r7, #8]
				if (random_number == 1  && cactus != 1) {//&& move1 != 1
 8001dfe:	68bb      	ldr	r3, [r7, #8]
 8001e00:	2b01      	cmp	r3, #1
 8001e02:	d158      	bne.n	8001eb6 <main+0x332>
 8001e04:	4b48      	ldr	r3, [pc, #288]	@ (8001f28 <main+0x3a4>)
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	2b01      	cmp	r3, #1
 8001e0a:	d054      	beq.n	8001eb6 <main+0x332>
					if (current_time - last_time_cactus >= 15) { // Controla la velocidad del cactus
 8001e0c:	4b47      	ldr	r3, [pc, #284]	@ (8001f2c <main+0x3a8>)
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	68fa      	ldr	r2, [r7, #12]
 8001e12:	1ad3      	subs	r3, r2, r3
 8001e14:	2b0e      	cmp	r3, #14
 8001e16:	d94e      	bls.n	8001eb6 <main+0x332>
						last_time_cactus = current_time;
 8001e18:	4a44      	ldr	r2, [pc, #272]	@ (8001f2c <main+0x3a8>)
 8001e1a:	68fb      	ldr	r3, [r7, #12]
 8001e1c:	6013      	str	r3, [r2, #0]
						z--; // Decrementa la posición del cactus
 8001e1e:	4b44      	ldr	r3, [pc, #272]	@ (8001f30 <main+0x3ac>)
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	3b01      	subs	r3, #1
 8001e24:	4a42      	ldr	r2, [pc, #264]	@ (8001f30 <main+0x3ac>)
 8001e26:	6013      	str	r3, [r2, #0]
						int anima = (z / 50) % 1;
 8001e28:	2300      	movs	r3, #0
 8001e2a:	607b      	str	r3, [r7, #4]
						FillRect(z, 150, 20, 20, 0xF800);
 8001e2c:	4b40      	ldr	r3, [pc, #256]	@ (8001f30 <main+0x3ac>)
 8001e2e:	681b      	ldr	r3, [r3, #0]
 8001e30:	4618      	mov	r0, r3
 8001e32:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001e36:	9300      	str	r3, [sp, #0]
 8001e38:	2314      	movs	r3, #20
 8001e3a:	2214      	movs	r2, #20
 8001e3c:	2196      	movs	r1, #150	@ 0x96
 8001e3e:	f7ff fb4b 	bl	80014d8 <FillRect>
						if (check_collision(sprite_x, sprite_y, z, 150)) {
 8001e42:	4b3c      	ldr	r3, [pc, #240]	@ (8001f34 <main+0x3b0>)
 8001e44:	6818      	ldr	r0, [r3, #0]
 8001e46:	4b3c      	ldr	r3, [pc, #240]	@ (8001f38 <main+0x3b4>)
 8001e48:	6819      	ldr	r1, [r3, #0]
 8001e4a:	4b39      	ldr	r3, [pc, #228]	@ (8001f30 <main+0x3ac>)
 8001e4c:	681a      	ldr	r2, [r3, #0]
 8001e4e:	2396      	movs	r3, #150	@ 0x96
 8001e50:	f7ff fdb2 	bl	80019b8 <check_collision>
 8001e54:	4603      	mov	r3, r0
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d012      	beq.n	8001e80 <main+0x2fc>
							colision++;
 8001e5a:	4b38      	ldr	r3, [pc, #224]	@ (8001f3c <main+0x3b8>)
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	3301      	adds	r3, #1
 8001e60:	4a36      	ldr	r2, [pc, #216]	@ (8001f3c <main+0x3b8>)
 8001e62:	6013      	str	r3, [r2, #0]
						    FillRect(z, 150, 20, 25, 0xEDCC); // Rellenar con color de fondo
 8001e64:	4b32      	ldr	r3, [pc, #200]	@ (8001f30 <main+0x3ac>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	4618      	mov	r0, r3
 8001e6a:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8001e6e:	9300      	str	r3, [sp, #0]
 8001e70:	2319      	movs	r3, #25
 8001e72:	2214      	movs	r2, #20
 8001e74:	2196      	movs	r1, #150	@ 0x96
 8001e76:	f7ff fb2f 	bl	80014d8 <FillRect>
						    cactus = 1;
 8001e7a:	4b2b      	ldr	r3, [pc, #172]	@ (8001f28 <main+0x3a4>)
 8001e7c:	2201      	movs	r2, #1
 8001e7e:	601a      	str	r2, [r3, #0]
						if (z <= 10) {
 8001e80:	4b2b      	ldr	r3, [pc, #172]	@ (8001f30 <main+0x3ac>)
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	2b0a      	cmp	r3, #10
 8001e86:	dc03      	bgt.n	8001e90 <main+0x30c>
							z = 300;  // Reiniciar la posición del cactus
 8001e88:	4b29      	ldr	r3, [pc, #164]	@ (8001f30 <main+0x3ac>)
 8001e8a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001e8e:	601a      	str	r2, [r3, #0]
						if (z <= 10) {
 8001e90:	4b27      	ldr	r3, [pc, #156]	@ (8001f30 <main+0x3ac>)
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	2b0a      	cmp	r3, #10
 8001e96:	dc0e      	bgt.n	8001eb6 <main+0x332>
							FillRect(z, 150, 20, 25, 0xEDCC); // Reiniciar la posición del cactus
 8001e98:	4b25      	ldr	r3, [pc, #148]	@ (8001f30 <main+0x3ac>)
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8001ea2:	9300      	str	r3, [sp, #0]
 8001ea4:	2319      	movs	r3, #25
 8001ea6:	2214      	movs	r2, #20
 8001ea8:	2196      	movs	r1, #150	@ 0x96
 8001eaa:	f7ff fb15 	bl	80014d8 <FillRect>
						    z = 300;
 8001eae:	4b20      	ldr	r3, [pc, #128]	@ (8001f30 <main+0x3ac>)
 8001eb0:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001eb4:	601a      	str	r2, [r3, #0]
				if(colision == 1){
 8001eb6:	4b21      	ldr	r3, [pc, #132]	@ (8001f3c <main+0x3b8>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	2b01      	cmp	r3, #1
 8001ebc:	d109      	bne.n	8001ed2 <main+0x34e>
					FillRect(93, 0, 20, 20, 0xFFFF);
 8001ebe:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001ec2:	9300      	str	r3, [sp, #0]
 8001ec4:	2314      	movs	r3, #20
 8001ec6:	2214      	movs	r2, #20
 8001ec8:	2100      	movs	r1, #0
 8001eca:	205d      	movs	r0, #93	@ 0x5d
 8001ecc:	f7ff fb04 	bl	80014d8 <FillRect>
 8001ed0:	e046      	b.n	8001f60 <main+0x3dc>
				}else if(colision == 2){
 8001ed2:	4b1a      	ldr	r3, [pc, #104]	@ (8001f3c <main+0x3b8>)
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	2b02      	cmp	r3, #2
 8001ed8:	d109      	bne.n	8001eee <main+0x36a>
					FillRect(73, 0, 20, 20, 0xFFFF);
 8001eda:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001ede:	9300      	str	r3, [sp, #0]
 8001ee0:	2314      	movs	r3, #20
 8001ee2:	2214      	movs	r2, #20
 8001ee4:	2100      	movs	r1, #0
 8001ee6:	2049      	movs	r0, #73	@ 0x49
 8001ee8:	f7ff faf6 	bl	80014d8 <FillRect>
 8001eec:	e038      	b.n	8001f60 <main+0x3dc>
				}else if(colision == 3){
 8001eee:	4b13      	ldr	r3, [pc, #76]	@ (8001f3c <main+0x3b8>)
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	2b03      	cmp	r3, #3
 8001ef4:	d124      	bne.n	8001f40 <main+0x3bc>
					FillRect(53, 0, 20, 20, 0xFFFF);
 8001ef6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001efa:	9300      	str	r3, [sp, #0]
 8001efc:	2314      	movs	r3, #20
 8001efe:	2214      	movs	r2, #20
 8001f00:	2100      	movs	r1, #0
 8001f02:	2035      	movs	r0, #53	@ 0x35
 8001f04:	f7ff fae8 	bl	80014d8 <FillRect>
 8001f08:	e02a      	b.n	8001f60 <main+0x3dc>
 8001f0a:	bf00      	nop
 8001f0c:	200138f0 	.word	0x200138f0
 8001f10:	20000aa4 	.word	0x20000aa4
 8001f14:	20000004 	.word	0x20000004
 8001f18:	20001b84 	.word	0x20001b84
 8001f1c:	08007a94 	.word	0x08007a94
 8001f20:	08008214 	.word	0x08008214
 8001f24:	66666667 	.word	0x66666667
 8001f28:	20013900 	.word	0x20013900
 8001f2c:	200138f4 	.word	0x200138f4
 8001f30:	20013720 	.word	0x20013720
 8001f34:	20013724 	.word	0x20013724
 8001f38:	20013728 	.word	0x20013728
 8001f3c:	200138fc 	.word	0x200138fc
				}else if(colision == 4){
 8001f40:	4b29      	ldr	r3, [pc, #164]	@ (8001fe8 <main+0x464>)
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	2b04      	cmp	r3, #4
 8001f46:	d10b      	bne.n	8001f60 <main+0x3dc>
					FillRect(33, 0, 20, 20, 0xFFFF);
 8001f48:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001f4c:	9300      	str	r3, [sp, #0]
 8001f4e:	2314      	movs	r3, #20
 8001f50:	2214      	movs	r2, #20
 8001f52:	2100      	movs	r1, #0
 8001f54:	2021      	movs	r0, #33	@ 0x21
 8001f56:	f7ff fabf 	bl	80014d8 <FillRect>
					loser1 = 1;
 8001f5a:	4b24      	ldr	r3, [pc, #144]	@ (8001fec <main+0x468>)
 8001f5c:	2201      	movs	r2, #1
 8001f5e:	601a      	str	r2, [r3, #0]
				if(loser1 == 1){
 8001f60:	4b22      	ldr	r3, [pc, #136]	@ (8001fec <main+0x468>)
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	2b01      	cmp	r3, #1
 8001f66:	d10a      	bne.n	8001f7e <main+0x3fa>
					LCD_Print("Perdiste! JUG1 :(", 20, 100, 1, 0x001F, 0xCAB9);
 8001f68:	f64c 23b9 	movw	r3, #51897	@ 0xcab9
 8001f6c:	9301      	str	r3, [sp, #4]
 8001f6e:	231f      	movs	r3, #31
 8001f70:	9300      	str	r3, [sp, #0]
 8001f72:	2301      	movs	r3, #1
 8001f74:	2264      	movs	r2, #100	@ 0x64
 8001f76:	2114      	movs	r1, #20
 8001f78:	481d      	ldr	r0, [pc, #116]	@ (8001ff0 <main+0x46c>)
 8001f7a:	f7ff fb07 	bl	800158c <LCD_Print>
				if (received_char == 'g') {
 8001f7e:	4b1d      	ldr	r3, [pc, #116]	@ (8001ff4 <main+0x470>)
 8001f80:	781b      	ldrb	r3, [r3, #0]
 8001f82:	b2db      	uxtb	r3, r3
 8001f84:	2b67      	cmp	r3, #103	@ 0x67
 8001f86:	d107      	bne.n	8001f98 <main+0x414>
					move_sprite_up();
 8001f88:	f7ff fd5e 	bl	8001a48 <move_sprite_up>
					received_char = 0;  // Resetear el comando
 8001f8c:	4b19      	ldr	r3, [pc, #100]	@ (8001ff4 <main+0x470>)
 8001f8e:	2200      	movs	r2, #0
 8001f90:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8001f92:	4b19      	ldr	r3, [pc, #100]	@ (8001ff8 <main+0x474>)
 8001f94:	2200      	movs	r2, #0
 8001f96:	601a      	str	r2, [r3, #0]
				if (received_char == 'h') {
 8001f98:	4b16      	ldr	r3, [pc, #88]	@ (8001ff4 <main+0x470>)
 8001f9a:	781b      	ldrb	r3, [r3, #0]
 8001f9c:	b2db      	uxtb	r3, r3
 8001f9e:	2b68      	cmp	r3, #104	@ 0x68
 8001fa0:	d107      	bne.n	8001fb2 <main+0x42e>
					move_sprite_down();
 8001fa2:	f7ff fd9f 	bl	8001ae4 <move_sprite_down>
					received_char = 0;  // Resetear el comando
 8001fa6:	4b13      	ldr	r3, [pc, #76]	@ (8001ff4 <main+0x470>)
 8001fa8:	2200      	movs	r2, #0
 8001faa:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8001fac:	4b12      	ldr	r3, [pc, #72]	@ (8001ff8 <main+0x474>)
 8001fae:	2200      	movs	r2, #0
 8001fb0:	601a      	str	r2, [r3, #0]
				if (received_char == 'e') {
 8001fb2:	4b10      	ldr	r3, [pc, #64]	@ (8001ff4 <main+0x470>)
 8001fb4:	781b      	ldrb	r3, [r3, #0]
 8001fb6:	b2db      	uxtb	r3, r3
 8001fb8:	2b65      	cmp	r3, #101	@ 0x65
 8001fba:	d105      	bne.n	8001fc8 <main+0x444>
					received_char = 0;  // Resetear el comando
 8001fbc:	4b0d      	ldr	r3, [pc, #52]	@ (8001ff4 <main+0x470>)
 8001fbe:	2200      	movs	r2, #0
 8001fc0:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8001fc2:	4b0d      	ldr	r3, [pc, #52]	@ (8001ff8 <main+0x474>)
 8001fc4:	2200      	movs	r2, #0
 8001fc6:	601a      	str	r2, [r3, #0]
				if(received_char == 'f'){
 8001fc8:	4b0a      	ldr	r3, [pc, #40]	@ (8001ff4 <main+0x470>)
 8001fca:	781b      	ldrb	r3, [r3, #0]
 8001fcc:	b2db      	uxtb	r3, r3
 8001fce:	2b66      	cmp	r3, #102	@ 0x66
 8001fd0:	d108      	bne.n	8001fe4 <main+0x460>
					received_char = 0;
 8001fd2:	4b08      	ldr	r3, [pc, #32]	@ (8001ff4 <main+0x470>)
 8001fd4:	2200      	movs	r2, #0
 8001fd6:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8001fd8:	4b07      	ldr	r3, [pc, #28]	@ (8001ff8 <main+0x474>)
 8001fda:	2200      	movs	r2, #0
 8001fdc:	601a      	str	r2, [r3, #0]
				break;
 8001fde:	e001      	b.n	8001fe4 <main+0x460>
			case 2:
				break;
 8001fe0:	bf00      	nop
 8001fe2:	e61f      	b.n	8001c24 <main+0xa0>
				break;
 8001fe4:	bf00      	nop
		if(inicio == 3){
 8001fe6:	e61d      	b.n	8001c24 <main+0xa0>
 8001fe8:	200138fc 	.word	0x200138fc
 8001fec:	200138ec 	.word	0x200138ec
 8001ff0:	08006a2c 	.word	0x08006a2c
 8001ff4:	200138f8 	.word	0x200138f8
 8001ff8:	20013904 	.word	0x20013904

08001ffc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001ffc:	b580      	push	{r7, lr}
 8001ffe:	b094      	sub	sp, #80	@ 0x50
 8002000:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002002:	f107 031c 	add.w	r3, r7, #28
 8002006:	2234      	movs	r2, #52	@ 0x34
 8002008:	2100      	movs	r1, #0
 800200a:	4618      	mov	r0, r3
 800200c:	f003 fe31 	bl	8005c72 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002010:	f107 0308 	add.w	r3, r7, #8
 8002014:	2200      	movs	r2, #0
 8002016:	601a      	str	r2, [r3, #0]
 8002018:	605a      	str	r2, [r3, #4]
 800201a:	609a      	str	r2, [r3, #8]
 800201c:	60da      	str	r2, [r3, #12]
 800201e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002020:	2300      	movs	r3, #0
 8002022:	607b      	str	r3, [r7, #4]
 8002024:	4b29      	ldr	r3, [pc, #164]	@ (80020cc <SystemClock_Config+0xd0>)
 8002026:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002028:	4a28      	ldr	r2, [pc, #160]	@ (80020cc <SystemClock_Config+0xd0>)
 800202a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800202e:	6413      	str	r3, [r2, #64]	@ 0x40
 8002030:	4b26      	ldr	r3, [pc, #152]	@ (80020cc <SystemClock_Config+0xd0>)
 8002032:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002034:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002038:	607b      	str	r3, [r7, #4]
 800203a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800203c:	2300      	movs	r3, #0
 800203e:	603b      	str	r3, [r7, #0]
 8002040:	4b23      	ldr	r3, [pc, #140]	@ (80020d0 <SystemClock_Config+0xd4>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8002048:	4a21      	ldr	r2, [pc, #132]	@ (80020d0 <SystemClock_Config+0xd4>)
 800204a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800204e:	6013      	str	r3, [r2, #0]
 8002050:	4b1f      	ldr	r3, [pc, #124]	@ (80020d0 <SystemClock_Config+0xd4>)
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002058:	603b      	str	r3, [r7, #0]
 800205a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800205c:	2302      	movs	r3, #2
 800205e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002060:	2301      	movs	r3, #1
 8002062:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002064:	2310      	movs	r3, #16
 8002066:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002068:	2302      	movs	r3, #2
 800206a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800206c:	2300      	movs	r3, #0
 800206e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8002070:	2308      	movs	r3, #8
 8002072:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 8002074:	2350      	movs	r3, #80	@ 0x50
 8002076:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002078:	2302      	movs	r3, #2
 800207a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800207c:	2302      	movs	r3, #2
 800207e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8002080:	2302      	movs	r3, #2
 8002082:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002084:	f107 031c 	add.w	r3, r7, #28
 8002088:	4618      	mov	r0, r3
 800208a:	f001 fd59 	bl	8003b40 <HAL_RCC_OscConfig>
 800208e:	4603      	mov	r3, r0
 8002090:	2b00      	cmp	r3, #0
 8002092:	d001      	beq.n	8002098 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8002094:	f000 f95a 	bl	800234c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002098:	230f      	movs	r3, #15
 800209a:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800209c:	2302      	movs	r3, #2
 800209e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80020a0:	2300      	movs	r3, #0
 80020a2:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80020a4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80020a8:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80020aa:	2300      	movs	r3, #0
 80020ac:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80020ae:	f107 0308 	add.w	r3, r7, #8
 80020b2:	2102      	movs	r1, #2
 80020b4:	4618      	mov	r0, r3
 80020b6:	f001 fa7f 	bl	80035b8 <HAL_RCC_ClockConfig>
 80020ba:	4603      	mov	r3, r0
 80020bc:	2b00      	cmp	r3, #0
 80020be:	d001      	beq.n	80020c4 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 80020c0:	f000 f944 	bl	800234c <Error_Handler>
  }
}
 80020c4:	bf00      	nop
 80020c6:	3750      	adds	r7, #80	@ 0x50
 80020c8:	46bd      	mov	sp, r7
 80020ca:	bd80      	pop	{r7, pc}
 80020cc:	40023800 	.word	0x40023800
 80020d0:	40007000 	.word	0x40007000

080020d4 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80020d4:	b580      	push	{r7, lr}
 80020d6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80020d8:	4b17      	ldr	r3, [pc, #92]	@ (8002138 <MX_SPI1_Init+0x64>)
 80020da:	4a18      	ldr	r2, [pc, #96]	@ (800213c <MX_SPI1_Init+0x68>)
 80020dc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80020de:	4b16      	ldr	r3, [pc, #88]	@ (8002138 <MX_SPI1_Init+0x64>)
 80020e0:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80020e4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80020e6:	4b14      	ldr	r3, [pc, #80]	@ (8002138 <MX_SPI1_Init+0x64>)
 80020e8:	2200      	movs	r2, #0
 80020ea:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80020ec:	4b12      	ldr	r3, [pc, #72]	@ (8002138 <MX_SPI1_Init+0x64>)
 80020ee:	2200      	movs	r2, #0
 80020f0:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80020f2:	4b11      	ldr	r3, [pc, #68]	@ (8002138 <MX_SPI1_Init+0x64>)
 80020f4:	2200      	movs	r2, #0
 80020f6:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80020f8:	4b0f      	ldr	r3, [pc, #60]	@ (8002138 <MX_SPI1_Init+0x64>)
 80020fa:	2200      	movs	r2, #0
 80020fc:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80020fe:	4b0e      	ldr	r3, [pc, #56]	@ (8002138 <MX_SPI1_Init+0x64>)
 8002100:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002104:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002106:	4b0c      	ldr	r3, [pc, #48]	@ (8002138 <MX_SPI1_Init+0x64>)
 8002108:	2200      	movs	r2, #0
 800210a:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800210c:	4b0a      	ldr	r3, [pc, #40]	@ (8002138 <MX_SPI1_Init+0x64>)
 800210e:	2200      	movs	r2, #0
 8002110:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002112:	4b09      	ldr	r3, [pc, #36]	@ (8002138 <MX_SPI1_Init+0x64>)
 8002114:	2200      	movs	r2, #0
 8002116:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002118:	4b07      	ldr	r3, [pc, #28]	@ (8002138 <MX_SPI1_Init+0x64>)
 800211a:	2200      	movs	r2, #0
 800211c:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 800211e:	4b06      	ldr	r3, [pc, #24]	@ (8002138 <MX_SPI1_Init+0x64>)
 8002120:	220a      	movs	r2, #10
 8002122:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002124:	4804      	ldr	r0, [pc, #16]	@ (8002138 <MX_SPI1_Init+0x64>)
 8002126:	f001 ffa9 	bl	800407c <HAL_SPI_Init>
 800212a:	4603      	mov	r3, r0
 800212c:	2b00      	cmp	r3, #0
 800212e:	d001      	beq.n	8002134 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8002130:	f000 f90c 	bl	800234c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002134:	bf00      	nop
 8002136:	bd80      	pop	{r7, pc}
 8002138:	200137e8 	.word	0x200137e8
 800213c:	40013000 	.word	0x40013000

08002140 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8002140:	b580      	push	{r7, lr}
 8002142:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8002144:	4b11      	ldr	r3, [pc, #68]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 8002146:	4a12      	ldr	r2, [pc, #72]	@ (8002190 <MX_USART3_UART_Init+0x50>)
 8002148:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 800214a:	4b10      	ldr	r3, [pc, #64]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 800214c:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8002150:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8002152:	4b0e      	ldr	r3, [pc, #56]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 8002154:	2200      	movs	r2, #0
 8002156:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8002158:	4b0c      	ldr	r3, [pc, #48]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 800215a:	2200      	movs	r2, #0
 800215c:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800215e:	4b0b      	ldr	r3, [pc, #44]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 8002160:	2200      	movs	r2, #0
 8002162:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_RX;
 8002164:	4b09      	ldr	r3, [pc, #36]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 8002166:	2204      	movs	r2, #4
 8002168:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800216a:	4b08      	ldr	r3, [pc, #32]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 800216c:	2200      	movs	r2, #0
 800216e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8002170:	4b06      	ldr	r3, [pc, #24]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 8002172:	2200      	movs	r2, #0
 8002174:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8002176:	4805      	ldr	r0, [pc, #20]	@ (800218c <MX_USART3_UART_Init+0x4c>)
 8002178:	f002 fbd2 	bl	8004920 <HAL_UART_Init>
 800217c:	4603      	mov	r3, r0
 800217e:	2b00      	cmp	r3, #0
 8002180:	d001      	beq.n	8002186 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8002182:	f000 f8e3 	bl	800234c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8002186:	bf00      	nop
 8002188:	bd80      	pop	{r7, pc}
 800218a:	bf00      	nop
 800218c:	200138a0 	.word	0x200138a0
 8002190:	40004800 	.word	0x40004800

08002194 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002194:	b580      	push	{r7, lr}
 8002196:	b082      	sub	sp, #8
 8002198:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 800219a:	2300      	movs	r3, #0
 800219c:	607b      	str	r3, [r7, #4]
 800219e:	4b0c      	ldr	r3, [pc, #48]	@ (80021d0 <MX_DMA_Init+0x3c>)
 80021a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021a2:	4a0b      	ldr	r2, [pc, #44]	@ (80021d0 <MX_DMA_Init+0x3c>)
 80021a4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80021a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80021aa:	4b09      	ldr	r3, [pc, #36]	@ (80021d0 <MX_DMA_Init+0x3c>)
 80021ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021ae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80021b2:	607b      	str	r3, [r7, #4]
 80021b4:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80021b6:	2200      	movs	r2, #0
 80021b8:	2100      	movs	r1, #0
 80021ba:	2038      	movs	r0, #56	@ 0x38
 80021bc:	f000 fc8f 	bl	8002ade <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80021c0:	2038      	movs	r0, #56	@ 0x38
 80021c2:	f000 fca8 	bl	8002b16 <HAL_NVIC_EnableIRQ>

}
 80021c6:	bf00      	nop
 80021c8:	3708      	adds	r7, #8
 80021ca:	46bd      	mov	sp, r7
 80021cc:	bd80      	pop	{r7, pc}
 80021ce:	bf00      	nop
 80021d0:	40023800 	.word	0x40023800

080021d4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80021d4:	b580      	push	{r7, lr}
 80021d6:	b08a      	sub	sp, #40	@ 0x28
 80021d8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021da:	f107 0314 	add.w	r3, r7, #20
 80021de:	2200      	movs	r2, #0
 80021e0:	601a      	str	r2, [r3, #0]
 80021e2:	605a      	str	r2, [r3, #4]
 80021e4:	609a      	str	r2, [r3, #8]
 80021e6:	60da      	str	r2, [r3, #12]
 80021e8:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80021ea:	2300      	movs	r3, #0
 80021ec:	613b      	str	r3, [r7, #16]
 80021ee:	4b45      	ldr	r3, [pc, #276]	@ (8002304 <MX_GPIO_Init+0x130>)
 80021f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021f2:	4a44      	ldr	r2, [pc, #272]	@ (8002304 <MX_GPIO_Init+0x130>)
 80021f4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80021f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80021fa:	4b42      	ldr	r3, [pc, #264]	@ (8002304 <MX_GPIO_Init+0x130>)
 80021fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021fe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002202:	613b      	str	r3, [r7, #16]
 8002204:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002206:	2300      	movs	r3, #0
 8002208:	60fb      	str	r3, [r7, #12]
 800220a:	4b3e      	ldr	r3, [pc, #248]	@ (8002304 <MX_GPIO_Init+0x130>)
 800220c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800220e:	4a3d      	ldr	r2, [pc, #244]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002210:	f043 0304 	orr.w	r3, r3, #4
 8002214:	6313      	str	r3, [r2, #48]	@ 0x30
 8002216:	4b3b      	ldr	r3, [pc, #236]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002218:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800221a:	f003 0304 	and.w	r3, r3, #4
 800221e:	60fb      	str	r3, [r7, #12]
 8002220:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002222:	2300      	movs	r3, #0
 8002224:	60bb      	str	r3, [r7, #8]
 8002226:	4b37      	ldr	r3, [pc, #220]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002228:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800222a:	4a36      	ldr	r2, [pc, #216]	@ (8002304 <MX_GPIO_Init+0x130>)
 800222c:	f043 0301 	orr.w	r3, r3, #1
 8002230:	6313      	str	r3, [r2, #48]	@ 0x30
 8002232:	4b34      	ldr	r3, [pc, #208]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002234:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002236:	f003 0301 	and.w	r3, r3, #1
 800223a:	60bb      	str	r3, [r7, #8]
 800223c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800223e:	2300      	movs	r3, #0
 8002240:	607b      	str	r3, [r7, #4]
 8002242:	4b30      	ldr	r3, [pc, #192]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002244:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002246:	4a2f      	ldr	r2, [pc, #188]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002248:	f043 0302 	orr.w	r3, r3, #2
 800224c:	6313      	str	r3, [r2, #48]	@ 0x30
 800224e:	4b2d      	ldr	r3, [pc, #180]	@ (8002304 <MX_GPIO_Init+0x130>)
 8002250:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002252:	f003 0302 	and.w	r3, r3, #2
 8002256:	607b      	str	r3, [r7, #4]
 8002258:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin|LCD_D1_Pin, GPIO_PIN_RESET);
 800225a:	2200      	movs	r2, #0
 800225c:	2182      	movs	r1, #130	@ 0x82
 800225e:	482a      	ldr	r0, [pc, #168]	@ (8002308 <MX_GPIO_Init+0x134>)
 8002260:	f001 f990 	bl	8003584 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8002264:	2200      	movs	r2, #0
 8002266:	f240 7113 	movw	r1, #1811	@ 0x713
 800226a:	4828      	ldr	r0, [pc, #160]	@ (800230c <MX_GPIO_Init+0x138>)
 800226c:	f001 f98a 	bl	8003584 <HAL_GPIO_WritePin>
                          |LCD_D0_Pin|LCD_D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 8002270:	2200      	movs	r2, #0
 8002272:	f240 4139 	movw	r1, #1081	@ 0x439
 8002276:	4826      	ldr	r0, [pc, #152]	@ (8002310 <MX_GPIO_Init+0x13c>)
 8002278:	f001 f984 	bl	8003584 <HAL_GPIO_WritePin>
                          |LCD_D4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SD_SS_GPIO_Port, SD_SS_Pin, GPIO_PIN_SET);
 800227c:	2201      	movs	r2, #1
 800227e:	2140      	movs	r1, #64	@ 0x40
 8002280:	4823      	ldr	r0, [pc, #140]	@ (8002310 <MX_GPIO_Init+0x13c>)
 8002282:	f001 f97f 	bl	8003584 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_RST_Pin LCD_D1_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin|LCD_D1_Pin;
 8002286:	2382      	movs	r3, #130	@ 0x82
 8002288:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800228a:	2301      	movs	r3, #1
 800228c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800228e:	2300      	movs	r3, #0
 8002290:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002292:	2302      	movs	r3, #2
 8002294:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002296:	f107 0314 	add.w	r3, r7, #20
 800229a:	4619      	mov	r1, r3
 800229c:	481a      	ldr	r0, [pc, #104]	@ (8002308 <MX_GPIO_Init+0x134>)
 800229e:	f000 ffdd 	bl	800325c <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_RD_Pin LCD_WR_Pin LCD_RS_Pin LCD_D7_Pin
                           LCD_D0_Pin LCD_D2_Pin */
  GPIO_InitStruct.Pin = LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 80022a2:	f240 7313 	movw	r3, #1811	@ 0x713
 80022a6:	617b      	str	r3, [r7, #20]
                          |LCD_D0_Pin|LCD_D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80022a8:	2301      	movs	r3, #1
 80022aa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ac:	2300      	movs	r3, #0
 80022ae:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022b0:	2302      	movs	r3, #2
 80022b2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b4:	f107 0314 	add.w	r3, r7, #20
 80022b8:	4619      	mov	r1, r3
 80022ba:	4814      	ldr	r0, [pc, #80]	@ (800230c <MX_GPIO_Init+0x138>)
 80022bc:	f000 ffce 	bl	800325c <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_CS_Pin LCD_D6_Pin LCD_D3_Pin LCD_D5_Pin
                           LCD_D4_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 80022c0:	f240 4339 	movw	r3, #1081	@ 0x439
 80022c4:	617b      	str	r3, [r7, #20]
                          |LCD_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80022c6:	2301      	movs	r3, #1
 80022c8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ca:	2300      	movs	r3, #0
 80022cc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022ce:	2302      	movs	r3, #2
 80022d0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022d2:	f107 0314 	add.w	r3, r7, #20
 80022d6:	4619      	mov	r1, r3
 80022d8:	480d      	ldr	r0, [pc, #52]	@ (8002310 <MX_GPIO_Init+0x13c>)
 80022da:	f000 ffbf 	bl	800325c <HAL_GPIO_Init>

  /*Configure GPIO pin : SD_SS_Pin */
  GPIO_InitStruct.Pin = SD_SS_Pin;
 80022de:	2340      	movs	r3, #64	@ 0x40
 80022e0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80022e2:	2301      	movs	r3, #1
 80022e4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022e6:	2300      	movs	r3, #0
 80022e8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80022ea:	2301      	movs	r3, #1
 80022ec:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SD_SS_GPIO_Port, &GPIO_InitStruct);
 80022ee:	f107 0314 	add.w	r3, r7, #20
 80022f2:	4619      	mov	r1, r3
 80022f4:	4806      	ldr	r0, [pc, #24]	@ (8002310 <MX_GPIO_Init+0x13c>)
 80022f6:	f000 ffb1 	bl	800325c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80022fa:	bf00      	nop
 80022fc:	3728      	adds	r7, #40	@ 0x28
 80022fe:	46bd      	mov	sp, r7
 8002300:	bd80      	pop	{r7, pc}
 8002302:	bf00      	nop
 8002304:	40023800 	.word	0x40023800
 8002308:	40020800 	.word	0x40020800
 800230c:	40020000 	.word	0x40020000
 8002310:	40020400 	.word	0x40020400

08002314 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002314:	b580      	push	{r7, lr}
 8002316:	b082      	sub	sp, #8
 8002318:	af00      	add	r7, sp, #0
 800231a:	6078      	str	r0, [r7, #4]
	received_char = data[0];
 800231c:	4b07      	ldr	r3, [pc, #28]	@ (800233c <HAL_UART_RxCpltCallback+0x28>)
 800231e:	781a      	ldrb	r2, [r3, #0]
 8002320:	4b07      	ldr	r3, [pc, #28]	@ (8002340 <HAL_UART_RxCpltCallback+0x2c>)
 8002322:	701a      	strb	r2, [r3, #0]
	move1 = 1;
 8002324:	4b07      	ldr	r3, [pc, #28]	@ (8002344 <HAL_UART_RxCpltCallback+0x30>)
 8002326:	2201      	movs	r2, #1
 8002328:	601a      	str	r2, [r3, #0]
	HAL_UART_Receive_IT(&huart3, data, 1);
 800232a:	2201      	movs	r2, #1
 800232c:	4903      	ldr	r1, [pc, #12]	@ (800233c <HAL_UART_RxCpltCallback+0x28>)
 800232e:	4806      	ldr	r0, [pc, #24]	@ (8002348 <HAL_UART_RxCpltCallback+0x34>)
 8002330:	f002 fb46 	bl	80049c0 <HAL_UART_Receive_IT>

}
 8002334:	bf00      	nop
 8002336:	3708      	adds	r7, #8
 8002338:	46bd      	mov	sp, r7
 800233a:	bd80      	pop	{r7, pc}
 800233c:	200138e8 	.word	0x200138e8
 8002340:	200138f8 	.word	0x200138f8
 8002344:	20013904 	.word	0x20013904
 8002348:	200138a0 	.word	0x200138a0

0800234c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800234c:	b480      	push	{r7}
 800234e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002350:	b672      	cpsid	i
}
 8002352:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002354:	bf00      	nop
 8002356:	e7fd      	b.n	8002354 <Error_Handler+0x8>

08002358 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002358:	b480      	push	{r7}
 800235a:	b083      	sub	sp, #12
 800235c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800235e:	2300      	movs	r3, #0
 8002360:	607b      	str	r3, [r7, #4]
 8002362:	4b10      	ldr	r3, [pc, #64]	@ (80023a4 <HAL_MspInit+0x4c>)
 8002364:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002366:	4a0f      	ldr	r2, [pc, #60]	@ (80023a4 <HAL_MspInit+0x4c>)
 8002368:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800236c:	6453      	str	r3, [r2, #68]	@ 0x44
 800236e:	4b0d      	ldr	r3, [pc, #52]	@ (80023a4 <HAL_MspInit+0x4c>)
 8002370:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002372:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002376:	607b      	str	r3, [r7, #4]
 8002378:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800237a:	2300      	movs	r3, #0
 800237c:	603b      	str	r3, [r7, #0]
 800237e:	4b09      	ldr	r3, [pc, #36]	@ (80023a4 <HAL_MspInit+0x4c>)
 8002380:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002382:	4a08      	ldr	r2, [pc, #32]	@ (80023a4 <HAL_MspInit+0x4c>)
 8002384:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002388:	6413      	str	r3, [r2, #64]	@ 0x40
 800238a:	4b06      	ldr	r3, [pc, #24]	@ (80023a4 <HAL_MspInit+0x4c>)
 800238c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800238e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002392:	603b      	str	r3, [r7, #0]
 8002394:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002396:	bf00      	nop
 8002398:	370c      	adds	r7, #12
 800239a:	46bd      	mov	sp, r7
 800239c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a0:	4770      	bx	lr
 80023a2:	bf00      	nop
 80023a4:	40023800 	.word	0x40023800

080023a8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80023a8:	b580      	push	{r7, lr}
 80023aa:	b08a      	sub	sp, #40	@ 0x28
 80023ac:	af00      	add	r7, sp, #0
 80023ae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023b0:	f107 0314 	add.w	r3, r7, #20
 80023b4:	2200      	movs	r2, #0
 80023b6:	601a      	str	r2, [r3, #0]
 80023b8:	605a      	str	r2, [r3, #4]
 80023ba:	609a      	str	r2, [r3, #8]
 80023bc:	60da      	str	r2, [r3, #12]
 80023be:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4a30      	ldr	r2, [pc, #192]	@ (8002488 <HAL_SPI_MspInit+0xe0>)
 80023c6:	4293      	cmp	r3, r2
 80023c8:	d15a      	bne.n	8002480 <HAL_SPI_MspInit+0xd8>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80023ca:	2300      	movs	r3, #0
 80023cc:	613b      	str	r3, [r7, #16]
 80023ce:	4b2f      	ldr	r3, [pc, #188]	@ (800248c <HAL_SPI_MspInit+0xe4>)
 80023d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023d2:	4a2e      	ldr	r2, [pc, #184]	@ (800248c <HAL_SPI_MspInit+0xe4>)
 80023d4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80023d8:	6453      	str	r3, [r2, #68]	@ 0x44
 80023da:	4b2c      	ldr	r3, [pc, #176]	@ (800248c <HAL_SPI_MspInit+0xe4>)
 80023dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023de:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80023e2:	613b      	str	r3, [r7, #16]
 80023e4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023e6:	2300      	movs	r3, #0
 80023e8:	60fb      	str	r3, [r7, #12]
 80023ea:	4b28      	ldr	r3, [pc, #160]	@ (800248c <HAL_SPI_MspInit+0xe4>)
 80023ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023ee:	4a27      	ldr	r2, [pc, #156]	@ (800248c <HAL_SPI_MspInit+0xe4>)
 80023f0:	f043 0301 	orr.w	r3, r3, #1
 80023f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80023f6:	4b25      	ldr	r3, [pc, #148]	@ (800248c <HAL_SPI_MspInit+0xe4>)
 80023f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023fa:	f003 0301 	and.w	r3, r3, #1
 80023fe:	60fb      	str	r3, [r7, #12]
 8002400:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8002402:	23e0      	movs	r3, #224	@ 0xe0
 8002404:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002406:	2302      	movs	r3, #2
 8002408:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800240a:	2300      	movs	r3, #0
 800240c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800240e:	2303      	movs	r3, #3
 8002410:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8002412:	2305      	movs	r3, #5
 8002414:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002416:	f107 0314 	add.w	r3, r7, #20
 800241a:	4619      	mov	r1, r3
 800241c:	481c      	ldr	r0, [pc, #112]	@ (8002490 <HAL_SPI_MspInit+0xe8>)
 800241e:	f000 ff1d 	bl	800325c <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_RX Init */
    hdma_spi1_rx.Instance = DMA2_Stream0;
 8002422:	4b1c      	ldr	r3, [pc, #112]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002424:	4a1c      	ldr	r2, [pc, #112]	@ (8002498 <HAL_SPI_MspInit+0xf0>)
 8002426:	601a      	str	r2, [r3, #0]
    hdma_spi1_rx.Init.Channel = DMA_CHANNEL_3;
 8002428:	4b1a      	ldr	r3, [pc, #104]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 800242a:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 800242e:	605a      	str	r2, [r3, #4]
    hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002430:	4b18      	ldr	r3, [pc, #96]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002432:	2200      	movs	r2, #0
 8002434:	609a      	str	r2, [r3, #8]
    hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002436:	4b17      	ldr	r3, [pc, #92]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002438:	2200      	movs	r2, #0
 800243a:	60da      	str	r2, [r3, #12]
    hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800243c:	4b15      	ldr	r3, [pc, #84]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 800243e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002442:	611a      	str	r2, [r3, #16]
    hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002444:	4b13      	ldr	r3, [pc, #76]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002446:	2200      	movs	r2, #0
 8002448:	615a      	str	r2, [r3, #20]
    hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800244a:	4b12      	ldr	r3, [pc, #72]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 800244c:	2200      	movs	r2, #0
 800244e:	619a      	str	r2, [r3, #24]
    hdma_spi1_rx.Init.Mode = DMA_NORMAL;
 8002450:	4b10      	ldr	r3, [pc, #64]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002452:	2200      	movs	r2, #0
 8002454:	61da      	str	r2, [r3, #28]
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_MEDIUM;
 8002456:	4b0f      	ldr	r3, [pc, #60]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002458:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800245c:	621a      	str	r2, [r3, #32]
    hdma_spi1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800245e:	4b0d      	ldr	r3, [pc, #52]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002460:	2200      	movs	r2, #0
 8002462:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 8002464:	480b      	ldr	r0, [pc, #44]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002466:	f000 fb7d 	bl	8002b64 <HAL_DMA_Init>
 800246a:	4603      	mov	r3, r0
 800246c:	2b00      	cmp	r3, #0
 800246e:	d001      	beq.n	8002474 <HAL_SPI_MspInit+0xcc>
    {
      Error_Handler();
 8002470:	f7ff ff6c 	bl	800234c <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmarx,hdma_spi1_rx);
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	4a07      	ldr	r2, [pc, #28]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 8002478:	64da      	str	r2, [r3, #76]	@ 0x4c
 800247a:	4a06      	ldr	r2, [pc, #24]	@ (8002494 <HAL_SPI_MspInit+0xec>)
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END SPI1_MspInit 1 */

  }

}
 8002480:	bf00      	nop
 8002482:	3728      	adds	r7, #40	@ 0x28
 8002484:	46bd      	mov	sp, r7
 8002486:	bd80      	pop	{r7, pc}
 8002488:	40013000 	.word	0x40013000
 800248c:	40023800 	.word	0x40023800
 8002490:	40020000 	.word	0x40020000
 8002494:	20013840 	.word	0x20013840
 8002498:	40026410 	.word	0x40026410

0800249c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800249c:	b580      	push	{r7, lr}
 800249e:	b08a      	sub	sp, #40	@ 0x28
 80024a0:	af00      	add	r7, sp, #0
 80024a2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024a4:	f107 0314 	add.w	r3, r7, #20
 80024a8:	2200      	movs	r2, #0
 80024aa:	601a      	str	r2, [r3, #0]
 80024ac:	605a      	str	r2, [r3, #4]
 80024ae:	609a      	str	r2, [r3, #8]
 80024b0:	60da      	str	r2, [r3, #12]
 80024b2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART3)
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	4a1d      	ldr	r2, [pc, #116]	@ (8002530 <HAL_UART_MspInit+0x94>)
 80024ba:	4293      	cmp	r3, r2
 80024bc:	d134      	bne.n	8002528 <HAL_UART_MspInit+0x8c>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 80024be:	2300      	movs	r3, #0
 80024c0:	613b      	str	r3, [r7, #16]
 80024c2:	4b1c      	ldr	r3, [pc, #112]	@ (8002534 <HAL_UART_MspInit+0x98>)
 80024c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024c6:	4a1b      	ldr	r2, [pc, #108]	@ (8002534 <HAL_UART_MspInit+0x98>)
 80024c8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80024cc:	6413      	str	r3, [r2, #64]	@ 0x40
 80024ce:	4b19      	ldr	r3, [pc, #100]	@ (8002534 <HAL_UART_MspInit+0x98>)
 80024d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024d2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80024d6:	613b      	str	r3, [r7, #16]
 80024d8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80024da:	2300      	movs	r3, #0
 80024dc:	60fb      	str	r3, [r7, #12]
 80024de:	4b15      	ldr	r3, [pc, #84]	@ (8002534 <HAL_UART_MspInit+0x98>)
 80024e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024e2:	4a14      	ldr	r2, [pc, #80]	@ (8002534 <HAL_UART_MspInit+0x98>)
 80024e4:	f043 0304 	orr.w	r3, r3, #4
 80024e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80024ea:	4b12      	ldr	r3, [pc, #72]	@ (8002534 <HAL_UART_MspInit+0x98>)
 80024ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024ee:	f003 0304 	and.w	r3, r3, #4
 80024f2:	60fb      	str	r3, [r7, #12]
 80024f4:	68fb      	ldr	r3, [r7, #12]
    /**USART3 GPIO Configuration
    PC5     ------> USART3_RX
    PC10     ------> USART3_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_10;
 80024f6:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 80024fa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fc:	2302      	movs	r3, #2
 80024fe:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002500:	2300      	movs	r3, #0
 8002502:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002504:	2303      	movs	r3, #3
 8002506:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8002508:	2307      	movs	r3, #7
 800250a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800250c:	f107 0314 	add.w	r3, r7, #20
 8002510:	4619      	mov	r1, r3
 8002512:	4809      	ldr	r0, [pc, #36]	@ (8002538 <HAL_UART_MspInit+0x9c>)
 8002514:	f000 fea2 	bl	800325c <HAL_GPIO_Init>

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8002518:	2200      	movs	r2, #0
 800251a:	2100      	movs	r1, #0
 800251c:	2027      	movs	r0, #39	@ 0x27
 800251e:	f000 fade 	bl	8002ade <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8002522:	2027      	movs	r0, #39	@ 0x27
 8002524:	f000 faf7 	bl	8002b16 <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART3_MspInit 1 */

  }

}
 8002528:	bf00      	nop
 800252a:	3728      	adds	r7, #40	@ 0x28
 800252c:	46bd      	mov	sp, r7
 800252e:	bd80      	pop	{r7, pc}
 8002530:	40004800 	.word	0x40004800
 8002534:	40023800 	.word	0x40023800
 8002538:	40020800 	.word	0x40020800

0800253c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800253c:	b480      	push	{r7}
 800253e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002540:	bf00      	nop
 8002542:	e7fd      	b.n	8002540 <NMI_Handler+0x4>

08002544 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002544:	b480      	push	{r7}
 8002546:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002548:	bf00      	nop
 800254a:	e7fd      	b.n	8002548 <HardFault_Handler+0x4>

0800254c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800254c:	b480      	push	{r7}
 800254e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002550:	bf00      	nop
 8002552:	e7fd      	b.n	8002550 <MemManage_Handler+0x4>

08002554 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002554:	b480      	push	{r7}
 8002556:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002558:	bf00      	nop
 800255a:	e7fd      	b.n	8002558 <BusFault_Handler+0x4>

0800255c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800255c:	b480      	push	{r7}
 800255e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002560:	bf00      	nop
 8002562:	e7fd      	b.n	8002560 <UsageFault_Handler+0x4>

08002564 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002564:	b480      	push	{r7}
 8002566:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002568:	bf00      	nop
 800256a:	46bd      	mov	sp, r7
 800256c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002570:	4770      	bx	lr

08002572 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002572:	b480      	push	{r7}
 8002574:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002576:	bf00      	nop
 8002578:	46bd      	mov	sp, r7
 800257a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800257e:	4770      	bx	lr

08002580 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002580:	b480      	push	{r7}
 8002582:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002584:	bf00      	nop
 8002586:	46bd      	mov	sp, r7
 8002588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800258c:	4770      	bx	lr
	...

08002590 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002590:	b580      	push	{r7, lr}
 8002592:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */
	if(Timer1 > 0){
 8002594:	4b0c      	ldr	r3, [pc, #48]	@ (80025c8 <SysTick_Handler+0x38>)
 8002596:	881b      	ldrh	r3, [r3, #0]
 8002598:	2b00      	cmp	r3, #0
 800259a:	d005      	beq.n	80025a8 <SysTick_Handler+0x18>
		Timer1--;
 800259c:	4b0a      	ldr	r3, [pc, #40]	@ (80025c8 <SysTick_Handler+0x38>)
 800259e:	881b      	ldrh	r3, [r3, #0]
 80025a0:	3b01      	subs	r3, #1
 80025a2:	b29a      	uxth	r2, r3
 80025a4:	4b08      	ldr	r3, [pc, #32]	@ (80025c8 <SysTick_Handler+0x38>)
 80025a6:	801a      	strh	r2, [r3, #0]
	}
	if(Timer2 > 0){
 80025a8:	4b08      	ldr	r3, [pc, #32]	@ (80025cc <SysTick_Handler+0x3c>)
 80025aa:	881b      	ldrh	r3, [r3, #0]
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	d005      	beq.n	80025bc <SysTick_Handler+0x2c>
		Timer2--;
 80025b0:	4b06      	ldr	r3, [pc, #24]	@ (80025cc <SysTick_Handler+0x3c>)
 80025b2:	881b      	ldrh	r3, [r3, #0]
 80025b4:	3b01      	subs	r3, #1
 80025b6:	b29a      	uxth	r2, r3
 80025b8:	4b04      	ldr	r3, [pc, #16]	@ (80025cc <SysTick_Handler+0x3c>)
 80025ba:	801a      	strh	r2, [r3, #0]
	}
  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80025bc:	f000 f970 	bl	80028a0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  HAL_SYSTICK_IRQHandler();
 80025c0:	f000 fac3 	bl	8002b4a <HAL_SYSTICK_IRQHandler>
  /* USER CODE END SysTick_IRQn 1 */
}
 80025c4:	bf00      	nop
 80025c6:	bd80      	pop	{r7, pc}
 80025c8:	200137e0 	.word	0x200137e0
 80025cc:	200137e2 	.word	0x200137e2

080025d0 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 80025d0:	b580      	push	{r7, lr}
 80025d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 80025d4:	4802      	ldr	r0, [pc, #8]	@ (80025e0 <USART3_IRQHandler+0x10>)
 80025d6:	f002 fa19 	bl	8004a0c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 80025da:	bf00      	nop
 80025dc:	bd80      	pop	{r7, pc}
 80025de:	bf00      	nop
 80025e0:	200138a0 	.word	0x200138a0

080025e4 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 80025e4:	b580      	push	{r7, lr}
 80025e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_rx);
 80025e8:	4802      	ldr	r0, [pc, #8]	@ (80025f4 <DMA2_Stream0_IRQHandler+0x10>)
 80025ea:	f000 fbfb 	bl	8002de4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 80025ee:	bf00      	nop
 80025f0:	bd80      	pop	{r7, pc}
 80025f2:	bf00      	nop
 80025f4:	20013840 	.word	0x20013840

080025f8 <_getpid>:
 80025f8:	b480      	push	{r7}
 80025fa:	af00      	add	r7, sp, #0
 80025fc:	2301      	movs	r3, #1
 80025fe:	4618      	mov	r0, r3
 8002600:	46bd      	mov	sp, r7
 8002602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002606:	4770      	bx	lr

08002608 <_kill>:
 8002608:	b580      	push	{r7, lr}
 800260a:	b082      	sub	sp, #8
 800260c:	af00      	add	r7, sp, #0
 800260e:	6078      	str	r0, [r7, #4]
 8002610:	6039      	str	r1, [r7, #0]
 8002612:	f003 fbab 	bl	8005d6c <__errno>
 8002616:	4603      	mov	r3, r0
 8002618:	2216      	movs	r2, #22
 800261a:	601a      	str	r2, [r3, #0]
 800261c:	f04f 33ff 	mov.w	r3, #4294967295
 8002620:	4618      	mov	r0, r3
 8002622:	3708      	adds	r7, #8
 8002624:	46bd      	mov	sp, r7
 8002626:	bd80      	pop	{r7, pc}

08002628 <_exit>:
 8002628:	b580      	push	{r7, lr}
 800262a:	b082      	sub	sp, #8
 800262c:	af00      	add	r7, sp, #0
 800262e:	6078      	str	r0, [r7, #4]
 8002630:	f04f 31ff 	mov.w	r1, #4294967295
 8002634:	6878      	ldr	r0, [r7, #4]
 8002636:	f7ff ffe7 	bl	8002608 <_kill>
 800263a:	bf00      	nop
 800263c:	e7fd      	b.n	800263a <_exit+0x12>

0800263e <_read>:
 800263e:	b580      	push	{r7, lr}
 8002640:	b086      	sub	sp, #24
 8002642:	af00      	add	r7, sp, #0
 8002644:	60f8      	str	r0, [r7, #12]
 8002646:	60b9      	str	r1, [r7, #8]
 8002648:	607a      	str	r2, [r7, #4]
 800264a:	2300      	movs	r3, #0
 800264c:	617b      	str	r3, [r7, #20]
 800264e:	e00a      	b.n	8002666 <_read+0x28>
 8002650:	f3af 8000 	nop.w
 8002654:	4601      	mov	r1, r0
 8002656:	68bb      	ldr	r3, [r7, #8]
 8002658:	1c5a      	adds	r2, r3, #1
 800265a:	60ba      	str	r2, [r7, #8]
 800265c:	b2ca      	uxtb	r2, r1
 800265e:	701a      	strb	r2, [r3, #0]
 8002660:	697b      	ldr	r3, [r7, #20]
 8002662:	3301      	adds	r3, #1
 8002664:	617b      	str	r3, [r7, #20]
 8002666:	697a      	ldr	r2, [r7, #20]
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	429a      	cmp	r2, r3
 800266c:	dbf0      	blt.n	8002650 <_read+0x12>
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	4618      	mov	r0, r3
 8002672:	3718      	adds	r7, #24
 8002674:	46bd      	mov	sp, r7
 8002676:	bd80      	pop	{r7, pc}

08002678 <_write>:
 8002678:	b580      	push	{r7, lr}
 800267a:	b086      	sub	sp, #24
 800267c:	af00      	add	r7, sp, #0
 800267e:	60f8      	str	r0, [r7, #12]
 8002680:	60b9      	str	r1, [r7, #8]
 8002682:	607a      	str	r2, [r7, #4]
 8002684:	2300      	movs	r3, #0
 8002686:	617b      	str	r3, [r7, #20]
 8002688:	e009      	b.n	800269e <_write+0x26>
 800268a:	68bb      	ldr	r3, [r7, #8]
 800268c:	1c5a      	adds	r2, r3, #1
 800268e:	60ba      	str	r2, [r7, #8]
 8002690:	781b      	ldrb	r3, [r3, #0]
 8002692:	4618      	mov	r0, r3
 8002694:	f3af 8000 	nop.w
 8002698:	697b      	ldr	r3, [r7, #20]
 800269a:	3301      	adds	r3, #1
 800269c:	617b      	str	r3, [r7, #20]
 800269e:	697a      	ldr	r2, [r7, #20]
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	429a      	cmp	r2, r3
 80026a4:	dbf1      	blt.n	800268a <_write+0x12>
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	4618      	mov	r0, r3
 80026aa:	3718      	adds	r7, #24
 80026ac:	46bd      	mov	sp, r7
 80026ae:	bd80      	pop	{r7, pc}

080026b0 <_close>:
 80026b0:	b480      	push	{r7}
 80026b2:	b083      	sub	sp, #12
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	6078      	str	r0, [r7, #4]
 80026b8:	f04f 33ff 	mov.w	r3, #4294967295
 80026bc:	4618      	mov	r0, r3
 80026be:	370c      	adds	r7, #12
 80026c0:	46bd      	mov	sp, r7
 80026c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c6:	4770      	bx	lr

080026c8 <_fstat>:
 80026c8:	b480      	push	{r7}
 80026ca:	b083      	sub	sp, #12
 80026cc:	af00      	add	r7, sp, #0
 80026ce:	6078      	str	r0, [r7, #4]
 80026d0:	6039      	str	r1, [r7, #0]
 80026d2:	683b      	ldr	r3, [r7, #0]
 80026d4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80026d8:	605a      	str	r2, [r3, #4]
 80026da:	2300      	movs	r3, #0
 80026dc:	4618      	mov	r0, r3
 80026de:	370c      	adds	r7, #12
 80026e0:	46bd      	mov	sp, r7
 80026e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026e6:	4770      	bx	lr

080026e8 <_isatty>:
 80026e8:	b480      	push	{r7}
 80026ea:	b083      	sub	sp, #12
 80026ec:	af00      	add	r7, sp, #0
 80026ee:	6078      	str	r0, [r7, #4]
 80026f0:	2301      	movs	r3, #1
 80026f2:	4618      	mov	r0, r3
 80026f4:	370c      	adds	r7, #12
 80026f6:	46bd      	mov	sp, r7
 80026f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026fc:	4770      	bx	lr

080026fe <_lseek>:
 80026fe:	b480      	push	{r7}
 8002700:	b085      	sub	sp, #20
 8002702:	af00      	add	r7, sp, #0
 8002704:	60f8      	str	r0, [r7, #12]
 8002706:	60b9      	str	r1, [r7, #8]
 8002708:	607a      	str	r2, [r7, #4]
 800270a:	2300      	movs	r3, #0
 800270c:	4618      	mov	r0, r3
 800270e:	3714      	adds	r7, #20
 8002710:	46bd      	mov	sp, r7
 8002712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002716:	4770      	bx	lr

08002718 <_sbrk>:
 8002718:	b580      	push	{r7, lr}
 800271a:	b086      	sub	sp, #24
 800271c:	af00      	add	r7, sp, #0
 800271e:	6078      	str	r0, [r7, #4]
 8002720:	4a14      	ldr	r2, [pc, #80]	@ (8002774 <_sbrk+0x5c>)
 8002722:	4b15      	ldr	r3, [pc, #84]	@ (8002778 <_sbrk+0x60>)
 8002724:	1ad3      	subs	r3, r2, r3
 8002726:	617b      	str	r3, [r7, #20]
 8002728:	697b      	ldr	r3, [r7, #20]
 800272a:	613b      	str	r3, [r7, #16]
 800272c:	4b13      	ldr	r3, [pc, #76]	@ (800277c <_sbrk+0x64>)
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	2b00      	cmp	r3, #0
 8002732:	d102      	bne.n	800273a <_sbrk+0x22>
 8002734:	4b11      	ldr	r3, [pc, #68]	@ (800277c <_sbrk+0x64>)
 8002736:	4a12      	ldr	r2, [pc, #72]	@ (8002780 <_sbrk+0x68>)
 8002738:	601a      	str	r2, [r3, #0]
 800273a:	4b10      	ldr	r3, [pc, #64]	@ (800277c <_sbrk+0x64>)
 800273c:	681a      	ldr	r2, [r3, #0]
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	4413      	add	r3, r2
 8002742:	693a      	ldr	r2, [r7, #16]
 8002744:	429a      	cmp	r2, r3
 8002746:	d207      	bcs.n	8002758 <_sbrk+0x40>
 8002748:	f003 fb10 	bl	8005d6c <__errno>
 800274c:	4603      	mov	r3, r0
 800274e:	220c      	movs	r2, #12
 8002750:	601a      	str	r2, [r3, #0]
 8002752:	f04f 33ff 	mov.w	r3, #4294967295
 8002756:	e009      	b.n	800276c <_sbrk+0x54>
 8002758:	4b08      	ldr	r3, [pc, #32]	@ (800277c <_sbrk+0x64>)
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	60fb      	str	r3, [r7, #12]
 800275e:	4b07      	ldr	r3, [pc, #28]	@ (800277c <_sbrk+0x64>)
 8002760:	681a      	ldr	r2, [r3, #0]
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	4413      	add	r3, r2
 8002766:	4a05      	ldr	r2, [pc, #20]	@ (800277c <_sbrk+0x64>)
 8002768:	6013      	str	r3, [r2, #0]
 800276a:	68fb      	ldr	r3, [r7, #12]
 800276c:	4618      	mov	r0, r3
 800276e:	3718      	adds	r7, #24
 8002770:	46bd      	mov	sp, r7
 8002772:	bd80      	pop	{r7, pc}
 8002774:	20020000 	.word	0x20020000
 8002778:	00000400 	.word	0x00000400
 800277c:	20013908 	.word	0x20013908
 8002780:	20013a70 	.word	0x20013a70

08002784 <SystemInit>:
 8002784:	b480      	push	{r7}
 8002786:	af00      	add	r7, sp, #0
 8002788:	4b06      	ldr	r3, [pc, #24]	@ (80027a4 <SystemInit+0x20>)
 800278a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800278e:	4a05      	ldr	r2, [pc, #20]	@ (80027a4 <SystemInit+0x20>)
 8002790:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002794:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002798:	bf00      	nop
 800279a:	46bd      	mov	sp, r7
 800279c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a0:	4770      	bx	lr
 80027a2:	bf00      	nop
 80027a4:	e000ed00 	.word	0xe000ed00

080027a8 <Reset_Handler>:
 80027a8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80027e0 <LoopFillZerobss+0xe>
 80027ac:	f7ff ffea 	bl	8002784 <SystemInit>
 80027b0:	480c      	ldr	r0, [pc, #48]	@ (80027e4 <LoopFillZerobss+0x12>)
 80027b2:	490d      	ldr	r1, [pc, #52]	@ (80027e8 <LoopFillZerobss+0x16>)
 80027b4:	4a0d      	ldr	r2, [pc, #52]	@ (80027ec <LoopFillZerobss+0x1a>)
 80027b6:	2300      	movs	r3, #0
 80027b8:	e002      	b.n	80027c0 <LoopCopyDataInit>

080027ba <CopyDataInit>:
 80027ba:	58d4      	ldr	r4, [r2, r3]
 80027bc:	50c4      	str	r4, [r0, r3]
 80027be:	3304      	adds	r3, #4

080027c0 <LoopCopyDataInit>:
 80027c0:	18c4      	adds	r4, r0, r3
 80027c2:	428c      	cmp	r4, r1
 80027c4:	d3f9      	bcc.n	80027ba <CopyDataInit>
 80027c6:	4a0a      	ldr	r2, [pc, #40]	@ (80027f0 <LoopFillZerobss+0x1e>)
 80027c8:	4c0a      	ldr	r4, [pc, #40]	@ (80027f4 <LoopFillZerobss+0x22>)
 80027ca:	2300      	movs	r3, #0
 80027cc:	e001      	b.n	80027d2 <LoopFillZerobss>

080027ce <FillZerobss>:
 80027ce:	6013      	str	r3, [r2, #0]
 80027d0:	3204      	adds	r2, #4

080027d2 <LoopFillZerobss>:
 80027d2:	42a2      	cmp	r2, r4
 80027d4:	d3fb      	bcc.n	80027ce <FillZerobss>
 80027d6:	f003 facf 	bl	8005d78 <__libc_init_array>
 80027da:	f7ff f9d3 	bl	8001b84 <main>
 80027de:	4770      	bx	lr
 80027e0:	20020000 	.word	0x20020000
 80027e4:	20000000 	.word	0x20000000
 80027e8:	200137c4 	.word	0x200137c4
 80027ec:	08008aa4 	.word	0x08008aa4
 80027f0:	200137c4 	.word	0x200137c4
 80027f4:	20013a70 	.word	0x20013a70

080027f8 <ADC_IRQHandler>:
 80027f8:	e7fe      	b.n	80027f8 <ADC_IRQHandler>
	...

080027fc <HAL_Init>:
 80027fc:	b580      	push	{r7, lr}
 80027fe:	af00      	add	r7, sp, #0
 8002800:	4b0e      	ldr	r3, [pc, #56]	@ (800283c <HAL_Init+0x40>)
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	4a0d      	ldr	r2, [pc, #52]	@ (800283c <HAL_Init+0x40>)
 8002806:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800280a:	6013      	str	r3, [r2, #0]
 800280c:	4b0b      	ldr	r3, [pc, #44]	@ (800283c <HAL_Init+0x40>)
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	4a0a      	ldr	r2, [pc, #40]	@ (800283c <HAL_Init+0x40>)
 8002812:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002816:	6013      	str	r3, [r2, #0]
 8002818:	4b08      	ldr	r3, [pc, #32]	@ (800283c <HAL_Init+0x40>)
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	4a07      	ldr	r2, [pc, #28]	@ (800283c <HAL_Init+0x40>)
 800281e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002822:	6013      	str	r3, [r2, #0]
 8002824:	2003      	movs	r0, #3
 8002826:	f000 f94f 	bl	8002ac8 <HAL_NVIC_SetPriorityGrouping>
 800282a:	200f      	movs	r0, #15
 800282c:	f000 f808 	bl	8002840 <HAL_InitTick>
 8002830:	f7ff fd92 	bl	8002358 <HAL_MspInit>
 8002834:	2300      	movs	r3, #0
 8002836:	4618      	mov	r0, r3
 8002838:	bd80      	pop	{r7, pc}
 800283a:	bf00      	nop
 800283c:	40023c00 	.word	0x40023c00

08002840 <HAL_InitTick>:
 8002840:	b580      	push	{r7, lr}
 8002842:	b082      	sub	sp, #8
 8002844:	af00      	add	r7, sp, #0
 8002846:	6078      	str	r0, [r7, #4]
 8002848:	4b12      	ldr	r3, [pc, #72]	@ (8002894 <HAL_InitTick+0x54>)
 800284a:	681a      	ldr	r2, [r3, #0]
 800284c:	4b12      	ldr	r3, [pc, #72]	@ (8002898 <HAL_InitTick+0x58>)
 800284e:	781b      	ldrb	r3, [r3, #0]
 8002850:	4619      	mov	r1, r3
 8002852:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002856:	fbb3 f3f1 	udiv	r3, r3, r1
 800285a:	fbb2 f3f3 	udiv	r3, r2, r3
 800285e:	4618      	mov	r0, r3
 8002860:	f000 f967 	bl	8002b32 <HAL_SYSTICK_Config>
 8002864:	4603      	mov	r3, r0
 8002866:	2b00      	cmp	r3, #0
 8002868:	d001      	beq.n	800286e <HAL_InitTick+0x2e>
 800286a:	2301      	movs	r3, #1
 800286c:	e00e      	b.n	800288c <HAL_InitTick+0x4c>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	2b0f      	cmp	r3, #15
 8002872:	d80a      	bhi.n	800288a <HAL_InitTick+0x4a>
 8002874:	2200      	movs	r2, #0
 8002876:	6879      	ldr	r1, [r7, #4]
 8002878:	f04f 30ff 	mov.w	r0, #4294967295
 800287c:	f000 f92f 	bl	8002ade <HAL_NVIC_SetPriority>
 8002880:	4a06      	ldr	r2, [pc, #24]	@ (800289c <HAL_InitTick+0x5c>)
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	6013      	str	r3, [r2, #0]
 8002886:	2300      	movs	r3, #0
 8002888:	e000      	b.n	800288c <HAL_InitTick+0x4c>
 800288a:	2301      	movs	r3, #1
 800288c:	4618      	mov	r0, r3
 800288e:	3708      	adds	r7, #8
 8002890:	46bd      	mov	sp, r7
 8002892:	bd80      	pop	{r7, pc}
 8002894:	20013748 	.word	0x20013748
 8002898:	20013750 	.word	0x20013750
 800289c:	2001374c 	.word	0x2001374c

080028a0 <HAL_IncTick>:
 80028a0:	b480      	push	{r7}
 80028a2:	af00      	add	r7, sp, #0
 80028a4:	4b06      	ldr	r3, [pc, #24]	@ (80028c0 <HAL_IncTick+0x20>)
 80028a6:	781b      	ldrb	r3, [r3, #0]
 80028a8:	461a      	mov	r2, r3
 80028aa:	4b06      	ldr	r3, [pc, #24]	@ (80028c4 <HAL_IncTick+0x24>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4413      	add	r3, r2
 80028b0:	4a04      	ldr	r2, [pc, #16]	@ (80028c4 <HAL_IncTick+0x24>)
 80028b2:	6013      	str	r3, [r2, #0]
 80028b4:	bf00      	nop
 80028b6:	46bd      	mov	sp, r7
 80028b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028bc:	4770      	bx	lr
 80028be:	bf00      	nop
 80028c0:	20013750 	.word	0x20013750
 80028c4:	2001390c 	.word	0x2001390c

080028c8 <HAL_GetTick>:
 80028c8:	b480      	push	{r7}
 80028ca:	af00      	add	r7, sp, #0
 80028cc:	4b03      	ldr	r3, [pc, #12]	@ (80028dc <HAL_GetTick+0x14>)
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	4618      	mov	r0, r3
 80028d2:	46bd      	mov	sp, r7
 80028d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d8:	4770      	bx	lr
 80028da:	bf00      	nop
 80028dc:	2001390c 	.word	0x2001390c

080028e0 <HAL_Delay>:
 80028e0:	b580      	push	{r7, lr}
 80028e2:	b084      	sub	sp, #16
 80028e4:	af00      	add	r7, sp, #0
 80028e6:	6078      	str	r0, [r7, #4]
 80028e8:	f7ff ffee 	bl	80028c8 <HAL_GetTick>
 80028ec:	60b8      	str	r0, [r7, #8]
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	60fb      	str	r3, [r7, #12]
 80028f2:	68fb      	ldr	r3, [r7, #12]
 80028f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80028f8:	d005      	beq.n	8002906 <HAL_Delay+0x26>
 80028fa:	4b0a      	ldr	r3, [pc, #40]	@ (8002924 <HAL_Delay+0x44>)
 80028fc:	781b      	ldrb	r3, [r3, #0]
 80028fe:	461a      	mov	r2, r3
 8002900:	68fb      	ldr	r3, [r7, #12]
 8002902:	4413      	add	r3, r2
 8002904:	60fb      	str	r3, [r7, #12]
 8002906:	bf00      	nop
 8002908:	f7ff ffde 	bl	80028c8 <HAL_GetTick>
 800290c:	4602      	mov	r2, r0
 800290e:	68bb      	ldr	r3, [r7, #8]
 8002910:	1ad3      	subs	r3, r2, r3
 8002912:	68fa      	ldr	r2, [r7, #12]
 8002914:	429a      	cmp	r2, r3
 8002916:	d8f7      	bhi.n	8002908 <HAL_Delay+0x28>
 8002918:	bf00      	nop
 800291a:	bf00      	nop
 800291c:	3710      	adds	r7, #16
 800291e:	46bd      	mov	sp, r7
 8002920:	bd80      	pop	{r7, pc}
 8002922:	bf00      	nop
 8002924:	20013750 	.word	0x20013750

08002928 <__NVIC_SetPriorityGrouping>:
 8002928:	b480      	push	{r7}
 800292a:	b085      	sub	sp, #20
 800292c:	af00      	add	r7, sp, #0
 800292e:	6078      	str	r0, [r7, #4]
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	f003 0307 	and.w	r3, r3, #7
 8002936:	60fb      	str	r3, [r7, #12]
 8002938:	4b0c      	ldr	r3, [pc, #48]	@ (800296c <__NVIC_SetPriorityGrouping+0x44>)
 800293a:	68db      	ldr	r3, [r3, #12]
 800293c:	60bb      	str	r3, [r7, #8]
 800293e:	68ba      	ldr	r2, [r7, #8]
 8002940:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002944:	4013      	ands	r3, r2
 8002946:	60bb      	str	r3, [r7, #8]
 8002948:	68fb      	ldr	r3, [r7, #12]
 800294a:	021a      	lsls	r2, r3, #8
 800294c:	68bb      	ldr	r3, [r7, #8]
 800294e:	4313      	orrs	r3, r2
 8002950:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002954:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002958:	60bb      	str	r3, [r7, #8]
 800295a:	4a04      	ldr	r2, [pc, #16]	@ (800296c <__NVIC_SetPriorityGrouping+0x44>)
 800295c:	68bb      	ldr	r3, [r7, #8]
 800295e:	60d3      	str	r3, [r2, #12]
 8002960:	bf00      	nop
 8002962:	3714      	adds	r7, #20
 8002964:	46bd      	mov	sp, r7
 8002966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800296a:	4770      	bx	lr
 800296c:	e000ed00 	.word	0xe000ed00

08002970 <__NVIC_GetPriorityGrouping>:
 8002970:	b480      	push	{r7}
 8002972:	af00      	add	r7, sp, #0
 8002974:	4b04      	ldr	r3, [pc, #16]	@ (8002988 <__NVIC_GetPriorityGrouping+0x18>)
 8002976:	68db      	ldr	r3, [r3, #12]
 8002978:	0a1b      	lsrs	r3, r3, #8
 800297a:	f003 0307 	and.w	r3, r3, #7
 800297e:	4618      	mov	r0, r3
 8002980:	46bd      	mov	sp, r7
 8002982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002986:	4770      	bx	lr
 8002988:	e000ed00 	.word	0xe000ed00

0800298c <__NVIC_EnableIRQ>:
 800298c:	b480      	push	{r7}
 800298e:	b083      	sub	sp, #12
 8002990:	af00      	add	r7, sp, #0
 8002992:	4603      	mov	r3, r0
 8002994:	71fb      	strb	r3, [r7, #7]
 8002996:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800299a:	2b00      	cmp	r3, #0
 800299c:	db0b      	blt.n	80029b6 <__NVIC_EnableIRQ+0x2a>
 800299e:	79fb      	ldrb	r3, [r7, #7]
 80029a0:	f003 021f 	and.w	r2, r3, #31
 80029a4:	4907      	ldr	r1, [pc, #28]	@ (80029c4 <__NVIC_EnableIRQ+0x38>)
 80029a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029aa:	095b      	lsrs	r3, r3, #5
 80029ac:	2001      	movs	r0, #1
 80029ae:	fa00 f202 	lsl.w	r2, r0, r2
 80029b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80029b6:	bf00      	nop
 80029b8:	370c      	adds	r7, #12
 80029ba:	46bd      	mov	sp, r7
 80029bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029c0:	4770      	bx	lr
 80029c2:	bf00      	nop
 80029c4:	e000e100 	.word	0xe000e100

080029c8 <__NVIC_SetPriority>:
 80029c8:	b480      	push	{r7}
 80029ca:	b083      	sub	sp, #12
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	4603      	mov	r3, r0
 80029d0:	6039      	str	r1, [r7, #0]
 80029d2:	71fb      	strb	r3, [r7, #7]
 80029d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029d8:	2b00      	cmp	r3, #0
 80029da:	db0a      	blt.n	80029f2 <__NVIC_SetPriority+0x2a>
 80029dc:	683b      	ldr	r3, [r7, #0]
 80029de:	b2da      	uxtb	r2, r3
 80029e0:	490c      	ldr	r1, [pc, #48]	@ (8002a14 <__NVIC_SetPriority+0x4c>)
 80029e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029e6:	0112      	lsls	r2, r2, #4
 80029e8:	b2d2      	uxtb	r2, r2
 80029ea:	440b      	add	r3, r1
 80029ec:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80029f0:	e00a      	b.n	8002a08 <__NVIC_SetPriority+0x40>
 80029f2:	683b      	ldr	r3, [r7, #0]
 80029f4:	b2da      	uxtb	r2, r3
 80029f6:	4908      	ldr	r1, [pc, #32]	@ (8002a18 <__NVIC_SetPriority+0x50>)
 80029f8:	79fb      	ldrb	r3, [r7, #7]
 80029fa:	f003 030f 	and.w	r3, r3, #15
 80029fe:	3b04      	subs	r3, #4
 8002a00:	0112      	lsls	r2, r2, #4
 8002a02:	b2d2      	uxtb	r2, r2
 8002a04:	440b      	add	r3, r1
 8002a06:	761a      	strb	r2, [r3, #24]
 8002a08:	bf00      	nop
 8002a0a:	370c      	adds	r7, #12
 8002a0c:	46bd      	mov	sp, r7
 8002a0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a12:	4770      	bx	lr
 8002a14:	e000e100 	.word	0xe000e100
 8002a18:	e000ed00 	.word	0xe000ed00

08002a1c <NVIC_EncodePriority>:
 8002a1c:	b480      	push	{r7}
 8002a1e:	b089      	sub	sp, #36	@ 0x24
 8002a20:	af00      	add	r7, sp, #0
 8002a22:	60f8      	str	r0, [r7, #12]
 8002a24:	60b9      	str	r1, [r7, #8]
 8002a26:	607a      	str	r2, [r7, #4]
 8002a28:	68fb      	ldr	r3, [r7, #12]
 8002a2a:	f003 0307 	and.w	r3, r3, #7
 8002a2e:	61fb      	str	r3, [r7, #28]
 8002a30:	69fb      	ldr	r3, [r7, #28]
 8002a32:	f1c3 0307 	rsb	r3, r3, #7
 8002a36:	2b04      	cmp	r3, #4
 8002a38:	bf28      	it	cs
 8002a3a:	2304      	movcs	r3, #4
 8002a3c:	61bb      	str	r3, [r7, #24]
 8002a3e:	69fb      	ldr	r3, [r7, #28]
 8002a40:	3304      	adds	r3, #4
 8002a42:	2b06      	cmp	r3, #6
 8002a44:	d902      	bls.n	8002a4c <NVIC_EncodePriority+0x30>
 8002a46:	69fb      	ldr	r3, [r7, #28]
 8002a48:	3b03      	subs	r3, #3
 8002a4a:	e000      	b.n	8002a4e <NVIC_EncodePriority+0x32>
 8002a4c:	2300      	movs	r3, #0
 8002a4e:	617b      	str	r3, [r7, #20]
 8002a50:	f04f 32ff 	mov.w	r2, #4294967295
 8002a54:	69bb      	ldr	r3, [r7, #24]
 8002a56:	fa02 f303 	lsl.w	r3, r2, r3
 8002a5a:	43da      	mvns	r2, r3
 8002a5c:	68bb      	ldr	r3, [r7, #8]
 8002a5e:	401a      	ands	r2, r3
 8002a60:	697b      	ldr	r3, [r7, #20]
 8002a62:	409a      	lsls	r2, r3
 8002a64:	f04f 31ff 	mov.w	r1, #4294967295
 8002a68:	697b      	ldr	r3, [r7, #20]
 8002a6a:	fa01 f303 	lsl.w	r3, r1, r3
 8002a6e:	43d9      	mvns	r1, r3
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	400b      	ands	r3, r1
 8002a74:	4313      	orrs	r3, r2
 8002a76:	4618      	mov	r0, r3
 8002a78:	3724      	adds	r7, #36	@ 0x24
 8002a7a:	46bd      	mov	sp, r7
 8002a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a80:	4770      	bx	lr
	...

08002a84 <SysTick_Config>:
 8002a84:	b580      	push	{r7, lr}
 8002a86:	b082      	sub	sp, #8
 8002a88:	af00      	add	r7, sp, #0
 8002a8a:	6078      	str	r0, [r7, #4]
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	3b01      	subs	r3, #1
 8002a90:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002a94:	d301      	bcc.n	8002a9a <SysTick_Config+0x16>
 8002a96:	2301      	movs	r3, #1
 8002a98:	e00f      	b.n	8002aba <SysTick_Config+0x36>
 8002a9a:	4a0a      	ldr	r2, [pc, #40]	@ (8002ac4 <SysTick_Config+0x40>)
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	3b01      	subs	r3, #1
 8002aa0:	6053      	str	r3, [r2, #4]
 8002aa2:	210f      	movs	r1, #15
 8002aa4:	f04f 30ff 	mov.w	r0, #4294967295
 8002aa8:	f7ff ff8e 	bl	80029c8 <__NVIC_SetPriority>
 8002aac:	4b05      	ldr	r3, [pc, #20]	@ (8002ac4 <SysTick_Config+0x40>)
 8002aae:	2200      	movs	r2, #0
 8002ab0:	609a      	str	r2, [r3, #8]
 8002ab2:	4b04      	ldr	r3, [pc, #16]	@ (8002ac4 <SysTick_Config+0x40>)
 8002ab4:	2207      	movs	r2, #7
 8002ab6:	601a      	str	r2, [r3, #0]
 8002ab8:	2300      	movs	r3, #0
 8002aba:	4618      	mov	r0, r3
 8002abc:	3708      	adds	r7, #8
 8002abe:	46bd      	mov	sp, r7
 8002ac0:	bd80      	pop	{r7, pc}
 8002ac2:	bf00      	nop
 8002ac4:	e000e010 	.word	0xe000e010

08002ac8 <HAL_NVIC_SetPriorityGrouping>:
 8002ac8:	b580      	push	{r7, lr}
 8002aca:	b082      	sub	sp, #8
 8002acc:	af00      	add	r7, sp, #0
 8002ace:	6078      	str	r0, [r7, #4]
 8002ad0:	6878      	ldr	r0, [r7, #4]
 8002ad2:	f7ff ff29 	bl	8002928 <__NVIC_SetPriorityGrouping>
 8002ad6:	bf00      	nop
 8002ad8:	3708      	adds	r7, #8
 8002ada:	46bd      	mov	sp, r7
 8002adc:	bd80      	pop	{r7, pc}

08002ade <HAL_NVIC_SetPriority>:
 8002ade:	b580      	push	{r7, lr}
 8002ae0:	b086      	sub	sp, #24
 8002ae2:	af00      	add	r7, sp, #0
 8002ae4:	4603      	mov	r3, r0
 8002ae6:	60b9      	str	r1, [r7, #8]
 8002ae8:	607a      	str	r2, [r7, #4]
 8002aea:	73fb      	strb	r3, [r7, #15]
 8002aec:	2300      	movs	r3, #0
 8002aee:	617b      	str	r3, [r7, #20]
 8002af0:	f7ff ff3e 	bl	8002970 <__NVIC_GetPriorityGrouping>
 8002af4:	6178      	str	r0, [r7, #20]
 8002af6:	687a      	ldr	r2, [r7, #4]
 8002af8:	68b9      	ldr	r1, [r7, #8]
 8002afa:	6978      	ldr	r0, [r7, #20]
 8002afc:	f7ff ff8e 	bl	8002a1c <NVIC_EncodePriority>
 8002b00:	4602      	mov	r2, r0
 8002b02:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002b06:	4611      	mov	r1, r2
 8002b08:	4618      	mov	r0, r3
 8002b0a:	f7ff ff5d 	bl	80029c8 <__NVIC_SetPriority>
 8002b0e:	bf00      	nop
 8002b10:	3718      	adds	r7, #24
 8002b12:	46bd      	mov	sp, r7
 8002b14:	bd80      	pop	{r7, pc}

08002b16 <HAL_NVIC_EnableIRQ>:
 8002b16:	b580      	push	{r7, lr}
 8002b18:	b082      	sub	sp, #8
 8002b1a:	af00      	add	r7, sp, #0
 8002b1c:	4603      	mov	r3, r0
 8002b1e:	71fb      	strb	r3, [r7, #7]
 8002b20:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b24:	4618      	mov	r0, r3
 8002b26:	f7ff ff31 	bl	800298c <__NVIC_EnableIRQ>
 8002b2a:	bf00      	nop
 8002b2c:	3708      	adds	r7, #8
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	bd80      	pop	{r7, pc}

08002b32 <HAL_SYSTICK_Config>:
 8002b32:	b580      	push	{r7, lr}
 8002b34:	b082      	sub	sp, #8
 8002b36:	af00      	add	r7, sp, #0
 8002b38:	6078      	str	r0, [r7, #4]
 8002b3a:	6878      	ldr	r0, [r7, #4]
 8002b3c:	f7ff ffa2 	bl	8002a84 <SysTick_Config>
 8002b40:	4603      	mov	r3, r0
 8002b42:	4618      	mov	r0, r3
 8002b44:	3708      	adds	r7, #8
 8002b46:	46bd      	mov	sp, r7
 8002b48:	bd80      	pop	{r7, pc}

08002b4a <HAL_SYSTICK_IRQHandler>:
 8002b4a:	b580      	push	{r7, lr}
 8002b4c:	af00      	add	r7, sp, #0
 8002b4e:	f000 f802 	bl	8002b56 <HAL_SYSTICK_Callback>
 8002b52:	bf00      	nop
 8002b54:	bd80      	pop	{r7, pc}

08002b56 <HAL_SYSTICK_Callback>:
 8002b56:	b480      	push	{r7}
 8002b58:	af00      	add	r7, sp, #0
 8002b5a:	bf00      	nop
 8002b5c:	46bd      	mov	sp, r7
 8002b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b62:	4770      	bx	lr

08002b64 <HAL_DMA_Init>:
 8002b64:	b580      	push	{r7, lr}
 8002b66:	b086      	sub	sp, #24
 8002b68:	af00      	add	r7, sp, #0
 8002b6a:	6078      	str	r0, [r7, #4]
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	617b      	str	r3, [r7, #20]
 8002b70:	f7ff feaa 	bl	80028c8 <HAL_GetTick>
 8002b74:	6138      	str	r0, [r7, #16]
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d101      	bne.n	8002b80 <HAL_DMA_Init+0x1c>
 8002b7c:	2301      	movs	r3, #1
 8002b7e:	e099      	b.n	8002cb4 <HAL_DMA_Init+0x150>
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	2202      	movs	r2, #2
 8002b84:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	2200      	movs	r2, #0
 8002b8c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	681a      	ldr	r2, [r3, #0]
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	f022 0201 	bic.w	r2, r2, #1
 8002b9e:	601a      	str	r2, [r3, #0]
 8002ba0:	e00f      	b.n	8002bc2 <HAL_DMA_Init+0x5e>
 8002ba2:	f7ff fe91 	bl	80028c8 <HAL_GetTick>
 8002ba6:	4602      	mov	r2, r0
 8002ba8:	693b      	ldr	r3, [r7, #16]
 8002baa:	1ad3      	subs	r3, r2, r3
 8002bac:	2b05      	cmp	r3, #5
 8002bae:	d908      	bls.n	8002bc2 <HAL_DMA_Init+0x5e>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	2220      	movs	r2, #32
 8002bb4:	655a      	str	r2, [r3, #84]	@ 0x54
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	2203      	movs	r2, #3
 8002bba:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002bbe:	2303      	movs	r3, #3
 8002bc0:	e078      	b.n	8002cb4 <HAL_DMA_Init+0x150>
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	f003 0301 	and.w	r3, r3, #1
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d1e8      	bne.n	8002ba2 <HAL_DMA_Init+0x3e>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	617b      	str	r3, [r7, #20]
 8002bd8:	697a      	ldr	r2, [r7, #20]
 8002bda:	4b38      	ldr	r3, [pc, #224]	@ (8002cbc <HAL_DMA_Init+0x158>)
 8002bdc:	4013      	ands	r3, r2
 8002bde:	617b      	str	r3, [r7, #20]
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	685a      	ldr	r2, [r3, #4]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	689b      	ldr	r3, [r3, #8]
 8002be8:	431a      	orrs	r2, r3
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	68db      	ldr	r3, [r3, #12]
 8002bee:	431a      	orrs	r2, r3
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	691b      	ldr	r3, [r3, #16]
 8002bf4:	431a      	orrs	r2, r3
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	695b      	ldr	r3, [r3, #20]
 8002bfa:	431a      	orrs	r2, r3
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	699b      	ldr	r3, [r3, #24]
 8002c00:	431a      	orrs	r2, r3
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	69db      	ldr	r3, [r3, #28]
 8002c06:	431a      	orrs	r2, r3
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	6a1b      	ldr	r3, [r3, #32]
 8002c0c:	4313      	orrs	r3, r2
 8002c0e:	697a      	ldr	r2, [r7, #20]
 8002c10:	4313      	orrs	r3, r2
 8002c12:	617b      	str	r3, [r7, #20]
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c18:	2b04      	cmp	r3, #4
 8002c1a:	d107      	bne.n	8002c2c <HAL_DMA_Init+0xc8>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c24:	4313      	orrs	r3, r2
 8002c26:	697a      	ldr	r2, [r7, #20]
 8002c28:	4313      	orrs	r3, r2
 8002c2a:	617b      	str	r3, [r7, #20]
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	697a      	ldr	r2, [r7, #20]
 8002c32:	601a      	str	r2, [r3, #0]
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	695b      	ldr	r3, [r3, #20]
 8002c3a:	617b      	str	r3, [r7, #20]
 8002c3c:	697b      	ldr	r3, [r7, #20]
 8002c3e:	f023 0307 	bic.w	r3, r3, #7
 8002c42:	617b      	str	r3, [r7, #20]
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c48:	697a      	ldr	r2, [r7, #20]
 8002c4a:	4313      	orrs	r3, r2
 8002c4c:	617b      	str	r3, [r7, #20]
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c52:	2b04      	cmp	r3, #4
 8002c54:	d117      	bne.n	8002c86 <HAL_DMA_Init+0x122>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c5a:	697a      	ldr	r2, [r7, #20]
 8002c5c:	4313      	orrs	r3, r2
 8002c5e:	617b      	str	r3, [r7, #20]
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d00e      	beq.n	8002c86 <HAL_DMA_Init+0x122>
 8002c68:	6878      	ldr	r0, [r7, #4]
 8002c6a:	f000 fa7b 	bl	8003164 <DMA_CheckFifoParam>
 8002c6e:	4603      	mov	r3, r0
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	d008      	beq.n	8002c86 <HAL_DMA_Init+0x122>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	2240      	movs	r2, #64	@ 0x40
 8002c78:	655a      	str	r2, [r3, #84]	@ 0x54
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	2201      	movs	r2, #1
 8002c7e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002c82:	2301      	movs	r3, #1
 8002c84:	e016      	b.n	8002cb4 <HAL_DMA_Init+0x150>
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	697a      	ldr	r2, [r7, #20]
 8002c8c:	615a      	str	r2, [r3, #20]
 8002c8e:	6878      	ldr	r0, [r7, #4]
 8002c90:	f000 fa32 	bl	80030f8 <DMA_CalcBaseAndBitshift>
 8002c94:	4603      	mov	r3, r0
 8002c96:	60fb      	str	r3, [r7, #12]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c9c:	223f      	movs	r2, #63	@ 0x3f
 8002c9e:	409a      	lsls	r2, r3
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	609a      	str	r2, [r3, #8]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	2200      	movs	r2, #0
 8002ca8:	655a      	str	r2, [r3, #84]	@ 0x54
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	2201      	movs	r2, #1
 8002cae:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	4618      	mov	r0, r3
 8002cb6:	3718      	adds	r7, #24
 8002cb8:	46bd      	mov	sp, r7
 8002cba:	bd80      	pop	{r7, pc}
 8002cbc:	f010803f 	.word	0xf010803f

08002cc0 <HAL_DMA_Abort>:
 8002cc0:	b580      	push	{r7, lr}
 8002cc2:	b084      	sub	sp, #16
 8002cc4:	af00      	add	r7, sp, #0
 8002cc6:	6078      	str	r0, [r7, #4]
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002ccc:	60fb      	str	r3, [r7, #12]
 8002cce:	f7ff fdfb 	bl	80028c8 <HAL_GetTick>
 8002cd2:	60b8      	str	r0, [r7, #8]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002cda:	b2db      	uxtb	r3, r3
 8002cdc:	2b02      	cmp	r3, #2
 8002cde:	d008      	beq.n	8002cf2 <HAL_DMA_Abort+0x32>
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	2280      	movs	r2, #128	@ 0x80
 8002ce4:	655a      	str	r2, [r3, #84]	@ 0x54
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	2200      	movs	r2, #0
 8002cea:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002cee:	2301      	movs	r3, #1
 8002cf0:	e052      	b.n	8002d98 <HAL_DMA_Abort+0xd8>
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	681a      	ldr	r2, [r3, #0]
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	f022 0216 	bic.w	r2, r2, #22
 8002d00:	601a      	str	r2, [r3, #0]
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	695a      	ldr	r2, [r3, #20]
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002d10:	615a      	str	r2, [r3, #20]
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d103      	bne.n	8002d22 <HAL_DMA_Abort+0x62>
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d007      	beq.n	8002d32 <HAL_DMA_Abort+0x72>
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	681a      	ldr	r2, [r3, #0]
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	f022 0208 	bic.w	r2, r2, #8
 8002d30:	601a      	str	r2, [r3, #0]
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	681a      	ldr	r2, [r3, #0]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	f022 0201 	bic.w	r2, r2, #1
 8002d40:	601a      	str	r2, [r3, #0]
 8002d42:	e013      	b.n	8002d6c <HAL_DMA_Abort+0xac>
 8002d44:	f7ff fdc0 	bl	80028c8 <HAL_GetTick>
 8002d48:	4602      	mov	r2, r0
 8002d4a:	68bb      	ldr	r3, [r7, #8]
 8002d4c:	1ad3      	subs	r3, r2, r3
 8002d4e:	2b05      	cmp	r3, #5
 8002d50:	d90c      	bls.n	8002d6c <HAL_DMA_Abort+0xac>
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	2220      	movs	r2, #32
 8002d56:	655a      	str	r2, [r3, #84]	@ 0x54
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	2203      	movs	r2, #3
 8002d5c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	2200      	movs	r2, #0
 8002d64:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002d68:	2303      	movs	r3, #3
 8002d6a:	e015      	b.n	8002d98 <HAL_DMA_Abort+0xd8>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	f003 0301 	and.w	r3, r3, #1
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d1e4      	bne.n	8002d44 <HAL_DMA_Abort+0x84>
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d7e:	223f      	movs	r2, #63	@ 0x3f
 8002d80:	409a      	lsls	r2, r3
 8002d82:	68fb      	ldr	r3, [r7, #12]
 8002d84:	609a      	str	r2, [r3, #8]
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	2201      	movs	r2, #1
 8002d8a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	2200      	movs	r2, #0
 8002d92:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002d96:	2300      	movs	r3, #0
 8002d98:	4618      	mov	r0, r3
 8002d9a:	3710      	adds	r7, #16
 8002d9c:	46bd      	mov	sp, r7
 8002d9e:	bd80      	pop	{r7, pc}

08002da0 <HAL_DMA_Abort_IT>:
 8002da0:	b480      	push	{r7}
 8002da2:	b083      	sub	sp, #12
 8002da4:	af00      	add	r7, sp, #0
 8002da6:	6078      	str	r0, [r7, #4]
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002dae:	b2db      	uxtb	r3, r3
 8002db0:	2b02      	cmp	r3, #2
 8002db2:	d004      	beq.n	8002dbe <HAL_DMA_Abort_IT+0x1e>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	2280      	movs	r2, #128	@ 0x80
 8002db8:	655a      	str	r2, [r3, #84]	@ 0x54
 8002dba:	2301      	movs	r3, #1
 8002dbc:	e00c      	b.n	8002dd8 <HAL_DMA_Abort_IT+0x38>
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	2205      	movs	r2, #5
 8002dc2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	681a      	ldr	r2, [r3, #0]
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	f022 0201 	bic.w	r2, r2, #1
 8002dd4:	601a      	str	r2, [r3, #0]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	4618      	mov	r0, r3
 8002dda:	370c      	adds	r7, #12
 8002ddc:	46bd      	mov	sp, r7
 8002dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002de2:	4770      	bx	lr

08002de4 <HAL_DMA_IRQHandler>:
 8002de4:	b580      	push	{r7, lr}
 8002de6:	b086      	sub	sp, #24
 8002de8:	af00      	add	r7, sp, #0
 8002dea:	6078      	str	r0, [r7, #4]
 8002dec:	2300      	movs	r3, #0
 8002dee:	60bb      	str	r3, [r7, #8]
 8002df0:	4b8e      	ldr	r3, [pc, #568]	@ (800302c <HAL_DMA_IRQHandler+0x248>)
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	4a8e      	ldr	r2, [pc, #568]	@ (8003030 <HAL_DMA_IRQHandler+0x24c>)
 8002df6:	fba2 2303 	umull	r2, r3, r2, r3
 8002dfa:	0a9b      	lsrs	r3, r3, #10
 8002dfc:	617b      	str	r3, [r7, #20]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002e02:	613b      	str	r3, [r7, #16]
 8002e04:	693b      	ldr	r3, [r7, #16]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	60fb      	str	r3, [r7, #12]
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e0e:	2208      	movs	r2, #8
 8002e10:	409a      	lsls	r2, r3
 8002e12:	68fb      	ldr	r3, [r7, #12]
 8002e14:	4013      	ands	r3, r2
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d01a      	beq.n	8002e50 <HAL_DMA_IRQHandler+0x6c>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	f003 0304 	and.w	r3, r3, #4
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d013      	beq.n	8002e50 <HAL_DMA_IRQHandler+0x6c>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	681a      	ldr	r2, [r3, #0]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f022 0204 	bic.w	r2, r2, #4
 8002e36:	601a      	str	r2, [r3, #0]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e3c:	2208      	movs	r2, #8
 8002e3e:	409a      	lsls	r2, r3
 8002e40:	693b      	ldr	r3, [r7, #16]
 8002e42:	609a      	str	r2, [r3, #8]
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e48:	f043 0201 	orr.w	r2, r3, #1
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e54:	2201      	movs	r2, #1
 8002e56:	409a      	lsls	r2, r3
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	4013      	ands	r3, r2
 8002e5c:	2b00      	cmp	r3, #0
 8002e5e:	d012      	beq.n	8002e86 <HAL_DMA_IRQHandler+0xa2>
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	695b      	ldr	r3, [r3, #20]
 8002e66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d00b      	beq.n	8002e86 <HAL_DMA_IRQHandler+0xa2>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e72:	2201      	movs	r2, #1
 8002e74:	409a      	lsls	r2, r3
 8002e76:	693b      	ldr	r3, [r7, #16]
 8002e78:	609a      	str	r2, [r3, #8]
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e7e:	f043 0202 	orr.w	r2, r3, #2
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	655a      	str	r2, [r3, #84]	@ 0x54
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e8a:	2204      	movs	r2, #4
 8002e8c:	409a      	lsls	r2, r3
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	4013      	ands	r3, r2
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d012      	beq.n	8002ebc <HAL_DMA_IRQHandler+0xd8>
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f003 0302 	and.w	r3, r3, #2
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d00b      	beq.n	8002ebc <HAL_DMA_IRQHandler+0xd8>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ea8:	2204      	movs	r2, #4
 8002eaa:	409a      	lsls	r2, r3
 8002eac:	693b      	ldr	r3, [r7, #16]
 8002eae:	609a      	str	r2, [r3, #8]
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002eb4:	f043 0204 	orr.w	r2, r3, #4
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	655a      	str	r2, [r3, #84]	@ 0x54
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ec0:	2210      	movs	r2, #16
 8002ec2:	409a      	lsls	r2, r3
 8002ec4:	68fb      	ldr	r3, [r7, #12]
 8002ec6:	4013      	ands	r3, r2
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d043      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	f003 0308 	and.w	r3, r3, #8
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d03c      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ede:	2210      	movs	r2, #16
 8002ee0:	409a      	lsls	r2, r3
 8002ee2:	693b      	ldr	r3, [r7, #16]
 8002ee4:	609a      	str	r2, [r3, #8]
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	d018      	beq.n	8002f26 <HAL_DMA_IRQHandler+0x142>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d108      	bne.n	8002f14 <HAL_DMA_IRQHandler+0x130>
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d024      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f0e:	6878      	ldr	r0, [r7, #4]
 8002f10:	4798      	blx	r3
 8002f12:	e01f      	b.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d01b      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002f20:	6878      	ldr	r0, [r7, #4]
 8002f22:	4798      	blx	r3
 8002f24:	e016      	b.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d107      	bne.n	8002f44 <HAL_DMA_IRQHandler+0x160>
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	681a      	ldr	r2, [r3, #0]
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	f022 0208 	bic.w	r2, r2, #8
 8002f42:	601a      	str	r2, [r3, #0]
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f48:	2b00      	cmp	r3, #0
 8002f4a:	d003      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f50:	6878      	ldr	r0, [r7, #4]
 8002f52:	4798      	blx	r3
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002f58:	2220      	movs	r2, #32
 8002f5a:	409a      	lsls	r2, r3
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	4013      	ands	r3, r2
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	f000 808f 	beq.w	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	f003 0310 	and.w	r3, r3, #16
 8002f70:	2b00      	cmp	r3, #0
 8002f72:	f000 8087 	beq.w	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002f7a:	2220      	movs	r2, #32
 8002f7c:	409a      	lsls	r2, r3
 8002f7e:	693b      	ldr	r3, [r7, #16]
 8002f80:	609a      	str	r2, [r3, #8]
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002f88:	b2db      	uxtb	r3, r3
 8002f8a:	2b05      	cmp	r3, #5
 8002f8c:	d136      	bne.n	8002ffc <HAL_DMA_IRQHandler+0x218>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	681a      	ldr	r2, [r3, #0]
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	f022 0216 	bic.w	r2, r2, #22
 8002f9c:	601a      	str	r2, [r3, #0]
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	695a      	ldr	r2, [r3, #20]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002fac:	615a      	str	r2, [r3, #20]
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d103      	bne.n	8002fbe <HAL_DMA_IRQHandler+0x1da>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d007      	beq.n	8002fce <HAL_DMA_IRQHandler+0x1ea>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	681a      	ldr	r2, [r3, #0]
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f022 0208 	bic.w	r2, r2, #8
 8002fcc:	601a      	str	r2, [r3, #0]
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002fd2:	223f      	movs	r2, #63	@ 0x3f
 8002fd4:	409a      	lsls	r2, r3
 8002fd6:	693b      	ldr	r3, [r7, #16]
 8002fd8:	609a      	str	r2, [r3, #8]
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	2201      	movs	r2, #1
 8002fde:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	2200      	movs	r2, #0
 8002fe6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d07e      	beq.n	80030f0 <HAL_DMA_IRQHandler+0x30c>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002ff6:	6878      	ldr	r0, [r7, #4]
 8002ff8:	4798      	blx	r3
 8002ffa:	e079      	b.n	80030f0 <HAL_DMA_IRQHandler+0x30c>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003006:	2b00      	cmp	r3, #0
 8003008:	d01d      	beq.n	8003046 <HAL_DMA_IRQHandler+0x262>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003014:	2b00      	cmp	r3, #0
 8003016:	d10d      	bne.n	8003034 <HAL_DMA_IRQHandler+0x250>
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800301c:	2b00      	cmp	r3, #0
 800301e:	d031      	beq.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003024:	6878      	ldr	r0, [r7, #4]
 8003026:	4798      	blx	r3
 8003028:	e02c      	b.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 800302a:	bf00      	nop
 800302c:	20013748 	.word	0x20013748
 8003030:	1b4e81b5 	.word	0x1b4e81b5
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003038:	2b00      	cmp	r3, #0
 800303a:	d023      	beq.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003040:	6878      	ldr	r0, [r7, #4]
 8003042:	4798      	blx	r3
 8003044:	e01e      	b.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003050:	2b00      	cmp	r3, #0
 8003052:	d10f      	bne.n	8003074 <HAL_DMA_IRQHandler+0x290>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	681a      	ldr	r2, [r3, #0]
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	f022 0210 	bic.w	r2, r2, #16
 8003062:	601a      	str	r2, [r3, #0]
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	2201      	movs	r2, #1
 8003068:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	2200      	movs	r2, #0
 8003070:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003078:	2b00      	cmp	r3, #0
 800307a:	d003      	beq.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003080:	6878      	ldr	r0, [r7, #4]
 8003082:	4798      	blx	r3
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003088:	2b00      	cmp	r3, #0
 800308a:	d032      	beq.n	80030f2 <HAL_DMA_IRQHandler+0x30e>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003090:	f003 0301 	and.w	r3, r3, #1
 8003094:	2b00      	cmp	r3, #0
 8003096:	d022      	beq.n	80030de <HAL_DMA_IRQHandler+0x2fa>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2205      	movs	r2, #5
 800309c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	681a      	ldr	r2, [r3, #0]
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	f022 0201 	bic.w	r2, r2, #1
 80030ae:	601a      	str	r2, [r3, #0]
 80030b0:	68bb      	ldr	r3, [r7, #8]
 80030b2:	3301      	adds	r3, #1
 80030b4:	60bb      	str	r3, [r7, #8]
 80030b6:	697a      	ldr	r2, [r7, #20]
 80030b8:	429a      	cmp	r2, r3
 80030ba:	d307      	bcc.n	80030cc <HAL_DMA_IRQHandler+0x2e8>
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f003 0301 	and.w	r3, r3, #1
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	d1f2      	bne.n	80030b0 <HAL_DMA_IRQHandler+0x2cc>
 80030ca:	e000      	b.n	80030ce <HAL_DMA_IRQHandler+0x2ea>
 80030cc:	bf00      	nop
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	2201      	movs	r2, #1
 80030d2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	2200      	movs	r2, #0
 80030da:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d005      	beq.n	80030f2 <HAL_DMA_IRQHandler+0x30e>
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80030ea:	6878      	ldr	r0, [r7, #4]
 80030ec:	4798      	blx	r3
 80030ee:	e000      	b.n	80030f2 <HAL_DMA_IRQHandler+0x30e>
 80030f0:	bf00      	nop
 80030f2:	3718      	adds	r7, #24
 80030f4:	46bd      	mov	sp, r7
 80030f6:	bd80      	pop	{r7, pc}

080030f8 <DMA_CalcBaseAndBitshift>:
 80030f8:	b480      	push	{r7}
 80030fa:	b085      	sub	sp, #20
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	b2db      	uxtb	r3, r3
 8003106:	3b10      	subs	r3, #16
 8003108:	4a14      	ldr	r2, [pc, #80]	@ (800315c <DMA_CalcBaseAndBitshift+0x64>)
 800310a:	fba2 2303 	umull	r2, r3, r2, r3
 800310e:	091b      	lsrs	r3, r3, #4
 8003110:	60fb      	str	r3, [r7, #12]
 8003112:	4a13      	ldr	r2, [pc, #76]	@ (8003160 <DMA_CalcBaseAndBitshift+0x68>)
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	4413      	add	r3, r2
 8003118:	781b      	ldrb	r3, [r3, #0]
 800311a:	461a      	mov	r2, r3
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	2b03      	cmp	r3, #3
 8003124:	d909      	bls.n	800313a <DMA_CalcBaseAndBitshift+0x42>
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800312e:	f023 0303 	bic.w	r3, r3, #3
 8003132:	1d1a      	adds	r2, r3, #4
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	659a      	str	r2, [r3, #88]	@ 0x58
 8003138:	e007      	b.n	800314a <DMA_CalcBaseAndBitshift+0x52>
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003142:	f023 0303 	bic.w	r3, r3, #3
 8003146:	687a      	ldr	r2, [r7, #4]
 8003148:	6593      	str	r3, [r2, #88]	@ 0x58
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800314e:	4618      	mov	r0, r3
 8003150:	3714      	adds	r7, #20
 8003152:	46bd      	mov	sp, r7
 8003154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003158:	4770      	bx	lr
 800315a:	bf00      	nop
 800315c:	aaaaaaab 	.word	0xaaaaaaab
 8003160:	080089ac 	.word	0x080089ac

08003164 <DMA_CheckFifoParam>:
 8003164:	b480      	push	{r7}
 8003166:	b085      	sub	sp, #20
 8003168:	af00      	add	r7, sp, #0
 800316a:	6078      	str	r0, [r7, #4]
 800316c:	2300      	movs	r3, #0
 800316e:	73fb      	strb	r3, [r7, #15]
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003174:	60bb      	str	r3, [r7, #8]
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	699b      	ldr	r3, [r3, #24]
 800317a:	2b00      	cmp	r3, #0
 800317c:	d11f      	bne.n	80031be <DMA_CheckFifoParam+0x5a>
 800317e:	68bb      	ldr	r3, [r7, #8]
 8003180:	2b03      	cmp	r3, #3
 8003182:	d856      	bhi.n	8003232 <DMA_CheckFifoParam+0xce>
 8003184:	a201      	add	r2, pc, #4	@ (adr r2, 800318c <DMA_CheckFifoParam+0x28>)
 8003186:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800318a:	bf00      	nop
 800318c:	0800319d 	.word	0x0800319d
 8003190:	080031af 	.word	0x080031af
 8003194:	0800319d 	.word	0x0800319d
 8003198:	08003233 	.word	0x08003233
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80031a0:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80031a4:	2b00      	cmp	r3, #0
 80031a6:	d046      	beq.n	8003236 <DMA_CheckFifoParam+0xd2>
 80031a8:	2301      	movs	r3, #1
 80031aa:	73fb      	strb	r3, [r7, #15]
 80031ac:	e043      	b.n	8003236 <DMA_CheckFifoParam+0xd2>
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80031b2:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80031b6:	d140      	bne.n	800323a <DMA_CheckFifoParam+0xd6>
 80031b8:	2301      	movs	r3, #1
 80031ba:	73fb      	strb	r3, [r7, #15]
 80031bc:	e03d      	b.n	800323a <DMA_CheckFifoParam+0xd6>
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	699b      	ldr	r3, [r3, #24]
 80031c2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80031c6:	d121      	bne.n	800320c <DMA_CheckFifoParam+0xa8>
 80031c8:	68bb      	ldr	r3, [r7, #8]
 80031ca:	2b03      	cmp	r3, #3
 80031cc:	d837      	bhi.n	800323e <DMA_CheckFifoParam+0xda>
 80031ce:	a201      	add	r2, pc, #4	@ (adr r2, 80031d4 <DMA_CheckFifoParam+0x70>)
 80031d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031d4:	080031e5 	.word	0x080031e5
 80031d8:	080031eb 	.word	0x080031eb
 80031dc:	080031e5 	.word	0x080031e5
 80031e0:	080031fd 	.word	0x080031fd
 80031e4:	2301      	movs	r3, #1
 80031e6:	73fb      	strb	r3, [r7, #15]
 80031e8:	e030      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80031ee:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d025      	beq.n	8003242 <DMA_CheckFifoParam+0xde>
 80031f6:	2301      	movs	r3, #1
 80031f8:	73fb      	strb	r3, [r7, #15]
 80031fa:	e022      	b.n	8003242 <DMA_CheckFifoParam+0xde>
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003200:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003204:	d11f      	bne.n	8003246 <DMA_CheckFifoParam+0xe2>
 8003206:	2301      	movs	r3, #1
 8003208:	73fb      	strb	r3, [r7, #15]
 800320a:	e01c      	b.n	8003246 <DMA_CheckFifoParam+0xe2>
 800320c:	68bb      	ldr	r3, [r7, #8]
 800320e:	2b02      	cmp	r3, #2
 8003210:	d903      	bls.n	800321a <DMA_CheckFifoParam+0xb6>
 8003212:	68bb      	ldr	r3, [r7, #8]
 8003214:	2b03      	cmp	r3, #3
 8003216:	d003      	beq.n	8003220 <DMA_CheckFifoParam+0xbc>
 8003218:	e018      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 800321a:	2301      	movs	r3, #1
 800321c:	73fb      	strb	r3, [r7, #15]
 800321e:	e015      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003224:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003228:	2b00      	cmp	r3, #0
 800322a:	d00e      	beq.n	800324a <DMA_CheckFifoParam+0xe6>
 800322c:	2301      	movs	r3, #1
 800322e:	73fb      	strb	r3, [r7, #15]
 8003230:	e00b      	b.n	800324a <DMA_CheckFifoParam+0xe6>
 8003232:	bf00      	nop
 8003234:	e00a      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 8003236:	bf00      	nop
 8003238:	e008      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 800323a:	bf00      	nop
 800323c:	e006      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 800323e:	bf00      	nop
 8003240:	e004      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 8003242:	bf00      	nop
 8003244:	e002      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 8003246:	bf00      	nop
 8003248:	e000      	b.n	800324c <DMA_CheckFifoParam+0xe8>
 800324a:	bf00      	nop
 800324c:	7bfb      	ldrb	r3, [r7, #15]
 800324e:	4618      	mov	r0, r3
 8003250:	3714      	adds	r7, #20
 8003252:	46bd      	mov	sp, r7
 8003254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003258:	4770      	bx	lr
 800325a:	bf00      	nop

0800325c <HAL_GPIO_Init>:
 800325c:	b480      	push	{r7}
 800325e:	b089      	sub	sp, #36	@ 0x24
 8003260:	af00      	add	r7, sp, #0
 8003262:	6078      	str	r0, [r7, #4]
 8003264:	6039      	str	r1, [r7, #0]
 8003266:	2300      	movs	r3, #0
 8003268:	617b      	str	r3, [r7, #20]
 800326a:	2300      	movs	r3, #0
 800326c:	613b      	str	r3, [r7, #16]
 800326e:	2300      	movs	r3, #0
 8003270:	61bb      	str	r3, [r7, #24]
 8003272:	2300      	movs	r3, #0
 8003274:	61fb      	str	r3, [r7, #28]
 8003276:	e165      	b.n	8003544 <HAL_GPIO_Init+0x2e8>
 8003278:	2201      	movs	r2, #1
 800327a:	69fb      	ldr	r3, [r7, #28]
 800327c:	fa02 f303 	lsl.w	r3, r2, r3
 8003280:	617b      	str	r3, [r7, #20]
 8003282:	683b      	ldr	r3, [r7, #0]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	697a      	ldr	r2, [r7, #20]
 8003288:	4013      	ands	r3, r2
 800328a:	613b      	str	r3, [r7, #16]
 800328c:	693a      	ldr	r2, [r7, #16]
 800328e:	697b      	ldr	r3, [r7, #20]
 8003290:	429a      	cmp	r2, r3
 8003292:	f040 8154 	bne.w	800353e <HAL_GPIO_Init+0x2e2>
 8003296:	683b      	ldr	r3, [r7, #0]
 8003298:	685b      	ldr	r3, [r3, #4]
 800329a:	f003 0303 	and.w	r3, r3, #3
 800329e:	2b01      	cmp	r3, #1
 80032a0:	d005      	beq.n	80032ae <HAL_GPIO_Init+0x52>
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	685b      	ldr	r3, [r3, #4]
 80032a6:	f003 0303 	and.w	r3, r3, #3
 80032aa:	2b02      	cmp	r3, #2
 80032ac:	d130      	bne.n	8003310 <HAL_GPIO_Init+0xb4>
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	689b      	ldr	r3, [r3, #8]
 80032b2:	61bb      	str	r3, [r7, #24]
 80032b4:	69fb      	ldr	r3, [r7, #28]
 80032b6:	005b      	lsls	r3, r3, #1
 80032b8:	2203      	movs	r2, #3
 80032ba:	fa02 f303 	lsl.w	r3, r2, r3
 80032be:	43db      	mvns	r3, r3
 80032c0:	69ba      	ldr	r2, [r7, #24]
 80032c2:	4013      	ands	r3, r2
 80032c4:	61bb      	str	r3, [r7, #24]
 80032c6:	683b      	ldr	r3, [r7, #0]
 80032c8:	68da      	ldr	r2, [r3, #12]
 80032ca:	69fb      	ldr	r3, [r7, #28]
 80032cc:	005b      	lsls	r3, r3, #1
 80032ce:	fa02 f303 	lsl.w	r3, r2, r3
 80032d2:	69ba      	ldr	r2, [r7, #24]
 80032d4:	4313      	orrs	r3, r2
 80032d6:	61bb      	str	r3, [r7, #24]
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	69ba      	ldr	r2, [r7, #24]
 80032dc:	609a      	str	r2, [r3, #8]
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	685b      	ldr	r3, [r3, #4]
 80032e2:	61bb      	str	r3, [r7, #24]
 80032e4:	2201      	movs	r2, #1
 80032e6:	69fb      	ldr	r3, [r7, #28]
 80032e8:	fa02 f303 	lsl.w	r3, r2, r3
 80032ec:	43db      	mvns	r3, r3
 80032ee:	69ba      	ldr	r2, [r7, #24]
 80032f0:	4013      	ands	r3, r2
 80032f2:	61bb      	str	r3, [r7, #24]
 80032f4:	683b      	ldr	r3, [r7, #0]
 80032f6:	685b      	ldr	r3, [r3, #4]
 80032f8:	091b      	lsrs	r3, r3, #4
 80032fa:	f003 0201 	and.w	r2, r3, #1
 80032fe:	69fb      	ldr	r3, [r7, #28]
 8003300:	fa02 f303 	lsl.w	r3, r2, r3
 8003304:	69ba      	ldr	r2, [r7, #24]
 8003306:	4313      	orrs	r3, r2
 8003308:	61bb      	str	r3, [r7, #24]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	69ba      	ldr	r2, [r7, #24]
 800330e:	605a      	str	r2, [r3, #4]
 8003310:	683b      	ldr	r3, [r7, #0]
 8003312:	685b      	ldr	r3, [r3, #4]
 8003314:	f003 0303 	and.w	r3, r3, #3
 8003318:	2b03      	cmp	r3, #3
 800331a:	d017      	beq.n	800334c <HAL_GPIO_Init+0xf0>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	68db      	ldr	r3, [r3, #12]
 8003320:	61bb      	str	r3, [r7, #24]
 8003322:	69fb      	ldr	r3, [r7, #28]
 8003324:	005b      	lsls	r3, r3, #1
 8003326:	2203      	movs	r2, #3
 8003328:	fa02 f303 	lsl.w	r3, r2, r3
 800332c:	43db      	mvns	r3, r3
 800332e:	69ba      	ldr	r2, [r7, #24]
 8003330:	4013      	ands	r3, r2
 8003332:	61bb      	str	r3, [r7, #24]
 8003334:	683b      	ldr	r3, [r7, #0]
 8003336:	689a      	ldr	r2, [r3, #8]
 8003338:	69fb      	ldr	r3, [r7, #28]
 800333a:	005b      	lsls	r3, r3, #1
 800333c:	fa02 f303 	lsl.w	r3, r2, r3
 8003340:	69ba      	ldr	r2, [r7, #24]
 8003342:	4313      	orrs	r3, r2
 8003344:	61bb      	str	r3, [r7, #24]
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	69ba      	ldr	r2, [r7, #24]
 800334a:	60da      	str	r2, [r3, #12]
 800334c:	683b      	ldr	r3, [r7, #0]
 800334e:	685b      	ldr	r3, [r3, #4]
 8003350:	f003 0303 	and.w	r3, r3, #3
 8003354:	2b02      	cmp	r3, #2
 8003356:	d123      	bne.n	80033a0 <HAL_GPIO_Init+0x144>
 8003358:	69fb      	ldr	r3, [r7, #28]
 800335a:	08da      	lsrs	r2, r3, #3
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	3208      	adds	r2, #8
 8003360:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003364:	61bb      	str	r3, [r7, #24]
 8003366:	69fb      	ldr	r3, [r7, #28]
 8003368:	f003 0307 	and.w	r3, r3, #7
 800336c:	009b      	lsls	r3, r3, #2
 800336e:	220f      	movs	r2, #15
 8003370:	fa02 f303 	lsl.w	r3, r2, r3
 8003374:	43db      	mvns	r3, r3
 8003376:	69ba      	ldr	r2, [r7, #24]
 8003378:	4013      	ands	r3, r2
 800337a:	61bb      	str	r3, [r7, #24]
 800337c:	683b      	ldr	r3, [r7, #0]
 800337e:	691a      	ldr	r2, [r3, #16]
 8003380:	69fb      	ldr	r3, [r7, #28]
 8003382:	f003 0307 	and.w	r3, r3, #7
 8003386:	009b      	lsls	r3, r3, #2
 8003388:	fa02 f303 	lsl.w	r3, r2, r3
 800338c:	69ba      	ldr	r2, [r7, #24]
 800338e:	4313      	orrs	r3, r2
 8003390:	61bb      	str	r3, [r7, #24]
 8003392:	69fb      	ldr	r3, [r7, #28]
 8003394:	08da      	lsrs	r2, r3, #3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	3208      	adds	r2, #8
 800339a:	69b9      	ldr	r1, [r7, #24]
 800339c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	61bb      	str	r3, [r7, #24]
 80033a6:	69fb      	ldr	r3, [r7, #28]
 80033a8:	005b      	lsls	r3, r3, #1
 80033aa:	2203      	movs	r2, #3
 80033ac:	fa02 f303 	lsl.w	r3, r2, r3
 80033b0:	43db      	mvns	r3, r3
 80033b2:	69ba      	ldr	r2, [r7, #24]
 80033b4:	4013      	ands	r3, r2
 80033b6:	61bb      	str	r3, [r7, #24]
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	685b      	ldr	r3, [r3, #4]
 80033bc:	f003 0203 	and.w	r2, r3, #3
 80033c0:	69fb      	ldr	r3, [r7, #28]
 80033c2:	005b      	lsls	r3, r3, #1
 80033c4:	fa02 f303 	lsl.w	r3, r2, r3
 80033c8:	69ba      	ldr	r2, [r7, #24]
 80033ca:	4313      	orrs	r3, r2
 80033cc:	61bb      	str	r3, [r7, #24]
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	69ba      	ldr	r2, [r7, #24]
 80033d2:	601a      	str	r2, [r3, #0]
 80033d4:	683b      	ldr	r3, [r7, #0]
 80033d6:	685b      	ldr	r3, [r3, #4]
 80033d8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80033dc:	2b00      	cmp	r3, #0
 80033de:	f000 80ae 	beq.w	800353e <HAL_GPIO_Init+0x2e2>
 80033e2:	2300      	movs	r3, #0
 80033e4:	60fb      	str	r3, [r7, #12]
 80033e6:	4b5d      	ldr	r3, [pc, #372]	@ (800355c <HAL_GPIO_Init+0x300>)
 80033e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80033ea:	4a5c      	ldr	r2, [pc, #368]	@ (800355c <HAL_GPIO_Init+0x300>)
 80033ec:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80033f0:	6453      	str	r3, [r2, #68]	@ 0x44
 80033f2:	4b5a      	ldr	r3, [pc, #360]	@ (800355c <HAL_GPIO_Init+0x300>)
 80033f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80033f6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80033fa:	60fb      	str	r3, [r7, #12]
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	4a58      	ldr	r2, [pc, #352]	@ (8003560 <HAL_GPIO_Init+0x304>)
 8003400:	69fb      	ldr	r3, [r7, #28]
 8003402:	089b      	lsrs	r3, r3, #2
 8003404:	3302      	adds	r3, #2
 8003406:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800340a:	61bb      	str	r3, [r7, #24]
 800340c:	69fb      	ldr	r3, [r7, #28]
 800340e:	f003 0303 	and.w	r3, r3, #3
 8003412:	009b      	lsls	r3, r3, #2
 8003414:	220f      	movs	r2, #15
 8003416:	fa02 f303 	lsl.w	r3, r2, r3
 800341a:	43db      	mvns	r3, r3
 800341c:	69ba      	ldr	r2, [r7, #24]
 800341e:	4013      	ands	r3, r2
 8003420:	61bb      	str	r3, [r7, #24]
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	4a4f      	ldr	r2, [pc, #316]	@ (8003564 <HAL_GPIO_Init+0x308>)
 8003426:	4293      	cmp	r3, r2
 8003428:	d025      	beq.n	8003476 <HAL_GPIO_Init+0x21a>
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	4a4e      	ldr	r2, [pc, #312]	@ (8003568 <HAL_GPIO_Init+0x30c>)
 800342e:	4293      	cmp	r3, r2
 8003430:	d01f      	beq.n	8003472 <HAL_GPIO_Init+0x216>
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	4a4d      	ldr	r2, [pc, #308]	@ (800356c <HAL_GPIO_Init+0x310>)
 8003436:	4293      	cmp	r3, r2
 8003438:	d019      	beq.n	800346e <HAL_GPIO_Init+0x212>
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	4a4c      	ldr	r2, [pc, #304]	@ (8003570 <HAL_GPIO_Init+0x314>)
 800343e:	4293      	cmp	r3, r2
 8003440:	d013      	beq.n	800346a <HAL_GPIO_Init+0x20e>
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	4a4b      	ldr	r2, [pc, #300]	@ (8003574 <HAL_GPIO_Init+0x318>)
 8003446:	4293      	cmp	r3, r2
 8003448:	d00d      	beq.n	8003466 <HAL_GPIO_Init+0x20a>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	4a4a      	ldr	r2, [pc, #296]	@ (8003578 <HAL_GPIO_Init+0x31c>)
 800344e:	4293      	cmp	r3, r2
 8003450:	d007      	beq.n	8003462 <HAL_GPIO_Init+0x206>
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	4a49      	ldr	r2, [pc, #292]	@ (800357c <HAL_GPIO_Init+0x320>)
 8003456:	4293      	cmp	r3, r2
 8003458:	d101      	bne.n	800345e <HAL_GPIO_Init+0x202>
 800345a:	2306      	movs	r3, #6
 800345c:	e00c      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 800345e:	2307      	movs	r3, #7
 8003460:	e00a      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 8003462:	2305      	movs	r3, #5
 8003464:	e008      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 8003466:	2304      	movs	r3, #4
 8003468:	e006      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 800346a:	2303      	movs	r3, #3
 800346c:	e004      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 800346e:	2302      	movs	r3, #2
 8003470:	e002      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 8003472:	2301      	movs	r3, #1
 8003474:	e000      	b.n	8003478 <HAL_GPIO_Init+0x21c>
 8003476:	2300      	movs	r3, #0
 8003478:	69fa      	ldr	r2, [r7, #28]
 800347a:	f002 0203 	and.w	r2, r2, #3
 800347e:	0092      	lsls	r2, r2, #2
 8003480:	4093      	lsls	r3, r2
 8003482:	69ba      	ldr	r2, [r7, #24]
 8003484:	4313      	orrs	r3, r2
 8003486:	61bb      	str	r3, [r7, #24]
 8003488:	4935      	ldr	r1, [pc, #212]	@ (8003560 <HAL_GPIO_Init+0x304>)
 800348a:	69fb      	ldr	r3, [r7, #28]
 800348c:	089b      	lsrs	r3, r3, #2
 800348e:	3302      	adds	r3, #2
 8003490:	69ba      	ldr	r2, [r7, #24]
 8003492:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003496:	4b3a      	ldr	r3, [pc, #232]	@ (8003580 <HAL_GPIO_Init+0x324>)
 8003498:	689b      	ldr	r3, [r3, #8]
 800349a:	61bb      	str	r3, [r7, #24]
 800349c:	693b      	ldr	r3, [r7, #16]
 800349e:	43db      	mvns	r3, r3
 80034a0:	69ba      	ldr	r2, [r7, #24]
 80034a2:	4013      	ands	r3, r2
 80034a4:	61bb      	str	r3, [r7, #24]
 80034a6:	683b      	ldr	r3, [r7, #0]
 80034a8:	685b      	ldr	r3, [r3, #4]
 80034aa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	d003      	beq.n	80034ba <HAL_GPIO_Init+0x25e>
 80034b2:	69ba      	ldr	r2, [r7, #24]
 80034b4:	693b      	ldr	r3, [r7, #16]
 80034b6:	4313      	orrs	r3, r2
 80034b8:	61bb      	str	r3, [r7, #24]
 80034ba:	4a31      	ldr	r2, [pc, #196]	@ (8003580 <HAL_GPIO_Init+0x324>)
 80034bc:	69bb      	ldr	r3, [r7, #24]
 80034be:	6093      	str	r3, [r2, #8]
 80034c0:	4b2f      	ldr	r3, [pc, #188]	@ (8003580 <HAL_GPIO_Init+0x324>)
 80034c2:	68db      	ldr	r3, [r3, #12]
 80034c4:	61bb      	str	r3, [r7, #24]
 80034c6:	693b      	ldr	r3, [r7, #16]
 80034c8:	43db      	mvns	r3, r3
 80034ca:	69ba      	ldr	r2, [r7, #24]
 80034cc:	4013      	ands	r3, r2
 80034ce:	61bb      	str	r3, [r7, #24]
 80034d0:	683b      	ldr	r3, [r7, #0]
 80034d2:	685b      	ldr	r3, [r3, #4]
 80034d4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d003      	beq.n	80034e4 <HAL_GPIO_Init+0x288>
 80034dc:	69ba      	ldr	r2, [r7, #24]
 80034de:	693b      	ldr	r3, [r7, #16]
 80034e0:	4313      	orrs	r3, r2
 80034e2:	61bb      	str	r3, [r7, #24]
 80034e4:	4a26      	ldr	r2, [pc, #152]	@ (8003580 <HAL_GPIO_Init+0x324>)
 80034e6:	69bb      	ldr	r3, [r7, #24]
 80034e8:	60d3      	str	r3, [r2, #12]
 80034ea:	4b25      	ldr	r3, [pc, #148]	@ (8003580 <HAL_GPIO_Init+0x324>)
 80034ec:	685b      	ldr	r3, [r3, #4]
 80034ee:	61bb      	str	r3, [r7, #24]
 80034f0:	693b      	ldr	r3, [r7, #16]
 80034f2:	43db      	mvns	r3, r3
 80034f4:	69ba      	ldr	r2, [r7, #24]
 80034f6:	4013      	ands	r3, r2
 80034f8:	61bb      	str	r3, [r7, #24]
 80034fa:	683b      	ldr	r3, [r7, #0]
 80034fc:	685b      	ldr	r3, [r3, #4]
 80034fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003502:	2b00      	cmp	r3, #0
 8003504:	d003      	beq.n	800350e <HAL_GPIO_Init+0x2b2>
 8003506:	69ba      	ldr	r2, [r7, #24]
 8003508:	693b      	ldr	r3, [r7, #16]
 800350a:	4313      	orrs	r3, r2
 800350c:	61bb      	str	r3, [r7, #24]
 800350e:	4a1c      	ldr	r2, [pc, #112]	@ (8003580 <HAL_GPIO_Init+0x324>)
 8003510:	69bb      	ldr	r3, [r7, #24]
 8003512:	6053      	str	r3, [r2, #4]
 8003514:	4b1a      	ldr	r3, [pc, #104]	@ (8003580 <HAL_GPIO_Init+0x324>)
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	61bb      	str	r3, [r7, #24]
 800351a:	693b      	ldr	r3, [r7, #16]
 800351c:	43db      	mvns	r3, r3
 800351e:	69ba      	ldr	r2, [r7, #24]
 8003520:	4013      	ands	r3, r2
 8003522:	61bb      	str	r3, [r7, #24]
 8003524:	683b      	ldr	r3, [r7, #0]
 8003526:	685b      	ldr	r3, [r3, #4]
 8003528:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800352c:	2b00      	cmp	r3, #0
 800352e:	d003      	beq.n	8003538 <HAL_GPIO_Init+0x2dc>
 8003530:	69ba      	ldr	r2, [r7, #24]
 8003532:	693b      	ldr	r3, [r7, #16]
 8003534:	4313      	orrs	r3, r2
 8003536:	61bb      	str	r3, [r7, #24]
 8003538:	4a11      	ldr	r2, [pc, #68]	@ (8003580 <HAL_GPIO_Init+0x324>)
 800353a:	69bb      	ldr	r3, [r7, #24]
 800353c:	6013      	str	r3, [r2, #0]
 800353e:	69fb      	ldr	r3, [r7, #28]
 8003540:	3301      	adds	r3, #1
 8003542:	61fb      	str	r3, [r7, #28]
 8003544:	69fb      	ldr	r3, [r7, #28]
 8003546:	2b0f      	cmp	r3, #15
 8003548:	f67f ae96 	bls.w	8003278 <HAL_GPIO_Init+0x1c>
 800354c:	bf00      	nop
 800354e:	bf00      	nop
 8003550:	3724      	adds	r7, #36	@ 0x24
 8003552:	46bd      	mov	sp, r7
 8003554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003558:	4770      	bx	lr
 800355a:	bf00      	nop
 800355c:	40023800 	.word	0x40023800
 8003560:	40013800 	.word	0x40013800
 8003564:	40020000 	.word	0x40020000
 8003568:	40020400 	.word	0x40020400
 800356c:	40020800 	.word	0x40020800
 8003570:	40020c00 	.word	0x40020c00
 8003574:	40021000 	.word	0x40021000
 8003578:	40021400 	.word	0x40021400
 800357c:	40021800 	.word	0x40021800
 8003580:	40013c00 	.word	0x40013c00

08003584 <HAL_GPIO_WritePin>:
 8003584:	b480      	push	{r7}
 8003586:	b083      	sub	sp, #12
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
 800358c:	460b      	mov	r3, r1
 800358e:	807b      	strh	r3, [r7, #2]
 8003590:	4613      	mov	r3, r2
 8003592:	707b      	strb	r3, [r7, #1]
 8003594:	787b      	ldrb	r3, [r7, #1]
 8003596:	2b00      	cmp	r3, #0
 8003598:	d003      	beq.n	80035a2 <HAL_GPIO_WritePin+0x1e>
 800359a:	887a      	ldrh	r2, [r7, #2]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	619a      	str	r2, [r3, #24]
 80035a0:	e003      	b.n	80035aa <HAL_GPIO_WritePin+0x26>
 80035a2:	887b      	ldrh	r3, [r7, #2]
 80035a4:	041a      	lsls	r2, r3, #16
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	619a      	str	r2, [r3, #24]
 80035aa:	bf00      	nop
 80035ac:	370c      	adds	r7, #12
 80035ae:	46bd      	mov	sp, r7
 80035b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035b4:	4770      	bx	lr
	...

080035b8 <HAL_RCC_ClockConfig>:
 80035b8:	b580      	push	{r7, lr}
 80035ba:	b084      	sub	sp, #16
 80035bc:	af00      	add	r7, sp, #0
 80035be:	6078      	str	r0, [r7, #4]
 80035c0:	6039      	str	r1, [r7, #0]
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	2b00      	cmp	r3, #0
 80035c6:	d101      	bne.n	80035cc <HAL_RCC_ClockConfig+0x14>
 80035c8:	2301      	movs	r3, #1
 80035ca:	e0cc      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 80035cc:	4b68      	ldr	r3, [pc, #416]	@ (8003770 <HAL_RCC_ClockConfig+0x1b8>)
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	f003 030f 	and.w	r3, r3, #15
 80035d4:	683a      	ldr	r2, [r7, #0]
 80035d6:	429a      	cmp	r2, r3
 80035d8:	d90c      	bls.n	80035f4 <HAL_RCC_ClockConfig+0x3c>
 80035da:	4b65      	ldr	r3, [pc, #404]	@ (8003770 <HAL_RCC_ClockConfig+0x1b8>)
 80035dc:	683a      	ldr	r2, [r7, #0]
 80035de:	b2d2      	uxtb	r2, r2
 80035e0:	701a      	strb	r2, [r3, #0]
 80035e2:	4b63      	ldr	r3, [pc, #396]	@ (8003770 <HAL_RCC_ClockConfig+0x1b8>)
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	f003 030f 	and.w	r3, r3, #15
 80035ea:	683a      	ldr	r2, [r7, #0]
 80035ec:	429a      	cmp	r2, r3
 80035ee:	d001      	beq.n	80035f4 <HAL_RCC_ClockConfig+0x3c>
 80035f0:	2301      	movs	r3, #1
 80035f2:	e0b8      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	f003 0302 	and.w	r3, r3, #2
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	d020      	beq.n	8003642 <HAL_RCC_ClockConfig+0x8a>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	f003 0304 	and.w	r3, r3, #4
 8003608:	2b00      	cmp	r3, #0
 800360a:	d005      	beq.n	8003618 <HAL_RCC_ClockConfig+0x60>
 800360c:	4b59      	ldr	r3, [pc, #356]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800360e:	689b      	ldr	r3, [r3, #8]
 8003610:	4a58      	ldr	r2, [pc, #352]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003612:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8003616:	6093      	str	r3, [r2, #8]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	f003 0308 	and.w	r3, r3, #8
 8003620:	2b00      	cmp	r3, #0
 8003622:	d005      	beq.n	8003630 <HAL_RCC_ClockConfig+0x78>
 8003624:	4b53      	ldr	r3, [pc, #332]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003626:	689b      	ldr	r3, [r3, #8]
 8003628:	4a52      	ldr	r2, [pc, #328]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800362a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800362e:	6093      	str	r3, [r2, #8]
 8003630:	4b50      	ldr	r3, [pc, #320]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003632:	689b      	ldr	r3, [r3, #8]
 8003634:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	689b      	ldr	r3, [r3, #8]
 800363c:	494d      	ldr	r1, [pc, #308]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800363e:	4313      	orrs	r3, r2
 8003640:	608b      	str	r3, [r1, #8]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	f003 0301 	and.w	r3, r3, #1
 800364a:	2b00      	cmp	r3, #0
 800364c:	d044      	beq.n	80036d8 <HAL_RCC_ClockConfig+0x120>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	685b      	ldr	r3, [r3, #4]
 8003652:	2b01      	cmp	r3, #1
 8003654:	d107      	bne.n	8003666 <HAL_RCC_ClockConfig+0xae>
 8003656:	4b47      	ldr	r3, [pc, #284]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800365e:	2b00      	cmp	r3, #0
 8003660:	d119      	bne.n	8003696 <HAL_RCC_ClockConfig+0xde>
 8003662:	2301      	movs	r3, #1
 8003664:	e07f      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	685b      	ldr	r3, [r3, #4]
 800366a:	2b02      	cmp	r3, #2
 800366c:	d003      	beq.n	8003676 <HAL_RCC_ClockConfig+0xbe>
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	685b      	ldr	r3, [r3, #4]
 8003672:	2b03      	cmp	r3, #3
 8003674:	d107      	bne.n	8003686 <HAL_RCC_ClockConfig+0xce>
 8003676:	4b3f      	ldr	r3, [pc, #252]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800367e:	2b00      	cmp	r3, #0
 8003680:	d109      	bne.n	8003696 <HAL_RCC_ClockConfig+0xde>
 8003682:	2301      	movs	r3, #1
 8003684:	e06f      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 8003686:	4b3b      	ldr	r3, [pc, #236]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	f003 0302 	and.w	r3, r3, #2
 800368e:	2b00      	cmp	r3, #0
 8003690:	d101      	bne.n	8003696 <HAL_RCC_ClockConfig+0xde>
 8003692:	2301      	movs	r3, #1
 8003694:	e067      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 8003696:	4b37      	ldr	r3, [pc, #220]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003698:	689b      	ldr	r3, [r3, #8]
 800369a:	f023 0203 	bic.w	r2, r3, #3
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	685b      	ldr	r3, [r3, #4]
 80036a2:	4934      	ldr	r1, [pc, #208]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 80036a4:	4313      	orrs	r3, r2
 80036a6:	608b      	str	r3, [r1, #8]
 80036a8:	f7ff f90e 	bl	80028c8 <HAL_GetTick>
 80036ac:	60f8      	str	r0, [r7, #12]
 80036ae:	e00a      	b.n	80036c6 <HAL_RCC_ClockConfig+0x10e>
 80036b0:	f7ff f90a 	bl	80028c8 <HAL_GetTick>
 80036b4:	4602      	mov	r2, r0
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	1ad3      	subs	r3, r2, r3
 80036ba:	f241 3288 	movw	r2, #5000	@ 0x1388
 80036be:	4293      	cmp	r3, r2
 80036c0:	d901      	bls.n	80036c6 <HAL_RCC_ClockConfig+0x10e>
 80036c2:	2303      	movs	r3, #3
 80036c4:	e04f      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 80036c6:	4b2b      	ldr	r3, [pc, #172]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 80036c8:	689b      	ldr	r3, [r3, #8]
 80036ca:	f003 020c 	and.w	r2, r3, #12
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	685b      	ldr	r3, [r3, #4]
 80036d2:	009b      	lsls	r3, r3, #2
 80036d4:	429a      	cmp	r2, r3
 80036d6:	d1eb      	bne.n	80036b0 <HAL_RCC_ClockConfig+0xf8>
 80036d8:	4b25      	ldr	r3, [pc, #148]	@ (8003770 <HAL_RCC_ClockConfig+0x1b8>)
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	f003 030f 	and.w	r3, r3, #15
 80036e0:	683a      	ldr	r2, [r7, #0]
 80036e2:	429a      	cmp	r2, r3
 80036e4:	d20c      	bcs.n	8003700 <HAL_RCC_ClockConfig+0x148>
 80036e6:	4b22      	ldr	r3, [pc, #136]	@ (8003770 <HAL_RCC_ClockConfig+0x1b8>)
 80036e8:	683a      	ldr	r2, [r7, #0]
 80036ea:	b2d2      	uxtb	r2, r2
 80036ec:	701a      	strb	r2, [r3, #0]
 80036ee:	4b20      	ldr	r3, [pc, #128]	@ (8003770 <HAL_RCC_ClockConfig+0x1b8>)
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	f003 030f 	and.w	r3, r3, #15
 80036f6:	683a      	ldr	r2, [r7, #0]
 80036f8:	429a      	cmp	r2, r3
 80036fa:	d001      	beq.n	8003700 <HAL_RCC_ClockConfig+0x148>
 80036fc:	2301      	movs	r3, #1
 80036fe:	e032      	b.n	8003766 <HAL_RCC_ClockConfig+0x1ae>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	f003 0304 	and.w	r3, r3, #4
 8003708:	2b00      	cmp	r3, #0
 800370a:	d008      	beq.n	800371e <HAL_RCC_ClockConfig+0x166>
 800370c:	4b19      	ldr	r3, [pc, #100]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800370e:	689b      	ldr	r3, [r3, #8]
 8003710:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	68db      	ldr	r3, [r3, #12]
 8003718:	4916      	ldr	r1, [pc, #88]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800371a:	4313      	orrs	r3, r2
 800371c:	608b      	str	r3, [r1, #8]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	f003 0308 	and.w	r3, r3, #8
 8003726:	2b00      	cmp	r3, #0
 8003728:	d009      	beq.n	800373e <HAL_RCC_ClockConfig+0x186>
 800372a:	4b12      	ldr	r3, [pc, #72]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800372c:	689b      	ldr	r3, [r3, #8]
 800372e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	691b      	ldr	r3, [r3, #16]
 8003736:	00db      	lsls	r3, r3, #3
 8003738:	490e      	ldr	r1, [pc, #56]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 800373a:	4313      	orrs	r3, r2
 800373c:	608b      	str	r3, [r1, #8]
 800373e:	f000 f855 	bl	80037ec <HAL_RCC_GetSysClockFreq>
 8003742:	4602      	mov	r2, r0
 8003744:	4b0b      	ldr	r3, [pc, #44]	@ (8003774 <HAL_RCC_ClockConfig+0x1bc>)
 8003746:	689b      	ldr	r3, [r3, #8]
 8003748:	091b      	lsrs	r3, r3, #4
 800374a:	f003 030f 	and.w	r3, r3, #15
 800374e:	490a      	ldr	r1, [pc, #40]	@ (8003778 <HAL_RCC_ClockConfig+0x1c0>)
 8003750:	5ccb      	ldrb	r3, [r1, r3]
 8003752:	fa22 f303 	lsr.w	r3, r2, r3
 8003756:	4a09      	ldr	r2, [pc, #36]	@ (800377c <HAL_RCC_ClockConfig+0x1c4>)
 8003758:	6013      	str	r3, [r2, #0]
 800375a:	4b09      	ldr	r3, [pc, #36]	@ (8003780 <HAL_RCC_ClockConfig+0x1c8>)
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	4618      	mov	r0, r3
 8003760:	f7ff f86e 	bl	8002840 <HAL_InitTick>
 8003764:	2300      	movs	r3, #0
 8003766:	4618      	mov	r0, r3
 8003768:	3710      	adds	r7, #16
 800376a:	46bd      	mov	sp, r7
 800376c:	bd80      	pop	{r7, pc}
 800376e:	bf00      	nop
 8003770:	40023c00 	.word	0x40023c00
 8003774:	40023800 	.word	0x40023800
 8003778:	08008994 	.word	0x08008994
 800377c:	20013748 	.word	0x20013748
 8003780:	2001374c 	.word	0x2001374c

08003784 <HAL_RCC_GetHCLKFreq>:
 8003784:	b480      	push	{r7}
 8003786:	af00      	add	r7, sp, #0
 8003788:	4b03      	ldr	r3, [pc, #12]	@ (8003798 <HAL_RCC_GetHCLKFreq+0x14>)
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	4618      	mov	r0, r3
 800378e:	46bd      	mov	sp, r7
 8003790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003794:	4770      	bx	lr
 8003796:	bf00      	nop
 8003798:	20013748 	.word	0x20013748

0800379c <HAL_RCC_GetPCLK1Freq>:
 800379c:	b580      	push	{r7, lr}
 800379e:	af00      	add	r7, sp, #0
 80037a0:	f7ff fff0 	bl	8003784 <HAL_RCC_GetHCLKFreq>
 80037a4:	4602      	mov	r2, r0
 80037a6:	4b05      	ldr	r3, [pc, #20]	@ (80037bc <HAL_RCC_GetPCLK1Freq+0x20>)
 80037a8:	689b      	ldr	r3, [r3, #8]
 80037aa:	0a9b      	lsrs	r3, r3, #10
 80037ac:	f003 0307 	and.w	r3, r3, #7
 80037b0:	4903      	ldr	r1, [pc, #12]	@ (80037c0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80037b2:	5ccb      	ldrb	r3, [r1, r3]
 80037b4:	fa22 f303 	lsr.w	r3, r2, r3
 80037b8:	4618      	mov	r0, r3
 80037ba:	bd80      	pop	{r7, pc}
 80037bc:	40023800 	.word	0x40023800
 80037c0:	080089a4 	.word	0x080089a4

080037c4 <HAL_RCC_GetPCLK2Freq>:
 80037c4:	b580      	push	{r7, lr}
 80037c6:	af00      	add	r7, sp, #0
 80037c8:	f7ff ffdc 	bl	8003784 <HAL_RCC_GetHCLKFreq>
 80037cc:	4602      	mov	r2, r0
 80037ce:	4b05      	ldr	r3, [pc, #20]	@ (80037e4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80037d0:	689b      	ldr	r3, [r3, #8]
 80037d2:	0b5b      	lsrs	r3, r3, #13
 80037d4:	f003 0307 	and.w	r3, r3, #7
 80037d8:	4903      	ldr	r1, [pc, #12]	@ (80037e8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80037da:	5ccb      	ldrb	r3, [r1, r3]
 80037dc:	fa22 f303 	lsr.w	r3, r2, r3
 80037e0:	4618      	mov	r0, r3
 80037e2:	bd80      	pop	{r7, pc}
 80037e4:	40023800 	.word	0x40023800
 80037e8:	080089a4 	.word	0x080089a4

080037ec <HAL_RCC_GetSysClockFreq>:
 80037ec:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80037f0:	b0a6      	sub	sp, #152	@ 0x98
 80037f2:	af00      	add	r7, sp, #0
 80037f4:	2300      	movs	r3, #0
 80037f6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80037fa:	2300      	movs	r3, #0
 80037fc:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003800:	2300      	movs	r3, #0
 8003802:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003806:	2300      	movs	r3, #0
 8003808:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800380c:	2300      	movs	r3, #0
 800380e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003812:	4bc8      	ldr	r3, [pc, #800]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 8003814:	689b      	ldr	r3, [r3, #8]
 8003816:	f003 030c 	and.w	r3, r3, #12
 800381a:	2b0c      	cmp	r3, #12
 800381c:	f200 817e 	bhi.w	8003b1c <HAL_RCC_GetSysClockFreq+0x330>
 8003820:	a201      	add	r2, pc, #4	@ (adr r2, 8003828 <HAL_RCC_GetSysClockFreq+0x3c>)
 8003822:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003826:	bf00      	nop
 8003828:	0800385d 	.word	0x0800385d
 800382c:	08003b1d 	.word	0x08003b1d
 8003830:	08003b1d 	.word	0x08003b1d
 8003834:	08003b1d 	.word	0x08003b1d
 8003838:	08003865 	.word	0x08003865
 800383c:	08003b1d 	.word	0x08003b1d
 8003840:	08003b1d 	.word	0x08003b1d
 8003844:	08003b1d 	.word	0x08003b1d
 8003848:	0800386d 	.word	0x0800386d
 800384c:	08003b1d 	.word	0x08003b1d
 8003850:	08003b1d 	.word	0x08003b1d
 8003854:	08003b1d 	.word	0x08003b1d
 8003858:	080039d7 	.word	0x080039d7
 800385c:	4bb6      	ldr	r3, [pc, #728]	@ (8003b38 <HAL_RCC_GetSysClockFreq+0x34c>)
 800385e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003862:	e15f      	b.n	8003b24 <HAL_RCC_GetSysClockFreq+0x338>
 8003864:	4bb5      	ldr	r3, [pc, #724]	@ (8003b3c <HAL_RCC_GetSysClockFreq+0x350>)
 8003866:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800386a:	e15b      	b.n	8003b24 <HAL_RCC_GetSysClockFreq+0x338>
 800386c:	4bb1      	ldr	r3, [pc, #708]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 800386e:	685b      	ldr	r3, [r3, #4]
 8003870:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003874:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003878:	4bae      	ldr	r3, [pc, #696]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 800387a:	685b      	ldr	r3, [r3, #4]
 800387c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003880:	2b00      	cmp	r3, #0
 8003882:	d031      	beq.n	80038e8 <HAL_RCC_GetSysClockFreq+0xfc>
 8003884:	4bab      	ldr	r3, [pc, #684]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 8003886:	685b      	ldr	r3, [r3, #4]
 8003888:	099b      	lsrs	r3, r3, #6
 800388a:	2200      	movs	r2, #0
 800388c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800388e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003890:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003892:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003896:	663b      	str	r3, [r7, #96]	@ 0x60
 8003898:	2300      	movs	r3, #0
 800389a:	667b      	str	r3, [r7, #100]	@ 0x64
 800389c:	4ba7      	ldr	r3, [pc, #668]	@ (8003b3c <HAL_RCC_GetSysClockFreq+0x350>)
 800389e:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80038a2:	462a      	mov	r2, r5
 80038a4:	fb03 f202 	mul.w	r2, r3, r2
 80038a8:	2300      	movs	r3, #0
 80038aa:	4621      	mov	r1, r4
 80038ac:	fb01 f303 	mul.w	r3, r1, r3
 80038b0:	4413      	add	r3, r2
 80038b2:	4aa2      	ldr	r2, [pc, #648]	@ (8003b3c <HAL_RCC_GetSysClockFreq+0x350>)
 80038b4:	4621      	mov	r1, r4
 80038b6:	fba1 1202 	umull	r1, r2, r1, r2
 80038ba:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80038bc:	460a      	mov	r2, r1
 80038be:	67ba      	str	r2, [r7, #120]	@ 0x78
 80038c0:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 80038c2:	4413      	add	r3, r2
 80038c4:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80038c6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80038ca:	2200      	movs	r2, #0
 80038cc:	65bb      	str	r3, [r7, #88]	@ 0x58
 80038ce:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80038d0:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80038d4:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 80038d8:	f7fc fcf2 	bl	80002c0 <__aeabi_uldivmod>
 80038dc:	4602      	mov	r2, r0
 80038de:	460b      	mov	r3, r1
 80038e0:	4613      	mov	r3, r2
 80038e2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80038e6:	e064      	b.n	80039b2 <HAL_RCC_GetSysClockFreq+0x1c6>
 80038e8:	4b92      	ldr	r3, [pc, #584]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 80038ea:	685b      	ldr	r3, [r3, #4]
 80038ec:	099b      	lsrs	r3, r3, #6
 80038ee:	2200      	movs	r2, #0
 80038f0:	653b      	str	r3, [r7, #80]	@ 0x50
 80038f2:	657a      	str	r2, [r7, #84]	@ 0x54
 80038f4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80038f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80038fa:	64bb      	str	r3, [r7, #72]	@ 0x48
 80038fc:	2300      	movs	r3, #0
 80038fe:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003900:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 8003904:	4622      	mov	r2, r4
 8003906:	462b      	mov	r3, r5
 8003908:	f04f 0000 	mov.w	r0, #0
 800390c:	f04f 0100 	mov.w	r1, #0
 8003910:	0159      	lsls	r1, r3, #5
 8003912:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003916:	0150      	lsls	r0, r2, #5
 8003918:	4602      	mov	r2, r0
 800391a:	460b      	mov	r3, r1
 800391c:	4621      	mov	r1, r4
 800391e:	1a51      	subs	r1, r2, r1
 8003920:	6139      	str	r1, [r7, #16]
 8003922:	4629      	mov	r1, r5
 8003924:	eb63 0301 	sbc.w	r3, r3, r1
 8003928:	617b      	str	r3, [r7, #20]
 800392a:	f04f 0200 	mov.w	r2, #0
 800392e:	f04f 0300 	mov.w	r3, #0
 8003932:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003936:	4659      	mov	r1, fp
 8003938:	018b      	lsls	r3, r1, #6
 800393a:	4651      	mov	r1, sl
 800393c:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003940:	4651      	mov	r1, sl
 8003942:	018a      	lsls	r2, r1, #6
 8003944:	4651      	mov	r1, sl
 8003946:	ebb2 0801 	subs.w	r8, r2, r1
 800394a:	4659      	mov	r1, fp
 800394c:	eb63 0901 	sbc.w	r9, r3, r1
 8003950:	f04f 0200 	mov.w	r2, #0
 8003954:	f04f 0300 	mov.w	r3, #0
 8003958:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800395c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003960:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003964:	4690      	mov	r8, r2
 8003966:	4699      	mov	r9, r3
 8003968:	4623      	mov	r3, r4
 800396a:	eb18 0303 	adds.w	r3, r8, r3
 800396e:	60bb      	str	r3, [r7, #8]
 8003970:	462b      	mov	r3, r5
 8003972:	eb49 0303 	adc.w	r3, r9, r3
 8003976:	60fb      	str	r3, [r7, #12]
 8003978:	f04f 0200 	mov.w	r2, #0
 800397c:	f04f 0300 	mov.w	r3, #0
 8003980:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003984:	4629      	mov	r1, r5
 8003986:	028b      	lsls	r3, r1, #10
 8003988:	4621      	mov	r1, r4
 800398a:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800398e:	4621      	mov	r1, r4
 8003990:	028a      	lsls	r2, r1, #10
 8003992:	4610      	mov	r0, r2
 8003994:	4619      	mov	r1, r3
 8003996:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800399a:	2200      	movs	r2, #0
 800399c:	643b      	str	r3, [r7, #64]	@ 0x40
 800399e:	647a      	str	r2, [r7, #68]	@ 0x44
 80039a0:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80039a4:	f7fc fc8c 	bl	80002c0 <__aeabi_uldivmod>
 80039a8:	4602      	mov	r2, r0
 80039aa:	460b      	mov	r3, r1
 80039ac:	4613      	mov	r3, r2
 80039ae:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80039b2:	4b60      	ldr	r3, [pc, #384]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 80039b4:	685b      	ldr	r3, [r3, #4]
 80039b6:	0c1b      	lsrs	r3, r3, #16
 80039b8:	f003 0303 	and.w	r3, r3, #3
 80039bc:	3301      	adds	r3, #1
 80039be:	005b      	lsls	r3, r3, #1
 80039c0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80039c4:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80039c8:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80039cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80039d0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80039d4:	e0a6      	b.n	8003b24 <HAL_RCC_GetSysClockFreq+0x338>
 80039d6:	4b57      	ldr	r3, [pc, #348]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 80039d8:	685b      	ldr	r3, [r3, #4]
 80039da:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80039de:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80039e2:	4b54      	ldr	r3, [pc, #336]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 80039e4:	685b      	ldr	r3, [r3, #4]
 80039e6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d02a      	beq.n	8003a44 <HAL_RCC_GetSysClockFreq+0x258>
 80039ee:	4b51      	ldr	r3, [pc, #324]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 80039f0:	685b      	ldr	r3, [r3, #4]
 80039f2:	099b      	lsrs	r3, r3, #6
 80039f4:	2200      	movs	r2, #0
 80039f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80039f8:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80039fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80039fc:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003a00:	2100      	movs	r1, #0
 8003a02:	4b4e      	ldr	r3, [pc, #312]	@ (8003b3c <HAL_RCC_GetSysClockFreq+0x350>)
 8003a04:	fb03 f201 	mul.w	r2, r3, r1
 8003a08:	2300      	movs	r3, #0
 8003a0a:	fb00 f303 	mul.w	r3, r0, r3
 8003a0e:	4413      	add	r3, r2
 8003a10:	4a4a      	ldr	r2, [pc, #296]	@ (8003b3c <HAL_RCC_GetSysClockFreq+0x350>)
 8003a12:	fba0 1202 	umull	r1, r2, r0, r2
 8003a16:	677a      	str	r2, [r7, #116]	@ 0x74
 8003a18:	460a      	mov	r2, r1
 8003a1a:	673a      	str	r2, [r7, #112]	@ 0x70
 8003a1c:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8003a1e:	4413      	add	r3, r2
 8003a20:	677b      	str	r3, [r7, #116]	@ 0x74
 8003a22:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003a26:	2200      	movs	r2, #0
 8003a28:	633b      	str	r3, [r7, #48]	@ 0x30
 8003a2a:	637a      	str	r2, [r7, #52]	@ 0x34
 8003a2c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8003a30:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8003a34:	f7fc fc44 	bl	80002c0 <__aeabi_uldivmod>
 8003a38:	4602      	mov	r2, r0
 8003a3a:	460b      	mov	r3, r1
 8003a3c:	4613      	mov	r3, r2
 8003a3e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003a42:	e05b      	b.n	8003afc <HAL_RCC_GetSysClockFreq+0x310>
 8003a44:	4b3b      	ldr	r3, [pc, #236]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 8003a46:	685b      	ldr	r3, [r3, #4]
 8003a48:	099b      	lsrs	r3, r3, #6
 8003a4a:	2200      	movs	r2, #0
 8003a4c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003a4e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003a50:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003a52:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003a56:	623b      	str	r3, [r7, #32]
 8003a58:	2300      	movs	r3, #0
 8003a5a:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a5c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003a60:	4642      	mov	r2, r8
 8003a62:	464b      	mov	r3, r9
 8003a64:	f04f 0000 	mov.w	r0, #0
 8003a68:	f04f 0100 	mov.w	r1, #0
 8003a6c:	0159      	lsls	r1, r3, #5
 8003a6e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003a72:	0150      	lsls	r0, r2, #5
 8003a74:	4602      	mov	r2, r0
 8003a76:	460b      	mov	r3, r1
 8003a78:	4641      	mov	r1, r8
 8003a7a:	ebb2 0a01 	subs.w	sl, r2, r1
 8003a7e:	4649      	mov	r1, r9
 8003a80:	eb63 0b01 	sbc.w	fp, r3, r1
 8003a84:	f04f 0200 	mov.w	r2, #0
 8003a88:	f04f 0300 	mov.w	r3, #0
 8003a8c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003a90:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003a94:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003a98:	ebb2 040a 	subs.w	r4, r2, sl
 8003a9c:	eb63 050b 	sbc.w	r5, r3, fp
 8003aa0:	f04f 0200 	mov.w	r2, #0
 8003aa4:	f04f 0300 	mov.w	r3, #0
 8003aa8:	00eb      	lsls	r3, r5, #3
 8003aaa:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003aae:	00e2      	lsls	r2, r4, #3
 8003ab0:	4614      	mov	r4, r2
 8003ab2:	461d      	mov	r5, r3
 8003ab4:	4643      	mov	r3, r8
 8003ab6:	18e3      	adds	r3, r4, r3
 8003ab8:	603b      	str	r3, [r7, #0]
 8003aba:	464b      	mov	r3, r9
 8003abc:	eb45 0303 	adc.w	r3, r5, r3
 8003ac0:	607b      	str	r3, [r7, #4]
 8003ac2:	f04f 0200 	mov.w	r2, #0
 8003ac6:	f04f 0300 	mov.w	r3, #0
 8003aca:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003ace:	4629      	mov	r1, r5
 8003ad0:	028b      	lsls	r3, r1, #10
 8003ad2:	4621      	mov	r1, r4
 8003ad4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003ad8:	4621      	mov	r1, r4
 8003ada:	028a      	lsls	r2, r1, #10
 8003adc:	4610      	mov	r0, r2
 8003ade:	4619      	mov	r1, r3
 8003ae0:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003ae4:	2200      	movs	r2, #0
 8003ae6:	61bb      	str	r3, [r7, #24]
 8003ae8:	61fa      	str	r2, [r7, #28]
 8003aea:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003aee:	f7fc fbe7 	bl	80002c0 <__aeabi_uldivmod>
 8003af2:	4602      	mov	r2, r0
 8003af4:	460b      	mov	r3, r1
 8003af6:	4613      	mov	r3, r2
 8003af8:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003afc:	4b0d      	ldr	r3, [pc, #52]	@ (8003b34 <HAL_RCC_GetSysClockFreq+0x348>)
 8003afe:	685b      	ldr	r3, [r3, #4]
 8003b00:	0f1b      	lsrs	r3, r3, #28
 8003b02:	f003 0307 	and.w	r3, r3, #7
 8003b06:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003b0a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8003b0e:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003b12:	fbb2 f3f3 	udiv	r3, r2, r3
 8003b16:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003b1a:	e003      	b.n	8003b24 <HAL_RCC_GetSysClockFreq+0x338>
 8003b1c:	4b06      	ldr	r3, [pc, #24]	@ (8003b38 <HAL_RCC_GetSysClockFreq+0x34c>)
 8003b1e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003b22:	bf00      	nop
 8003b24:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003b28:	4618      	mov	r0, r3
 8003b2a:	3798      	adds	r7, #152	@ 0x98
 8003b2c:	46bd      	mov	sp, r7
 8003b2e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003b32:	bf00      	nop
 8003b34:	40023800 	.word	0x40023800
 8003b38:	00f42400 	.word	0x00f42400
 8003b3c:	017d7840 	.word	0x017d7840

08003b40 <HAL_RCC_OscConfig>:
 8003b40:	b580      	push	{r7, lr}
 8003b42:	b086      	sub	sp, #24
 8003b44:	af00      	add	r7, sp, #0
 8003b46:	6078      	str	r0, [r7, #4]
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	2b00      	cmp	r3, #0
 8003b4c:	d101      	bne.n	8003b52 <HAL_RCC_OscConfig+0x12>
 8003b4e:	2301      	movs	r3, #1
 8003b50:	e28d      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	f003 0301 	and.w	r3, r3, #1
 8003b5a:	2b00      	cmp	r3, #0
 8003b5c:	f000 8083 	beq.w	8003c66 <HAL_RCC_OscConfig+0x126>
 8003b60:	4b94      	ldr	r3, [pc, #592]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003b62:	689b      	ldr	r3, [r3, #8]
 8003b64:	f003 030c 	and.w	r3, r3, #12
 8003b68:	2b04      	cmp	r3, #4
 8003b6a:	d019      	beq.n	8003ba0 <HAL_RCC_OscConfig+0x60>
 8003b6c:	4b91      	ldr	r3, [pc, #580]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003b6e:	689b      	ldr	r3, [r3, #8]
 8003b70:	f003 030c 	and.w	r3, r3, #12
 8003b74:	2b08      	cmp	r3, #8
 8003b76:	d106      	bne.n	8003b86 <HAL_RCC_OscConfig+0x46>
 8003b78:	4b8e      	ldr	r3, [pc, #568]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003b7a:	685b      	ldr	r3, [r3, #4]
 8003b7c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003b80:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003b84:	d00c      	beq.n	8003ba0 <HAL_RCC_OscConfig+0x60>
 8003b86:	4b8b      	ldr	r3, [pc, #556]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003b88:	689b      	ldr	r3, [r3, #8]
 8003b8a:	f003 030c 	and.w	r3, r3, #12
 8003b8e:	2b0c      	cmp	r3, #12
 8003b90:	d112      	bne.n	8003bb8 <HAL_RCC_OscConfig+0x78>
 8003b92:	4b88      	ldr	r3, [pc, #544]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003b94:	685b      	ldr	r3, [r3, #4]
 8003b96:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003b9a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003b9e:	d10b      	bne.n	8003bb8 <HAL_RCC_OscConfig+0x78>
 8003ba0:	4b84      	ldr	r3, [pc, #528]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d05b      	beq.n	8003c64 <HAL_RCC_OscConfig+0x124>
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	685b      	ldr	r3, [r3, #4]
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	d157      	bne.n	8003c64 <HAL_RCC_OscConfig+0x124>
 8003bb4:	2301      	movs	r3, #1
 8003bb6:	e25a      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	685b      	ldr	r3, [r3, #4]
 8003bbc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003bc0:	d106      	bne.n	8003bd0 <HAL_RCC_OscConfig+0x90>
 8003bc2:	4b7c      	ldr	r3, [pc, #496]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	4a7b      	ldr	r2, [pc, #492]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003bc8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003bcc:	6013      	str	r3, [r2, #0]
 8003bce:	e01d      	b.n	8003c0c <HAL_RCC_OscConfig+0xcc>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	685b      	ldr	r3, [r3, #4]
 8003bd4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003bd8:	d10c      	bne.n	8003bf4 <HAL_RCC_OscConfig+0xb4>
 8003bda:	4b76      	ldr	r3, [pc, #472]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	4a75      	ldr	r2, [pc, #468]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003be0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003be4:	6013      	str	r3, [r2, #0]
 8003be6:	4b73      	ldr	r3, [pc, #460]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	4a72      	ldr	r2, [pc, #456]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003bec:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003bf0:	6013      	str	r3, [r2, #0]
 8003bf2:	e00b      	b.n	8003c0c <HAL_RCC_OscConfig+0xcc>
 8003bf4:	4b6f      	ldr	r3, [pc, #444]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	4a6e      	ldr	r2, [pc, #440]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003bfa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003bfe:	6013      	str	r3, [r2, #0]
 8003c00:	4b6c      	ldr	r3, [pc, #432]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	4a6b      	ldr	r2, [pc, #428]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c06:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003c0a:	6013      	str	r3, [r2, #0]
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	685b      	ldr	r3, [r3, #4]
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d013      	beq.n	8003c3c <HAL_RCC_OscConfig+0xfc>
 8003c14:	f7fe fe58 	bl	80028c8 <HAL_GetTick>
 8003c18:	6138      	str	r0, [r7, #16]
 8003c1a:	e008      	b.n	8003c2e <HAL_RCC_OscConfig+0xee>
 8003c1c:	f7fe fe54 	bl	80028c8 <HAL_GetTick>
 8003c20:	4602      	mov	r2, r0
 8003c22:	693b      	ldr	r3, [r7, #16]
 8003c24:	1ad3      	subs	r3, r2, r3
 8003c26:	2b64      	cmp	r3, #100	@ 0x64
 8003c28:	d901      	bls.n	8003c2e <HAL_RCC_OscConfig+0xee>
 8003c2a:	2303      	movs	r3, #3
 8003c2c:	e21f      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003c2e:	4b61      	ldr	r3, [pc, #388]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003c36:	2b00      	cmp	r3, #0
 8003c38:	d0f0      	beq.n	8003c1c <HAL_RCC_OscConfig+0xdc>
 8003c3a:	e014      	b.n	8003c66 <HAL_RCC_OscConfig+0x126>
 8003c3c:	f7fe fe44 	bl	80028c8 <HAL_GetTick>
 8003c40:	6138      	str	r0, [r7, #16]
 8003c42:	e008      	b.n	8003c56 <HAL_RCC_OscConfig+0x116>
 8003c44:	f7fe fe40 	bl	80028c8 <HAL_GetTick>
 8003c48:	4602      	mov	r2, r0
 8003c4a:	693b      	ldr	r3, [r7, #16]
 8003c4c:	1ad3      	subs	r3, r2, r3
 8003c4e:	2b64      	cmp	r3, #100	@ 0x64
 8003c50:	d901      	bls.n	8003c56 <HAL_RCC_OscConfig+0x116>
 8003c52:	2303      	movs	r3, #3
 8003c54:	e20b      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003c56:	4b57      	ldr	r3, [pc, #348]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d1f0      	bne.n	8003c44 <HAL_RCC_OscConfig+0x104>
 8003c62:	e000      	b.n	8003c66 <HAL_RCC_OscConfig+0x126>
 8003c64:	bf00      	nop
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	f003 0302 	and.w	r3, r3, #2
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d06f      	beq.n	8003d52 <HAL_RCC_OscConfig+0x212>
 8003c72:	4b50      	ldr	r3, [pc, #320]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c74:	689b      	ldr	r3, [r3, #8]
 8003c76:	f003 030c 	and.w	r3, r3, #12
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d017      	beq.n	8003cae <HAL_RCC_OscConfig+0x16e>
 8003c7e:	4b4d      	ldr	r3, [pc, #308]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c80:	689b      	ldr	r3, [r3, #8]
 8003c82:	f003 030c 	and.w	r3, r3, #12
 8003c86:	2b08      	cmp	r3, #8
 8003c88:	d105      	bne.n	8003c96 <HAL_RCC_OscConfig+0x156>
 8003c8a:	4b4a      	ldr	r3, [pc, #296]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c8c:	685b      	ldr	r3, [r3, #4]
 8003c8e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d00b      	beq.n	8003cae <HAL_RCC_OscConfig+0x16e>
 8003c96:	4b47      	ldr	r3, [pc, #284]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003c98:	689b      	ldr	r3, [r3, #8]
 8003c9a:	f003 030c 	and.w	r3, r3, #12
 8003c9e:	2b0c      	cmp	r3, #12
 8003ca0:	d11c      	bne.n	8003cdc <HAL_RCC_OscConfig+0x19c>
 8003ca2:	4b44      	ldr	r3, [pc, #272]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003ca4:	685b      	ldr	r3, [r3, #4]
 8003ca6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003caa:	2b00      	cmp	r3, #0
 8003cac:	d116      	bne.n	8003cdc <HAL_RCC_OscConfig+0x19c>
 8003cae:	4b41      	ldr	r3, [pc, #260]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	f003 0302 	and.w	r3, r3, #2
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	d005      	beq.n	8003cc6 <HAL_RCC_OscConfig+0x186>
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	68db      	ldr	r3, [r3, #12]
 8003cbe:	2b01      	cmp	r3, #1
 8003cc0:	d001      	beq.n	8003cc6 <HAL_RCC_OscConfig+0x186>
 8003cc2:	2301      	movs	r3, #1
 8003cc4:	e1d3      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003cc6:	4b3b      	ldr	r3, [pc, #236]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	691b      	ldr	r3, [r3, #16]
 8003cd2:	00db      	lsls	r3, r3, #3
 8003cd4:	4937      	ldr	r1, [pc, #220]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003cd6:	4313      	orrs	r3, r2
 8003cd8:	600b      	str	r3, [r1, #0]
 8003cda:	e03a      	b.n	8003d52 <HAL_RCC_OscConfig+0x212>
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	68db      	ldr	r3, [r3, #12]
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	d020      	beq.n	8003d26 <HAL_RCC_OscConfig+0x1e6>
 8003ce4:	4b34      	ldr	r3, [pc, #208]	@ (8003db8 <HAL_RCC_OscConfig+0x278>)
 8003ce6:	2201      	movs	r2, #1
 8003ce8:	601a      	str	r2, [r3, #0]
 8003cea:	f7fe fded 	bl	80028c8 <HAL_GetTick>
 8003cee:	6138      	str	r0, [r7, #16]
 8003cf0:	e008      	b.n	8003d04 <HAL_RCC_OscConfig+0x1c4>
 8003cf2:	f7fe fde9 	bl	80028c8 <HAL_GetTick>
 8003cf6:	4602      	mov	r2, r0
 8003cf8:	693b      	ldr	r3, [r7, #16]
 8003cfa:	1ad3      	subs	r3, r2, r3
 8003cfc:	2b02      	cmp	r3, #2
 8003cfe:	d901      	bls.n	8003d04 <HAL_RCC_OscConfig+0x1c4>
 8003d00:	2303      	movs	r3, #3
 8003d02:	e1b4      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003d04:	4b2b      	ldr	r3, [pc, #172]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	f003 0302 	and.w	r3, r3, #2
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d0f0      	beq.n	8003cf2 <HAL_RCC_OscConfig+0x1b2>
 8003d10:	4b28      	ldr	r3, [pc, #160]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	691b      	ldr	r3, [r3, #16]
 8003d1c:	00db      	lsls	r3, r3, #3
 8003d1e:	4925      	ldr	r1, [pc, #148]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003d20:	4313      	orrs	r3, r2
 8003d22:	600b      	str	r3, [r1, #0]
 8003d24:	e015      	b.n	8003d52 <HAL_RCC_OscConfig+0x212>
 8003d26:	4b24      	ldr	r3, [pc, #144]	@ (8003db8 <HAL_RCC_OscConfig+0x278>)
 8003d28:	2200      	movs	r2, #0
 8003d2a:	601a      	str	r2, [r3, #0]
 8003d2c:	f7fe fdcc 	bl	80028c8 <HAL_GetTick>
 8003d30:	6138      	str	r0, [r7, #16]
 8003d32:	e008      	b.n	8003d46 <HAL_RCC_OscConfig+0x206>
 8003d34:	f7fe fdc8 	bl	80028c8 <HAL_GetTick>
 8003d38:	4602      	mov	r2, r0
 8003d3a:	693b      	ldr	r3, [r7, #16]
 8003d3c:	1ad3      	subs	r3, r2, r3
 8003d3e:	2b02      	cmp	r3, #2
 8003d40:	d901      	bls.n	8003d46 <HAL_RCC_OscConfig+0x206>
 8003d42:	2303      	movs	r3, #3
 8003d44:	e193      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003d46:	4b1b      	ldr	r3, [pc, #108]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f003 0302 	and.w	r3, r3, #2
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d1f0      	bne.n	8003d34 <HAL_RCC_OscConfig+0x1f4>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	f003 0308 	and.w	r3, r3, #8
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	d036      	beq.n	8003dcc <HAL_RCC_OscConfig+0x28c>
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	695b      	ldr	r3, [r3, #20]
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d016      	beq.n	8003d94 <HAL_RCC_OscConfig+0x254>
 8003d66:	4b15      	ldr	r3, [pc, #84]	@ (8003dbc <HAL_RCC_OscConfig+0x27c>)
 8003d68:	2201      	movs	r2, #1
 8003d6a:	601a      	str	r2, [r3, #0]
 8003d6c:	f7fe fdac 	bl	80028c8 <HAL_GetTick>
 8003d70:	6138      	str	r0, [r7, #16]
 8003d72:	e008      	b.n	8003d86 <HAL_RCC_OscConfig+0x246>
 8003d74:	f7fe fda8 	bl	80028c8 <HAL_GetTick>
 8003d78:	4602      	mov	r2, r0
 8003d7a:	693b      	ldr	r3, [r7, #16]
 8003d7c:	1ad3      	subs	r3, r2, r3
 8003d7e:	2b02      	cmp	r3, #2
 8003d80:	d901      	bls.n	8003d86 <HAL_RCC_OscConfig+0x246>
 8003d82:	2303      	movs	r3, #3
 8003d84:	e173      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003d86:	4b0b      	ldr	r3, [pc, #44]	@ (8003db4 <HAL_RCC_OscConfig+0x274>)
 8003d88:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003d8a:	f003 0302 	and.w	r3, r3, #2
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d0f0      	beq.n	8003d74 <HAL_RCC_OscConfig+0x234>
 8003d92:	e01b      	b.n	8003dcc <HAL_RCC_OscConfig+0x28c>
 8003d94:	4b09      	ldr	r3, [pc, #36]	@ (8003dbc <HAL_RCC_OscConfig+0x27c>)
 8003d96:	2200      	movs	r2, #0
 8003d98:	601a      	str	r2, [r3, #0]
 8003d9a:	f7fe fd95 	bl	80028c8 <HAL_GetTick>
 8003d9e:	6138      	str	r0, [r7, #16]
 8003da0:	e00e      	b.n	8003dc0 <HAL_RCC_OscConfig+0x280>
 8003da2:	f7fe fd91 	bl	80028c8 <HAL_GetTick>
 8003da6:	4602      	mov	r2, r0
 8003da8:	693b      	ldr	r3, [r7, #16]
 8003daa:	1ad3      	subs	r3, r2, r3
 8003dac:	2b02      	cmp	r3, #2
 8003dae:	d907      	bls.n	8003dc0 <HAL_RCC_OscConfig+0x280>
 8003db0:	2303      	movs	r3, #3
 8003db2:	e15c      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003db4:	40023800 	.word	0x40023800
 8003db8:	42470000 	.word	0x42470000
 8003dbc:	42470e80 	.word	0x42470e80
 8003dc0:	4b8a      	ldr	r3, [pc, #552]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003dc2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003dc4:	f003 0302 	and.w	r3, r3, #2
 8003dc8:	2b00      	cmp	r3, #0
 8003dca:	d1ea      	bne.n	8003da2 <HAL_RCC_OscConfig+0x262>
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	f003 0304 	and.w	r3, r3, #4
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	f000 8097 	beq.w	8003f08 <HAL_RCC_OscConfig+0x3c8>
 8003dda:	2300      	movs	r3, #0
 8003ddc:	75fb      	strb	r3, [r7, #23]
 8003dde:	4b83      	ldr	r3, [pc, #524]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003de0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003de2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d10f      	bne.n	8003e0a <HAL_RCC_OscConfig+0x2ca>
 8003dea:	2300      	movs	r3, #0
 8003dec:	60bb      	str	r3, [r7, #8]
 8003dee:	4b7f      	ldr	r3, [pc, #508]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003df0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003df2:	4a7e      	ldr	r2, [pc, #504]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003df4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003df8:	6413      	str	r3, [r2, #64]	@ 0x40
 8003dfa:	4b7c      	ldr	r3, [pc, #496]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003dfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dfe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003e02:	60bb      	str	r3, [r7, #8]
 8003e04:	68bb      	ldr	r3, [r7, #8]
 8003e06:	2301      	movs	r3, #1
 8003e08:	75fb      	strb	r3, [r7, #23]
 8003e0a:	4b79      	ldr	r3, [pc, #484]	@ (8003ff0 <HAL_RCC_OscConfig+0x4b0>)
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d118      	bne.n	8003e48 <HAL_RCC_OscConfig+0x308>
 8003e16:	4b76      	ldr	r3, [pc, #472]	@ (8003ff0 <HAL_RCC_OscConfig+0x4b0>)
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	4a75      	ldr	r2, [pc, #468]	@ (8003ff0 <HAL_RCC_OscConfig+0x4b0>)
 8003e1c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003e20:	6013      	str	r3, [r2, #0]
 8003e22:	f7fe fd51 	bl	80028c8 <HAL_GetTick>
 8003e26:	6138      	str	r0, [r7, #16]
 8003e28:	e008      	b.n	8003e3c <HAL_RCC_OscConfig+0x2fc>
 8003e2a:	f7fe fd4d 	bl	80028c8 <HAL_GetTick>
 8003e2e:	4602      	mov	r2, r0
 8003e30:	693b      	ldr	r3, [r7, #16]
 8003e32:	1ad3      	subs	r3, r2, r3
 8003e34:	2b02      	cmp	r3, #2
 8003e36:	d901      	bls.n	8003e3c <HAL_RCC_OscConfig+0x2fc>
 8003e38:	2303      	movs	r3, #3
 8003e3a:	e118      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003e3c:	4b6c      	ldr	r3, [pc, #432]	@ (8003ff0 <HAL_RCC_OscConfig+0x4b0>)
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e44:	2b00      	cmp	r3, #0
 8003e46:	d0f0      	beq.n	8003e2a <HAL_RCC_OscConfig+0x2ea>
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	689b      	ldr	r3, [r3, #8]
 8003e4c:	2b01      	cmp	r3, #1
 8003e4e:	d106      	bne.n	8003e5e <HAL_RCC_OscConfig+0x31e>
 8003e50:	4b66      	ldr	r3, [pc, #408]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e52:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003e54:	4a65      	ldr	r2, [pc, #404]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e56:	f043 0301 	orr.w	r3, r3, #1
 8003e5a:	6713      	str	r3, [r2, #112]	@ 0x70
 8003e5c:	e01c      	b.n	8003e98 <HAL_RCC_OscConfig+0x358>
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	689b      	ldr	r3, [r3, #8]
 8003e62:	2b05      	cmp	r3, #5
 8003e64:	d10c      	bne.n	8003e80 <HAL_RCC_OscConfig+0x340>
 8003e66:	4b61      	ldr	r3, [pc, #388]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e68:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003e6a:	4a60      	ldr	r2, [pc, #384]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e6c:	f043 0304 	orr.w	r3, r3, #4
 8003e70:	6713      	str	r3, [r2, #112]	@ 0x70
 8003e72:	4b5e      	ldr	r3, [pc, #376]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e74:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003e76:	4a5d      	ldr	r2, [pc, #372]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e78:	f043 0301 	orr.w	r3, r3, #1
 8003e7c:	6713      	str	r3, [r2, #112]	@ 0x70
 8003e7e:	e00b      	b.n	8003e98 <HAL_RCC_OscConfig+0x358>
 8003e80:	4b5a      	ldr	r3, [pc, #360]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e82:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003e84:	4a59      	ldr	r2, [pc, #356]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e86:	f023 0301 	bic.w	r3, r3, #1
 8003e8a:	6713      	str	r3, [r2, #112]	@ 0x70
 8003e8c:	4b57      	ldr	r3, [pc, #348]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e8e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003e90:	4a56      	ldr	r2, [pc, #344]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003e92:	f023 0304 	bic.w	r3, r3, #4
 8003e96:	6713      	str	r3, [r2, #112]	@ 0x70
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	689b      	ldr	r3, [r3, #8]
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	d015      	beq.n	8003ecc <HAL_RCC_OscConfig+0x38c>
 8003ea0:	f7fe fd12 	bl	80028c8 <HAL_GetTick>
 8003ea4:	6138      	str	r0, [r7, #16]
 8003ea6:	e00a      	b.n	8003ebe <HAL_RCC_OscConfig+0x37e>
 8003ea8:	f7fe fd0e 	bl	80028c8 <HAL_GetTick>
 8003eac:	4602      	mov	r2, r0
 8003eae:	693b      	ldr	r3, [r7, #16]
 8003eb0:	1ad3      	subs	r3, r2, r3
 8003eb2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003eb6:	4293      	cmp	r3, r2
 8003eb8:	d901      	bls.n	8003ebe <HAL_RCC_OscConfig+0x37e>
 8003eba:	2303      	movs	r3, #3
 8003ebc:	e0d7      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003ebe:	4b4b      	ldr	r3, [pc, #300]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003ec0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003ec2:	f003 0302 	and.w	r3, r3, #2
 8003ec6:	2b00      	cmp	r3, #0
 8003ec8:	d0ee      	beq.n	8003ea8 <HAL_RCC_OscConfig+0x368>
 8003eca:	e014      	b.n	8003ef6 <HAL_RCC_OscConfig+0x3b6>
 8003ecc:	f7fe fcfc 	bl	80028c8 <HAL_GetTick>
 8003ed0:	6138      	str	r0, [r7, #16]
 8003ed2:	e00a      	b.n	8003eea <HAL_RCC_OscConfig+0x3aa>
 8003ed4:	f7fe fcf8 	bl	80028c8 <HAL_GetTick>
 8003ed8:	4602      	mov	r2, r0
 8003eda:	693b      	ldr	r3, [r7, #16]
 8003edc:	1ad3      	subs	r3, r2, r3
 8003ede:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ee2:	4293      	cmp	r3, r2
 8003ee4:	d901      	bls.n	8003eea <HAL_RCC_OscConfig+0x3aa>
 8003ee6:	2303      	movs	r3, #3
 8003ee8:	e0c1      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003eea:	4b40      	ldr	r3, [pc, #256]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003eec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003eee:	f003 0302 	and.w	r3, r3, #2
 8003ef2:	2b00      	cmp	r3, #0
 8003ef4:	d1ee      	bne.n	8003ed4 <HAL_RCC_OscConfig+0x394>
 8003ef6:	7dfb      	ldrb	r3, [r7, #23]
 8003ef8:	2b01      	cmp	r3, #1
 8003efa:	d105      	bne.n	8003f08 <HAL_RCC_OscConfig+0x3c8>
 8003efc:	4b3b      	ldr	r3, [pc, #236]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003efe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f00:	4a3a      	ldr	r2, [pc, #232]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003f02:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003f06:	6413      	str	r3, [r2, #64]	@ 0x40
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	699b      	ldr	r3, [r3, #24]
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	f000 80ad 	beq.w	800406c <HAL_RCC_OscConfig+0x52c>
 8003f12:	4b36      	ldr	r3, [pc, #216]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003f14:	689b      	ldr	r3, [r3, #8]
 8003f16:	f003 030c 	and.w	r3, r3, #12
 8003f1a:	2b08      	cmp	r3, #8
 8003f1c:	d060      	beq.n	8003fe0 <HAL_RCC_OscConfig+0x4a0>
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	699b      	ldr	r3, [r3, #24]
 8003f22:	2b02      	cmp	r3, #2
 8003f24:	d145      	bne.n	8003fb2 <HAL_RCC_OscConfig+0x472>
 8003f26:	4b33      	ldr	r3, [pc, #204]	@ (8003ff4 <HAL_RCC_OscConfig+0x4b4>)
 8003f28:	2200      	movs	r2, #0
 8003f2a:	601a      	str	r2, [r3, #0]
 8003f2c:	f7fe fccc 	bl	80028c8 <HAL_GetTick>
 8003f30:	6138      	str	r0, [r7, #16]
 8003f32:	e008      	b.n	8003f46 <HAL_RCC_OscConfig+0x406>
 8003f34:	f7fe fcc8 	bl	80028c8 <HAL_GetTick>
 8003f38:	4602      	mov	r2, r0
 8003f3a:	693b      	ldr	r3, [r7, #16]
 8003f3c:	1ad3      	subs	r3, r2, r3
 8003f3e:	2b02      	cmp	r3, #2
 8003f40:	d901      	bls.n	8003f46 <HAL_RCC_OscConfig+0x406>
 8003f42:	2303      	movs	r3, #3
 8003f44:	e093      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003f46:	4b29      	ldr	r3, [pc, #164]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003f4e:	2b00      	cmp	r3, #0
 8003f50:	d1f0      	bne.n	8003f34 <HAL_RCC_OscConfig+0x3f4>
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	69da      	ldr	r2, [r3, #28]
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	6a1b      	ldr	r3, [r3, #32]
 8003f5a:	431a      	orrs	r2, r3
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f60:	019b      	lsls	r3, r3, #6
 8003f62:	431a      	orrs	r2, r3
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f68:	085b      	lsrs	r3, r3, #1
 8003f6a:	3b01      	subs	r3, #1
 8003f6c:	041b      	lsls	r3, r3, #16
 8003f6e:	431a      	orrs	r2, r3
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f74:	061b      	lsls	r3, r3, #24
 8003f76:	431a      	orrs	r2, r3
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f7c:	071b      	lsls	r3, r3, #28
 8003f7e:	491b      	ldr	r1, [pc, #108]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003f80:	4313      	orrs	r3, r2
 8003f82:	604b      	str	r3, [r1, #4]
 8003f84:	4b1b      	ldr	r3, [pc, #108]	@ (8003ff4 <HAL_RCC_OscConfig+0x4b4>)
 8003f86:	2201      	movs	r2, #1
 8003f88:	601a      	str	r2, [r3, #0]
 8003f8a:	f7fe fc9d 	bl	80028c8 <HAL_GetTick>
 8003f8e:	6138      	str	r0, [r7, #16]
 8003f90:	e008      	b.n	8003fa4 <HAL_RCC_OscConfig+0x464>
 8003f92:	f7fe fc99 	bl	80028c8 <HAL_GetTick>
 8003f96:	4602      	mov	r2, r0
 8003f98:	693b      	ldr	r3, [r7, #16]
 8003f9a:	1ad3      	subs	r3, r2, r3
 8003f9c:	2b02      	cmp	r3, #2
 8003f9e:	d901      	bls.n	8003fa4 <HAL_RCC_OscConfig+0x464>
 8003fa0:	2303      	movs	r3, #3
 8003fa2:	e064      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003fa4:	4b11      	ldr	r3, [pc, #68]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d0f0      	beq.n	8003f92 <HAL_RCC_OscConfig+0x452>
 8003fb0:	e05c      	b.n	800406c <HAL_RCC_OscConfig+0x52c>
 8003fb2:	4b10      	ldr	r3, [pc, #64]	@ (8003ff4 <HAL_RCC_OscConfig+0x4b4>)
 8003fb4:	2200      	movs	r2, #0
 8003fb6:	601a      	str	r2, [r3, #0]
 8003fb8:	f7fe fc86 	bl	80028c8 <HAL_GetTick>
 8003fbc:	6138      	str	r0, [r7, #16]
 8003fbe:	e008      	b.n	8003fd2 <HAL_RCC_OscConfig+0x492>
 8003fc0:	f7fe fc82 	bl	80028c8 <HAL_GetTick>
 8003fc4:	4602      	mov	r2, r0
 8003fc6:	693b      	ldr	r3, [r7, #16]
 8003fc8:	1ad3      	subs	r3, r2, r3
 8003fca:	2b02      	cmp	r3, #2
 8003fcc:	d901      	bls.n	8003fd2 <HAL_RCC_OscConfig+0x492>
 8003fce:	2303      	movs	r3, #3
 8003fd0:	e04d      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003fd2:	4b06      	ldr	r3, [pc, #24]	@ (8003fec <HAL_RCC_OscConfig+0x4ac>)
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	d1f0      	bne.n	8003fc0 <HAL_RCC_OscConfig+0x480>
 8003fde:	e045      	b.n	800406c <HAL_RCC_OscConfig+0x52c>
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	699b      	ldr	r3, [r3, #24]
 8003fe4:	2b01      	cmp	r3, #1
 8003fe6:	d107      	bne.n	8003ff8 <HAL_RCC_OscConfig+0x4b8>
 8003fe8:	2301      	movs	r3, #1
 8003fea:	e040      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 8003fec:	40023800 	.word	0x40023800
 8003ff0:	40007000 	.word	0x40007000
 8003ff4:	42470060 	.word	0x42470060
 8003ff8:	4b1f      	ldr	r3, [pc, #124]	@ (8004078 <HAL_RCC_OscConfig+0x538>)
 8003ffa:	685b      	ldr	r3, [r3, #4]
 8003ffc:	60fb      	str	r3, [r7, #12]
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	699b      	ldr	r3, [r3, #24]
 8004002:	2b01      	cmp	r3, #1
 8004004:	d030      	beq.n	8004068 <HAL_RCC_OscConfig+0x528>
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	69db      	ldr	r3, [r3, #28]
 8004010:	429a      	cmp	r2, r3
 8004012:	d129      	bne.n	8004068 <HAL_RCC_OscConfig+0x528>
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	6a1b      	ldr	r3, [r3, #32]
 800401e:	429a      	cmp	r2, r3
 8004020:	d122      	bne.n	8004068 <HAL_RCC_OscConfig+0x528>
 8004022:	68fa      	ldr	r2, [r7, #12]
 8004024:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004028:	4013      	ands	r3, r2
 800402a:	687a      	ldr	r2, [r7, #4]
 800402c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800402e:	0192      	lsls	r2, r2, #6
 8004030:	4293      	cmp	r3, r2
 8004032:	d119      	bne.n	8004068 <HAL_RCC_OscConfig+0x528>
 8004034:	68fb      	ldr	r3, [r7, #12]
 8004036:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800403e:	085b      	lsrs	r3, r3, #1
 8004040:	3b01      	subs	r3, #1
 8004042:	041b      	lsls	r3, r3, #16
 8004044:	429a      	cmp	r2, r3
 8004046:	d10f      	bne.n	8004068 <HAL_RCC_OscConfig+0x528>
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004052:	061b      	lsls	r3, r3, #24
 8004054:	429a      	cmp	r2, r3
 8004056:	d107      	bne.n	8004068 <HAL_RCC_OscConfig+0x528>
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004062:	071b      	lsls	r3, r3, #28
 8004064:	429a      	cmp	r2, r3
 8004066:	d001      	beq.n	800406c <HAL_RCC_OscConfig+0x52c>
 8004068:	2301      	movs	r3, #1
 800406a:	e000      	b.n	800406e <HAL_RCC_OscConfig+0x52e>
 800406c:	2300      	movs	r3, #0
 800406e:	4618      	mov	r0, r3
 8004070:	3718      	adds	r7, #24
 8004072:	46bd      	mov	sp, r7
 8004074:	bd80      	pop	{r7, pc}
 8004076:	bf00      	nop
 8004078:	40023800 	.word	0x40023800

0800407c <HAL_SPI_Init>:
 800407c:	b580      	push	{r7, lr}
 800407e:	b082      	sub	sp, #8
 8004080:	af00      	add	r7, sp, #0
 8004082:	6078      	str	r0, [r7, #4]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	2b00      	cmp	r3, #0
 8004088:	d101      	bne.n	800408e <HAL_SPI_Init+0x12>
 800408a:	2301      	movs	r3, #1
 800408c:	e07b      	b.n	8004186 <HAL_SPI_Init+0x10a>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004092:	2b00      	cmp	r3, #0
 8004094:	d108      	bne.n	80040a8 <HAL_SPI_Init+0x2c>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	685b      	ldr	r3, [r3, #4]
 800409a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800409e:	d009      	beq.n	80040b4 <HAL_SPI_Init+0x38>
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	2200      	movs	r2, #0
 80040a4:	61da      	str	r2, [r3, #28]
 80040a6:	e005      	b.n	80040b4 <HAL_SPI_Init+0x38>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	2200      	movs	r2, #0
 80040ac:	611a      	str	r2, [r3, #16]
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	2200      	movs	r2, #0
 80040b2:	615a      	str	r2, [r3, #20]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	2200      	movs	r2, #0
 80040b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80040c0:	b2db      	uxtb	r3, r3
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	d106      	bne.n	80040d4 <HAL_SPI_Init+0x58>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	2200      	movs	r2, #0
 80040ca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80040ce:	6878      	ldr	r0, [r7, #4]
 80040d0:	f7fe f96a 	bl	80023a8 <HAL_SPI_MspInit>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	2202      	movs	r2, #2
 80040d8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	681a      	ldr	r2, [r3, #0]
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	681b      	ldr	r3, [r3, #0]
 80040e6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80040ea:	601a      	str	r2, [r3, #0]
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	685b      	ldr	r3, [r3, #4]
 80040f0:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	689b      	ldr	r3, [r3, #8]
 80040f8:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80040fc:	431a      	orrs	r2, r3
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	68db      	ldr	r3, [r3, #12]
 8004102:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004106:	431a      	orrs	r2, r3
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	691b      	ldr	r3, [r3, #16]
 800410c:	f003 0302 	and.w	r3, r3, #2
 8004110:	431a      	orrs	r2, r3
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	695b      	ldr	r3, [r3, #20]
 8004116:	f003 0301 	and.w	r3, r3, #1
 800411a:	431a      	orrs	r2, r3
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	699b      	ldr	r3, [r3, #24]
 8004120:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004124:	431a      	orrs	r2, r3
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	69db      	ldr	r3, [r3, #28]
 800412a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800412e:	431a      	orrs	r2, r3
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	6a1b      	ldr	r3, [r3, #32]
 8004134:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004138:	ea42 0103 	orr.w	r1, r2, r3
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004140:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	430a      	orrs	r2, r1
 800414a:	601a      	str	r2, [r3, #0]
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	699b      	ldr	r3, [r3, #24]
 8004150:	0c1b      	lsrs	r3, r3, #16
 8004152:	f003 0104 	and.w	r1, r3, #4
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800415a:	f003 0210 	and.w	r2, r3, #16
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	430a      	orrs	r2, r1
 8004164:	605a      	str	r2, [r3, #4]
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	69da      	ldr	r2, [r3, #28]
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004174:	61da      	str	r2, [r3, #28]
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	2200      	movs	r2, #0
 800417a:	655a      	str	r2, [r3, #84]	@ 0x54
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	2201      	movs	r2, #1
 8004180:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004184:	2300      	movs	r3, #0
 8004186:	4618      	mov	r0, r3
 8004188:	3708      	adds	r7, #8
 800418a:	46bd      	mov	sp, r7
 800418c:	bd80      	pop	{r7, pc}

0800418e <HAL_SPI_Transmit>:
 800418e:	b580      	push	{r7, lr}
 8004190:	b088      	sub	sp, #32
 8004192:	af00      	add	r7, sp, #0
 8004194:	60f8      	str	r0, [r7, #12]
 8004196:	60b9      	str	r1, [r7, #8]
 8004198:	603b      	str	r3, [r7, #0]
 800419a:	4613      	mov	r3, r2
 800419c:	80fb      	strh	r3, [r7, #6]
 800419e:	f7fe fb93 	bl	80028c8 <HAL_GetTick>
 80041a2:	61f8      	str	r0, [r7, #28]
 80041a4:	88fb      	ldrh	r3, [r7, #6]
 80041a6:	837b      	strh	r3, [r7, #26]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80041ae:	b2db      	uxtb	r3, r3
 80041b0:	2b01      	cmp	r3, #1
 80041b2:	d001      	beq.n	80041b8 <HAL_SPI_Transmit+0x2a>
 80041b4:	2302      	movs	r3, #2
 80041b6:	e12a      	b.n	800440e <HAL_SPI_Transmit+0x280>
 80041b8:	68bb      	ldr	r3, [r7, #8]
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d002      	beq.n	80041c4 <HAL_SPI_Transmit+0x36>
 80041be:	88fb      	ldrh	r3, [r7, #6]
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d101      	bne.n	80041c8 <HAL_SPI_Transmit+0x3a>
 80041c4:	2301      	movs	r3, #1
 80041c6:	e122      	b.n	800440e <HAL_SPI_Transmit+0x280>
 80041c8:	68fb      	ldr	r3, [r7, #12]
 80041ca:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80041ce:	2b01      	cmp	r3, #1
 80041d0:	d101      	bne.n	80041d6 <HAL_SPI_Transmit+0x48>
 80041d2:	2302      	movs	r3, #2
 80041d4:	e11b      	b.n	800440e <HAL_SPI_Transmit+0x280>
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	2201      	movs	r2, #1
 80041da:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	2203      	movs	r2, #3
 80041e2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80041e6:	68fb      	ldr	r3, [r7, #12]
 80041e8:	2200      	movs	r2, #0
 80041ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80041ec:	68fb      	ldr	r3, [r7, #12]
 80041ee:	68ba      	ldr	r2, [r7, #8]
 80041f0:	631a      	str	r2, [r3, #48]	@ 0x30
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	88fa      	ldrh	r2, [r7, #6]
 80041f6:	869a      	strh	r2, [r3, #52]	@ 0x34
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	88fa      	ldrh	r2, [r7, #6]
 80041fc:	86da      	strh	r2, [r3, #54]	@ 0x36
 80041fe:	68fb      	ldr	r3, [r7, #12]
 8004200:	2200      	movs	r2, #0
 8004202:	639a      	str	r2, [r3, #56]	@ 0x38
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	2200      	movs	r2, #0
 8004208:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800420a:	68fb      	ldr	r3, [r7, #12]
 800420c:	2200      	movs	r2, #0
 800420e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004210:	68fb      	ldr	r3, [r7, #12]
 8004212:	2200      	movs	r2, #0
 8004214:	645a      	str	r2, [r3, #68]	@ 0x44
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	2200      	movs	r2, #0
 800421a:	641a      	str	r2, [r3, #64]	@ 0x40
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	689b      	ldr	r3, [r3, #8]
 8004220:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004224:	d10f      	bne.n	8004246 <HAL_SPI_Transmit+0xb8>
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	681a      	ldr	r2, [r3, #0]
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004234:	601a      	str	r2, [r3, #0]
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	681a      	ldr	r2, [r3, #0]
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004250:	2b40      	cmp	r3, #64	@ 0x40
 8004252:	d007      	beq.n	8004264 <HAL_SPI_Transmit+0xd6>
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	681a      	ldr	r2, [r3, #0]
 800425a:	68fb      	ldr	r3, [r7, #12]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004262:	601a      	str	r2, [r3, #0]
 8004264:	68fb      	ldr	r3, [r7, #12]
 8004266:	68db      	ldr	r3, [r3, #12]
 8004268:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800426c:	d152      	bne.n	8004314 <HAL_SPI_Transmit+0x186>
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	685b      	ldr	r3, [r3, #4]
 8004272:	2b00      	cmp	r3, #0
 8004274:	d002      	beq.n	800427c <HAL_SPI_Transmit+0xee>
 8004276:	8b7b      	ldrh	r3, [r7, #26]
 8004278:	2b01      	cmp	r3, #1
 800427a:	d145      	bne.n	8004308 <HAL_SPI_Transmit+0x17a>
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004280:	881a      	ldrh	r2, [r3, #0]
 8004282:	68fb      	ldr	r3, [r7, #12]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	60da      	str	r2, [r3, #12]
 8004288:	68fb      	ldr	r3, [r7, #12]
 800428a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800428c:	1c9a      	adds	r2, r3, #2
 800428e:	68fb      	ldr	r3, [r7, #12]
 8004290:	631a      	str	r2, [r3, #48]	@ 0x30
 8004292:	68fb      	ldr	r3, [r7, #12]
 8004294:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004296:	b29b      	uxth	r3, r3
 8004298:	3b01      	subs	r3, #1
 800429a:	b29a      	uxth	r2, r3
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	86da      	strh	r2, [r3, #54]	@ 0x36
 80042a0:	e032      	b.n	8004308 <HAL_SPI_Transmit+0x17a>
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	689b      	ldr	r3, [r3, #8]
 80042a8:	f003 0302 	and.w	r3, r3, #2
 80042ac:	2b02      	cmp	r3, #2
 80042ae:	d112      	bne.n	80042d6 <HAL_SPI_Transmit+0x148>
 80042b0:	68fb      	ldr	r3, [r7, #12]
 80042b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80042b4:	881a      	ldrh	r2, [r3, #0]
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	60da      	str	r2, [r3, #12]
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80042c0:	1c9a      	adds	r2, r3, #2
 80042c2:	68fb      	ldr	r3, [r7, #12]
 80042c4:	631a      	str	r2, [r3, #48]	@ 0x30
 80042c6:	68fb      	ldr	r3, [r7, #12]
 80042c8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80042ca:	b29b      	uxth	r3, r3
 80042cc:	3b01      	subs	r3, #1
 80042ce:	b29a      	uxth	r2, r3
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80042d4:	e018      	b.n	8004308 <HAL_SPI_Transmit+0x17a>
 80042d6:	f7fe faf7 	bl	80028c8 <HAL_GetTick>
 80042da:	4602      	mov	r2, r0
 80042dc:	69fb      	ldr	r3, [r7, #28]
 80042de:	1ad3      	subs	r3, r2, r3
 80042e0:	683a      	ldr	r2, [r7, #0]
 80042e2:	429a      	cmp	r2, r3
 80042e4:	d803      	bhi.n	80042ee <HAL_SPI_Transmit+0x160>
 80042e6:	683b      	ldr	r3, [r7, #0]
 80042e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80042ec:	d102      	bne.n	80042f4 <HAL_SPI_Transmit+0x166>
 80042ee:	683b      	ldr	r3, [r7, #0]
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d109      	bne.n	8004308 <HAL_SPI_Transmit+0x17a>
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	2201      	movs	r2, #1
 80042f8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80042fc:	68fb      	ldr	r3, [r7, #12]
 80042fe:	2200      	movs	r2, #0
 8004300:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004304:	2303      	movs	r3, #3
 8004306:	e082      	b.n	800440e <HAL_SPI_Transmit+0x280>
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800430c:	b29b      	uxth	r3, r3
 800430e:	2b00      	cmp	r3, #0
 8004310:	d1c7      	bne.n	80042a2 <HAL_SPI_Transmit+0x114>
 8004312:	e053      	b.n	80043bc <HAL_SPI_Transmit+0x22e>
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	685b      	ldr	r3, [r3, #4]
 8004318:	2b00      	cmp	r3, #0
 800431a:	d002      	beq.n	8004322 <HAL_SPI_Transmit+0x194>
 800431c:	8b7b      	ldrh	r3, [r7, #26]
 800431e:	2b01      	cmp	r3, #1
 8004320:	d147      	bne.n	80043b2 <HAL_SPI_Transmit+0x224>
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	330c      	adds	r3, #12
 800432c:	7812      	ldrb	r2, [r2, #0]
 800432e:	701a      	strb	r2, [r3, #0]
 8004330:	68fb      	ldr	r3, [r7, #12]
 8004332:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004334:	1c5a      	adds	r2, r3, #1
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	631a      	str	r2, [r3, #48]	@ 0x30
 800433a:	68fb      	ldr	r3, [r7, #12]
 800433c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800433e:	b29b      	uxth	r3, r3
 8004340:	3b01      	subs	r3, #1
 8004342:	b29a      	uxth	r2, r3
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004348:	e033      	b.n	80043b2 <HAL_SPI_Transmit+0x224>
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	689b      	ldr	r3, [r3, #8]
 8004350:	f003 0302 	and.w	r3, r3, #2
 8004354:	2b02      	cmp	r3, #2
 8004356:	d113      	bne.n	8004380 <HAL_SPI_Transmit+0x1f2>
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	330c      	adds	r3, #12
 8004362:	7812      	ldrb	r2, [r2, #0]
 8004364:	701a      	strb	r2, [r3, #0]
 8004366:	68fb      	ldr	r3, [r7, #12]
 8004368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800436a:	1c5a      	adds	r2, r3, #1
 800436c:	68fb      	ldr	r3, [r7, #12]
 800436e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004370:	68fb      	ldr	r3, [r7, #12]
 8004372:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004374:	b29b      	uxth	r3, r3
 8004376:	3b01      	subs	r3, #1
 8004378:	b29a      	uxth	r2, r3
 800437a:	68fb      	ldr	r3, [r7, #12]
 800437c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800437e:	e018      	b.n	80043b2 <HAL_SPI_Transmit+0x224>
 8004380:	f7fe faa2 	bl	80028c8 <HAL_GetTick>
 8004384:	4602      	mov	r2, r0
 8004386:	69fb      	ldr	r3, [r7, #28]
 8004388:	1ad3      	subs	r3, r2, r3
 800438a:	683a      	ldr	r2, [r7, #0]
 800438c:	429a      	cmp	r2, r3
 800438e:	d803      	bhi.n	8004398 <HAL_SPI_Transmit+0x20a>
 8004390:	683b      	ldr	r3, [r7, #0]
 8004392:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004396:	d102      	bne.n	800439e <HAL_SPI_Transmit+0x210>
 8004398:	683b      	ldr	r3, [r7, #0]
 800439a:	2b00      	cmp	r3, #0
 800439c:	d109      	bne.n	80043b2 <HAL_SPI_Transmit+0x224>
 800439e:	68fb      	ldr	r3, [r7, #12]
 80043a0:	2201      	movs	r2, #1
 80043a2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	2200      	movs	r2, #0
 80043aa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80043ae:	2303      	movs	r3, #3
 80043b0:	e02d      	b.n	800440e <HAL_SPI_Transmit+0x280>
 80043b2:	68fb      	ldr	r3, [r7, #12]
 80043b4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80043b6:	b29b      	uxth	r3, r3
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d1c6      	bne.n	800434a <HAL_SPI_Transmit+0x1bc>
 80043bc:	69fa      	ldr	r2, [r7, #28]
 80043be:	6839      	ldr	r1, [r7, #0]
 80043c0:	68f8      	ldr	r0, [r7, #12]
 80043c2:	f000 fa59 	bl	8004878 <SPI_EndRxTxTransaction>
 80043c6:	4603      	mov	r3, r0
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d002      	beq.n	80043d2 <HAL_SPI_Transmit+0x244>
 80043cc:	68fb      	ldr	r3, [r7, #12]
 80043ce:	2220      	movs	r2, #32
 80043d0:	655a      	str	r2, [r3, #84]	@ 0x54
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	689b      	ldr	r3, [r3, #8]
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d10a      	bne.n	80043f0 <HAL_SPI_Transmit+0x262>
 80043da:	2300      	movs	r3, #0
 80043dc:	617b      	str	r3, [r7, #20]
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	68db      	ldr	r3, [r3, #12]
 80043e4:	617b      	str	r3, [r7, #20]
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	689b      	ldr	r3, [r3, #8]
 80043ec:	617b      	str	r3, [r7, #20]
 80043ee:	697b      	ldr	r3, [r7, #20]
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	2201      	movs	r2, #1
 80043f4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	2200      	movs	r2, #0
 80043fc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004404:	2b00      	cmp	r3, #0
 8004406:	d001      	beq.n	800440c <HAL_SPI_Transmit+0x27e>
 8004408:	2301      	movs	r3, #1
 800440a:	e000      	b.n	800440e <HAL_SPI_Transmit+0x280>
 800440c:	2300      	movs	r3, #0
 800440e:	4618      	mov	r0, r3
 8004410:	3720      	adds	r7, #32
 8004412:	46bd      	mov	sp, r7
 8004414:	bd80      	pop	{r7, pc}

08004416 <HAL_SPI_TransmitReceive>:
 8004416:	b580      	push	{r7, lr}
 8004418:	b08a      	sub	sp, #40	@ 0x28
 800441a:	af00      	add	r7, sp, #0
 800441c:	60f8      	str	r0, [r7, #12]
 800441e:	60b9      	str	r1, [r7, #8]
 8004420:	607a      	str	r2, [r7, #4]
 8004422:	807b      	strh	r3, [r7, #2]
 8004424:	2301      	movs	r3, #1
 8004426:	627b      	str	r3, [r7, #36]	@ 0x24
 8004428:	f7fe fa4e 	bl	80028c8 <HAL_GetTick>
 800442c:	6238      	str	r0, [r7, #32]
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004434:	77fb      	strb	r3, [r7, #31]
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	685b      	ldr	r3, [r3, #4]
 800443a:	61bb      	str	r3, [r7, #24]
 800443c:	887b      	ldrh	r3, [r7, #2]
 800443e:	82fb      	strh	r3, [r7, #22]
 8004440:	7ffb      	ldrb	r3, [r7, #31]
 8004442:	2b01      	cmp	r3, #1
 8004444:	d00c      	beq.n	8004460 <HAL_SPI_TransmitReceive+0x4a>
 8004446:	69bb      	ldr	r3, [r7, #24]
 8004448:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800444c:	d106      	bne.n	800445c <HAL_SPI_TransmitReceive+0x46>
 800444e:	68fb      	ldr	r3, [r7, #12]
 8004450:	689b      	ldr	r3, [r3, #8]
 8004452:	2b00      	cmp	r3, #0
 8004454:	d102      	bne.n	800445c <HAL_SPI_TransmitReceive+0x46>
 8004456:	7ffb      	ldrb	r3, [r7, #31]
 8004458:	2b04      	cmp	r3, #4
 800445a:	d001      	beq.n	8004460 <HAL_SPI_TransmitReceive+0x4a>
 800445c:	2302      	movs	r3, #2
 800445e:	e17f      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 8004460:	68bb      	ldr	r3, [r7, #8]
 8004462:	2b00      	cmp	r3, #0
 8004464:	d005      	beq.n	8004472 <HAL_SPI_TransmitReceive+0x5c>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	2b00      	cmp	r3, #0
 800446a:	d002      	beq.n	8004472 <HAL_SPI_TransmitReceive+0x5c>
 800446c:	887b      	ldrh	r3, [r7, #2]
 800446e:	2b00      	cmp	r3, #0
 8004470:	d101      	bne.n	8004476 <HAL_SPI_TransmitReceive+0x60>
 8004472:	2301      	movs	r3, #1
 8004474:	e174      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 8004476:	68fb      	ldr	r3, [r7, #12]
 8004478:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800447c:	2b01      	cmp	r3, #1
 800447e:	d101      	bne.n	8004484 <HAL_SPI_TransmitReceive+0x6e>
 8004480:	2302      	movs	r3, #2
 8004482:	e16d      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 8004484:	68fb      	ldr	r3, [r7, #12]
 8004486:	2201      	movs	r2, #1
 8004488:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004492:	b2db      	uxtb	r3, r3
 8004494:	2b04      	cmp	r3, #4
 8004496:	d003      	beq.n	80044a0 <HAL_SPI_TransmitReceive+0x8a>
 8004498:	68fb      	ldr	r3, [r7, #12]
 800449a:	2205      	movs	r2, #5
 800449c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	2200      	movs	r2, #0
 80044a4:	655a      	str	r2, [r3, #84]	@ 0x54
 80044a6:	68fb      	ldr	r3, [r7, #12]
 80044a8:	687a      	ldr	r2, [r7, #4]
 80044aa:	639a      	str	r2, [r3, #56]	@ 0x38
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	887a      	ldrh	r2, [r7, #2]
 80044b0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	887a      	ldrh	r2, [r7, #2]
 80044b6:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	68ba      	ldr	r2, [r7, #8]
 80044bc:	631a      	str	r2, [r3, #48]	@ 0x30
 80044be:	68fb      	ldr	r3, [r7, #12]
 80044c0:	887a      	ldrh	r2, [r7, #2]
 80044c2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80044c4:	68fb      	ldr	r3, [r7, #12]
 80044c6:	887a      	ldrh	r2, [r7, #2]
 80044c8:	869a      	strh	r2, [r3, #52]	@ 0x34
 80044ca:	68fb      	ldr	r3, [r7, #12]
 80044cc:	2200      	movs	r2, #0
 80044ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80044d0:	68fb      	ldr	r3, [r7, #12]
 80044d2:	2200      	movs	r2, #0
 80044d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80044e0:	2b40      	cmp	r3, #64	@ 0x40
 80044e2:	d007      	beq.n	80044f4 <HAL_SPI_TransmitReceive+0xde>
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	681a      	ldr	r2, [r3, #0]
 80044ea:	68fb      	ldr	r3, [r7, #12]
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80044f2:	601a      	str	r2, [r3, #0]
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	68db      	ldr	r3, [r3, #12]
 80044f8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80044fc:	d17e      	bne.n	80045fc <HAL_SPI_TransmitReceive+0x1e6>
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	685b      	ldr	r3, [r3, #4]
 8004502:	2b00      	cmp	r3, #0
 8004504:	d002      	beq.n	800450c <HAL_SPI_TransmitReceive+0xf6>
 8004506:	8afb      	ldrh	r3, [r7, #22]
 8004508:	2b01      	cmp	r3, #1
 800450a:	d16c      	bne.n	80045e6 <HAL_SPI_TransmitReceive+0x1d0>
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004510:	881a      	ldrh	r2, [r3, #0]
 8004512:	68fb      	ldr	r3, [r7, #12]
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	60da      	str	r2, [r3, #12]
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800451c:	1c9a      	adds	r2, r3, #2
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	631a      	str	r2, [r3, #48]	@ 0x30
 8004522:	68fb      	ldr	r3, [r7, #12]
 8004524:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004526:	b29b      	uxth	r3, r3
 8004528:	3b01      	subs	r3, #1
 800452a:	b29a      	uxth	r2, r3
 800452c:	68fb      	ldr	r3, [r7, #12]
 800452e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004530:	e059      	b.n	80045e6 <HAL_SPI_TransmitReceive+0x1d0>
 8004532:	68fb      	ldr	r3, [r7, #12]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	689b      	ldr	r3, [r3, #8]
 8004538:	f003 0302 	and.w	r3, r3, #2
 800453c:	2b02      	cmp	r3, #2
 800453e:	d11b      	bne.n	8004578 <HAL_SPI_TransmitReceive+0x162>
 8004540:	68fb      	ldr	r3, [r7, #12]
 8004542:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004544:	b29b      	uxth	r3, r3
 8004546:	2b00      	cmp	r3, #0
 8004548:	d016      	beq.n	8004578 <HAL_SPI_TransmitReceive+0x162>
 800454a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800454c:	2b01      	cmp	r3, #1
 800454e:	d113      	bne.n	8004578 <HAL_SPI_TransmitReceive+0x162>
 8004550:	68fb      	ldr	r3, [r7, #12]
 8004552:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004554:	881a      	ldrh	r2, [r3, #0]
 8004556:	68fb      	ldr	r3, [r7, #12]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	60da      	str	r2, [r3, #12]
 800455c:	68fb      	ldr	r3, [r7, #12]
 800455e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004560:	1c9a      	adds	r2, r3, #2
 8004562:	68fb      	ldr	r3, [r7, #12]
 8004564:	631a      	str	r2, [r3, #48]	@ 0x30
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800456a:	b29b      	uxth	r3, r3
 800456c:	3b01      	subs	r3, #1
 800456e:	b29a      	uxth	r2, r3
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004574:	2300      	movs	r3, #0
 8004576:	627b      	str	r3, [r7, #36]	@ 0x24
 8004578:	68fb      	ldr	r3, [r7, #12]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	689b      	ldr	r3, [r3, #8]
 800457e:	f003 0301 	and.w	r3, r3, #1
 8004582:	2b01      	cmp	r3, #1
 8004584:	d119      	bne.n	80045ba <HAL_SPI_TransmitReceive+0x1a4>
 8004586:	68fb      	ldr	r3, [r7, #12]
 8004588:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800458a:	b29b      	uxth	r3, r3
 800458c:	2b00      	cmp	r3, #0
 800458e:	d014      	beq.n	80045ba <HAL_SPI_TransmitReceive+0x1a4>
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	68da      	ldr	r2, [r3, #12]
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800459a:	b292      	uxth	r2, r2
 800459c:	801a      	strh	r2, [r3, #0]
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80045a2:	1c9a      	adds	r2, r3, #2
 80045a4:	68fb      	ldr	r3, [r7, #12]
 80045a6:	639a      	str	r2, [r3, #56]	@ 0x38
 80045a8:	68fb      	ldr	r3, [r7, #12]
 80045aa:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80045ac:	b29b      	uxth	r3, r3
 80045ae:	3b01      	subs	r3, #1
 80045b0:	b29a      	uxth	r2, r3
 80045b2:	68fb      	ldr	r3, [r7, #12]
 80045b4:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80045b6:	2301      	movs	r3, #1
 80045b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80045ba:	f7fe f985 	bl	80028c8 <HAL_GetTick>
 80045be:	4602      	mov	r2, r0
 80045c0:	6a3b      	ldr	r3, [r7, #32]
 80045c2:	1ad3      	subs	r3, r2, r3
 80045c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80045c6:	429a      	cmp	r2, r3
 80045c8:	d80d      	bhi.n	80045e6 <HAL_SPI_TransmitReceive+0x1d0>
 80045ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80045d0:	d009      	beq.n	80045e6 <HAL_SPI_TransmitReceive+0x1d0>
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	2201      	movs	r2, #1
 80045d6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80045da:	68fb      	ldr	r3, [r7, #12]
 80045dc:	2200      	movs	r2, #0
 80045de:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80045e2:	2303      	movs	r3, #3
 80045e4:	e0bc      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80045ea:	b29b      	uxth	r3, r3
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	d1a0      	bne.n	8004532 <HAL_SPI_TransmitReceive+0x11c>
 80045f0:	68fb      	ldr	r3, [r7, #12]
 80045f2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80045f4:	b29b      	uxth	r3, r3
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	d19b      	bne.n	8004532 <HAL_SPI_TransmitReceive+0x11c>
 80045fa:	e082      	b.n	8004702 <HAL_SPI_TransmitReceive+0x2ec>
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	685b      	ldr	r3, [r3, #4]
 8004600:	2b00      	cmp	r3, #0
 8004602:	d002      	beq.n	800460a <HAL_SPI_TransmitReceive+0x1f4>
 8004604:	8afb      	ldrh	r3, [r7, #22]
 8004606:	2b01      	cmp	r3, #1
 8004608:	d171      	bne.n	80046ee <HAL_SPI_TransmitReceive+0x2d8>
 800460a:	68fb      	ldr	r3, [r7, #12]
 800460c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	330c      	adds	r3, #12
 8004614:	7812      	ldrb	r2, [r2, #0]
 8004616:	701a      	strb	r2, [r3, #0]
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800461c:	1c5a      	adds	r2, r3, #1
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	631a      	str	r2, [r3, #48]	@ 0x30
 8004622:	68fb      	ldr	r3, [r7, #12]
 8004624:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004626:	b29b      	uxth	r3, r3
 8004628:	3b01      	subs	r3, #1
 800462a:	b29a      	uxth	r2, r3
 800462c:	68fb      	ldr	r3, [r7, #12]
 800462e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004630:	e05d      	b.n	80046ee <HAL_SPI_TransmitReceive+0x2d8>
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	689b      	ldr	r3, [r3, #8]
 8004638:	f003 0302 	and.w	r3, r3, #2
 800463c:	2b02      	cmp	r3, #2
 800463e:	d11c      	bne.n	800467a <HAL_SPI_TransmitReceive+0x264>
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004644:	b29b      	uxth	r3, r3
 8004646:	2b00      	cmp	r3, #0
 8004648:	d017      	beq.n	800467a <HAL_SPI_TransmitReceive+0x264>
 800464a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800464c:	2b01      	cmp	r3, #1
 800464e:	d114      	bne.n	800467a <HAL_SPI_TransmitReceive+0x264>
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	330c      	adds	r3, #12
 800465a:	7812      	ldrb	r2, [r2, #0]
 800465c:	701a      	strb	r2, [r3, #0]
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004662:	1c5a      	adds	r2, r3, #1
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	631a      	str	r2, [r3, #48]	@ 0x30
 8004668:	68fb      	ldr	r3, [r7, #12]
 800466a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800466c:	b29b      	uxth	r3, r3
 800466e:	3b01      	subs	r3, #1
 8004670:	b29a      	uxth	r2, r3
 8004672:	68fb      	ldr	r3, [r7, #12]
 8004674:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004676:	2300      	movs	r3, #0
 8004678:	627b      	str	r3, [r7, #36]	@ 0x24
 800467a:	68fb      	ldr	r3, [r7, #12]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	689b      	ldr	r3, [r3, #8]
 8004680:	f003 0301 	and.w	r3, r3, #1
 8004684:	2b01      	cmp	r3, #1
 8004686:	d119      	bne.n	80046bc <HAL_SPI_TransmitReceive+0x2a6>
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800468c:	b29b      	uxth	r3, r3
 800468e:	2b00      	cmp	r3, #0
 8004690:	d014      	beq.n	80046bc <HAL_SPI_TransmitReceive+0x2a6>
 8004692:	68fb      	ldr	r3, [r7, #12]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	68da      	ldr	r2, [r3, #12]
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800469c:	b2d2      	uxtb	r2, r2
 800469e:	701a      	strb	r2, [r3, #0]
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80046a4:	1c5a      	adds	r2, r3, #1
 80046a6:	68fb      	ldr	r3, [r7, #12]
 80046a8:	639a      	str	r2, [r3, #56]	@ 0x38
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80046ae:	b29b      	uxth	r3, r3
 80046b0:	3b01      	subs	r3, #1
 80046b2:	b29a      	uxth	r2, r3
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80046b8:	2301      	movs	r3, #1
 80046ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80046bc:	f7fe f904 	bl	80028c8 <HAL_GetTick>
 80046c0:	4602      	mov	r2, r0
 80046c2:	6a3b      	ldr	r3, [r7, #32]
 80046c4:	1ad3      	subs	r3, r2, r3
 80046c6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80046c8:	429a      	cmp	r2, r3
 80046ca:	d803      	bhi.n	80046d4 <HAL_SPI_TransmitReceive+0x2be>
 80046cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046d2:	d102      	bne.n	80046da <HAL_SPI_TransmitReceive+0x2c4>
 80046d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046d6:	2b00      	cmp	r3, #0
 80046d8:	d109      	bne.n	80046ee <HAL_SPI_TransmitReceive+0x2d8>
 80046da:	68fb      	ldr	r3, [r7, #12]
 80046dc:	2201      	movs	r2, #1
 80046de:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80046e2:	68fb      	ldr	r3, [r7, #12]
 80046e4:	2200      	movs	r2, #0
 80046e6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80046ea:	2303      	movs	r3, #3
 80046ec:	e038      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80046f2:	b29b      	uxth	r3, r3
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	d19c      	bne.n	8004632 <HAL_SPI_TransmitReceive+0x21c>
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80046fc:	b29b      	uxth	r3, r3
 80046fe:	2b00      	cmp	r3, #0
 8004700:	d197      	bne.n	8004632 <HAL_SPI_TransmitReceive+0x21c>
 8004702:	6a3a      	ldr	r2, [r7, #32]
 8004704:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004706:	68f8      	ldr	r0, [r7, #12]
 8004708:	f000 f8b6 	bl	8004878 <SPI_EndRxTxTransaction>
 800470c:	4603      	mov	r3, r0
 800470e:	2b00      	cmp	r3, #0
 8004710:	d008      	beq.n	8004724 <HAL_SPI_TransmitReceive+0x30e>
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	2220      	movs	r2, #32
 8004716:	655a      	str	r2, [r3, #84]	@ 0x54
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	2200      	movs	r2, #0
 800471c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004720:	2301      	movs	r3, #1
 8004722:	e01d      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	689b      	ldr	r3, [r3, #8]
 8004728:	2b00      	cmp	r3, #0
 800472a:	d10a      	bne.n	8004742 <HAL_SPI_TransmitReceive+0x32c>
 800472c:	2300      	movs	r3, #0
 800472e:	613b      	str	r3, [r7, #16]
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	68db      	ldr	r3, [r3, #12]
 8004736:	613b      	str	r3, [r7, #16]
 8004738:	68fb      	ldr	r3, [r7, #12]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	689b      	ldr	r3, [r3, #8]
 800473e:	613b      	str	r3, [r7, #16]
 8004740:	693b      	ldr	r3, [r7, #16]
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	2201      	movs	r2, #1
 8004746:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800474a:	68fb      	ldr	r3, [r7, #12]
 800474c:	2200      	movs	r2, #0
 800474e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004756:	2b00      	cmp	r3, #0
 8004758:	d001      	beq.n	800475e <HAL_SPI_TransmitReceive+0x348>
 800475a:	2301      	movs	r3, #1
 800475c:	e000      	b.n	8004760 <HAL_SPI_TransmitReceive+0x34a>
 800475e:	2300      	movs	r3, #0
 8004760:	4618      	mov	r0, r3
 8004762:	3728      	adds	r7, #40	@ 0x28
 8004764:	46bd      	mov	sp, r7
 8004766:	bd80      	pop	{r7, pc}

08004768 <SPI_WaitFlagStateUntilTimeout>:
 8004768:	b580      	push	{r7, lr}
 800476a:	b088      	sub	sp, #32
 800476c:	af00      	add	r7, sp, #0
 800476e:	60f8      	str	r0, [r7, #12]
 8004770:	60b9      	str	r1, [r7, #8]
 8004772:	603b      	str	r3, [r7, #0]
 8004774:	4613      	mov	r3, r2
 8004776:	71fb      	strb	r3, [r7, #7]
 8004778:	f7fe f8a6 	bl	80028c8 <HAL_GetTick>
 800477c:	4602      	mov	r2, r0
 800477e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004780:	1a9b      	subs	r3, r3, r2
 8004782:	683a      	ldr	r2, [r7, #0]
 8004784:	4413      	add	r3, r2
 8004786:	61fb      	str	r3, [r7, #28]
 8004788:	f7fe f89e 	bl	80028c8 <HAL_GetTick>
 800478c:	61b8      	str	r0, [r7, #24]
 800478e:	4b39      	ldr	r3, [pc, #228]	@ (8004874 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	015b      	lsls	r3, r3, #5
 8004794:	0d1b      	lsrs	r3, r3, #20
 8004796:	69fa      	ldr	r2, [r7, #28]
 8004798:	fb02 f303 	mul.w	r3, r2, r3
 800479c:	617b      	str	r3, [r7, #20]
 800479e:	e054      	b.n	800484a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80047a0:	683b      	ldr	r3, [r7, #0]
 80047a2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80047a6:	d050      	beq.n	800484a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80047a8:	f7fe f88e 	bl	80028c8 <HAL_GetTick>
 80047ac:	4602      	mov	r2, r0
 80047ae:	69bb      	ldr	r3, [r7, #24]
 80047b0:	1ad3      	subs	r3, r2, r3
 80047b2:	69fa      	ldr	r2, [r7, #28]
 80047b4:	429a      	cmp	r2, r3
 80047b6:	d902      	bls.n	80047be <SPI_WaitFlagStateUntilTimeout+0x56>
 80047b8:	69fb      	ldr	r3, [r7, #28]
 80047ba:	2b00      	cmp	r3, #0
 80047bc:	d13d      	bne.n	800483a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80047be:	68fb      	ldr	r3, [r7, #12]
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	685a      	ldr	r2, [r3, #4]
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80047cc:	605a      	str	r2, [r3, #4]
 80047ce:	68fb      	ldr	r3, [r7, #12]
 80047d0:	685b      	ldr	r3, [r3, #4]
 80047d2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80047d6:	d111      	bne.n	80047fc <SPI_WaitFlagStateUntilTimeout+0x94>
 80047d8:	68fb      	ldr	r3, [r7, #12]
 80047da:	689b      	ldr	r3, [r3, #8]
 80047dc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80047e0:	d004      	beq.n	80047ec <SPI_WaitFlagStateUntilTimeout+0x84>
 80047e2:	68fb      	ldr	r3, [r7, #12]
 80047e4:	689b      	ldr	r3, [r3, #8]
 80047e6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80047ea:	d107      	bne.n	80047fc <SPI_WaitFlagStateUntilTimeout+0x94>
 80047ec:	68fb      	ldr	r3, [r7, #12]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	681a      	ldr	r2, [r3, #0]
 80047f2:	68fb      	ldr	r3, [r7, #12]
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80047fa:	601a      	str	r2, [r3, #0]
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004800:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004804:	d10f      	bne.n	8004826 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	681a      	ldr	r2, [r3, #0]
 800480c:	68fb      	ldr	r3, [r7, #12]
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004814:	601a      	str	r2, [r3, #0]
 8004816:	68fb      	ldr	r3, [r7, #12]
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	681a      	ldr	r2, [r3, #0]
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	681b      	ldr	r3, [r3, #0]
 8004820:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004824:	601a      	str	r2, [r3, #0]
 8004826:	68fb      	ldr	r3, [r7, #12]
 8004828:	2201      	movs	r2, #1
 800482a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	2200      	movs	r2, #0
 8004832:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004836:	2303      	movs	r3, #3
 8004838:	e017      	b.n	800486a <SPI_WaitFlagStateUntilTimeout+0x102>
 800483a:	697b      	ldr	r3, [r7, #20]
 800483c:	2b00      	cmp	r3, #0
 800483e:	d101      	bne.n	8004844 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8004840:	2300      	movs	r3, #0
 8004842:	61fb      	str	r3, [r7, #28]
 8004844:	697b      	ldr	r3, [r7, #20]
 8004846:	3b01      	subs	r3, #1
 8004848:	617b      	str	r3, [r7, #20]
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	689a      	ldr	r2, [r3, #8]
 8004850:	68bb      	ldr	r3, [r7, #8]
 8004852:	4013      	ands	r3, r2
 8004854:	68ba      	ldr	r2, [r7, #8]
 8004856:	429a      	cmp	r2, r3
 8004858:	bf0c      	ite	eq
 800485a:	2301      	moveq	r3, #1
 800485c:	2300      	movne	r3, #0
 800485e:	b2db      	uxtb	r3, r3
 8004860:	461a      	mov	r2, r3
 8004862:	79fb      	ldrb	r3, [r7, #7]
 8004864:	429a      	cmp	r2, r3
 8004866:	d19b      	bne.n	80047a0 <SPI_WaitFlagStateUntilTimeout+0x38>
 8004868:	2300      	movs	r3, #0
 800486a:	4618      	mov	r0, r3
 800486c:	3720      	adds	r7, #32
 800486e:	46bd      	mov	sp, r7
 8004870:	bd80      	pop	{r7, pc}
 8004872:	bf00      	nop
 8004874:	20013748 	.word	0x20013748

08004878 <SPI_EndRxTxTransaction>:
 8004878:	b580      	push	{r7, lr}
 800487a:	b088      	sub	sp, #32
 800487c:	af02      	add	r7, sp, #8
 800487e:	60f8      	str	r0, [r7, #12]
 8004880:	60b9      	str	r1, [r7, #8]
 8004882:	607a      	str	r2, [r7, #4]
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	9300      	str	r3, [sp, #0]
 8004888:	68bb      	ldr	r3, [r7, #8]
 800488a:	2201      	movs	r2, #1
 800488c:	2102      	movs	r1, #2
 800488e:	68f8      	ldr	r0, [r7, #12]
 8004890:	f7ff ff6a 	bl	8004768 <SPI_WaitFlagStateUntilTimeout>
 8004894:	4603      	mov	r3, r0
 8004896:	2b00      	cmp	r3, #0
 8004898:	d007      	beq.n	80048aa <SPI_EndRxTxTransaction+0x32>
 800489a:	68fb      	ldr	r3, [r7, #12]
 800489c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800489e:	f043 0220 	orr.w	r2, r3, #32
 80048a2:	68fb      	ldr	r3, [r7, #12]
 80048a4:	655a      	str	r2, [r3, #84]	@ 0x54
 80048a6:	2303      	movs	r3, #3
 80048a8:	e032      	b.n	8004910 <SPI_EndRxTxTransaction+0x98>
 80048aa:	4b1b      	ldr	r3, [pc, #108]	@ (8004918 <SPI_EndRxTxTransaction+0xa0>)
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	4a1b      	ldr	r2, [pc, #108]	@ (800491c <SPI_EndRxTxTransaction+0xa4>)
 80048b0:	fba2 2303 	umull	r2, r3, r2, r3
 80048b4:	0d5b      	lsrs	r3, r3, #21
 80048b6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80048ba:	fb02 f303 	mul.w	r3, r2, r3
 80048be:	617b      	str	r3, [r7, #20]
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	685b      	ldr	r3, [r3, #4]
 80048c4:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80048c8:	d112      	bne.n	80048f0 <SPI_EndRxTxTransaction+0x78>
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	9300      	str	r3, [sp, #0]
 80048ce:	68bb      	ldr	r3, [r7, #8]
 80048d0:	2200      	movs	r2, #0
 80048d2:	2180      	movs	r1, #128	@ 0x80
 80048d4:	68f8      	ldr	r0, [r7, #12]
 80048d6:	f7ff ff47 	bl	8004768 <SPI_WaitFlagStateUntilTimeout>
 80048da:	4603      	mov	r3, r0
 80048dc:	2b00      	cmp	r3, #0
 80048de:	d016      	beq.n	800490e <SPI_EndRxTxTransaction+0x96>
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80048e4:	f043 0220 	orr.w	r2, r3, #32
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80048ec:	2303      	movs	r3, #3
 80048ee:	e00f      	b.n	8004910 <SPI_EndRxTxTransaction+0x98>
 80048f0:	697b      	ldr	r3, [r7, #20]
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d00a      	beq.n	800490c <SPI_EndRxTxTransaction+0x94>
 80048f6:	697b      	ldr	r3, [r7, #20]
 80048f8:	3b01      	subs	r3, #1
 80048fa:	617b      	str	r3, [r7, #20]
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	689b      	ldr	r3, [r3, #8]
 8004902:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004906:	2b80      	cmp	r3, #128	@ 0x80
 8004908:	d0f2      	beq.n	80048f0 <SPI_EndRxTxTransaction+0x78>
 800490a:	e000      	b.n	800490e <SPI_EndRxTxTransaction+0x96>
 800490c:	bf00      	nop
 800490e:	2300      	movs	r3, #0
 8004910:	4618      	mov	r0, r3
 8004912:	3718      	adds	r7, #24
 8004914:	46bd      	mov	sp, r7
 8004916:	bd80      	pop	{r7, pc}
 8004918:	20013748 	.word	0x20013748
 800491c:	165e9f81 	.word	0x165e9f81

08004920 <HAL_UART_Init>:
 8004920:	b580      	push	{r7, lr}
 8004922:	b082      	sub	sp, #8
 8004924:	af00      	add	r7, sp, #0
 8004926:	6078      	str	r0, [r7, #4]
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	2b00      	cmp	r3, #0
 800492c:	d101      	bne.n	8004932 <HAL_UART_Init+0x12>
 800492e:	2301      	movs	r3, #1
 8004930:	e042      	b.n	80049b8 <HAL_UART_Init+0x98>
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004938:	b2db      	uxtb	r3, r3
 800493a:	2b00      	cmp	r3, #0
 800493c:	d106      	bne.n	800494c <HAL_UART_Init+0x2c>
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	2200      	movs	r2, #0
 8004942:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004946:	6878      	ldr	r0, [r7, #4]
 8004948:	f7fd fda8 	bl	800249c <HAL_UART_MspInit>
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	2224      	movs	r2, #36	@ 0x24
 8004950:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	68da      	ldr	r2, [r3, #12]
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004962:	60da      	str	r2, [r3, #12]
 8004964:	6878      	ldr	r0, [r7, #4]
 8004966:	f000 fcdb 	bl	8005320 <UART_SetConfig>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	691a      	ldr	r2, [r3, #16]
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8004978:	611a      	str	r2, [r3, #16]
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	695a      	ldr	r2, [r3, #20]
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8004988:	615a      	str	r2, [r3, #20]
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	68da      	ldr	r2, [r3, #12]
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004998:	60da      	str	r2, [r3, #12]
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	2200      	movs	r2, #0
 800499e:	645a      	str	r2, [r3, #68]	@ 0x44
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	2220      	movs	r2, #32
 80049a4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	2220      	movs	r2, #32
 80049ac:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	2200      	movs	r2, #0
 80049b4:	635a      	str	r2, [r3, #52]	@ 0x34
 80049b6:	2300      	movs	r3, #0
 80049b8:	4618      	mov	r0, r3
 80049ba:	3708      	adds	r7, #8
 80049bc:	46bd      	mov	sp, r7
 80049be:	bd80      	pop	{r7, pc}

080049c0 <HAL_UART_Receive_IT>:
 80049c0:	b580      	push	{r7, lr}
 80049c2:	b084      	sub	sp, #16
 80049c4:	af00      	add	r7, sp, #0
 80049c6:	60f8      	str	r0, [r7, #12]
 80049c8:	60b9      	str	r1, [r7, #8]
 80049ca:	4613      	mov	r3, r2
 80049cc:	80fb      	strh	r3, [r7, #6]
 80049ce:	68fb      	ldr	r3, [r7, #12]
 80049d0:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80049d4:	b2db      	uxtb	r3, r3
 80049d6:	2b20      	cmp	r3, #32
 80049d8:	d112      	bne.n	8004a00 <HAL_UART_Receive_IT+0x40>
 80049da:	68bb      	ldr	r3, [r7, #8]
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d002      	beq.n	80049e6 <HAL_UART_Receive_IT+0x26>
 80049e0:	88fb      	ldrh	r3, [r7, #6]
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d101      	bne.n	80049ea <HAL_UART_Receive_IT+0x2a>
 80049e6:	2301      	movs	r3, #1
 80049e8:	e00b      	b.n	8004a02 <HAL_UART_Receive_IT+0x42>
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	2200      	movs	r2, #0
 80049ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80049f0:	88fb      	ldrh	r3, [r7, #6]
 80049f2:	461a      	mov	r2, r3
 80049f4:	68b9      	ldr	r1, [r7, #8]
 80049f6:	68f8      	ldr	r0, [r7, #12]
 80049f8:	f000 faba 	bl	8004f70 <UART_Start_Receive_IT>
 80049fc:	4603      	mov	r3, r0
 80049fe:	e000      	b.n	8004a02 <HAL_UART_Receive_IT+0x42>
 8004a00:	2302      	movs	r3, #2
 8004a02:	4618      	mov	r0, r3
 8004a04:	3710      	adds	r7, #16
 8004a06:	46bd      	mov	sp, r7
 8004a08:	bd80      	pop	{r7, pc}
	...

08004a0c <HAL_UART_IRQHandler>:
 8004a0c:	b580      	push	{r7, lr}
 8004a0e:	b0ba      	sub	sp, #232	@ 0xe8
 8004a10:	af00      	add	r7, sp, #0
 8004a12:	6078      	str	r0, [r7, #4]
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	681b      	ldr	r3, [r3, #0]
 8004a1a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	68db      	ldr	r3, [r3, #12]
 8004a24:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	695b      	ldr	r3, [r3, #20]
 8004a2e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8004a32:	2300      	movs	r3, #0
 8004a34:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004a38:	2300      	movs	r3, #0
 8004a3a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004a3e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004a42:	f003 030f 	and.w	r3, r3, #15
 8004a46:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004a4a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	d10f      	bne.n	8004a72 <HAL_UART_IRQHandler+0x66>
 8004a52:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004a56:	f003 0320 	and.w	r3, r3, #32
 8004a5a:	2b00      	cmp	r3, #0
 8004a5c:	d009      	beq.n	8004a72 <HAL_UART_IRQHandler+0x66>
 8004a5e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004a62:	f003 0320 	and.w	r3, r3, #32
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	d003      	beq.n	8004a72 <HAL_UART_IRQHandler+0x66>
 8004a6a:	6878      	ldr	r0, [r7, #4]
 8004a6c:	f000 fb99 	bl	80051a2 <UART_Receive_IT>
 8004a70:	e25b      	b.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004a72:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	f000 80de 	beq.w	8004c38 <HAL_UART_IRQHandler+0x22c>
 8004a7c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004a80:	f003 0301 	and.w	r3, r3, #1
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	d106      	bne.n	8004a96 <HAL_UART_IRQHandler+0x8a>
 8004a88:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004a8c:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	f000 80d1 	beq.w	8004c38 <HAL_UART_IRQHandler+0x22c>
 8004a96:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004a9a:	f003 0301 	and.w	r3, r3, #1
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d00b      	beq.n	8004aba <HAL_UART_IRQHandler+0xae>
 8004aa2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004aa6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004aaa:	2b00      	cmp	r3, #0
 8004aac:	d005      	beq.n	8004aba <HAL_UART_IRQHandler+0xae>
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004ab2:	f043 0201 	orr.w	r2, r3, #1
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	645a      	str	r2, [r3, #68]	@ 0x44
 8004aba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004abe:	f003 0304 	and.w	r3, r3, #4
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d00b      	beq.n	8004ade <HAL_UART_IRQHandler+0xd2>
 8004ac6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004aca:	f003 0301 	and.w	r3, r3, #1
 8004ace:	2b00      	cmp	r3, #0
 8004ad0:	d005      	beq.n	8004ade <HAL_UART_IRQHandler+0xd2>
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004ad6:	f043 0202 	orr.w	r2, r3, #2
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	645a      	str	r2, [r3, #68]	@ 0x44
 8004ade:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004ae2:	f003 0302 	and.w	r3, r3, #2
 8004ae6:	2b00      	cmp	r3, #0
 8004ae8:	d00b      	beq.n	8004b02 <HAL_UART_IRQHandler+0xf6>
 8004aea:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004aee:	f003 0301 	and.w	r3, r3, #1
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d005      	beq.n	8004b02 <HAL_UART_IRQHandler+0xf6>
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004afa:	f043 0204 	orr.w	r2, r3, #4
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	645a      	str	r2, [r3, #68]	@ 0x44
 8004b02:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004b06:	f003 0308 	and.w	r3, r3, #8
 8004b0a:	2b00      	cmp	r3, #0
 8004b0c:	d011      	beq.n	8004b32 <HAL_UART_IRQHandler+0x126>
 8004b0e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004b12:	f003 0320 	and.w	r3, r3, #32
 8004b16:	2b00      	cmp	r3, #0
 8004b18:	d105      	bne.n	8004b26 <HAL_UART_IRQHandler+0x11a>
 8004b1a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004b1e:	f003 0301 	and.w	r3, r3, #1
 8004b22:	2b00      	cmp	r3, #0
 8004b24:	d005      	beq.n	8004b32 <HAL_UART_IRQHandler+0x126>
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004b2a:	f043 0208 	orr.w	r2, r3, #8
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	645a      	str	r2, [r3, #68]	@ 0x44
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	f000 81f2 	beq.w	8004f20 <HAL_UART_IRQHandler+0x514>
 8004b3c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004b40:	f003 0320 	and.w	r3, r3, #32
 8004b44:	2b00      	cmp	r3, #0
 8004b46:	d008      	beq.n	8004b5a <HAL_UART_IRQHandler+0x14e>
 8004b48:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004b4c:	f003 0320 	and.w	r3, r3, #32
 8004b50:	2b00      	cmp	r3, #0
 8004b52:	d002      	beq.n	8004b5a <HAL_UART_IRQHandler+0x14e>
 8004b54:	6878      	ldr	r0, [r7, #4]
 8004b56:	f000 fb24 	bl	80051a2 <UART_Receive_IT>
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	681b      	ldr	r3, [r3, #0]
 8004b5e:	695b      	ldr	r3, [r3, #20]
 8004b60:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004b64:	2b40      	cmp	r3, #64	@ 0x40
 8004b66:	bf0c      	ite	eq
 8004b68:	2301      	moveq	r3, #1
 8004b6a:	2300      	movne	r3, #0
 8004b6c:	b2db      	uxtb	r3, r3
 8004b6e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004b76:	f003 0308 	and.w	r3, r3, #8
 8004b7a:	2b00      	cmp	r3, #0
 8004b7c:	d103      	bne.n	8004b86 <HAL_UART_IRQHandler+0x17a>
 8004b7e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d04f      	beq.n	8004c26 <HAL_UART_IRQHandler+0x21a>
 8004b86:	6878      	ldr	r0, [r7, #4]
 8004b88:	f000 fa2c 	bl	8004fe4 <UART_EndRxTransfer>
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	695b      	ldr	r3, [r3, #20]
 8004b92:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004b96:	2b40      	cmp	r3, #64	@ 0x40
 8004b98:	d141      	bne.n	8004c1e <HAL_UART_IRQHandler+0x212>
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	681b      	ldr	r3, [r3, #0]
 8004b9e:	3314      	adds	r3, #20
 8004ba0:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004ba4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8004ba8:	e853 3f00 	ldrex	r3, [r3]
 8004bac:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004bb0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004bb4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004bb8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	3314      	adds	r3, #20
 8004bc2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8004bc6:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8004bca:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8004bce:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8004bd2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8004bd6:	e841 2300 	strex	r3, r2, [r1]
 8004bda:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004bde:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d1d9      	bne.n	8004b9a <HAL_UART_IRQHandler+0x18e>
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d013      	beq.n	8004c16 <HAL_UART_IRQHandler+0x20a>
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004bf2:	4a7e      	ldr	r2, [pc, #504]	@ (8004dec <HAL_UART_IRQHandler+0x3e0>)
 8004bf4:	651a      	str	r2, [r3, #80]	@ 0x50
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004bfa:	4618      	mov	r0, r3
 8004bfc:	f7fe f8d0 	bl	8002da0 <HAL_DMA_Abort_IT>
 8004c00:	4603      	mov	r3, r0
 8004c02:	2b00      	cmp	r3, #0
 8004c04:	d016      	beq.n	8004c34 <HAL_UART_IRQHandler+0x228>
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004c0a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004c0c:	687a      	ldr	r2, [r7, #4]
 8004c0e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8004c10:	4610      	mov	r0, r2
 8004c12:	4798      	blx	r3
 8004c14:	e00e      	b.n	8004c34 <HAL_UART_IRQHandler+0x228>
 8004c16:	6878      	ldr	r0, [r7, #4]
 8004c18:	f000 f994 	bl	8004f44 <HAL_UART_ErrorCallback>
 8004c1c:	e00a      	b.n	8004c34 <HAL_UART_IRQHandler+0x228>
 8004c1e:	6878      	ldr	r0, [r7, #4]
 8004c20:	f000 f990 	bl	8004f44 <HAL_UART_ErrorCallback>
 8004c24:	e006      	b.n	8004c34 <HAL_UART_IRQHandler+0x228>
 8004c26:	6878      	ldr	r0, [r7, #4]
 8004c28:	f000 f98c 	bl	8004f44 <HAL_UART_ErrorCallback>
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	2200      	movs	r2, #0
 8004c30:	645a      	str	r2, [r3, #68]	@ 0x44
 8004c32:	e175      	b.n	8004f20 <HAL_UART_IRQHandler+0x514>
 8004c34:	bf00      	nop
 8004c36:	e173      	b.n	8004f20 <HAL_UART_IRQHandler+0x514>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004c3c:	2b01      	cmp	r3, #1
 8004c3e:	f040 814f 	bne.w	8004ee0 <HAL_UART_IRQHandler+0x4d4>
 8004c42:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004c46:	f003 0310 	and.w	r3, r3, #16
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	f000 8148 	beq.w	8004ee0 <HAL_UART_IRQHandler+0x4d4>
 8004c50:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004c54:	f003 0310 	and.w	r3, r3, #16
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	f000 8141 	beq.w	8004ee0 <HAL_UART_IRQHandler+0x4d4>
 8004c5e:	2300      	movs	r3, #0
 8004c60:	60bb      	str	r3, [r7, #8]
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	60bb      	str	r3, [r7, #8]
 8004c6a:	687b      	ldr	r3, [r7, #4]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	685b      	ldr	r3, [r3, #4]
 8004c70:	60bb      	str	r3, [r7, #8]
 8004c72:	68bb      	ldr	r3, [r7, #8]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	695b      	ldr	r3, [r3, #20]
 8004c7a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004c7e:	2b40      	cmp	r3, #64	@ 0x40
 8004c80:	f040 80b6 	bne.w	8004df0 <HAL_UART_IRQHandler+0x3e4>
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	685b      	ldr	r3, [r3, #4]
 8004c8c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004c90:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	f000 8145 	beq.w	8004f24 <HAL_UART_IRQHandler+0x518>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004c9e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004ca2:	429a      	cmp	r2, r3
 8004ca4:	f080 813e 	bcs.w	8004f24 <HAL_UART_IRQHandler+0x518>
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004cae:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004cb4:	69db      	ldr	r3, [r3, #28]
 8004cb6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004cba:	f000 8088 	beq.w	8004dce <HAL_UART_IRQHandler+0x3c2>
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	330c      	adds	r3, #12
 8004cc4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004cc8:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004ccc:	e853 3f00 	ldrex	r3, [r3]
 8004cd0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004cd4:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004cd8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004cdc:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	330c      	adds	r3, #12
 8004ce6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8004cea:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004cee:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004cf2:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8004cf6:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004cfa:	e841 2300 	strex	r3, r2, [r1]
 8004cfe:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004d02:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d1d9      	bne.n	8004cbe <HAL_UART_IRQHandler+0x2b2>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	3314      	adds	r3, #20
 8004d10:	677b      	str	r3, [r7, #116]	@ 0x74
 8004d12:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004d14:	e853 3f00 	ldrex	r3, [r3]
 8004d18:	673b      	str	r3, [r7, #112]	@ 0x70
 8004d1a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004d1c:	f023 0301 	bic.w	r3, r3, #1
 8004d20:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	3314      	adds	r3, #20
 8004d2a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004d2e:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8004d32:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004d34:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8004d36:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004d3a:	e841 2300 	strex	r3, r2, [r1]
 8004d3e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004d40:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004d42:	2b00      	cmp	r3, #0
 8004d44:	d1e1      	bne.n	8004d0a <HAL_UART_IRQHandler+0x2fe>
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	3314      	adds	r3, #20
 8004d4c:	663b      	str	r3, [r7, #96]	@ 0x60
 8004d4e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004d50:	e853 3f00 	ldrex	r3, [r3]
 8004d54:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004d56:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004d58:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004d5c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	3314      	adds	r3, #20
 8004d66:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8004d6a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004d6c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004d6e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004d70:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8004d72:	e841 2300 	strex	r3, r2, [r1]
 8004d76:	667b      	str	r3, [r7, #100]	@ 0x64
 8004d78:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	d1e3      	bne.n	8004d46 <HAL_UART_IRQHandler+0x33a>
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	2220      	movs	r2, #32
 8004d82:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	2200      	movs	r2, #0
 8004d8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	330c      	adds	r3, #12
 8004d92:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004d94:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004d96:	e853 3f00 	ldrex	r3, [r3]
 8004d9a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004d9c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004d9e:	f023 0310 	bic.w	r3, r3, #16
 8004da2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	330c      	adds	r3, #12
 8004dac:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8004db0:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004db2:	657b      	str	r3, [r7, #84]	@ 0x54
 8004db4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004db6:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8004db8:	e841 2300 	strex	r3, r2, [r1]
 8004dbc:	653b      	str	r3, [r7, #80]	@ 0x50
 8004dbe:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004dc0:	2b00      	cmp	r3, #0
 8004dc2:	d1e3      	bne.n	8004d8c <HAL_UART_IRQHandler+0x380>
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004dc8:	4618      	mov	r0, r3
 8004dca:	f7fd ff79 	bl	8002cc0 <HAL_DMA_Abort>
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	2202      	movs	r2, #2
 8004dd2:	635a      	str	r2, [r3, #52]	@ 0x34
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004ddc:	b29b      	uxth	r3, r3
 8004dde:	1ad3      	subs	r3, r2, r3
 8004de0:	b29b      	uxth	r3, r3
 8004de2:	4619      	mov	r1, r3
 8004de4:	6878      	ldr	r0, [r7, #4]
 8004de6:	f000 f8b7 	bl	8004f58 <HAL_UARTEx_RxEventCallback>
 8004dea:	e09b      	b.n	8004f24 <HAL_UART_IRQHandler+0x518>
 8004dec:	080050ab 	.word	0x080050ab
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004df8:	b29b      	uxth	r3, r3
 8004dfa:	1ad3      	subs	r3, r2, r3
 8004dfc:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004e04:	b29b      	uxth	r3, r3
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	f000 808e 	beq.w	8004f28 <HAL_UART_IRQHandler+0x51c>
 8004e0c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004e10:	2b00      	cmp	r3, #0
 8004e12:	f000 8089 	beq.w	8004f28 <HAL_UART_IRQHandler+0x51c>
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	330c      	adds	r3, #12
 8004e1c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004e1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e20:	e853 3f00 	ldrex	r3, [r3]
 8004e24:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e26:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004e28:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004e2c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	330c      	adds	r3, #12
 8004e36:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8004e3a:	647a      	str	r2, [r7, #68]	@ 0x44
 8004e3c:	643b      	str	r3, [r7, #64]	@ 0x40
 8004e3e:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004e40:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004e42:	e841 2300 	strex	r3, r2, [r1]
 8004e46:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004e48:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004e4a:	2b00      	cmp	r3, #0
 8004e4c:	d1e3      	bne.n	8004e16 <HAL_UART_IRQHandler+0x40a>
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	3314      	adds	r3, #20
 8004e54:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e58:	e853 3f00 	ldrex	r3, [r3]
 8004e5c:	623b      	str	r3, [r7, #32]
 8004e5e:	6a3b      	ldr	r3, [r7, #32]
 8004e60:	f023 0301 	bic.w	r3, r3, #1
 8004e64:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	3314      	adds	r3, #20
 8004e6e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004e72:	633a      	str	r2, [r7, #48]	@ 0x30
 8004e74:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004e76:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004e78:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004e7a:	e841 2300 	strex	r3, r2, [r1]
 8004e7e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e80:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d1e3      	bne.n	8004e4e <HAL_UART_IRQHandler+0x442>
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	2220      	movs	r2, #32
 8004e8a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	2200      	movs	r2, #0
 8004e92:	631a      	str	r2, [r3, #48]	@ 0x30
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	330c      	adds	r3, #12
 8004e9a:	613b      	str	r3, [r7, #16]
 8004e9c:	693b      	ldr	r3, [r7, #16]
 8004e9e:	e853 3f00 	ldrex	r3, [r3]
 8004ea2:	60fb      	str	r3, [r7, #12]
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	f023 0310 	bic.w	r3, r3, #16
 8004eaa:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004eae:	687b      	ldr	r3, [r7, #4]
 8004eb0:	681b      	ldr	r3, [r3, #0]
 8004eb2:	330c      	adds	r3, #12
 8004eb4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8004eb8:	61fa      	str	r2, [r7, #28]
 8004eba:	61bb      	str	r3, [r7, #24]
 8004ebc:	69b9      	ldr	r1, [r7, #24]
 8004ebe:	69fa      	ldr	r2, [r7, #28]
 8004ec0:	e841 2300 	strex	r3, r2, [r1]
 8004ec4:	617b      	str	r3, [r7, #20]
 8004ec6:	697b      	ldr	r3, [r7, #20]
 8004ec8:	2b00      	cmp	r3, #0
 8004eca:	d1e3      	bne.n	8004e94 <HAL_UART_IRQHandler+0x488>
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	2202      	movs	r2, #2
 8004ed0:	635a      	str	r2, [r3, #52]	@ 0x34
 8004ed2:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004ed6:	4619      	mov	r1, r3
 8004ed8:	6878      	ldr	r0, [r7, #4]
 8004eda:	f000 f83d 	bl	8004f58 <HAL_UARTEx_RxEventCallback>
 8004ede:	e023      	b.n	8004f28 <HAL_UART_IRQHandler+0x51c>
 8004ee0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004ee4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004ee8:	2b00      	cmp	r3, #0
 8004eea:	d009      	beq.n	8004f00 <HAL_UART_IRQHandler+0x4f4>
 8004eec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004ef0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004ef4:	2b00      	cmp	r3, #0
 8004ef6:	d003      	beq.n	8004f00 <HAL_UART_IRQHandler+0x4f4>
 8004ef8:	6878      	ldr	r0, [r7, #4]
 8004efa:	f000 f8ea 	bl	80050d2 <UART_Transmit_IT>
 8004efe:	e014      	b.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004f00:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004f04:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004f08:	2b00      	cmp	r3, #0
 8004f0a:	d00e      	beq.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004f0c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004f10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d008      	beq.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004f18:	6878      	ldr	r0, [r7, #4]
 8004f1a:	f000 f92a 	bl	8005172 <UART_EndTransmit_IT>
 8004f1e:	e004      	b.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004f20:	bf00      	nop
 8004f22:	e002      	b.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004f24:	bf00      	nop
 8004f26:	e000      	b.n	8004f2a <HAL_UART_IRQHandler+0x51e>
 8004f28:	bf00      	nop
 8004f2a:	37e8      	adds	r7, #232	@ 0xe8
 8004f2c:	46bd      	mov	sp, r7
 8004f2e:	bd80      	pop	{r7, pc}

08004f30 <HAL_UART_TxCpltCallback>:
 8004f30:	b480      	push	{r7}
 8004f32:	b083      	sub	sp, #12
 8004f34:	af00      	add	r7, sp, #0
 8004f36:	6078      	str	r0, [r7, #4]
 8004f38:	bf00      	nop
 8004f3a:	370c      	adds	r7, #12
 8004f3c:	46bd      	mov	sp, r7
 8004f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f42:	4770      	bx	lr

08004f44 <HAL_UART_ErrorCallback>:
 8004f44:	b480      	push	{r7}
 8004f46:	b083      	sub	sp, #12
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
 8004f4c:	bf00      	nop
 8004f4e:	370c      	adds	r7, #12
 8004f50:	46bd      	mov	sp, r7
 8004f52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f56:	4770      	bx	lr

08004f58 <HAL_UARTEx_RxEventCallback>:
 8004f58:	b480      	push	{r7}
 8004f5a:	b083      	sub	sp, #12
 8004f5c:	af00      	add	r7, sp, #0
 8004f5e:	6078      	str	r0, [r7, #4]
 8004f60:	460b      	mov	r3, r1
 8004f62:	807b      	strh	r3, [r7, #2]
 8004f64:	bf00      	nop
 8004f66:	370c      	adds	r7, #12
 8004f68:	46bd      	mov	sp, r7
 8004f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f6e:	4770      	bx	lr

08004f70 <UART_Start_Receive_IT>:
 8004f70:	b480      	push	{r7}
 8004f72:	b085      	sub	sp, #20
 8004f74:	af00      	add	r7, sp, #0
 8004f76:	60f8      	str	r0, [r7, #12]
 8004f78:	60b9      	str	r1, [r7, #8]
 8004f7a:	4613      	mov	r3, r2
 8004f7c:	80fb      	strh	r3, [r7, #6]
 8004f7e:	68fb      	ldr	r3, [r7, #12]
 8004f80:	68ba      	ldr	r2, [r7, #8]
 8004f82:	629a      	str	r2, [r3, #40]	@ 0x28
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	88fa      	ldrh	r2, [r7, #6]
 8004f88:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004f8a:	68fb      	ldr	r3, [r7, #12]
 8004f8c:	88fa      	ldrh	r2, [r7, #6]
 8004f8e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	2200      	movs	r2, #0
 8004f94:	645a      	str	r2, [r3, #68]	@ 0x44
 8004f96:	68fb      	ldr	r3, [r7, #12]
 8004f98:	2222      	movs	r2, #34	@ 0x22
 8004f9a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004f9e:	68fb      	ldr	r3, [r7, #12]
 8004fa0:	691b      	ldr	r3, [r3, #16]
 8004fa2:	2b00      	cmp	r3, #0
 8004fa4:	d007      	beq.n	8004fb6 <UART_Start_Receive_IT+0x46>
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	68da      	ldr	r2, [r3, #12]
 8004fac:	68fb      	ldr	r3, [r7, #12]
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004fb4:	60da      	str	r2, [r3, #12]
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	695a      	ldr	r2, [r3, #20]
 8004fbc:	68fb      	ldr	r3, [r7, #12]
 8004fbe:	681b      	ldr	r3, [r3, #0]
 8004fc0:	f042 0201 	orr.w	r2, r2, #1
 8004fc4:	615a      	str	r2, [r3, #20]
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	68da      	ldr	r2, [r3, #12]
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	f042 0220 	orr.w	r2, r2, #32
 8004fd4:	60da      	str	r2, [r3, #12]
 8004fd6:	2300      	movs	r3, #0
 8004fd8:	4618      	mov	r0, r3
 8004fda:	3714      	adds	r7, #20
 8004fdc:	46bd      	mov	sp, r7
 8004fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fe2:	4770      	bx	lr

08004fe4 <UART_EndRxTransfer>:
 8004fe4:	b480      	push	{r7}
 8004fe6:	b095      	sub	sp, #84	@ 0x54
 8004fe8:	af00      	add	r7, sp, #0
 8004fea:	6078      	str	r0, [r7, #4]
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	330c      	adds	r3, #12
 8004ff2:	637b      	str	r3, [r7, #52]	@ 0x34
 8004ff4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004ff6:	e853 3f00 	ldrex	r3, [r3]
 8004ffa:	633b      	str	r3, [r7, #48]	@ 0x30
 8004ffc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004ffe:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005002:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	330c      	adds	r3, #12
 800500a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800500c:	643a      	str	r2, [r7, #64]	@ 0x40
 800500e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005010:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005012:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005014:	e841 2300 	strex	r3, r2, [r1]
 8005018:	63bb      	str	r3, [r7, #56]	@ 0x38
 800501a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800501c:	2b00      	cmp	r3, #0
 800501e:	d1e5      	bne.n	8004fec <UART_EndRxTransfer+0x8>
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	3314      	adds	r3, #20
 8005026:	623b      	str	r3, [r7, #32]
 8005028:	6a3b      	ldr	r3, [r7, #32]
 800502a:	e853 3f00 	ldrex	r3, [r3]
 800502e:	61fb      	str	r3, [r7, #28]
 8005030:	69fb      	ldr	r3, [r7, #28]
 8005032:	f023 0301 	bic.w	r3, r3, #1
 8005036:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	3314      	adds	r3, #20
 800503e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005040:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005042:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005044:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005046:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005048:	e841 2300 	strex	r3, r2, [r1]
 800504c:	627b      	str	r3, [r7, #36]	@ 0x24
 800504e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005050:	2b00      	cmp	r3, #0
 8005052:	d1e5      	bne.n	8005020 <UART_EndRxTransfer+0x3c>
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005058:	2b01      	cmp	r3, #1
 800505a:	d119      	bne.n	8005090 <UART_EndRxTransfer+0xac>
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	330c      	adds	r3, #12
 8005062:	60fb      	str	r3, [r7, #12]
 8005064:	68fb      	ldr	r3, [r7, #12]
 8005066:	e853 3f00 	ldrex	r3, [r3]
 800506a:	60bb      	str	r3, [r7, #8]
 800506c:	68bb      	ldr	r3, [r7, #8]
 800506e:	f023 0310 	bic.w	r3, r3, #16
 8005072:	647b      	str	r3, [r7, #68]	@ 0x44
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	330c      	adds	r3, #12
 800507a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800507c:	61ba      	str	r2, [r7, #24]
 800507e:	617b      	str	r3, [r7, #20]
 8005080:	6979      	ldr	r1, [r7, #20]
 8005082:	69ba      	ldr	r2, [r7, #24]
 8005084:	e841 2300 	strex	r3, r2, [r1]
 8005088:	613b      	str	r3, [r7, #16]
 800508a:	693b      	ldr	r3, [r7, #16]
 800508c:	2b00      	cmp	r3, #0
 800508e:	d1e5      	bne.n	800505c <UART_EndRxTransfer+0x78>
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	2220      	movs	r2, #32
 8005094:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	2200      	movs	r2, #0
 800509c:	631a      	str	r2, [r3, #48]	@ 0x30
 800509e:	bf00      	nop
 80050a0:	3754      	adds	r7, #84	@ 0x54
 80050a2:	46bd      	mov	sp, r7
 80050a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050a8:	4770      	bx	lr

080050aa <UART_DMAAbortOnError>:
 80050aa:	b580      	push	{r7, lr}
 80050ac:	b084      	sub	sp, #16
 80050ae:	af00      	add	r7, sp, #0
 80050b0:	6078      	str	r0, [r7, #4]
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80050b6:	60fb      	str	r3, [r7, #12]
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	2200      	movs	r2, #0
 80050bc:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80050be:	68fb      	ldr	r3, [r7, #12]
 80050c0:	2200      	movs	r2, #0
 80050c2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80050c4:	68f8      	ldr	r0, [r7, #12]
 80050c6:	f7ff ff3d 	bl	8004f44 <HAL_UART_ErrorCallback>
 80050ca:	bf00      	nop
 80050cc:	3710      	adds	r7, #16
 80050ce:	46bd      	mov	sp, r7
 80050d0:	bd80      	pop	{r7, pc}

080050d2 <UART_Transmit_IT>:
 80050d2:	b480      	push	{r7}
 80050d4:	b085      	sub	sp, #20
 80050d6:	af00      	add	r7, sp, #0
 80050d8:	6078      	str	r0, [r7, #4]
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050e0:	b2db      	uxtb	r3, r3
 80050e2:	2b21      	cmp	r3, #33	@ 0x21
 80050e4:	d13e      	bne.n	8005164 <UART_Transmit_IT+0x92>
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	689b      	ldr	r3, [r3, #8]
 80050ea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80050ee:	d114      	bne.n	800511a <UART_Transmit_IT+0x48>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	691b      	ldr	r3, [r3, #16]
 80050f4:	2b00      	cmp	r3, #0
 80050f6:	d110      	bne.n	800511a <UART_Transmit_IT+0x48>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	6a1b      	ldr	r3, [r3, #32]
 80050fc:	60fb      	str	r3, [r7, #12]
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	881b      	ldrh	r3, [r3, #0]
 8005102:	461a      	mov	r2, r3
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800510c:	605a      	str	r2, [r3, #4]
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	6a1b      	ldr	r3, [r3, #32]
 8005112:	1c9a      	adds	r2, r3, #2
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	621a      	str	r2, [r3, #32]
 8005118:	e008      	b.n	800512c <UART_Transmit_IT+0x5a>
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	6a1b      	ldr	r3, [r3, #32]
 800511e:	1c59      	adds	r1, r3, #1
 8005120:	687a      	ldr	r2, [r7, #4]
 8005122:	6211      	str	r1, [r2, #32]
 8005124:	781a      	ldrb	r2, [r3, #0]
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	605a      	str	r2, [r3, #4]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005130:	b29b      	uxth	r3, r3
 8005132:	3b01      	subs	r3, #1
 8005134:	b29b      	uxth	r3, r3
 8005136:	687a      	ldr	r2, [r7, #4]
 8005138:	4619      	mov	r1, r3
 800513a:	84d1      	strh	r1, [r2, #38]	@ 0x26
 800513c:	2b00      	cmp	r3, #0
 800513e:	d10f      	bne.n	8005160 <UART_Transmit_IT+0x8e>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	68da      	ldr	r2, [r3, #12]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800514e:	60da      	str	r2, [r3, #12]
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	681b      	ldr	r3, [r3, #0]
 8005154:	68da      	ldr	r2, [r3, #12]
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	681b      	ldr	r3, [r3, #0]
 800515a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800515e:	60da      	str	r2, [r3, #12]
 8005160:	2300      	movs	r3, #0
 8005162:	e000      	b.n	8005166 <UART_Transmit_IT+0x94>
 8005164:	2302      	movs	r3, #2
 8005166:	4618      	mov	r0, r3
 8005168:	3714      	adds	r7, #20
 800516a:	46bd      	mov	sp, r7
 800516c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005170:	4770      	bx	lr

08005172 <UART_EndTransmit_IT>:
 8005172:	b580      	push	{r7, lr}
 8005174:	b082      	sub	sp, #8
 8005176:	af00      	add	r7, sp, #0
 8005178:	6078      	str	r0, [r7, #4]
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	68da      	ldr	r2, [r3, #12]
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005188:	60da      	str	r2, [r3, #12]
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	2220      	movs	r2, #32
 800518e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005192:	6878      	ldr	r0, [r7, #4]
 8005194:	f7ff fecc 	bl	8004f30 <HAL_UART_TxCpltCallback>
 8005198:	2300      	movs	r3, #0
 800519a:	4618      	mov	r0, r3
 800519c:	3708      	adds	r7, #8
 800519e:	46bd      	mov	sp, r7
 80051a0:	bd80      	pop	{r7, pc}

080051a2 <UART_Receive_IT>:
 80051a2:	b580      	push	{r7, lr}
 80051a4:	b08c      	sub	sp, #48	@ 0x30
 80051a6:	af00      	add	r7, sp, #0
 80051a8:	6078      	str	r0, [r7, #4]
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80051b0:	b2db      	uxtb	r3, r3
 80051b2:	2b22      	cmp	r3, #34	@ 0x22
 80051b4:	f040 80ae 	bne.w	8005314 <UART_Receive_IT+0x172>
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	689b      	ldr	r3, [r3, #8]
 80051bc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80051c0:	d117      	bne.n	80051f2 <UART_Receive_IT+0x50>
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	691b      	ldr	r3, [r3, #16]
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d113      	bne.n	80051f2 <UART_Receive_IT+0x50>
 80051ca:	2300      	movs	r3, #0
 80051cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051d2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	685b      	ldr	r3, [r3, #4]
 80051da:	b29b      	uxth	r3, r3
 80051dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80051e0:	b29a      	uxth	r2, r3
 80051e2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80051e4:	801a      	strh	r2, [r3, #0]
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051ea:	1c9a      	adds	r2, r3, #2
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	629a      	str	r2, [r3, #40]	@ 0x28
 80051f0:	e026      	b.n	8005240 <UART_Receive_IT+0x9e>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051f6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80051f8:	2300      	movs	r3, #0
 80051fa:	62bb      	str	r3, [r7, #40]	@ 0x28
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	689b      	ldr	r3, [r3, #8]
 8005200:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005204:	d007      	beq.n	8005216 <UART_Receive_IT+0x74>
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	689b      	ldr	r3, [r3, #8]
 800520a:	2b00      	cmp	r3, #0
 800520c:	d10a      	bne.n	8005224 <UART_Receive_IT+0x82>
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	691b      	ldr	r3, [r3, #16]
 8005212:	2b00      	cmp	r3, #0
 8005214:	d106      	bne.n	8005224 <UART_Receive_IT+0x82>
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	685b      	ldr	r3, [r3, #4]
 800521c:	b2da      	uxtb	r2, r3
 800521e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005220:	701a      	strb	r2, [r3, #0]
 8005222:	e008      	b.n	8005236 <UART_Receive_IT+0x94>
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	685b      	ldr	r3, [r3, #4]
 800522a:	b2db      	uxtb	r3, r3
 800522c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005230:	b2da      	uxtb	r2, r3
 8005232:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005234:	701a      	strb	r2, [r3, #0]
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800523a:	1c5a      	adds	r2, r3, #1
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	629a      	str	r2, [r3, #40]	@ 0x28
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005244:	b29b      	uxth	r3, r3
 8005246:	3b01      	subs	r3, #1
 8005248:	b29b      	uxth	r3, r3
 800524a:	687a      	ldr	r2, [r7, #4]
 800524c:	4619      	mov	r1, r3
 800524e:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005250:	2b00      	cmp	r3, #0
 8005252:	d15d      	bne.n	8005310 <UART_Receive_IT+0x16e>
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	68da      	ldr	r2, [r3, #12]
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	f022 0220 	bic.w	r2, r2, #32
 8005262:	60da      	str	r2, [r3, #12]
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	68da      	ldr	r2, [r3, #12]
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	681b      	ldr	r3, [r3, #0]
 800526e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005272:	60da      	str	r2, [r3, #12]
 8005274:	687b      	ldr	r3, [r7, #4]
 8005276:	681b      	ldr	r3, [r3, #0]
 8005278:	695a      	ldr	r2, [r3, #20]
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	f022 0201 	bic.w	r2, r2, #1
 8005282:	615a      	str	r2, [r3, #20]
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	2220      	movs	r2, #32
 8005288:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	2200      	movs	r2, #0
 8005290:	635a      	str	r2, [r3, #52]	@ 0x34
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005296:	2b01      	cmp	r3, #1
 8005298:	d135      	bne.n	8005306 <UART_Receive_IT+0x164>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	2200      	movs	r2, #0
 800529e:	631a      	str	r2, [r3, #48]	@ 0x30
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	330c      	adds	r3, #12
 80052a6:	617b      	str	r3, [r7, #20]
 80052a8:	697b      	ldr	r3, [r7, #20]
 80052aa:	e853 3f00 	ldrex	r3, [r3]
 80052ae:	613b      	str	r3, [r7, #16]
 80052b0:	693b      	ldr	r3, [r7, #16]
 80052b2:	f023 0310 	bic.w	r3, r3, #16
 80052b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	330c      	adds	r3, #12
 80052be:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80052c0:	623a      	str	r2, [r7, #32]
 80052c2:	61fb      	str	r3, [r7, #28]
 80052c4:	69f9      	ldr	r1, [r7, #28]
 80052c6:	6a3a      	ldr	r2, [r7, #32]
 80052c8:	e841 2300 	strex	r3, r2, [r1]
 80052cc:	61bb      	str	r3, [r7, #24]
 80052ce:	69bb      	ldr	r3, [r7, #24]
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	d1e5      	bne.n	80052a0 <UART_Receive_IT+0xfe>
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	f003 0310 	and.w	r3, r3, #16
 80052de:	2b10      	cmp	r3, #16
 80052e0:	d10a      	bne.n	80052f8 <UART_Receive_IT+0x156>
 80052e2:	2300      	movs	r3, #0
 80052e4:	60fb      	str	r3, [r7, #12]
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	60fb      	str	r3, [r7, #12]
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	685b      	ldr	r3, [r3, #4]
 80052f4:	60fb      	str	r3, [r7, #12]
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80052fc:	4619      	mov	r1, r3
 80052fe:	6878      	ldr	r0, [r7, #4]
 8005300:	f7ff fe2a 	bl	8004f58 <HAL_UARTEx_RxEventCallback>
 8005304:	e002      	b.n	800530c <UART_Receive_IT+0x16a>
 8005306:	6878      	ldr	r0, [r7, #4]
 8005308:	f7fd f804 	bl	8002314 <HAL_UART_RxCpltCallback>
 800530c:	2300      	movs	r3, #0
 800530e:	e002      	b.n	8005316 <UART_Receive_IT+0x174>
 8005310:	2300      	movs	r3, #0
 8005312:	e000      	b.n	8005316 <UART_Receive_IT+0x174>
 8005314:	2302      	movs	r3, #2
 8005316:	4618      	mov	r0, r3
 8005318:	3730      	adds	r7, #48	@ 0x30
 800531a:	46bd      	mov	sp, r7
 800531c:	bd80      	pop	{r7, pc}
	...

08005320 <UART_SetConfig>:
 8005320:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005324:	b0c0      	sub	sp, #256	@ 0x100
 8005326:	af00      	add	r7, sp, #0
 8005328:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 800532c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005330:	681b      	ldr	r3, [r3, #0]
 8005332:	691b      	ldr	r3, [r3, #16]
 8005334:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005338:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800533c:	68d9      	ldr	r1, [r3, #12]
 800533e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005342:	681a      	ldr	r2, [r3, #0]
 8005344:	ea40 0301 	orr.w	r3, r0, r1
 8005348:	6113      	str	r3, [r2, #16]
 800534a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800534e:	689a      	ldr	r2, [r3, #8]
 8005350:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005354:	691b      	ldr	r3, [r3, #16]
 8005356:	431a      	orrs	r2, r3
 8005358:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800535c:	695b      	ldr	r3, [r3, #20]
 800535e:	431a      	orrs	r2, r3
 8005360:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005364:	69db      	ldr	r3, [r3, #28]
 8005366:	4313      	orrs	r3, r2
 8005368:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800536c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	68db      	ldr	r3, [r3, #12]
 8005374:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005378:	f021 010c 	bic.w	r1, r1, #12
 800537c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005380:	681a      	ldr	r2, [r3, #0]
 8005382:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005386:	430b      	orrs	r3, r1
 8005388:	60d3      	str	r3, [r2, #12]
 800538a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	695b      	ldr	r3, [r3, #20]
 8005392:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005396:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800539a:	6999      	ldr	r1, [r3, #24]
 800539c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053a0:	681a      	ldr	r2, [r3, #0]
 80053a2:	ea40 0301 	orr.w	r3, r0, r1
 80053a6:	6153      	str	r3, [r2, #20]
 80053a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053ac:	681a      	ldr	r2, [r3, #0]
 80053ae:	4b8f      	ldr	r3, [pc, #572]	@ (80055ec <UART_SetConfig+0x2cc>)
 80053b0:	429a      	cmp	r2, r3
 80053b2:	d005      	beq.n	80053c0 <UART_SetConfig+0xa0>
 80053b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053b8:	681a      	ldr	r2, [r3, #0]
 80053ba:	4b8d      	ldr	r3, [pc, #564]	@ (80055f0 <UART_SetConfig+0x2d0>)
 80053bc:	429a      	cmp	r2, r3
 80053be:	d104      	bne.n	80053ca <UART_SetConfig+0xaa>
 80053c0:	f7fe fa00 	bl	80037c4 <HAL_RCC_GetPCLK2Freq>
 80053c4:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80053c8:	e003      	b.n	80053d2 <UART_SetConfig+0xb2>
 80053ca:	f7fe f9e7 	bl	800379c <HAL_RCC_GetPCLK1Freq>
 80053ce:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80053d2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053d6:	69db      	ldr	r3, [r3, #28]
 80053d8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80053dc:	f040 810c 	bne.w	80055f8 <UART_SetConfig+0x2d8>
 80053e0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80053e4:	2200      	movs	r2, #0
 80053e6:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80053ea:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80053ee:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80053f2:	4622      	mov	r2, r4
 80053f4:	462b      	mov	r3, r5
 80053f6:	1891      	adds	r1, r2, r2
 80053f8:	65b9      	str	r1, [r7, #88]	@ 0x58
 80053fa:	415b      	adcs	r3, r3
 80053fc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80053fe:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005402:	4621      	mov	r1, r4
 8005404:	eb12 0801 	adds.w	r8, r2, r1
 8005408:	4629      	mov	r1, r5
 800540a:	eb43 0901 	adc.w	r9, r3, r1
 800540e:	f04f 0200 	mov.w	r2, #0
 8005412:	f04f 0300 	mov.w	r3, #0
 8005416:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800541a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800541e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005422:	4690      	mov	r8, r2
 8005424:	4699      	mov	r9, r3
 8005426:	4623      	mov	r3, r4
 8005428:	eb18 0303 	adds.w	r3, r8, r3
 800542c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005430:	462b      	mov	r3, r5
 8005432:	eb49 0303 	adc.w	r3, r9, r3
 8005436:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800543a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800543e:	685b      	ldr	r3, [r3, #4]
 8005440:	2200      	movs	r2, #0
 8005442:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005446:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800544a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800544e:	460b      	mov	r3, r1
 8005450:	18db      	adds	r3, r3, r3
 8005452:	653b      	str	r3, [r7, #80]	@ 0x50
 8005454:	4613      	mov	r3, r2
 8005456:	eb42 0303 	adc.w	r3, r2, r3
 800545a:	657b      	str	r3, [r7, #84]	@ 0x54
 800545c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005460:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8005464:	f7fa ff2c 	bl	80002c0 <__aeabi_uldivmod>
 8005468:	4602      	mov	r2, r0
 800546a:	460b      	mov	r3, r1
 800546c:	4b61      	ldr	r3, [pc, #388]	@ (80055f4 <UART_SetConfig+0x2d4>)
 800546e:	fba3 2302 	umull	r2, r3, r3, r2
 8005472:	095b      	lsrs	r3, r3, #5
 8005474:	011c      	lsls	r4, r3, #4
 8005476:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800547a:	2200      	movs	r2, #0
 800547c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005480:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8005484:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005488:	4642      	mov	r2, r8
 800548a:	464b      	mov	r3, r9
 800548c:	1891      	adds	r1, r2, r2
 800548e:	64b9      	str	r1, [r7, #72]	@ 0x48
 8005490:	415b      	adcs	r3, r3
 8005492:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005494:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005498:	4641      	mov	r1, r8
 800549a:	eb12 0a01 	adds.w	sl, r2, r1
 800549e:	4649      	mov	r1, r9
 80054a0:	eb43 0b01 	adc.w	fp, r3, r1
 80054a4:	f04f 0200 	mov.w	r2, #0
 80054a8:	f04f 0300 	mov.w	r3, #0
 80054ac:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80054b0:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80054b4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80054b8:	4692      	mov	sl, r2
 80054ba:	469b      	mov	fp, r3
 80054bc:	4643      	mov	r3, r8
 80054be:	eb1a 0303 	adds.w	r3, sl, r3
 80054c2:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80054c6:	464b      	mov	r3, r9
 80054c8:	eb4b 0303 	adc.w	r3, fp, r3
 80054cc:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80054d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80054d4:	685b      	ldr	r3, [r3, #4]
 80054d6:	2200      	movs	r2, #0
 80054d8:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80054dc:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80054e0:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80054e4:	460b      	mov	r3, r1
 80054e6:	18db      	adds	r3, r3, r3
 80054e8:	643b      	str	r3, [r7, #64]	@ 0x40
 80054ea:	4613      	mov	r3, r2
 80054ec:	eb42 0303 	adc.w	r3, r2, r3
 80054f0:	647b      	str	r3, [r7, #68]	@ 0x44
 80054f2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80054f6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80054fa:	f7fa fee1 	bl	80002c0 <__aeabi_uldivmod>
 80054fe:	4602      	mov	r2, r0
 8005500:	460b      	mov	r3, r1
 8005502:	4611      	mov	r1, r2
 8005504:	4b3b      	ldr	r3, [pc, #236]	@ (80055f4 <UART_SetConfig+0x2d4>)
 8005506:	fba3 2301 	umull	r2, r3, r3, r1
 800550a:	095b      	lsrs	r3, r3, #5
 800550c:	2264      	movs	r2, #100	@ 0x64
 800550e:	fb02 f303 	mul.w	r3, r2, r3
 8005512:	1acb      	subs	r3, r1, r3
 8005514:	00db      	lsls	r3, r3, #3
 8005516:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800551a:	4b36      	ldr	r3, [pc, #216]	@ (80055f4 <UART_SetConfig+0x2d4>)
 800551c:	fba3 2302 	umull	r2, r3, r3, r2
 8005520:	095b      	lsrs	r3, r3, #5
 8005522:	005b      	lsls	r3, r3, #1
 8005524:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005528:	441c      	add	r4, r3
 800552a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800552e:	2200      	movs	r2, #0
 8005530:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005534:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005538:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 800553c:	4642      	mov	r2, r8
 800553e:	464b      	mov	r3, r9
 8005540:	1891      	adds	r1, r2, r2
 8005542:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005544:	415b      	adcs	r3, r3
 8005546:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005548:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 800554c:	4641      	mov	r1, r8
 800554e:	1851      	adds	r1, r2, r1
 8005550:	6339      	str	r1, [r7, #48]	@ 0x30
 8005552:	4649      	mov	r1, r9
 8005554:	414b      	adcs	r3, r1
 8005556:	637b      	str	r3, [r7, #52]	@ 0x34
 8005558:	f04f 0200 	mov.w	r2, #0
 800555c:	f04f 0300 	mov.w	r3, #0
 8005560:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8005564:	4659      	mov	r1, fp
 8005566:	00cb      	lsls	r3, r1, #3
 8005568:	4651      	mov	r1, sl
 800556a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800556e:	4651      	mov	r1, sl
 8005570:	00ca      	lsls	r2, r1, #3
 8005572:	4610      	mov	r0, r2
 8005574:	4619      	mov	r1, r3
 8005576:	4603      	mov	r3, r0
 8005578:	4642      	mov	r2, r8
 800557a:	189b      	adds	r3, r3, r2
 800557c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005580:	464b      	mov	r3, r9
 8005582:	460a      	mov	r2, r1
 8005584:	eb42 0303 	adc.w	r3, r2, r3
 8005588:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800558c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005590:	685b      	ldr	r3, [r3, #4]
 8005592:	2200      	movs	r2, #0
 8005594:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005598:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 800559c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80055a0:	460b      	mov	r3, r1
 80055a2:	18db      	adds	r3, r3, r3
 80055a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80055a6:	4613      	mov	r3, r2
 80055a8:	eb42 0303 	adc.w	r3, r2, r3
 80055ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80055ae:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80055b2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80055b6:	f7fa fe83 	bl	80002c0 <__aeabi_uldivmod>
 80055ba:	4602      	mov	r2, r0
 80055bc:	460b      	mov	r3, r1
 80055be:	4b0d      	ldr	r3, [pc, #52]	@ (80055f4 <UART_SetConfig+0x2d4>)
 80055c0:	fba3 1302 	umull	r1, r3, r3, r2
 80055c4:	095b      	lsrs	r3, r3, #5
 80055c6:	2164      	movs	r1, #100	@ 0x64
 80055c8:	fb01 f303 	mul.w	r3, r1, r3
 80055cc:	1ad3      	subs	r3, r2, r3
 80055ce:	00db      	lsls	r3, r3, #3
 80055d0:	3332      	adds	r3, #50	@ 0x32
 80055d2:	4a08      	ldr	r2, [pc, #32]	@ (80055f4 <UART_SetConfig+0x2d4>)
 80055d4:	fba2 2303 	umull	r2, r3, r2, r3
 80055d8:	095b      	lsrs	r3, r3, #5
 80055da:	f003 0207 	and.w	r2, r3, #7
 80055de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	4422      	add	r2, r4
 80055e6:	609a      	str	r2, [r3, #8]
 80055e8:	e106      	b.n	80057f8 <UART_SetConfig+0x4d8>
 80055ea:	bf00      	nop
 80055ec:	40011000 	.word	0x40011000
 80055f0:	40011400 	.word	0x40011400
 80055f4:	51eb851f 	.word	0x51eb851f
 80055f8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80055fc:	2200      	movs	r2, #0
 80055fe:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005602:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8005606:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800560a:	4642      	mov	r2, r8
 800560c:	464b      	mov	r3, r9
 800560e:	1891      	adds	r1, r2, r2
 8005610:	6239      	str	r1, [r7, #32]
 8005612:	415b      	adcs	r3, r3
 8005614:	627b      	str	r3, [r7, #36]	@ 0x24
 8005616:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800561a:	4641      	mov	r1, r8
 800561c:	1854      	adds	r4, r2, r1
 800561e:	4649      	mov	r1, r9
 8005620:	eb43 0501 	adc.w	r5, r3, r1
 8005624:	f04f 0200 	mov.w	r2, #0
 8005628:	f04f 0300 	mov.w	r3, #0
 800562c:	00eb      	lsls	r3, r5, #3
 800562e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005632:	00e2      	lsls	r2, r4, #3
 8005634:	4614      	mov	r4, r2
 8005636:	461d      	mov	r5, r3
 8005638:	4643      	mov	r3, r8
 800563a:	18e3      	adds	r3, r4, r3
 800563c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005640:	464b      	mov	r3, r9
 8005642:	eb45 0303 	adc.w	r3, r5, r3
 8005646:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800564a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800564e:	685b      	ldr	r3, [r3, #4]
 8005650:	2200      	movs	r2, #0
 8005652:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005656:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800565a:	f04f 0200 	mov.w	r2, #0
 800565e:	f04f 0300 	mov.w	r3, #0
 8005662:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8005666:	4629      	mov	r1, r5
 8005668:	008b      	lsls	r3, r1, #2
 800566a:	4621      	mov	r1, r4
 800566c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005670:	4621      	mov	r1, r4
 8005672:	008a      	lsls	r2, r1, #2
 8005674:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8005678:	f7fa fe22 	bl	80002c0 <__aeabi_uldivmod>
 800567c:	4602      	mov	r2, r0
 800567e:	460b      	mov	r3, r1
 8005680:	4b60      	ldr	r3, [pc, #384]	@ (8005804 <UART_SetConfig+0x4e4>)
 8005682:	fba3 2302 	umull	r2, r3, r3, r2
 8005686:	095b      	lsrs	r3, r3, #5
 8005688:	011c      	lsls	r4, r3, #4
 800568a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800568e:	2200      	movs	r2, #0
 8005690:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005694:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005698:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 800569c:	4642      	mov	r2, r8
 800569e:	464b      	mov	r3, r9
 80056a0:	1891      	adds	r1, r2, r2
 80056a2:	61b9      	str	r1, [r7, #24]
 80056a4:	415b      	adcs	r3, r3
 80056a6:	61fb      	str	r3, [r7, #28]
 80056a8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80056ac:	4641      	mov	r1, r8
 80056ae:	1851      	adds	r1, r2, r1
 80056b0:	6139      	str	r1, [r7, #16]
 80056b2:	4649      	mov	r1, r9
 80056b4:	414b      	adcs	r3, r1
 80056b6:	617b      	str	r3, [r7, #20]
 80056b8:	f04f 0200 	mov.w	r2, #0
 80056bc:	f04f 0300 	mov.w	r3, #0
 80056c0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80056c4:	4659      	mov	r1, fp
 80056c6:	00cb      	lsls	r3, r1, #3
 80056c8:	4651      	mov	r1, sl
 80056ca:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80056ce:	4651      	mov	r1, sl
 80056d0:	00ca      	lsls	r2, r1, #3
 80056d2:	4610      	mov	r0, r2
 80056d4:	4619      	mov	r1, r3
 80056d6:	4603      	mov	r3, r0
 80056d8:	4642      	mov	r2, r8
 80056da:	189b      	adds	r3, r3, r2
 80056dc:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80056e0:	464b      	mov	r3, r9
 80056e2:	460a      	mov	r2, r1
 80056e4:	eb42 0303 	adc.w	r3, r2, r3
 80056e8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80056ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80056f0:	685b      	ldr	r3, [r3, #4]
 80056f2:	2200      	movs	r2, #0
 80056f4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80056f6:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80056f8:	f04f 0200 	mov.w	r2, #0
 80056fc:	f04f 0300 	mov.w	r3, #0
 8005700:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8005704:	4649      	mov	r1, r9
 8005706:	008b      	lsls	r3, r1, #2
 8005708:	4641      	mov	r1, r8
 800570a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800570e:	4641      	mov	r1, r8
 8005710:	008a      	lsls	r2, r1, #2
 8005712:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8005716:	f7fa fdd3 	bl	80002c0 <__aeabi_uldivmod>
 800571a:	4602      	mov	r2, r0
 800571c:	460b      	mov	r3, r1
 800571e:	4611      	mov	r1, r2
 8005720:	4b38      	ldr	r3, [pc, #224]	@ (8005804 <UART_SetConfig+0x4e4>)
 8005722:	fba3 2301 	umull	r2, r3, r3, r1
 8005726:	095b      	lsrs	r3, r3, #5
 8005728:	2264      	movs	r2, #100	@ 0x64
 800572a:	fb02 f303 	mul.w	r3, r2, r3
 800572e:	1acb      	subs	r3, r1, r3
 8005730:	011b      	lsls	r3, r3, #4
 8005732:	3332      	adds	r3, #50	@ 0x32
 8005734:	4a33      	ldr	r2, [pc, #204]	@ (8005804 <UART_SetConfig+0x4e4>)
 8005736:	fba2 2303 	umull	r2, r3, r2, r3
 800573a:	095b      	lsrs	r3, r3, #5
 800573c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005740:	441c      	add	r4, r3
 8005742:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005746:	2200      	movs	r2, #0
 8005748:	673b      	str	r3, [r7, #112]	@ 0x70
 800574a:	677a      	str	r2, [r7, #116]	@ 0x74
 800574c:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8005750:	4642      	mov	r2, r8
 8005752:	464b      	mov	r3, r9
 8005754:	1891      	adds	r1, r2, r2
 8005756:	60b9      	str	r1, [r7, #8]
 8005758:	415b      	adcs	r3, r3
 800575a:	60fb      	str	r3, [r7, #12]
 800575c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005760:	4641      	mov	r1, r8
 8005762:	1851      	adds	r1, r2, r1
 8005764:	6039      	str	r1, [r7, #0]
 8005766:	4649      	mov	r1, r9
 8005768:	414b      	adcs	r3, r1
 800576a:	607b      	str	r3, [r7, #4]
 800576c:	f04f 0200 	mov.w	r2, #0
 8005770:	f04f 0300 	mov.w	r3, #0
 8005774:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005778:	4659      	mov	r1, fp
 800577a:	00cb      	lsls	r3, r1, #3
 800577c:	4651      	mov	r1, sl
 800577e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005782:	4651      	mov	r1, sl
 8005784:	00ca      	lsls	r2, r1, #3
 8005786:	4610      	mov	r0, r2
 8005788:	4619      	mov	r1, r3
 800578a:	4603      	mov	r3, r0
 800578c:	4642      	mov	r2, r8
 800578e:	189b      	adds	r3, r3, r2
 8005790:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005792:	464b      	mov	r3, r9
 8005794:	460a      	mov	r2, r1
 8005796:	eb42 0303 	adc.w	r3, r2, r3
 800579a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800579c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80057a0:	685b      	ldr	r3, [r3, #4]
 80057a2:	2200      	movs	r2, #0
 80057a4:	663b      	str	r3, [r7, #96]	@ 0x60
 80057a6:	667a      	str	r2, [r7, #100]	@ 0x64
 80057a8:	f04f 0200 	mov.w	r2, #0
 80057ac:	f04f 0300 	mov.w	r3, #0
 80057b0:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80057b4:	4649      	mov	r1, r9
 80057b6:	008b      	lsls	r3, r1, #2
 80057b8:	4641      	mov	r1, r8
 80057ba:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80057be:	4641      	mov	r1, r8
 80057c0:	008a      	lsls	r2, r1, #2
 80057c2:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80057c6:	f7fa fd7b 	bl	80002c0 <__aeabi_uldivmod>
 80057ca:	4602      	mov	r2, r0
 80057cc:	460b      	mov	r3, r1
 80057ce:	4b0d      	ldr	r3, [pc, #52]	@ (8005804 <UART_SetConfig+0x4e4>)
 80057d0:	fba3 1302 	umull	r1, r3, r3, r2
 80057d4:	095b      	lsrs	r3, r3, #5
 80057d6:	2164      	movs	r1, #100	@ 0x64
 80057d8:	fb01 f303 	mul.w	r3, r1, r3
 80057dc:	1ad3      	subs	r3, r2, r3
 80057de:	011b      	lsls	r3, r3, #4
 80057e0:	3332      	adds	r3, #50	@ 0x32
 80057e2:	4a08      	ldr	r2, [pc, #32]	@ (8005804 <UART_SetConfig+0x4e4>)
 80057e4:	fba2 2303 	umull	r2, r3, r2, r3
 80057e8:	095b      	lsrs	r3, r3, #5
 80057ea:	f003 020f 	and.w	r2, r3, #15
 80057ee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	4422      	add	r2, r4
 80057f6:	609a      	str	r2, [r3, #8]
 80057f8:	bf00      	nop
 80057fa:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80057fe:	46bd      	mov	sp, r7
 8005800:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005804:	51eb851f 	.word	0x51eb851f

08005808 <MX_FATFS_Init>:
 8005808:	b580      	push	{r7, lr}
 800580a:	af00      	add	r7, sp, #0
 800580c:	4904      	ldr	r1, [pc, #16]	@ (8005820 <MX_FATFS_Init+0x18>)
 800580e:	4805      	ldr	r0, [pc, #20]	@ (8005824 <MX_FATFS_Init+0x1c>)
 8005810:	f000 f8ae 	bl	8005970 <FATFS_LinkDriver>
 8005814:	4603      	mov	r3, r0
 8005816:	461a      	mov	r2, r3
 8005818:	4b03      	ldr	r3, [pc, #12]	@ (8005828 <MX_FATFS_Init+0x20>)
 800581a:	701a      	strb	r2, [r3, #0]
 800581c:	bf00      	nop
 800581e:	bd80      	pop	{r7, pc}
 8005820:	20013914 	.word	0x20013914
 8005824:	20013754 	.word	0x20013754
 8005828:	20013910 	.word	0x20013910

0800582c <USER_initialize>:
 800582c:	b580      	push	{r7, lr}
 800582e:	b082      	sub	sp, #8
 8005830:	af00      	add	r7, sp, #0
 8005832:	4603      	mov	r3, r0
 8005834:	71fb      	strb	r3, [r7, #7]
 8005836:	79fb      	ldrb	r3, [r7, #7]
 8005838:	4618      	mov	r0, r3
 800583a:	f7fb f86d 	bl	8000918 <SD_disk_initialize>
 800583e:	bf00      	nop
 8005840:	4618      	mov	r0, r3
 8005842:	3708      	adds	r7, #8
 8005844:	46bd      	mov	sp, r7
 8005846:	bd80      	pop	{r7, pc}

08005848 <USER_status>:
 8005848:	b580      	push	{r7, lr}
 800584a:	b082      	sub	sp, #8
 800584c:	af00      	add	r7, sp, #0
 800584e:	4603      	mov	r3, r0
 8005850:	71fb      	strb	r3, [r7, #7]
 8005852:	79fb      	ldrb	r3, [r7, #7]
 8005854:	4618      	mov	r0, r3
 8005856:	f7fb f945 	bl	8000ae4 <SD_disk_status>
 800585a:	bf00      	nop
 800585c:	4618      	mov	r0, r3
 800585e:	3708      	adds	r7, #8
 8005860:	46bd      	mov	sp, r7
 8005862:	bd80      	pop	{r7, pc}

08005864 <USER_read>:
 8005864:	b580      	push	{r7, lr}
 8005866:	b084      	sub	sp, #16
 8005868:	af00      	add	r7, sp, #0
 800586a:	60b9      	str	r1, [r7, #8]
 800586c:	607a      	str	r2, [r7, #4]
 800586e:	603b      	str	r3, [r7, #0]
 8005870:	4603      	mov	r3, r0
 8005872:	73fb      	strb	r3, [r7, #15]
 8005874:	7bf8      	ldrb	r0, [r7, #15]
 8005876:	683b      	ldr	r3, [r7, #0]
 8005878:	687a      	ldr	r2, [r7, #4]
 800587a:	68b9      	ldr	r1, [r7, #8]
 800587c:	f7fb f948 	bl	8000b10 <SD_disk_read>
 8005880:	bf00      	nop
 8005882:	4618      	mov	r0, r3
 8005884:	3710      	adds	r7, #16
 8005886:	46bd      	mov	sp, r7
 8005888:	bd80      	pop	{r7, pc}

0800588a <USER_write>:
 800588a:	b580      	push	{r7, lr}
 800588c:	b084      	sub	sp, #16
 800588e:	af00      	add	r7, sp, #0
 8005890:	60b9      	str	r1, [r7, #8]
 8005892:	607a      	str	r2, [r7, #4]
 8005894:	603b      	str	r3, [r7, #0]
 8005896:	4603      	mov	r3, r0
 8005898:	73fb      	strb	r3, [r7, #15]
 800589a:	7bf8      	ldrb	r0, [r7, #15]
 800589c:	683b      	ldr	r3, [r7, #0]
 800589e:	687a      	ldr	r2, [r7, #4]
 80058a0:	68b9      	ldr	r1, [r7, #8]
 80058a2:	f7fb f99f 	bl	8000be4 <SD_disk_write>
 80058a6:	bf00      	nop
 80058a8:	4618      	mov	r0, r3
 80058aa:	3710      	adds	r7, #16
 80058ac:	46bd      	mov	sp, r7
 80058ae:	bd80      	pop	{r7, pc}

080058b0 <USER_ioctl>:
 80058b0:	b580      	push	{r7, lr}
 80058b2:	b082      	sub	sp, #8
 80058b4:	af00      	add	r7, sp, #0
 80058b6:	4603      	mov	r3, r0
 80058b8:	603a      	str	r2, [r7, #0]
 80058ba:	71fb      	strb	r3, [r7, #7]
 80058bc:	460b      	mov	r3, r1
 80058be:	71bb      	strb	r3, [r7, #6]
 80058c0:	79fb      	ldrb	r3, [r7, #7]
 80058c2:	79b9      	ldrb	r1, [r7, #6]
 80058c4:	683a      	ldr	r2, [r7, #0]
 80058c6:	4618      	mov	r0, r3
 80058c8:	f7fb fa10 	bl	8000cec <SD_disk_ioctl>
 80058cc:	bf00      	nop
 80058ce:	4618      	mov	r0, r3
 80058d0:	3708      	adds	r7, #8
 80058d2:	46bd      	mov	sp, r7
 80058d4:	bd80      	pop	{r7, pc}
	...

080058d8 <FATFS_LinkDriverEx>:
 80058d8:	b480      	push	{r7}
 80058da:	b087      	sub	sp, #28
 80058dc:	af00      	add	r7, sp, #0
 80058de:	60f8      	str	r0, [r7, #12]
 80058e0:	60b9      	str	r1, [r7, #8]
 80058e2:	4613      	mov	r3, r2
 80058e4:	71fb      	strb	r3, [r7, #7]
 80058e6:	2301      	movs	r3, #1
 80058e8:	75fb      	strb	r3, [r7, #23]
 80058ea:	2300      	movs	r3, #0
 80058ec:	75bb      	strb	r3, [r7, #22]
 80058ee:	4b1f      	ldr	r3, [pc, #124]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 80058f0:	7a5b      	ldrb	r3, [r3, #9]
 80058f2:	b2db      	uxtb	r3, r3
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d131      	bne.n	800595c <FATFS_LinkDriverEx+0x84>
 80058f8:	4b1c      	ldr	r3, [pc, #112]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 80058fa:	7a5b      	ldrb	r3, [r3, #9]
 80058fc:	b2db      	uxtb	r3, r3
 80058fe:	461a      	mov	r2, r3
 8005900:	4b1a      	ldr	r3, [pc, #104]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 8005902:	2100      	movs	r1, #0
 8005904:	5499      	strb	r1, [r3, r2]
 8005906:	4b19      	ldr	r3, [pc, #100]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 8005908:	7a5b      	ldrb	r3, [r3, #9]
 800590a:	b2db      	uxtb	r3, r3
 800590c:	4a17      	ldr	r2, [pc, #92]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 800590e:	009b      	lsls	r3, r3, #2
 8005910:	4413      	add	r3, r2
 8005912:	68fa      	ldr	r2, [r7, #12]
 8005914:	605a      	str	r2, [r3, #4]
 8005916:	4b15      	ldr	r3, [pc, #84]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 8005918:	7a5b      	ldrb	r3, [r3, #9]
 800591a:	b2db      	uxtb	r3, r3
 800591c:	461a      	mov	r2, r3
 800591e:	4b13      	ldr	r3, [pc, #76]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 8005920:	4413      	add	r3, r2
 8005922:	79fa      	ldrb	r2, [r7, #7]
 8005924:	721a      	strb	r2, [r3, #8]
 8005926:	4b11      	ldr	r3, [pc, #68]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 8005928:	7a5b      	ldrb	r3, [r3, #9]
 800592a:	b2db      	uxtb	r3, r3
 800592c:	1c5a      	adds	r2, r3, #1
 800592e:	b2d1      	uxtb	r1, r2
 8005930:	4a0e      	ldr	r2, [pc, #56]	@ (800596c <FATFS_LinkDriverEx+0x94>)
 8005932:	7251      	strb	r1, [r2, #9]
 8005934:	75bb      	strb	r3, [r7, #22]
 8005936:	7dbb      	ldrb	r3, [r7, #22]
 8005938:	3330      	adds	r3, #48	@ 0x30
 800593a:	b2da      	uxtb	r2, r3
 800593c:	68bb      	ldr	r3, [r7, #8]
 800593e:	701a      	strb	r2, [r3, #0]
 8005940:	68bb      	ldr	r3, [r7, #8]
 8005942:	3301      	adds	r3, #1
 8005944:	223a      	movs	r2, #58	@ 0x3a
 8005946:	701a      	strb	r2, [r3, #0]
 8005948:	68bb      	ldr	r3, [r7, #8]
 800594a:	3302      	adds	r3, #2
 800594c:	222f      	movs	r2, #47	@ 0x2f
 800594e:	701a      	strb	r2, [r3, #0]
 8005950:	68bb      	ldr	r3, [r7, #8]
 8005952:	3303      	adds	r3, #3
 8005954:	2200      	movs	r2, #0
 8005956:	701a      	strb	r2, [r3, #0]
 8005958:	2300      	movs	r3, #0
 800595a:	75fb      	strb	r3, [r7, #23]
 800595c:	7dfb      	ldrb	r3, [r7, #23]
 800595e:	4618      	mov	r0, r3
 8005960:	371c      	adds	r7, #28
 8005962:	46bd      	mov	sp, r7
 8005964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005968:	4770      	bx	lr
 800596a:	bf00      	nop
 800596c:	20013918 	.word	0x20013918

08005970 <FATFS_LinkDriver>:
 8005970:	b580      	push	{r7, lr}
 8005972:	b082      	sub	sp, #8
 8005974:	af00      	add	r7, sp, #0
 8005976:	6078      	str	r0, [r7, #4]
 8005978:	6039      	str	r1, [r7, #0]
 800597a:	2200      	movs	r2, #0
 800597c:	6839      	ldr	r1, [r7, #0]
 800597e:	6878      	ldr	r0, [r7, #4]
 8005980:	f7ff ffaa 	bl	80058d8 <FATFS_LinkDriverEx>
 8005984:	4603      	mov	r3, r0
 8005986:	4618      	mov	r0, r3
 8005988:	3708      	adds	r7, #8
 800598a:	46bd      	mov	sp, r7
 800598c:	bd80      	pop	{r7, pc}
	...

08005990 <srand>:
 8005990:	b538      	push	{r3, r4, r5, lr}
 8005992:	4b10      	ldr	r3, [pc, #64]	@ (80059d4 <srand+0x44>)
 8005994:	681d      	ldr	r5, [r3, #0]
 8005996:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8005998:	4604      	mov	r4, r0
 800599a:	b9b3      	cbnz	r3, 80059ca <srand+0x3a>
 800599c:	2018      	movs	r0, #24
 800599e:	f000 fa7b 	bl	8005e98 <malloc>
 80059a2:	4602      	mov	r2, r0
 80059a4:	6328      	str	r0, [r5, #48]	@ 0x30
 80059a6:	b920      	cbnz	r0, 80059b2 <srand+0x22>
 80059a8:	4b0b      	ldr	r3, [pc, #44]	@ (80059d8 <srand+0x48>)
 80059aa:	480c      	ldr	r0, [pc, #48]	@ (80059dc <srand+0x4c>)
 80059ac:	2146      	movs	r1, #70	@ 0x46
 80059ae:	f000 fa0b 	bl	8005dc8 <__assert_func>
 80059b2:	490b      	ldr	r1, [pc, #44]	@ (80059e0 <srand+0x50>)
 80059b4:	4b0b      	ldr	r3, [pc, #44]	@ (80059e4 <srand+0x54>)
 80059b6:	e9c0 1300 	strd	r1, r3, [r0]
 80059ba:	4b0b      	ldr	r3, [pc, #44]	@ (80059e8 <srand+0x58>)
 80059bc:	6083      	str	r3, [r0, #8]
 80059be:	230b      	movs	r3, #11
 80059c0:	8183      	strh	r3, [r0, #12]
 80059c2:	2100      	movs	r1, #0
 80059c4:	2001      	movs	r0, #1
 80059c6:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80059ca:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80059cc:	2200      	movs	r2, #0
 80059ce:	611c      	str	r4, [r3, #16]
 80059d0:	615a      	str	r2, [r3, #20]
 80059d2:	bd38      	pop	{r3, r4, r5, pc}
 80059d4:	20013774 	.word	0x20013774
 80059d8:	080089b4 	.word	0x080089b4
 80059dc:	080089cb 	.word	0x080089cb
 80059e0:	abcd330e 	.word	0xabcd330e
 80059e4:	e66d1234 	.word	0xe66d1234
 80059e8:	0005deec 	.word	0x0005deec

080059ec <rand>:
 80059ec:	4b16      	ldr	r3, [pc, #88]	@ (8005a48 <rand+0x5c>)
 80059ee:	b510      	push	{r4, lr}
 80059f0:	681c      	ldr	r4, [r3, #0]
 80059f2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80059f4:	b9b3      	cbnz	r3, 8005a24 <rand+0x38>
 80059f6:	2018      	movs	r0, #24
 80059f8:	f000 fa4e 	bl	8005e98 <malloc>
 80059fc:	4602      	mov	r2, r0
 80059fe:	6320      	str	r0, [r4, #48]	@ 0x30
 8005a00:	b920      	cbnz	r0, 8005a0c <rand+0x20>
 8005a02:	4b12      	ldr	r3, [pc, #72]	@ (8005a4c <rand+0x60>)
 8005a04:	4812      	ldr	r0, [pc, #72]	@ (8005a50 <rand+0x64>)
 8005a06:	2152      	movs	r1, #82	@ 0x52
 8005a08:	f000 f9de 	bl	8005dc8 <__assert_func>
 8005a0c:	4911      	ldr	r1, [pc, #68]	@ (8005a54 <rand+0x68>)
 8005a0e:	4b12      	ldr	r3, [pc, #72]	@ (8005a58 <rand+0x6c>)
 8005a10:	e9c0 1300 	strd	r1, r3, [r0]
 8005a14:	4b11      	ldr	r3, [pc, #68]	@ (8005a5c <rand+0x70>)
 8005a16:	6083      	str	r3, [r0, #8]
 8005a18:	230b      	movs	r3, #11
 8005a1a:	8183      	strh	r3, [r0, #12]
 8005a1c:	2100      	movs	r1, #0
 8005a1e:	2001      	movs	r0, #1
 8005a20:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8005a24:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005a26:	480e      	ldr	r0, [pc, #56]	@ (8005a60 <rand+0x74>)
 8005a28:	690b      	ldr	r3, [r1, #16]
 8005a2a:	694c      	ldr	r4, [r1, #20]
 8005a2c:	4a0d      	ldr	r2, [pc, #52]	@ (8005a64 <rand+0x78>)
 8005a2e:	4358      	muls	r0, r3
 8005a30:	fb02 0004 	mla	r0, r2, r4, r0
 8005a34:	fba3 3202 	umull	r3, r2, r3, r2
 8005a38:	3301      	adds	r3, #1
 8005a3a:	eb40 0002 	adc.w	r0, r0, r2
 8005a3e:	e9c1 3004 	strd	r3, r0, [r1, #16]
 8005a42:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005a46:	bd10      	pop	{r4, pc}
 8005a48:	20013774 	.word	0x20013774
 8005a4c:	080089b4 	.word	0x080089b4
 8005a50:	080089cb 	.word	0x080089cb
 8005a54:	abcd330e 	.word	0xabcd330e
 8005a58:	e66d1234 	.word	0xe66d1234
 8005a5c:	0005deec 	.word	0x0005deec
 8005a60:	5851f42d 	.word	0x5851f42d
 8005a64:	4c957f2d 	.word	0x4c957f2d

08005a68 <std>:
 8005a68:	2300      	movs	r3, #0
 8005a6a:	b510      	push	{r4, lr}
 8005a6c:	4604      	mov	r4, r0
 8005a6e:	e9c0 3300 	strd	r3, r3, [r0]
 8005a72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005a76:	6083      	str	r3, [r0, #8]
 8005a78:	8181      	strh	r1, [r0, #12]
 8005a7a:	6643      	str	r3, [r0, #100]	@ 0x64
 8005a7c:	81c2      	strh	r2, [r0, #14]
 8005a7e:	6183      	str	r3, [r0, #24]
 8005a80:	4619      	mov	r1, r3
 8005a82:	2208      	movs	r2, #8
 8005a84:	305c      	adds	r0, #92	@ 0x5c
 8005a86:	f000 f8f4 	bl	8005c72 <memset>
 8005a8a:	4b0d      	ldr	r3, [pc, #52]	@ (8005ac0 <std+0x58>)
 8005a8c:	6263      	str	r3, [r4, #36]	@ 0x24
 8005a8e:	4b0d      	ldr	r3, [pc, #52]	@ (8005ac4 <std+0x5c>)
 8005a90:	62a3      	str	r3, [r4, #40]	@ 0x28
 8005a92:	4b0d      	ldr	r3, [pc, #52]	@ (8005ac8 <std+0x60>)
 8005a94:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005a96:	4b0d      	ldr	r3, [pc, #52]	@ (8005acc <std+0x64>)
 8005a98:	6323      	str	r3, [r4, #48]	@ 0x30
 8005a9a:	4b0d      	ldr	r3, [pc, #52]	@ (8005ad0 <std+0x68>)
 8005a9c:	6224      	str	r4, [r4, #32]
 8005a9e:	429c      	cmp	r4, r3
 8005aa0:	d006      	beq.n	8005ab0 <std+0x48>
 8005aa2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8005aa6:	4294      	cmp	r4, r2
 8005aa8:	d002      	beq.n	8005ab0 <std+0x48>
 8005aaa:	33d0      	adds	r3, #208	@ 0xd0
 8005aac:	429c      	cmp	r4, r3
 8005aae:	d105      	bne.n	8005abc <std+0x54>
 8005ab0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8005ab4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ab8:	f000 b982 	b.w	8005dc0 <__retarget_lock_init_recursive>
 8005abc:	bd10      	pop	{r4, pc}
 8005abe:	bf00      	nop
 8005ac0:	08005bed 	.word	0x08005bed
 8005ac4:	08005c0f 	.word	0x08005c0f
 8005ac8:	08005c47 	.word	0x08005c47
 8005acc:	08005c6b 	.word	0x08005c6b
 8005ad0:	20013924 	.word	0x20013924

08005ad4 <stdio_exit_handler>:
 8005ad4:	4a02      	ldr	r2, [pc, #8]	@ (8005ae0 <stdio_exit_handler+0xc>)
 8005ad6:	4903      	ldr	r1, [pc, #12]	@ (8005ae4 <stdio_exit_handler+0x10>)
 8005ad8:	4803      	ldr	r0, [pc, #12]	@ (8005ae8 <stdio_exit_handler+0x14>)
 8005ada:	f000 b869 	b.w	8005bb0 <_fwalk_sglue>
 8005ade:	bf00      	nop
 8005ae0:	20013768 	.word	0x20013768
 8005ae4:	0800610d 	.word	0x0800610d
 8005ae8:	20013778 	.word	0x20013778

08005aec <cleanup_stdio>:
 8005aec:	6841      	ldr	r1, [r0, #4]
 8005aee:	4b0c      	ldr	r3, [pc, #48]	@ (8005b20 <cleanup_stdio+0x34>)
 8005af0:	4299      	cmp	r1, r3
 8005af2:	b510      	push	{r4, lr}
 8005af4:	4604      	mov	r4, r0
 8005af6:	d001      	beq.n	8005afc <cleanup_stdio+0x10>
 8005af8:	f000 fb08 	bl	800610c <_fflush_r>
 8005afc:	68a1      	ldr	r1, [r4, #8]
 8005afe:	4b09      	ldr	r3, [pc, #36]	@ (8005b24 <cleanup_stdio+0x38>)
 8005b00:	4299      	cmp	r1, r3
 8005b02:	d002      	beq.n	8005b0a <cleanup_stdio+0x1e>
 8005b04:	4620      	mov	r0, r4
 8005b06:	f000 fb01 	bl	800610c <_fflush_r>
 8005b0a:	68e1      	ldr	r1, [r4, #12]
 8005b0c:	4b06      	ldr	r3, [pc, #24]	@ (8005b28 <cleanup_stdio+0x3c>)
 8005b0e:	4299      	cmp	r1, r3
 8005b10:	d004      	beq.n	8005b1c <cleanup_stdio+0x30>
 8005b12:	4620      	mov	r0, r4
 8005b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b18:	f000 baf8 	b.w	800610c <_fflush_r>
 8005b1c:	bd10      	pop	{r4, pc}
 8005b1e:	bf00      	nop
 8005b20:	20013924 	.word	0x20013924
 8005b24:	2001398c 	.word	0x2001398c
 8005b28:	200139f4 	.word	0x200139f4

08005b2c <global_stdio_init.part.0>:
 8005b2c:	b510      	push	{r4, lr}
 8005b2e:	4b0b      	ldr	r3, [pc, #44]	@ (8005b5c <global_stdio_init.part.0+0x30>)
 8005b30:	4c0b      	ldr	r4, [pc, #44]	@ (8005b60 <global_stdio_init.part.0+0x34>)
 8005b32:	4a0c      	ldr	r2, [pc, #48]	@ (8005b64 <global_stdio_init.part.0+0x38>)
 8005b34:	601a      	str	r2, [r3, #0]
 8005b36:	4620      	mov	r0, r4
 8005b38:	2200      	movs	r2, #0
 8005b3a:	2104      	movs	r1, #4
 8005b3c:	f7ff ff94 	bl	8005a68 <std>
 8005b40:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8005b44:	2201      	movs	r2, #1
 8005b46:	2109      	movs	r1, #9
 8005b48:	f7ff ff8e 	bl	8005a68 <std>
 8005b4c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8005b50:	2202      	movs	r2, #2
 8005b52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b56:	2112      	movs	r1, #18
 8005b58:	f7ff bf86 	b.w	8005a68 <std>
 8005b5c:	20013a5c 	.word	0x20013a5c
 8005b60:	20013924 	.word	0x20013924
 8005b64:	08005ad5 	.word	0x08005ad5

08005b68 <__sfp_lock_acquire>:
 8005b68:	4801      	ldr	r0, [pc, #4]	@ (8005b70 <__sfp_lock_acquire+0x8>)
 8005b6a:	f000 b92a 	b.w	8005dc2 <__retarget_lock_acquire_recursive>
 8005b6e:	bf00      	nop
 8005b70:	20013a65 	.word	0x20013a65

08005b74 <__sfp_lock_release>:
 8005b74:	4801      	ldr	r0, [pc, #4]	@ (8005b7c <__sfp_lock_release+0x8>)
 8005b76:	f000 b925 	b.w	8005dc4 <__retarget_lock_release_recursive>
 8005b7a:	bf00      	nop
 8005b7c:	20013a65 	.word	0x20013a65

08005b80 <__sinit>:
 8005b80:	b510      	push	{r4, lr}
 8005b82:	4604      	mov	r4, r0
 8005b84:	f7ff fff0 	bl	8005b68 <__sfp_lock_acquire>
 8005b88:	6a23      	ldr	r3, [r4, #32]
 8005b8a:	b11b      	cbz	r3, 8005b94 <__sinit+0x14>
 8005b8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b90:	f7ff bff0 	b.w	8005b74 <__sfp_lock_release>
 8005b94:	4b04      	ldr	r3, [pc, #16]	@ (8005ba8 <__sinit+0x28>)
 8005b96:	6223      	str	r3, [r4, #32]
 8005b98:	4b04      	ldr	r3, [pc, #16]	@ (8005bac <__sinit+0x2c>)
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	2b00      	cmp	r3, #0
 8005b9e:	d1f5      	bne.n	8005b8c <__sinit+0xc>
 8005ba0:	f7ff ffc4 	bl	8005b2c <global_stdio_init.part.0>
 8005ba4:	e7f2      	b.n	8005b8c <__sinit+0xc>
 8005ba6:	bf00      	nop
 8005ba8:	08005aed 	.word	0x08005aed
 8005bac:	20013a5c 	.word	0x20013a5c

08005bb0 <_fwalk_sglue>:
 8005bb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005bb4:	4607      	mov	r7, r0
 8005bb6:	4688      	mov	r8, r1
 8005bb8:	4614      	mov	r4, r2
 8005bba:	2600      	movs	r6, #0
 8005bbc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005bc0:	f1b9 0901 	subs.w	r9, r9, #1
 8005bc4:	d505      	bpl.n	8005bd2 <_fwalk_sglue+0x22>
 8005bc6:	6824      	ldr	r4, [r4, #0]
 8005bc8:	2c00      	cmp	r4, #0
 8005bca:	d1f7      	bne.n	8005bbc <_fwalk_sglue+0xc>
 8005bcc:	4630      	mov	r0, r6
 8005bce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005bd2:	89ab      	ldrh	r3, [r5, #12]
 8005bd4:	2b01      	cmp	r3, #1
 8005bd6:	d907      	bls.n	8005be8 <_fwalk_sglue+0x38>
 8005bd8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005bdc:	3301      	adds	r3, #1
 8005bde:	d003      	beq.n	8005be8 <_fwalk_sglue+0x38>
 8005be0:	4629      	mov	r1, r5
 8005be2:	4638      	mov	r0, r7
 8005be4:	47c0      	blx	r8
 8005be6:	4306      	orrs	r6, r0
 8005be8:	3568      	adds	r5, #104	@ 0x68
 8005bea:	e7e9      	b.n	8005bc0 <_fwalk_sglue+0x10>

08005bec <__sread>:
 8005bec:	b510      	push	{r4, lr}
 8005bee:	460c      	mov	r4, r1
 8005bf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005bf4:	f000 f896 	bl	8005d24 <_read_r>
 8005bf8:	2800      	cmp	r0, #0
 8005bfa:	bfab      	itete	ge
 8005bfc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8005bfe:	89a3      	ldrhlt	r3, [r4, #12]
 8005c00:	181b      	addge	r3, r3, r0
 8005c02:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8005c06:	bfac      	ite	ge
 8005c08:	6563      	strge	r3, [r4, #84]	@ 0x54
 8005c0a:	81a3      	strhlt	r3, [r4, #12]
 8005c0c:	bd10      	pop	{r4, pc}

08005c0e <__swrite>:
 8005c0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c12:	461f      	mov	r7, r3
 8005c14:	898b      	ldrh	r3, [r1, #12]
 8005c16:	05db      	lsls	r3, r3, #23
 8005c18:	4605      	mov	r5, r0
 8005c1a:	460c      	mov	r4, r1
 8005c1c:	4616      	mov	r6, r2
 8005c1e:	d505      	bpl.n	8005c2c <__swrite+0x1e>
 8005c20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c24:	2302      	movs	r3, #2
 8005c26:	2200      	movs	r2, #0
 8005c28:	f000 f86a 	bl	8005d00 <_lseek_r>
 8005c2c:	89a3      	ldrh	r3, [r4, #12]
 8005c2e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005c32:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005c36:	81a3      	strh	r3, [r4, #12]
 8005c38:	4632      	mov	r2, r6
 8005c3a:	463b      	mov	r3, r7
 8005c3c:	4628      	mov	r0, r5
 8005c3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005c42:	f000 b881 	b.w	8005d48 <_write_r>

08005c46 <__sseek>:
 8005c46:	b510      	push	{r4, lr}
 8005c48:	460c      	mov	r4, r1
 8005c4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c4e:	f000 f857 	bl	8005d00 <_lseek_r>
 8005c52:	1c43      	adds	r3, r0, #1
 8005c54:	89a3      	ldrh	r3, [r4, #12]
 8005c56:	bf15      	itete	ne
 8005c58:	6560      	strne	r0, [r4, #84]	@ 0x54
 8005c5a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8005c5e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005c62:	81a3      	strheq	r3, [r4, #12]
 8005c64:	bf18      	it	ne
 8005c66:	81a3      	strhne	r3, [r4, #12]
 8005c68:	bd10      	pop	{r4, pc}

08005c6a <__sclose>:
 8005c6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c6e:	f000 b825 	b.w	8005cbc <_close_r>

08005c72 <memset>:
 8005c72:	4402      	add	r2, r0
 8005c74:	4603      	mov	r3, r0
 8005c76:	4293      	cmp	r3, r2
 8005c78:	d100      	bne.n	8005c7c <memset+0xa>
 8005c7a:	4770      	bx	lr
 8005c7c:	f803 1b01 	strb.w	r1, [r3], #1
 8005c80:	e7f9      	b.n	8005c76 <memset+0x4>
	...

08005c84 <time>:
 8005c84:	b5df      	push	{r0, r1, r2, r3, r4, r6, r7, lr}
 8005c86:	4b0c      	ldr	r3, [pc, #48]	@ (8005cb8 <time+0x34>)
 8005c88:	f04f 36ff 	mov.w	r6, #4294967295
 8005c8c:	f04f 37ff 	mov.w	r7, #4294967295
 8005c90:	4669      	mov	r1, sp
 8005c92:	4604      	mov	r4, r0
 8005c94:	2200      	movs	r2, #0
 8005c96:	6818      	ldr	r0, [r3, #0]
 8005c98:	e9cd 6700 	strd	r6, r7, [sp]
 8005c9c:	f000 f81e 	bl	8005cdc <_gettimeofday_r>
 8005ca0:	2800      	cmp	r0, #0
 8005ca2:	bfb8      	it	lt
 8005ca4:	e9cd 6700 	strdlt	r6, r7, [sp]
 8005ca8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005cac:	b10c      	cbz	r4, 8005cb2 <time+0x2e>
 8005cae:	e9c4 0100 	strd	r0, r1, [r4]
 8005cb2:	b004      	add	sp, #16
 8005cb4:	bdd0      	pop	{r4, r6, r7, pc}
 8005cb6:	bf00      	nop
 8005cb8:	20013774 	.word	0x20013774

08005cbc <_close_r>:
 8005cbc:	b538      	push	{r3, r4, r5, lr}
 8005cbe:	4d06      	ldr	r5, [pc, #24]	@ (8005cd8 <_close_r+0x1c>)
 8005cc0:	2300      	movs	r3, #0
 8005cc2:	4604      	mov	r4, r0
 8005cc4:	4608      	mov	r0, r1
 8005cc6:	602b      	str	r3, [r5, #0]
 8005cc8:	f7fc fcf2 	bl	80026b0 <_close>
 8005ccc:	1c43      	adds	r3, r0, #1
 8005cce:	d102      	bne.n	8005cd6 <_close_r+0x1a>
 8005cd0:	682b      	ldr	r3, [r5, #0]
 8005cd2:	b103      	cbz	r3, 8005cd6 <_close_r+0x1a>
 8005cd4:	6023      	str	r3, [r4, #0]
 8005cd6:	bd38      	pop	{r3, r4, r5, pc}
 8005cd8:	20013a60 	.word	0x20013a60

08005cdc <_gettimeofday_r>:
 8005cdc:	b538      	push	{r3, r4, r5, lr}
 8005cde:	4d07      	ldr	r5, [pc, #28]	@ (8005cfc <_gettimeofday_r+0x20>)
 8005ce0:	2300      	movs	r3, #0
 8005ce2:	4604      	mov	r4, r0
 8005ce4:	4608      	mov	r0, r1
 8005ce6:	4611      	mov	r1, r2
 8005ce8:	602b      	str	r3, [r5, #0]
 8005cea:	f000 fe8b 	bl	8006a04 <_gettimeofday>
 8005cee:	1c43      	adds	r3, r0, #1
 8005cf0:	d102      	bne.n	8005cf8 <_gettimeofday_r+0x1c>
 8005cf2:	682b      	ldr	r3, [r5, #0]
 8005cf4:	b103      	cbz	r3, 8005cf8 <_gettimeofday_r+0x1c>
 8005cf6:	6023      	str	r3, [r4, #0]
 8005cf8:	bd38      	pop	{r3, r4, r5, pc}
 8005cfa:	bf00      	nop
 8005cfc:	20013a60 	.word	0x20013a60

08005d00 <_lseek_r>:
 8005d00:	b538      	push	{r3, r4, r5, lr}
 8005d02:	4d07      	ldr	r5, [pc, #28]	@ (8005d20 <_lseek_r+0x20>)
 8005d04:	4604      	mov	r4, r0
 8005d06:	4608      	mov	r0, r1
 8005d08:	4611      	mov	r1, r2
 8005d0a:	2200      	movs	r2, #0
 8005d0c:	602a      	str	r2, [r5, #0]
 8005d0e:	461a      	mov	r2, r3
 8005d10:	f7fc fcf5 	bl	80026fe <_lseek>
 8005d14:	1c43      	adds	r3, r0, #1
 8005d16:	d102      	bne.n	8005d1e <_lseek_r+0x1e>
 8005d18:	682b      	ldr	r3, [r5, #0]
 8005d1a:	b103      	cbz	r3, 8005d1e <_lseek_r+0x1e>
 8005d1c:	6023      	str	r3, [r4, #0]
 8005d1e:	bd38      	pop	{r3, r4, r5, pc}
 8005d20:	20013a60 	.word	0x20013a60

08005d24 <_read_r>:
 8005d24:	b538      	push	{r3, r4, r5, lr}
 8005d26:	4d07      	ldr	r5, [pc, #28]	@ (8005d44 <_read_r+0x20>)
 8005d28:	4604      	mov	r4, r0
 8005d2a:	4608      	mov	r0, r1
 8005d2c:	4611      	mov	r1, r2
 8005d2e:	2200      	movs	r2, #0
 8005d30:	602a      	str	r2, [r5, #0]
 8005d32:	461a      	mov	r2, r3
 8005d34:	f7fc fc83 	bl	800263e <_read>
 8005d38:	1c43      	adds	r3, r0, #1
 8005d3a:	d102      	bne.n	8005d42 <_read_r+0x1e>
 8005d3c:	682b      	ldr	r3, [r5, #0]
 8005d3e:	b103      	cbz	r3, 8005d42 <_read_r+0x1e>
 8005d40:	6023      	str	r3, [r4, #0]
 8005d42:	bd38      	pop	{r3, r4, r5, pc}
 8005d44:	20013a60 	.word	0x20013a60

08005d48 <_write_r>:
 8005d48:	b538      	push	{r3, r4, r5, lr}
 8005d4a:	4d07      	ldr	r5, [pc, #28]	@ (8005d68 <_write_r+0x20>)
 8005d4c:	4604      	mov	r4, r0
 8005d4e:	4608      	mov	r0, r1
 8005d50:	4611      	mov	r1, r2
 8005d52:	2200      	movs	r2, #0
 8005d54:	602a      	str	r2, [r5, #0]
 8005d56:	461a      	mov	r2, r3
 8005d58:	f7fc fc8e 	bl	8002678 <_write>
 8005d5c:	1c43      	adds	r3, r0, #1
 8005d5e:	d102      	bne.n	8005d66 <_write_r+0x1e>
 8005d60:	682b      	ldr	r3, [r5, #0]
 8005d62:	b103      	cbz	r3, 8005d66 <_write_r+0x1e>
 8005d64:	6023      	str	r3, [r4, #0]
 8005d66:	bd38      	pop	{r3, r4, r5, pc}
 8005d68:	20013a60 	.word	0x20013a60

08005d6c <__errno>:
 8005d6c:	4b01      	ldr	r3, [pc, #4]	@ (8005d74 <__errno+0x8>)
 8005d6e:	6818      	ldr	r0, [r3, #0]
 8005d70:	4770      	bx	lr
 8005d72:	bf00      	nop
 8005d74:	20013774 	.word	0x20013774

08005d78 <__libc_init_array>:
 8005d78:	b570      	push	{r4, r5, r6, lr}
 8005d7a:	4d0d      	ldr	r5, [pc, #52]	@ (8005db0 <__libc_init_array+0x38>)
 8005d7c:	4c0d      	ldr	r4, [pc, #52]	@ (8005db4 <__libc_init_array+0x3c>)
 8005d7e:	1b64      	subs	r4, r4, r5
 8005d80:	10a4      	asrs	r4, r4, #2
 8005d82:	2600      	movs	r6, #0
 8005d84:	42a6      	cmp	r6, r4
 8005d86:	d109      	bne.n	8005d9c <__libc_init_array+0x24>
 8005d88:	4d0b      	ldr	r5, [pc, #44]	@ (8005db8 <__libc_init_array+0x40>)
 8005d8a:	4c0c      	ldr	r4, [pc, #48]	@ (8005dbc <__libc_init_array+0x44>)
 8005d8c:	f000 fe42 	bl	8006a14 <_init>
 8005d90:	1b64      	subs	r4, r4, r5
 8005d92:	10a4      	asrs	r4, r4, #2
 8005d94:	2600      	movs	r6, #0
 8005d96:	42a6      	cmp	r6, r4
 8005d98:	d105      	bne.n	8005da6 <__libc_init_array+0x2e>
 8005d9a:	bd70      	pop	{r4, r5, r6, pc}
 8005d9c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005da0:	4798      	blx	r3
 8005da2:	3601      	adds	r6, #1
 8005da4:	e7ee      	b.n	8005d84 <__libc_init_array+0xc>
 8005da6:	f855 3b04 	ldr.w	r3, [r5], #4
 8005daa:	4798      	blx	r3
 8005dac:	3601      	adds	r6, #1
 8005dae:	e7f2      	b.n	8005d96 <__libc_init_array+0x1e>
 8005db0:	08008a9c 	.word	0x08008a9c
 8005db4:	08008a9c 	.word	0x08008a9c
 8005db8:	08008a9c 	.word	0x08008a9c
 8005dbc:	08008aa0 	.word	0x08008aa0

08005dc0 <__retarget_lock_init_recursive>:
 8005dc0:	4770      	bx	lr

08005dc2 <__retarget_lock_acquire_recursive>:
 8005dc2:	4770      	bx	lr

08005dc4 <__retarget_lock_release_recursive>:
 8005dc4:	4770      	bx	lr
	...

08005dc8 <__assert_func>:
 8005dc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005dca:	4614      	mov	r4, r2
 8005dcc:	461a      	mov	r2, r3
 8005dce:	4b09      	ldr	r3, [pc, #36]	@ (8005df4 <__assert_func+0x2c>)
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	4605      	mov	r5, r0
 8005dd4:	68d8      	ldr	r0, [r3, #12]
 8005dd6:	b954      	cbnz	r4, 8005dee <__assert_func+0x26>
 8005dd8:	4b07      	ldr	r3, [pc, #28]	@ (8005df8 <__assert_func+0x30>)
 8005dda:	461c      	mov	r4, r3
 8005ddc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005de0:	9100      	str	r1, [sp, #0]
 8005de2:	462b      	mov	r3, r5
 8005de4:	4905      	ldr	r1, [pc, #20]	@ (8005dfc <__assert_func+0x34>)
 8005de6:	f000 f9b9 	bl	800615c <fiprintf>
 8005dea:	f000 f9d9 	bl	80061a0 <abort>
 8005dee:	4b04      	ldr	r3, [pc, #16]	@ (8005e00 <__assert_func+0x38>)
 8005df0:	e7f4      	b.n	8005ddc <__assert_func+0x14>
 8005df2:	bf00      	nop
 8005df4:	20013774 	.word	0x20013774
 8005df8:	08008a5e 	.word	0x08008a5e
 8005dfc:	08008a30 	.word	0x08008a30
 8005e00:	08008a23 	.word	0x08008a23

08005e04 <_free_r>:
 8005e04:	b538      	push	{r3, r4, r5, lr}
 8005e06:	4605      	mov	r5, r0
 8005e08:	2900      	cmp	r1, #0
 8005e0a:	d041      	beq.n	8005e90 <_free_r+0x8c>
 8005e0c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005e10:	1f0c      	subs	r4, r1, #4
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	bfb8      	it	lt
 8005e16:	18e4      	addlt	r4, r4, r3
 8005e18:	f000 f8e8 	bl	8005fec <__malloc_lock>
 8005e1c:	4a1d      	ldr	r2, [pc, #116]	@ (8005e94 <_free_r+0x90>)
 8005e1e:	6813      	ldr	r3, [r2, #0]
 8005e20:	b933      	cbnz	r3, 8005e30 <_free_r+0x2c>
 8005e22:	6063      	str	r3, [r4, #4]
 8005e24:	6014      	str	r4, [r2, #0]
 8005e26:	4628      	mov	r0, r5
 8005e28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005e2c:	f000 b8e4 	b.w	8005ff8 <__malloc_unlock>
 8005e30:	42a3      	cmp	r3, r4
 8005e32:	d908      	bls.n	8005e46 <_free_r+0x42>
 8005e34:	6820      	ldr	r0, [r4, #0]
 8005e36:	1821      	adds	r1, r4, r0
 8005e38:	428b      	cmp	r3, r1
 8005e3a:	bf01      	itttt	eq
 8005e3c:	6819      	ldreq	r1, [r3, #0]
 8005e3e:	685b      	ldreq	r3, [r3, #4]
 8005e40:	1809      	addeq	r1, r1, r0
 8005e42:	6021      	streq	r1, [r4, #0]
 8005e44:	e7ed      	b.n	8005e22 <_free_r+0x1e>
 8005e46:	461a      	mov	r2, r3
 8005e48:	685b      	ldr	r3, [r3, #4]
 8005e4a:	b10b      	cbz	r3, 8005e50 <_free_r+0x4c>
 8005e4c:	42a3      	cmp	r3, r4
 8005e4e:	d9fa      	bls.n	8005e46 <_free_r+0x42>
 8005e50:	6811      	ldr	r1, [r2, #0]
 8005e52:	1850      	adds	r0, r2, r1
 8005e54:	42a0      	cmp	r0, r4
 8005e56:	d10b      	bne.n	8005e70 <_free_r+0x6c>
 8005e58:	6820      	ldr	r0, [r4, #0]
 8005e5a:	4401      	add	r1, r0
 8005e5c:	1850      	adds	r0, r2, r1
 8005e5e:	4283      	cmp	r3, r0
 8005e60:	6011      	str	r1, [r2, #0]
 8005e62:	d1e0      	bne.n	8005e26 <_free_r+0x22>
 8005e64:	6818      	ldr	r0, [r3, #0]
 8005e66:	685b      	ldr	r3, [r3, #4]
 8005e68:	6053      	str	r3, [r2, #4]
 8005e6a:	4408      	add	r0, r1
 8005e6c:	6010      	str	r0, [r2, #0]
 8005e6e:	e7da      	b.n	8005e26 <_free_r+0x22>
 8005e70:	d902      	bls.n	8005e78 <_free_r+0x74>
 8005e72:	230c      	movs	r3, #12
 8005e74:	602b      	str	r3, [r5, #0]
 8005e76:	e7d6      	b.n	8005e26 <_free_r+0x22>
 8005e78:	6820      	ldr	r0, [r4, #0]
 8005e7a:	1821      	adds	r1, r4, r0
 8005e7c:	428b      	cmp	r3, r1
 8005e7e:	bf04      	itt	eq
 8005e80:	6819      	ldreq	r1, [r3, #0]
 8005e82:	685b      	ldreq	r3, [r3, #4]
 8005e84:	6063      	str	r3, [r4, #4]
 8005e86:	bf04      	itt	eq
 8005e88:	1809      	addeq	r1, r1, r0
 8005e8a:	6021      	streq	r1, [r4, #0]
 8005e8c:	6054      	str	r4, [r2, #4]
 8005e8e:	e7ca      	b.n	8005e26 <_free_r+0x22>
 8005e90:	bd38      	pop	{r3, r4, r5, pc}
 8005e92:	bf00      	nop
 8005e94:	20013a6c 	.word	0x20013a6c

08005e98 <malloc>:
 8005e98:	4b02      	ldr	r3, [pc, #8]	@ (8005ea4 <malloc+0xc>)
 8005e9a:	4601      	mov	r1, r0
 8005e9c:	6818      	ldr	r0, [r3, #0]
 8005e9e:	f000 b825 	b.w	8005eec <_malloc_r>
 8005ea2:	bf00      	nop
 8005ea4:	20013774 	.word	0x20013774

08005ea8 <sbrk_aligned>:
 8005ea8:	b570      	push	{r4, r5, r6, lr}
 8005eaa:	4e0f      	ldr	r6, [pc, #60]	@ (8005ee8 <sbrk_aligned+0x40>)
 8005eac:	460c      	mov	r4, r1
 8005eae:	6831      	ldr	r1, [r6, #0]
 8005eb0:	4605      	mov	r5, r0
 8005eb2:	b911      	cbnz	r1, 8005eba <sbrk_aligned+0x12>
 8005eb4:	f000 f964 	bl	8006180 <_sbrk_r>
 8005eb8:	6030      	str	r0, [r6, #0]
 8005eba:	4621      	mov	r1, r4
 8005ebc:	4628      	mov	r0, r5
 8005ebe:	f000 f95f 	bl	8006180 <_sbrk_r>
 8005ec2:	1c43      	adds	r3, r0, #1
 8005ec4:	d103      	bne.n	8005ece <sbrk_aligned+0x26>
 8005ec6:	f04f 34ff 	mov.w	r4, #4294967295
 8005eca:	4620      	mov	r0, r4
 8005ecc:	bd70      	pop	{r4, r5, r6, pc}
 8005ece:	1cc4      	adds	r4, r0, #3
 8005ed0:	f024 0403 	bic.w	r4, r4, #3
 8005ed4:	42a0      	cmp	r0, r4
 8005ed6:	d0f8      	beq.n	8005eca <sbrk_aligned+0x22>
 8005ed8:	1a21      	subs	r1, r4, r0
 8005eda:	4628      	mov	r0, r5
 8005edc:	f000 f950 	bl	8006180 <_sbrk_r>
 8005ee0:	3001      	adds	r0, #1
 8005ee2:	d1f2      	bne.n	8005eca <sbrk_aligned+0x22>
 8005ee4:	e7ef      	b.n	8005ec6 <sbrk_aligned+0x1e>
 8005ee6:	bf00      	nop
 8005ee8:	20013a68 	.word	0x20013a68

08005eec <_malloc_r>:
 8005eec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ef0:	1ccd      	adds	r5, r1, #3
 8005ef2:	f025 0503 	bic.w	r5, r5, #3
 8005ef6:	3508      	adds	r5, #8
 8005ef8:	2d0c      	cmp	r5, #12
 8005efa:	bf38      	it	cc
 8005efc:	250c      	movcc	r5, #12
 8005efe:	2d00      	cmp	r5, #0
 8005f00:	4606      	mov	r6, r0
 8005f02:	db01      	blt.n	8005f08 <_malloc_r+0x1c>
 8005f04:	42a9      	cmp	r1, r5
 8005f06:	d904      	bls.n	8005f12 <_malloc_r+0x26>
 8005f08:	230c      	movs	r3, #12
 8005f0a:	6033      	str	r3, [r6, #0]
 8005f0c:	2000      	movs	r0, #0
 8005f0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005f12:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005fe8 <_malloc_r+0xfc>
 8005f16:	f000 f869 	bl	8005fec <__malloc_lock>
 8005f1a:	f8d8 3000 	ldr.w	r3, [r8]
 8005f1e:	461c      	mov	r4, r3
 8005f20:	bb44      	cbnz	r4, 8005f74 <_malloc_r+0x88>
 8005f22:	4629      	mov	r1, r5
 8005f24:	4630      	mov	r0, r6
 8005f26:	f7ff ffbf 	bl	8005ea8 <sbrk_aligned>
 8005f2a:	1c43      	adds	r3, r0, #1
 8005f2c:	4604      	mov	r4, r0
 8005f2e:	d158      	bne.n	8005fe2 <_malloc_r+0xf6>
 8005f30:	f8d8 4000 	ldr.w	r4, [r8]
 8005f34:	4627      	mov	r7, r4
 8005f36:	2f00      	cmp	r7, #0
 8005f38:	d143      	bne.n	8005fc2 <_malloc_r+0xd6>
 8005f3a:	2c00      	cmp	r4, #0
 8005f3c:	d04b      	beq.n	8005fd6 <_malloc_r+0xea>
 8005f3e:	6823      	ldr	r3, [r4, #0]
 8005f40:	4639      	mov	r1, r7
 8005f42:	4630      	mov	r0, r6
 8005f44:	eb04 0903 	add.w	r9, r4, r3
 8005f48:	f000 f91a 	bl	8006180 <_sbrk_r>
 8005f4c:	4581      	cmp	r9, r0
 8005f4e:	d142      	bne.n	8005fd6 <_malloc_r+0xea>
 8005f50:	6821      	ldr	r1, [r4, #0]
 8005f52:	1a6d      	subs	r5, r5, r1
 8005f54:	4629      	mov	r1, r5
 8005f56:	4630      	mov	r0, r6
 8005f58:	f7ff ffa6 	bl	8005ea8 <sbrk_aligned>
 8005f5c:	3001      	adds	r0, #1
 8005f5e:	d03a      	beq.n	8005fd6 <_malloc_r+0xea>
 8005f60:	6823      	ldr	r3, [r4, #0]
 8005f62:	442b      	add	r3, r5
 8005f64:	6023      	str	r3, [r4, #0]
 8005f66:	f8d8 3000 	ldr.w	r3, [r8]
 8005f6a:	685a      	ldr	r2, [r3, #4]
 8005f6c:	bb62      	cbnz	r2, 8005fc8 <_malloc_r+0xdc>
 8005f6e:	f8c8 7000 	str.w	r7, [r8]
 8005f72:	e00f      	b.n	8005f94 <_malloc_r+0xa8>
 8005f74:	6822      	ldr	r2, [r4, #0]
 8005f76:	1b52      	subs	r2, r2, r5
 8005f78:	d420      	bmi.n	8005fbc <_malloc_r+0xd0>
 8005f7a:	2a0b      	cmp	r2, #11
 8005f7c:	d917      	bls.n	8005fae <_malloc_r+0xc2>
 8005f7e:	1961      	adds	r1, r4, r5
 8005f80:	42a3      	cmp	r3, r4
 8005f82:	6025      	str	r5, [r4, #0]
 8005f84:	bf18      	it	ne
 8005f86:	6059      	strne	r1, [r3, #4]
 8005f88:	6863      	ldr	r3, [r4, #4]
 8005f8a:	bf08      	it	eq
 8005f8c:	f8c8 1000 	streq.w	r1, [r8]
 8005f90:	5162      	str	r2, [r4, r5]
 8005f92:	604b      	str	r3, [r1, #4]
 8005f94:	4630      	mov	r0, r6
 8005f96:	f000 f82f 	bl	8005ff8 <__malloc_unlock>
 8005f9a:	f104 000b 	add.w	r0, r4, #11
 8005f9e:	1d23      	adds	r3, r4, #4
 8005fa0:	f020 0007 	bic.w	r0, r0, #7
 8005fa4:	1ac2      	subs	r2, r0, r3
 8005fa6:	bf1c      	itt	ne
 8005fa8:	1a1b      	subne	r3, r3, r0
 8005faa:	50a3      	strne	r3, [r4, r2]
 8005fac:	e7af      	b.n	8005f0e <_malloc_r+0x22>
 8005fae:	6862      	ldr	r2, [r4, #4]
 8005fb0:	42a3      	cmp	r3, r4
 8005fb2:	bf0c      	ite	eq
 8005fb4:	f8c8 2000 	streq.w	r2, [r8]
 8005fb8:	605a      	strne	r2, [r3, #4]
 8005fba:	e7eb      	b.n	8005f94 <_malloc_r+0xa8>
 8005fbc:	4623      	mov	r3, r4
 8005fbe:	6864      	ldr	r4, [r4, #4]
 8005fc0:	e7ae      	b.n	8005f20 <_malloc_r+0x34>
 8005fc2:	463c      	mov	r4, r7
 8005fc4:	687f      	ldr	r7, [r7, #4]
 8005fc6:	e7b6      	b.n	8005f36 <_malloc_r+0x4a>
 8005fc8:	461a      	mov	r2, r3
 8005fca:	685b      	ldr	r3, [r3, #4]
 8005fcc:	42a3      	cmp	r3, r4
 8005fce:	d1fb      	bne.n	8005fc8 <_malloc_r+0xdc>
 8005fd0:	2300      	movs	r3, #0
 8005fd2:	6053      	str	r3, [r2, #4]
 8005fd4:	e7de      	b.n	8005f94 <_malloc_r+0xa8>
 8005fd6:	230c      	movs	r3, #12
 8005fd8:	6033      	str	r3, [r6, #0]
 8005fda:	4630      	mov	r0, r6
 8005fdc:	f000 f80c 	bl	8005ff8 <__malloc_unlock>
 8005fe0:	e794      	b.n	8005f0c <_malloc_r+0x20>
 8005fe2:	6005      	str	r5, [r0, #0]
 8005fe4:	e7d6      	b.n	8005f94 <_malloc_r+0xa8>
 8005fe6:	bf00      	nop
 8005fe8:	20013a6c 	.word	0x20013a6c

08005fec <__malloc_lock>:
 8005fec:	4801      	ldr	r0, [pc, #4]	@ (8005ff4 <__malloc_lock+0x8>)
 8005fee:	f7ff bee8 	b.w	8005dc2 <__retarget_lock_acquire_recursive>
 8005ff2:	bf00      	nop
 8005ff4:	20013a64 	.word	0x20013a64

08005ff8 <__malloc_unlock>:
 8005ff8:	4801      	ldr	r0, [pc, #4]	@ (8006000 <__malloc_unlock+0x8>)
 8005ffa:	f7ff bee3 	b.w	8005dc4 <__retarget_lock_release_recursive>
 8005ffe:	bf00      	nop
 8006000:	20013a64 	.word	0x20013a64

08006004 <__sflush_r>:
 8006004:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800600c:	0716      	lsls	r6, r2, #28
 800600e:	4605      	mov	r5, r0
 8006010:	460c      	mov	r4, r1
 8006012:	d454      	bmi.n	80060be <__sflush_r+0xba>
 8006014:	684b      	ldr	r3, [r1, #4]
 8006016:	2b00      	cmp	r3, #0
 8006018:	dc02      	bgt.n	8006020 <__sflush_r+0x1c>
 800601a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800601c:	2b00      	cmp	r3, #0
 800601e:	dd48      	ble.n	80060b2 <__sflush_r+0xae>
 8006020:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8006022:	2e00      	cmp	r6, #0
 8006024:	d045      	beq.n	80060b2 <__sflush_r+0xae>
 8006026:	2300      	movs	r3, #0
 8006028:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800602c:	682f      	ldr	r7, [r5, #0]
 800602e:	6a21      	ldr	r1, [r4, #32]
 8006030:	602b      	str	r3, [r5, #0]
 8006032:	d030      	beq.n	8006096 <__sflush_r+0x92>
 8006034:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8006036:	89a3      	ldrh	r3, [r4, #12]
 8006038:	0759      	lsls	r1, r3, #29
 800603a:	d505      	bpl.n	8006048 <__sflush_r+0x44>
 800603c:	6863      	ldr	r3, [r4, #4]
 800603e:	1ad2      	subs	r2, r2, r3
 8006040:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006042:	b10b      	cbz	r3, 8006048 <__sflush_r+0x44>
 8006044:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006046:	1ad2      	subs	r2, r2, r3
 8006048:	2300      	movs	r3, #0
 800604a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800604c:	6a21      	ldr	r1, [r4, #32]
 800604e:	4628      	mov	r0, r5
 8006050:	47b0      	blx	r6
 8006052:	1c43      	adds	r3, r0, #1
 8006054:	89a3      	ldrh	r3, [r4, #12]
 8006056:	d106      	bne.n	8006066 <__sflush_r+0x62>
 8006058:	6829      	ldr	r1, [r5, #0]
 800605a:	291d      	cmp	r1, #29
 800605c:	d82b      	bhi.n	80060b6 <__sflush_r+0xb2>
 800605e:	4a2a      	ldr	r2, [pc, #168]	@ (8006108 <__sflush_r+0x104>)
 8006060:	410a      	asrs	r2, r1
 8006062:	07d6      	lsls	r6, r2, #31
 8006064:	d427      	bmi.n	80060b6 <__sflush_r+0xb2>
 8006066:	2200      	movs	r2, #0
 8006068:	6062      	str	r2, [r4, #4]
 800606a:	04d9      	lsls	r1, r3, #19
 800606c:	6922      	ldr	r2, [r4, #16]
 800606e:	6022      	str	r2, [r4, #0]
 8006070:	d504      	bpl.n	800607c <__sflush_r+0x78>
 8006072:	1c42      	adds	r2, r0, #1
 8006074:	d101      	bne.n	800607a <__sflush_r+0x76>
 8006076:	682b      	ldr	r3, [r5, #0]
 8006078:	b903      	cbnz	r3, 800607c <__sflush_r+0x78>
 800607a:	6560      	str	r0, [r4, #84]	@ 0x54
 800607c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800607e:	602f      	str	r7, [r5, #0]
 8006080:	b1b9      	cbz	r1, 80060b2 <__sflush_r+0xae>
 8006082:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006086:	4299      	cmp	r1, r3
 8006088:	d002      	beq.n	8006090 <__sflush_r+0x8c>
 800608a:	4628      	mov	r0, r5
 800608c:	f7ff feba 	bl	8005e04 <_free_r>
 8006090:	2300      	movs	r3, #0
 8006092:	6363      	str	r3, [r4, #52]	@ 0x34
 8006094:	e00d      	b.n	80060b2 <__sflush_r+0xae>
 8006096:	2301      	movs	r3, #1
 8006098:	4628      	mov	r0, r5
 800609a:	47b0      	blx	r6
 800609c:	4602      	mov	r2, r0
 800609e:	1c50      	adds	r0, r2, #1
 80060a0:	d1c9      	bne.n	8006036 <__sflush_r+0x32>
 80060a2:	682b      	ldr	r3, [r5, #0]
 80060a4:	2b00      	cmp	r3, #0
 80060a6:	d0c6      	beq.n	8006036 <__sflush_r+0x32>
 80060a8:	2b1d      	cmp	r3, #29
 80060aa:	d001      	beq.n	80060b0 <__sflush_r+0xac>
 80060ac:	2b16      	cmp	r3, #22
 80060ae:	d11e      	bne.n	80060ee <__sflush_r+0xea>
 80060b0:	602f      	str	r7, [r5, #0]
 80060b2:	2000      	movs	r0, #0
 80060b4:	e022      	b.n	80060fc <__sflush_r+0xf8>
 80060b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80060ba:	b21b      	sxth	r3, r3
 80060bc:	e01b      	b.n	80060f6 <__sflush_r+0xf2>
 80060be:	690f      	ldr	r7, [r1, #16]
 80060c0:	2f00      	cmp	r7, #0
 80060c2:	d0f6      	beq.n	80060b2 <__sflush_r+0xae>
 80060c4:	0793      	lsls	r3, r2, #30
 80060c6:	680e      	ldr	r6, [r1, #0]
 80060c8:	bf08      	it	eq
 80060ca:	694b      	ldreq	r3, [r1, #20]
 80060cc:	600f      	str	r7, [r1, #0]
 80060ce:	bf18      	it	ne
 80060d0:	2300      	movne	r3, #0
 80060d2:	eba6 0807 	sub.w	r8, r6, r7
 80060d6:	608b      	str	r3, [r1, #8]
 80060d8:	f1b8 0f00 	cmp.w	r8, #0
 80060dc:	dde9      	ble.n	80060b2 <__sflush_r+0xae>
 80060de:	6a21      	ldr	r1, [r4, #32]
 80060e0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80060e2:	4643      	mov	r3, r8
 80060e4:	463a      	mov	r2, r7
 80060e6:	4628      	mov	r0, r5
 80060e8:	47b0      	blx	r6
 80060ea:	2800      	cmp	r0, #0
 80060ec:	dc08      	bgt.n	8006100 <__sflush_r+0xfc>
 80060ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80060f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80060f6:	81a3      	strh	r3, [r4, #12]
 80060f8:	f04f 30ff 	mov.w	r0, #4294967295
 80060fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006100:	4407      	add	r7, r0
 8006102:	eba8 0800 	sub.w	r8, r8, r0
 8006106:	e7e7      	b.n	80060d8 <__sflush_r+0xd4>
 8006108:	dfbffffe 	.word	0xdfbffffe

0800610c <_fflush_r>:
 800610c:	b538      	push	{r3, r4, r5, lr}
 800610e:	690b      	ldr	r3, [r1, #16]
 8006110:	4605      	mov	r5, r0
 8006112:	460c      	mov	r4, r1
 8006114:	b913      	cbnz	r3, 800611c <_fflush_r+0x10>
 8006116:	2500      	movs	r5, #0
 8006118:	4628      	mov	r0, r5
 800611a:	bd38      	pop	{r3, r4, r5, pc}
 800611c:	b118      	cbz	r0, 8006126 <_fflush_r+0x1a>
 800611e:	6a03      	ldr	r3, [r0, #32]
 8006120:	b90b      	cbnz	r3, 8006126 <_fflush_r+0x1a>
 8006122:	f7ff fd2d 	bl	8005b80 <__sinit>
 8006126:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800612a:	2b00      	cmp	r3, #0
 800612c:	d0f3      	beq.n	8006116 <_fflush_r+0xa>
 800612e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006130:	07d0      	lsls	r0, r2, #31
 8006132:	d404      	bmi.n	800613e <_fflush_r+0x32>
 8006134:	0599      	lsls	r1, r3, #22
 8006136:	d402      	bmi.n	800613e <_fflush_r+0x32>
 8006138:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800613a:	f7ff fe42 	bl	8005dc2 <__retarget_lock_acquire_recursive>
 800613e:	4628      	mov	r0, r5
 8006140:	4621      	mov	r1, r4
 8006142:	f7ff ff5f 	bl	8006004 <__sflush_r>
 8006146:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006148:	07da      	lsls	r2, r3, #31
 800614a:	4605      	mov	r5, r0
 800614c:	d4e4      	bmi.n	8006118 <_fflush_r+0xc>
 800614e:	89a3      	ldrh	r3, [r4, #12]
 8006150:	059b      	lsls	r3, r3, #22
 8006152:	d4e1      	bmi.n	8006118 <_fflush_r+0xc>
 8006154:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006156:	f7ff fe35 	bl	8005dc4 <__retarget_lock_release_recursive>
 800615a:	e7dd      	b.n	8006118 <_fflush_r+0xc>

0800615c <fiprintf>:
 800615c:	b40e      	push	{r1, r2, r3}
 800615e:	b503      	push	{r0, r1, lr}
 8006160:	4601      	mov	r1, r0
 8006162:	ab03      	add	r3, sp, #12
 8006164:	4805      	ldr	r0, [pc, #20]	@ (800617c <fiprintf+0x20>)
 8006166:	f853 2b04 	ldr.w	r2, [r3], #4
 800616a:	6800      	ldr	r0, [r0, #0]
 800616c:	9301      	str	r3, [sp, #4]
 800616e:	f000 f847 	bl	8006200 <_vfiprintf_r>
 8006172:	b002      	add	sp, #8
 8006174:	f85d eb04 	ldr.w	lr, [sp], #4
 8006178:	b003      	add	sp, #12
 800617a:	4770      	bx	lr
 800617c:	20013774 	.word	0x20013774

08006180 <_sbrk_r>:
 8006180:	b538      	push	{r3, r4, r5, lr}
 8006182:	4d06      	ldr	r5, [pc, #24]	@ (800619c <_sbrk_r+0x1c>)
 8006184:	2300      	movs	r3, #0
 8006186:	4604      	mov	r4, r0
 8006188:	4608      	mov	r0, r1
 800618a:	602b      	str	r3, [r5, #0]
 800618c:	f7fc fac4 	bl	8002718 <_sbrk>
 8006190:	1c43      	adds	r3, r0, #1
 8006192:	d102      	bne.n	800619a <_sbrk_r+0x1a>
 8006194:	682b      	ldr	r3, [r5, #0]
 8006196:	b103      	cbz	r3, 800619a <_sbrk_r+0x1a>
 8006198:	6023      	str	r3, [r4, #0]
 800619a:	bd38      	pop	{r3, r4, r5, pc}
 800619c:	20013a60 	.word	0x20013a60

080061a0 <abort>:
 80061a0:	b508      	push	{r3, lr}
 80061a2:	2006      	movs	r0, #6
 80061a4:	f000 fb8e 	bl	80068c4 <raise>
 80061a8:	2001      	movs	r0, #1
 80061aa:	f7fc fa3d 	bl	8002628 <_exit>

080061ae <__sfputc_r>:
 80061ae:	6893      	ldr	r3, [r2, #8]
 80061b0:	3b01      	subs	r3, #1
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	b410      	push	{r4}
 80061b6:	6093      	str	r3, [r2, #8]
 80061b8:	da08      	bge.n	80061cc <__sfputc_r+0x1e>
 80061ba:	6994      	ldr	r4, [r2, #24]
 80061bc:	42a3      	cmp	r3, r4
 80061be:	db01      	blt.n	80061c4 <__sfputc_r+0x16>
 80061c0:	290a      	cmp	r1, #10
 80061c2:	d103      	bne.n	80061cc <__sfputc_r+0x1e>
 80061c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80061c8:	f000 bac0 	b.w	800674c <__swbuf_r>
 80061cc:	6813      	ldr	r3, [r2, #0]
 80061ce:	1c58      	adds	r0, r3, #1
 80061d0:	6010      	str	r0, [r2, #0]
 80061d2:	7019      	strb	r1, [r3, #0]
 80061d4:	4608      	mov	r0, r1
 80061d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80061da:	4770      	bx	lr

080061dc <__sfputs_r>:
 80061dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061de:	4606      	mov	r6, r0
 80061e0:	460f      	mov	r7, r1
 80061e2:	4614      	mov	r4, r2
 80061e4:	18d5      	adds	r5, r2, r3
 80061e6:	42ac      	cmp	r4, r5
 80061e8:	d101      	bne.n	80061ee <__sfputs_r+0x12>
 80061ea:	2000      	movs	r0, #0
 80061ec:	e007      	b.n	80061fe <__sfputs_r+0x22>
 80061ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80061f2:	463a      	mov	r2, r7
 80061f4:	4630      	mov	r0, r6
 80061f6:	f7ff ffda 	bl	80061ae <__sfputc_r>
 80061fa:	1c43      	adds	r3, r0, #1
 80061fc:	d1f3      	bne.n	80061e6 <__sfputs_r+0xa>
 80061fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006200 <_vfiprintf_r>:
 8006200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006204:	460d      	mov	r5, r1
 8006206:	b09d      	sub	sp, #116	@ 0x74
 8006208:	4614      	mov	r4, r2
 800620a:	4698      	mov	r8, r3
 800620c:	4606      	mov	r6, r0
 800620e:	b118      	cbz	r0, 8006218 <_vfiprintf_r+0x18>
 8006210:	6a03      	ldr	r3, [r0, #32]
 8006212:	b90b      	cbnz	r3, 8006218 <_vfiprintf_r+0x18>
 8006214:	f7ff fcb4 	bl	8005b80 <__sinit>
 8006218:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800621a:	07d9      	lsls	r1, r3, #31
 800621c:	d405      	bmi.n	800622a <_vfiprintf_r+0x2a>
 800621e:	89ab      	ldrh	r3, [r5, #12]
 8006220:	059a      	lsls	r2, r3, #22
 8006222:	d402      	bmi.n	800622a <_vfiprintf_r+0x2a>
 8006224:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006226:	f7ff fdcc 	bl	8005dc2 <__retarget_lock_acquire_recursive>
 800622a:	89ab      	ldrh	r3, [r5, #12]
 800622c:	071b      	lsls	r3, r3, #28
 800622e:	d501      	bpl.n	8006234 <_vfiprintf_r+0x34>
 8006230:	692b      	ldr	r3, [r5, #16]
 8006232:	b99b      	cbnz	r3, 800625c <_vfiprintf_r+0x5c>
 8006234:	4629      	mov	r1, r5
 8006236:	4630      	mov	r0, r6
 8006238:	f000 fac6 	bl	80067c8 <__swsetup_r>
 800623c:	b170      	cbz	r0, 800625c <_vfiprintf_r+0x5c>
 800623e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006240:	07dc      	lsls	r4, r3, #31
 8006242:	d504      	bpl.n	800624e <_vfiprintf_r+0x4e>
 8006244:	f04f 30ff 	mov.w	r0, #4294967295
 8006248:	b01d      	add	sp, #116	@ 0x74
 800624a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800624e:	89ab      	ldrh	r3, [r5, #12]
 8006250:	0598      	lsls	r0, r3, #22
 8006252:	d4f7      	bmi.n	8006244 <_vfiprintf_r+0x44>
 8006254:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006256:	f7ff fdb5 	bl	8005dc4 <__retarget_lock_release_recursive>
 800625a:	e7f3      	b.n	8006244 <_vfiprintf_r+0x44>
 800625c:	2300      	movs	r3, #0
 800625e:	9309      	str	r3, [sp, #36]	@ 0x24
 8006260:	2320      	movs	r3, #32
 8006262:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006266:	f8cd 800c 	str.w	r8, [sp, #12]
 800626a:	2330      	movs	r3, #48	@ 0x30
 800626c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800641c <_vfiprintf_r+0x21c>
 8006270:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006274:	f04f 0901 	mov.w	r9, #1
 8006278:	4623      	mov	r3, r4
 800627a:	469a      	mov	sl, r3
 800627c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006280:	b10a      	cbz	r2, 8006286 <_vfiprintf_r+0x86>
 8006282:	2a25      	cmp	r2, #37	@ 0x25
 8006284:	d1f9      	bne.n	800627a <_vfiprintf_r+0x7a>
 8006286:	ebba 0b04 	subs.w	fp, sl, r4
 800628a:	d00b      	beq.n	80062a4 <_vfiprintf_r+0xa4>
 800628c:	465b      	mov	r3, fp
 800628e:	4622      	mov	r2, r4
 8006290:	4629      	mov	r1, r5
 8006292:	4630      	mov	r0, r6
 8006294:	f7ff ffa2 	bl	80061dc <__sfputs_r>
 8006298:	3001      	adds	r0, #1
 800629a:	f000 80a7 	beq.w	80063ec <_vfiprintf_r+0x1ec>
 800629e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80062a0:	445a      	add	r2, fp
 80062a2:	9209      	str	r2, [sp, #36]	@ 0x24
 80062a4:	f89a 3000 	ldrb.w	r3, [sl]
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	f000 809f 	beq.w	80063ec <_vfiprintf_r+0x1ec>
 80062ae:	2300      	movs	r3, #0
 80062b0:	f04f 32ff 	mov.w	r2, #4294967295
 80062b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80062b8:	f10a 0a01 	add.w	sl, sl, #1
 80062bc:	9304      	str	r3, [sp, #16]
 80062be:	9307      	str	r3, [sp, #28]
 80062c0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80062c4:	931a      	str	r3, [sp, #104]	@ 0x68
 80062c6:	4654      	mov	r4, sl
 80062c8:	2205      	movs	r2, #5
 80062ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80062ce:	4853      	ldr	r0, [pc, #332]	@ (800641c <_vfiprintf_r+0x21c>)
 80062d0:	f7f9 ffa6 	bl	8000220 <memchr>
 80062d4:	9a04      	ldr	r2, [sp, #16]
 80062d6:	b9d8      	cbnz	r0, 8006310 <_vfiprintf_r+0x110>
 80062d8:	06d1      	lsls	r1, r2, #27
 80062da:	bf44      	itt	mi
 80062dc:	2320      	movmi	r3, #32
 80062de:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80062e2:	0713      	lsls	r3, r2, #28
 80062e4:	bf44      	itt	mi
 80062e6:	232b      	movmi	r3, #43	@ 0x2b
 80062e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80062ec:	f89a 3000 	ldrb.w	r3, [sl]
 80062f0:	2b2a      	cmp	r3, #42	@ 0x2a
 80062f2:	d015      	beq.n	8006320 <_vfiprintf_r+0x120>
 80062f4:	9a07      	ldr	r2, [sp, #28]
 80062f6:	4654      	mov	r4, sl
 80062f8:	2000      	movs	r0, #0
 80062fa:	f04f 0c0a 	mov.w	ip, #10
 80062fe:	4621      	mov	r1, r4
 8006300:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006304:	3b30      	subs	r3, #48	@ 0x30
 8006306:	2b09      	cmp	r3, #9
 8006308:	d94b      	bls.n	80063a2 <_vfiprintf_r+0x1a2>
 800630a:	b1b0      	cbz	r0, 800633a <_vfiprintf_r+0x13a>
 800630c:	9207      	str	r2, [sp, #28]
 800630e:	e014      	b.n	800633a <_vfiprintf_r+0x13a>
 8006310:	eba0 0308 	sub.w	r3, r0, r8
 8006314:	fa09 f303 	lsl.w	r3, r9, r3
 8006318:	4313      	orrs	r3, r2
 800631a:	9304      	str	r3, [sp, #16]
 800631c:	46a2      	mov	sl, r4
 800631e:	e7d2      	b.n	80062c6 <_vfiprintf_r+0xc6>
 8006320:	9b03      	ldr	r3, [sp, #12]
 8006322:	1d19      	adds	r1, r3, #4
 8006324:	681b      	ldr	r3, [r3, #0]
 8006326:	9103      	str	r1, [sp, #12]
 8006328:	2b00      	cmp	r3, #0
 800632a:	bfbb      	ittet	lt
 800632c:	425b      	neglt	r3, r3
 800632e:	f042 0202 	orrlt.w	r2, r2, #2
 8006332:	9307      	strge	r3, [sp, #28]
 8006334:	9307      	strlt	r3, [sp, #28]
 8006336:	bfb8      	it	lt
 8006338:	9204      	strlt	r2, [sp, #16]
 800633a:	7823      	ldrb	r3, [r4, #0]
 800633c:	2b2e      	cmp	r3, #46	@ 0x2e
 800633e:	d10a      	bne.n	8006356 <_vfiprintf_r+0x156>
 8006340:	7863      	ldrb	r3, [r4, #1]
 8006342:	2b2a      	cmp	r3, #42	@ 0x2a
 8006344:	d132      	bne.n	80063ac <_vfiprintf_r+0x1ac>
 8006346:	9b03      	ldr	r3, [sp, #12]
 8006348:	1d1a      	adds	r2, r3, #4
 800634a:	681b      	ldr	r3, [r3, #0]
 800634c:	9203      	str	r2, [sp, #12]
 800634e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006352:	3402      	adds	r4, #2
 8006354:	9305      	str	r3, [sp, #20]
 8006356:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800642c <_vfiprintf_r+0x22c>
 800635a:	7821      	ldrb	r1, [r4, #0]
 800635c:	2203      	movs	r2, #3
 800635e:	4650      	mov	r0, sl
 8006360:	f7f9 ff5e 	bl	8000220 <memchr>
 8006364:	b138      	cbz	r0, 8006376 <_vfiprintf_r+0x176>
 8006366:	9b04      	ldr	r3, [sp, #16]
 8006368:	eba0 000a 	sub.w	r0, r0, sl
 800636c:	2240      	movs	r2, #64	@ 0x40
 800636e:	4082      	lsls	r2, r0
 8006370:	4313      	orrs	r3, r2
 8006372:	3401      	adds	r4, #1
 8006374:	9304      	str	r3, [sp, #16]
 8006376:	f814 1b01 	ldrb.w	r1, [r4], #1
 800637a:	4829      	ldr	r0, [pc, #164]	@ (8006420 <_vfiprintf_r+0x220>)
 800637c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006380:	2206      	movs	r2, #6
 8006382:	f7f9 ff4d 	bl	8000220 <memchr>
 8006386:	2800      	cmp	r0, #0
 8006388:	d03f      	beq.n	800640a <_vfiprintf_r+0x20a>
 800638a:	4b26      	ldr	r3, [pc, #152]	@ (8006424 <_vfiprintf_r+0x224>)
 800638c:	bb1b      	cbnz	r3, 80063d6 <_vfiprintf_r+0x1d6>
 800638e:	9b03      	ldr	r3, [sp, #12]
 8006390:	3307      	adds	r3, #7
 8006392:	f023 0307 	bic.w	r3, r3, #7
 8006396:	3308      	adds	r3, #8
 8006398:	9303      	str	r3, [sp, #12]
 800639a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800639c:	443b      	add	r3, r7
 800639e:	9309      	str	r3, [sp, #36]	@ 0x24
 80063a0:	e76a      	b.n	8006278 <_vfiprintf_r+0x78>
 80063a2:	fb0c 3202 	mla	r2, ip, r2, r3
 80063a6:	460c      	mov	r4, r1
 80063a8:	2001      	movs	r0, #1
 80063aa:	e7a8      	b.n	80062fe <_vfiprintf_r+0xfe>
 80063ac:	2300      	movs	r3, #0
 80063ae:	3401      	adds	r4, #1
 80063b0:	9305      	str	r3, [sp, #20]
 80063b2:	4619      	mov	r1, r3
 80063b4:	f04f 0c0a 	mov.w	ip, #10
 80063b8:	4620      	mov	r0, r4
 80063ba:	f810 2b01 	ldrb.w	r2, [r0], #1
 80063be:	3a30      	subs	r2, #48	@ 0x30
 80063c0:	2a09      	cmp	r2, #9
 80063c2:	d903      	bls.n	80063cc <_vfiprintf_r+0x1cc>
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d0c6      	beq.n	8006356 <_vfiprintf_r+0x156>
 80063c8:	9105      	str	r1, [sp, #20]
 80063ca:	e7c4      	b.n	8006356 <_vfiprintf_r+0x156>
 80063cc:	fb0c 2101 	mla	r1, ip, r1, r2
 80063d0:	4604      	mov	r4, r0
 80063d2:	2301      	movs	r3, #1
 80063d4:	e7f0      	b.n	80063b8 <_vfiprintf_r+0x1b8>
 80063d6:	ab03      	add	r3, sp, #12
 80063d8:	9300      	str	r3, [sp, #0]
 80063da:	462a      	mov	r2, r5
 80063dc:	4b12      	ldr	r3, [pc, #72]	@ (8006428 <_vfiprintf_r+0x228>)
 80063de:	a904      	add	r1, sp, #16
 80063e0:	4630      	mov	r0, r6
 80063e2:	f3af 8000 	nop.w
 80063e6:	4607      	mov	r7, r0
 80063e8:	1c78      	adds	r0, r7, #1
 80063ea:	d1d6      	bne.n	800639a <_vfiprintf_r+0x19a>
 80063ec:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80063ee:	07d9      	lsls	r1, r3, #31
 80063f0:	d405      	bmi.n	80063fe <_vfiprintf_r+0x1fe>
 80063f2:	89ab      	ldrh	r3, [r5, #12]
 80063f4:	059a      	lsls	r2, r3, #22
 80063f6:	d402      	bmi.n	80063fe <_vfiprintf_r+0x1fe>
 80063f8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80063fa:	f7ff fce3 	bl	8005dc4 <__retarget_lock_release_recursive>
 80063fe:	89ab      	ldrh	r3, [r5, #12]
 8006400:	065b      	lsls	r3, r3, #25
 8006402:	f53f af1f 	bmi.w	8006244 <_vfiprintf_r+0x44>
 8006406:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006408:	e71e      	b.n	8006248 <_vfiprintf_r+0x48>
 800640a:	ab03      	add	r3, sp, #12
 800640c:	9300      	str	r3, [sp, #0]
 800640e:	462a      	mov	r2, r5
 8006410:	4b05      	ldr	r3, [pc, #20]	@ (8006428 <_vfiprintf_r+0x228>)
 8006412:	a904      	add	r1, sp, #16
 8006414:	4630      	mov	r0, r6
 8006416:	f000 f879 	bl	800650c <_printf_i>
 800641a:	e7e4      	b.n	80063e6 <_vfiprintf_r+0x1e6>
 800641c:	08008a5f 	.word	0x08008a5f
 8006420:	08008a69 	.word	0x08008a69
 8006424:	00000000 	.word	0x00000000
 8006428:	080061dd 	.word	0x080061dd
 800642c:	08008a65 	.word	0x08008a65

08006430 <_printf_common>:
 8006430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006434:	4616      	mov	r6, r2
 8006436:	4698      	mov	r8, r3
 8006438:	688a      	ldr	r2, [r1, #8]
 800643a:	690b      	ldr	r3, [r1, #16]
 800643c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006440:	4293      	cmp	r3, r2
 8006442:	bfb8      	it	lt
 8006444:	4613      	movlt	r3, r2
 8006446:	6033      	str	r3, [r6, #0]
 8006448:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800644c:	4607      	mov	r7, r0
 800644e:	460c      	mov	r4, r1
 8006450:	b10a      	cbz	r2, 8006456 <_printf_common+0x26>
 8006452:	3301      	adds	r3, #1
 8006454:	6033      	str	r3, [r6, #0]
 8006456:	6823      	ldr	r3, [r4, #0]
 8006458:	0699      	lsls	r1, r3, #26
 800645a:	bf42      	ittt	mi
 800645c:	6833      	ldrmi	r3, [r6, #0]
 800645e:	3302      	addmi	r3, #2
 8006460:	6033      	strmi	r3, [r6, #0]
 8006462:	6825      	ldr	r5, [r4, #0]
 8006464:	f015 0506 	ands.w	r5, r5, #6
 8006468:	d106      	bne.n	8006478 <_printf_common+0x48>
 800646a:	f104 0a19 	add.w	sl, r4, #25
 800646e:	68e3      	ldr	r3, [r4, #12]
 8006470:	6832      	ldr	r2, [r6, #0]
 8006472:	1a9b      	subs	r3, r3, r2
 8006474:	42ab      	cmp	r3, r5
 8006476:	dc26      	bgt.n	80064c6 <_printf_common+0x96>
 8006478:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800647c:	6822      	ldr	r2, [r4, #0]
 800647e:	3b00      	subs	r3, #0
 8006480:	bf18      	it	ne
 8006482:	2301      	movne	r3, #1
 8006484:	0692      	lsls	r2, r2, #26
 8006486:	d42b      	bmi.n	80064e0 <_printf_common+0xb0>
 8006488:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800648c:	4641      	mov	r1, r8
 800648e:	4638      	mov	r0, r7
 8006490:	47c8      	blx	r9
 8006492:	3001      	adds	r0, #1
 8006494:	d01e      	beq.n	80064d4 <_printf_common+0xa4>
 8006496:	6823      	ldr	r3, [r4, #0]
 8006498:	6922      	ldr	r2, [r4, #16]
 800649a:	f003 0306 	and.w	r3, r3, #6
 800649e:	2b04      	cmp	r3, #4
 80064a0:	bf02      	ittt	eq
 80064a2:	68e5      	ldreq	r5, [r4, #12]
 80064a4:	6833      	ldreq	r3, [r6, #0]
 80064a6:	1aed      	subeq	r5, r5, r3
 80064a8:	68a3      	ldr	r3, [r4, #8]
 80064aa:	bf0c      	ite	eq
 80064ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80064b0:	2500      	movne	r5, #0
 80064b2:	4293      	cmp	r3, r2
 80064b4:	bfc4      	itt	gt
 80064b6:	1a9b      	subgt	r3, r3, r2
 80064b8:	18ed      	addgt	r5, r5, r3
 80064ba:	2600      	movs	r6, #0
 80064bc:	341a      	adds	r4, #26
 80064be:	42b5      	cmp	r5, r6
 80064c0:	d11a      	bne.n	80064f8 <_printf_common+0xc8>
 80064c2:	2000      	movs	r0, #0
 80064c4:	e008      	b.n	80064d8 <_printf_common+0xa8>
 80064c6:	2301      	movs	r3, #1
 80064c8:	4652      	mov	r2, sl
 80064ca:	4641      	mov	r1, r8
 80064cc:	4638      	mov	r0, r7
 80064ce:	47c8      	blx	r9
 80064d0:	3001      	adds	r0, #1
 80064d2:	d103      	bne.n	80064dc <_printf_common+0xac>
 80064d4:	f04f 30ff 	mov.w	r0, #4294967295
 80064d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80064dc:	3501      	adds	r5, #1
 80064de:	e7c6      	b.n	800646e <_printf_common+0x3e>
 80064e0:	18e1      	adds	r1, r4, r3
 80064e2:	1c5a      	adds	r2, r3, #1
 80064e4:	2030      	movs	r0, #48	@ 0x30
 80064e6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80064ea:	4422      	add	r2, r4
 80064ec:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80064f0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80064f4:	3302      	adds	r3, #2
 80064f6:	e7c7      	b.n	8006488 <_printf_common+0x58>
 80064f8:	2301      	movs	r3, #1
 80064fa:	4622      	mov	r2, r4
 80064fc:	4641      	mov	r1, r8
 80064fe:	4638      	mov	r0, r7
 8006500:	47c8      	blx	r9
 8006502:	3001      	adds	r0, #1
 8006504:	d0e6      	beq.n	80064d4 <_printf_common+0xa4>
 8006506:	3601      	adds	r6, #1
 8006508:	e7d9      	b.n	80064be <_printf_common+0x8e>
	...

0800650c <_printf_i>:
 800650c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006510:	7e0f      	ldrb	r7, [r1, #24]
 8006512:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006514:	2f78      	cmp	r7, #120	@ 0x78
 8006516:	4691      	mov	r9, r2
 8006518:	4680      	mov	r8, r0
 800651a:	460c      	mov	r4, r1
 800651c:	469a      	mov	sl, r3
 800651e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006522:	d807      	bhi.n	8006534 <_printf_i+0x28>
 8006524:	2f62      	cmp	r7, #98	@ 0x62
 8006526:	d80a      	bhi.n	800653e <_printf_i+0x32>
 8006528:	2f00      	cmp	r7, #0
 800652a:	f000 80d2 	beq.w	80066d2 <_printf_i+0x1c6>
 800652e:	2f58      	cmp	r7, #88	@ 0x58
 8006530:	f000 80b9 	beq.w	80066a6 <_printf_i+0x19a>
 8006534:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006538:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800653c:	e03a      	b.n	80065b4 <_printf_i+0xa8>
 800653e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006542:	2b15      	cmp	r3, #21
 8006544:	d8f6      	bhi.n	8006534 <_printf_i+0x28>
 8006546:	a101      	add	r1, pc, #4	@ (adr r1, 800654c <_printf_i+0x40>)
 8006548:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800654c:	080065a5 	.word	0x080065a5
 8006550:	080065b9 	.word	0x080065b9
 8006554:	08006535 	.word	0x08006535
 8006558:	08006535 	.word	0x08006535
 800655c:	08006535 	.word	0x08006535
 8006560:	08006535 	.word	0x08006535
 8006564:	080065b9 	.word	0x080065b9
 8006568:	08006535 	.word	0x08006535
 800656c:	08006535 	.word	0x08006535
 8006570:	08006535 	.word	0x08006535
 8006574:	08006535 	.word	0x08006535
 8006578:	080066b9 	.word	0x080066b9
 800657c:	080065e3 	.word	0x080065e3
 8006580:	08006673 	.word	0x08006673
 8006584:	08006535 	.word	0x08006535
 8006588:	08006535 	.word	0x08006535
 800658c:	080066db 	.word	0x080066db
 8006590:	08006535 	.word	0x08006535
 8006594:	080065e3 	.word	0x080065e3
 8006598:	08006535 	.word	0x08006535
 800659c:	08006535 	.word	0x08006535
 80065a0:	0800667b 	.word	0x0800667b
 80065a4:	6833      	ldr	r3, [r6, #0]
 80065a6:	1d1a      	adds	r2, r3, #4
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	6032      	str	r2, [r6, #0]
 80065ac:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80065b0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80065b4:	2301      	movs	r3, #1
 80065b6:	e09d      	b.n	80066f4 <_printf_i+0x1e8>
 80065b8:	6833      	ldr	r3, [r6, #0]
 80065ba:	6820      	ldr	r0, [r4, #0]
 80065bc:	1d19      	adds	r1, r3, #4
 80065be:	6031      	str	r1, [r6, #0]
 80065c0:	0606      	lsls	r6, r0, #24
 80065c2:	d501      	bpl.n	80065c8 <_printf_i+0xbc>
 80065c4:	681d      	ldr	r5, [r3, #0]
 80065c6:	e003      	b.n	80065d0 <_printf_i+0xc4>
 80065c8:	0645      	lsls	r5, r0, #25
 80065ca:	d5fb      	bpl.n	80065c4 <_printf_i+0xb8>
 80065cc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80065d0:	2d00      	cmp	r5, #0
 80065d2:	da03      	bge.n	80065dc <_printf_i+0xd0>
 80065d4:	232d      	movs	r3, #45	@ 0x2d
 80065d6:	426d      	negs	r5, r5
 80065d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80065dc:	4859      	ldr	r0, [pc, #356]	@ (8006744 <_printf_i+0x238>)
 80065de:	230a      	movs	r3, #10
 80065e0:	e011      	b.n	8006606 <_printf_i+0xfa>
 80065e2:	6821      	ldr	r1, [r4, #0]
 80065e4:	6833      	ldr	r3, [r6, #0]
 80065e6:	0608      	lsls	r0, r1, #24
 80065e8:	f853 5b04 	ldr.w	r5, [r3], #4
 80065ec:	d402      	bmi.n	80065f4 <_printf_i+0xe8>
 80065ee:	0649      	lsls	r1, r1, #25
 80065f0:	bf48      	it	mi
 80065f2:	b2ad      	uxthmi	r5, r5
 80065f4:	2f6f      	cmp	r7, #111	@ 0x6f
 80065f6:	4853      	ldr	r0, [pc, #332]	@ (8006744 <_printf_i+0x238>)
 80065f8:	6033      	str	r3, [r6, #0]
 80065fa:	bf14      	ite	ne
 80065fc:	230a      	movne	r3, #10
 80065fe:	2308      	moveq	r3, #8
 8006600:	2100      	movs	r1, #0
 8006602:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8006606:	6866      	ldr	r6, [r4, #4]
 8006608:	60a6      	str	r6, [r4, #8]
 800660a:	2e00      	cmp	r6, #0
 800660c:	bfa2      	ittt	ge
 800660e:	6821      	ldrge	r1, [r4, #0]
 8006610:	f021 0104 	bicge.w	r1, r1, #4
 8006614:	6021      	strge	r1, [r4, #0]
 8006616:	b90d      	cbnz	r5, 800661c <_printf_i+0x110>
 8006618:	2e00      	cmp	r6, #0
 800661a:	d04b      	beq.n	80066b4 <_printf_i+0x1a8>
 800661c:	4616      	mov	r6, r2
 800661e:	fbb5 f1f3 	udiv	r1, r5, r3
 8006622:	fb03 5711 	mls	r7, r3, r1, r5
 8006626:	5dc7      	ldrb	r7, [r0, r7]
 8006628:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800662c:	462f      	mov	r7, r5
 800662e:	42bb      	cmp	r3, r7
 8006630:	460d      	mov	r5, r1
 8006632:	d9f4      	bls.n	800661e <_printf_i+0x112>
 8006634:	2b08      	cmp	r3, #8
 8006636:	d10b      	bne.n	8006650 <_printf_i+0x144>
 8006638:	6823      	ldr	r3, [r4, #0]
 800663a:	07df      	lsls	r7, r3, #31
 800663c:	d508      	bpl.n	8006650 <_printf_i+0x144>
 800663e:	6923      	ldr	r3, [r4, #16]
 8006640:	6861      	ldr	r1, [r4, #4]
 8006642:	4299      	cmp	r1, r3
 8006644:	bfde      	ittt	le
 8006646:	2330      	movle	r3, #48	@ 0x30
 8006648:	f806 3c01 	strble.w	r3, [r6, #-1]
 800664c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8006650:	1b92      	subs	r2, r2, r6
 8006652:	6122      	str	r2, [r4, #16]
 8006654:	f8cd a000 	str.w	sl, [sp]
 8006658:	464b      	mov	r3, r9
 800665a:	aa03      	add	r2, sp, #12
 800665c:	4621      	mov	r1, r4
 800665e:	4640      	mov	r0, r8
 8006660:	f7ff fee6 	bl	8006430 <_printf_common>
 8006664:	3001      	adds	r0, #1
 8006666:	d14a      	bne.n	80066fe <_printf_i+0x1f2>
 8006668:	f04f 30ff 	mov.w	r0, #4294967295
 800666c:	b004      	add	sp, #16
 800666e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006672:	6823      	ldr	r3, [r4, #0]
 8006674:	f043 0320 	orr.w	r3, r3, #32
 8006678:	6023      	str	r3, [r4, #0]
 800667a:	4833      	ldr	r0, [pc, #204]	@ (8006748 <_printf_i+0x23c>)
 800667c:	2778      	movs	r7, #120	@ 0x78
 800667e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8006682:	6823      	ldr	r3, [r4, #0]
 8006684:	6831      	ldr	r1, [r6, #0]
 8006686:	061f      	lsls	r7, r3, #24
 8006688:	f851 5b04 	ldr.w	r5, [r1], #4
 800668c:	d402      	bmi.n	8006694 <_printf_i+0x188>
 800668e:	065f      	lsls	r7, r3, #25
 8006690:	bf48      	it	mi
 8006692:	b2ad      	uxthmi	r5, r5
 8006694:	6031      	str	r1, [r6, #0]
 8006696:	07d9      	lsls	r1, r3, #31
 8006698:	bf44      	itt	mi
 800669a:	f043 0320 	orrmi.w	r3, r3, #32
 800669e:	6023      	strmi	r3, [r4, #0]
 80066a0:	b11d      	cbz	r5, 80066aa <_printf_i+0x19e>
 80066a2:	2310      	movs	r3, #16
 80066a4:	e7ac      	b.n	8006600 <_printf_i+0xf4>
 80066a6:	4827      	ldr	r0, [pc, #156]	@ (8006744 <_printf_i+0x238>)
 80066a8:	e7e9      	b.n	800667e <_printf_i+0x172>
 80066aa:	6823      	ldr	r3, [r4, #0]
 80066ac:	f023 0320 	bic.w	r3, r3, #32
 80066b0:	6023      	str	r3, [r4, #0]
 80066b2:	e7f6      	b.n	80066a2 <_printf_i+0x196>
 80066b4:	4616      	mov	r6, r2
 80066b6:	e7bd      	b.n	8006634 <_printf_i+0x128>
 80066b8:	6833      	ldr	r3, [r6, #0]
 80066ba:	6825      	ldr	r5, [r4, #0]
 80066bc:	6961      	ldr	r1, [r4, #20]
 80066be:	1d18      	adds	r0, r3, #4
 80066c0:	6030      	str	r0, [r6, #0]
 80066c2:	062e      	lsls	r6, r5, #24
 80066c4:	681b      	ldr	r3, [r3, #0]
 80066c6:	d501      	bpl.n	80066cc <_printf_i+0x1c0>
 80066c8:	6019      	str	r1, [r3, #0]
 80066ca:	e002      	b.n	80066d2 <_printf_i+0x1c6>
 80066cc:	0668      	lsls	r0, r5, #25
 80066ce:	d5fb      	bpl.n	80066c8 <_printf_i+0x1bc>
 80066d0:	8019      	strh	r1, [r3, #0]
 80066d2:	2300      	movs	r3, #0
 80066d4:	6123      	str	r3, [r4, #16]
 80066d6:	4616      	mov	r6, r2
 80066d8:	e7bc      	b.n	8006654 <_printf_i+0x148>
 80066da:	6833      	ldr	r3, [r6, #0]
 80066dc:	1d1a      	adds	r2, r3, #4
 80066de:	6032      	str	r2, [r6, #0]
 80066e0:	681e      	ldr	r6, [r3, #0]
 80066e2:	6862      	ldr	r2, [r4, #4]
 80066e4:	2100      	movs	r1, #0
 80066e6:	4630      	mov	r0, r6
 80066e8:	f7f9 fd9a 	bl	8000220 <memchr>
 80066ec:	b108      	cbz	r0, 80066f2 <_printf_i+0x1e6>
 80066ee:	1b80      	subs	r0, r0, r6
 80066f0:	6060      	str	r0, [r4, #4]
 80066f2:	6863      	ldr	r3, [r4, #4]
 80066f4:	6123      	str	r3, [r4, #16]
 80066f6:	2300      	movs	r3, #0
 80066f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80066fc:	e7aa      	b.n	8006654 <_printf_i+0x148>
 80066fe:	6923      	ldr	r3, [r4, #16]
 8006700:	4632      	mov	r2, r6
 8006702:	4649      	mov	r1, r9
 8006704:	4640      	mov	r0, r8
 8006706:	47d0      	blx	sl
 8006708:	3001      	adds	r0, #1
 800670a:	d0ad      	beq.n	8006668 <_printf_i+0x15c>
 800670c:	6823      	ldr	r3, [r4, #0]
 800670e:	079b      	lsls	r3, r3, #30
 8006710:	d413      	bmi.n	800673a <_printf_i+0x22e>
 8006712:	68e0      	ldr	r0, [r4, #12]
 8006714:	9b03      	ldr	r3, [sp, #12]
 8006716:	4298      	cmp	r0, r3
 8006718:	bfb8      	it	lt
 800671a:	4618      	movlt	r0, r3
 800671c:	e7a6      	b.n	800666c <_printf_i+0x160>
 800671e:	2301      	movs	r3, #1
 8006720:	4632      	mov	r2, r6
 8006722:	4649      	mov	r1, r9
 8006724:	4640      	mov	r0, r8
 8006726:	47d0      	blx	sl
 8006728:	3001      	adds	r0, #1
 800672a:	d09d      	beq.n	8006668 <_printf_i+0x15c>
 800672c:	3501      	adds	r5, #1
 800672e:	68e3      	ldr	r3, [r4, #12]
 8006730:	9903      	ldr	r1, [sp, #12]
 8006732:	1a5b      	subs	r3, r3, r1
 8006734:	42ab      	cmp	r3, r5
 8006736:	dcf2      	bgt.n	800671e <_printf_i+0x212>
 8006738:	e7eb      	b.n	8006712 <_printf_i+0x206>
 800673a:	2500      	movs	r5, #0
 800673c:	f104 0619 	add.w	r6, r4, #25
 8006740:	e7f5      	b.n	800672e <_printf_i+0x222>
 8006742:	bf00      	nop
 8006744:	08008a70 	.word	0x08008a70
 8006748:	08008a81 	.word	0x08008a81

0800674c <__swbuf_r>:
 800674c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800674e:	460e      	mov	r6, r1
 8006750:	4614      	mov	r4, r2
 8006752:	4605      	mov	r5, r0
 8006754:	b118      	cbz	r0, 800675e <__swbuf_r+0x12>
 8006756:	6a03      	ldr	r3, [r0, #32]
 8006758:	b90b      	cbnz	r3, 800675e <__swbuf_r+0x12>
 800675a:	f7ff fa11 	bl	8005b80 <__sinit>
 800675e:	69a3      	ldr	r3, [r4, #24]
 8006760:	60a3      	str	r3, [r4, #8]
 8006762:	89a3      	ldrh	r3, [r4, #12]
 8006764:	071a      	lsls	r2, r3, #28
 8006766:	d501      	bpl.n	800676c <__swbuf_r+0x20>
 8006768:	6923      	ldr	r3, [r4, #16]
 800676a:	b943      	cbnz	r3, 800677e <__swbuf_r+0x32>
 800676c:	4621      	mov	r1, r4
 800676e:	4628      	mov	r0, r5
 8006770:	f000 f82a 	bl	80067c8 <__swsetup_r>
 8006774:	b118      	cbz	r0, 800677e <__swbuf_r+0x32>
 8006776:	f04f 37ff 	mov.w	r7, #4294967295
 800677a:	4638      	mov	r0, r7
 800677c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800677e:	6823      	ldr	r3, [r4, #0]
 8006780:	6922      	ldr	r2, [r4, #16]
 8006782:	1a98      	subs	r0, r3, r2
 8006784:	6963      	ldr	r3, [r4, #20]
 8006786:	b2f6      	uxtb	r6, r6
 8006788:	4283      	cmp	r3, r0
 800678a:	4637      	mov	r7, r6
 800678c:	dc05      	bgt.n	800679a <__swbuf_r+0x4e>
 800678e:	4621      	mov	r1, r4
 8006790:	4628      	mov	r0, r5
 8006792:	f7ff fcbb 	bl	800610c <_fflush_r>
 8006796:	2800      	cmp	r0, #0
 8006798:	d1ed      	bne.n	8006776 <__swbuf_r+0x2a>
 800679a:	68a3      	ldr	r3, [r4, #8]
 800679c:	3b01      	subs	r3, #1
 800679e:	60a3      	str	r3, [r4, #8]
 80067a0:	6823      	ldr	r3, [r4, #0]
 80067a2:	1c5a      	adds	r2, r3, #1
 80067a4:	6022      	str	r2, [r4, #0]
 80067a6:	701e      	strb	r6, [r3, #0]
 80067a8:	6962      	ldr	r2, [r4, #20]
 80067aa:	1c43      	adds	r3, r0, #1
 80067ac:	429a      	cmp	r2, r3
 80067ae:	d004      	beq.n	80067ba <__swbuf_r+0x6e>
 80067b0:	89a3      	ldrh	r3, [r4, #12]
 80067b2:	07db      	lsls	r3, r3, #31
 80067b4:	d5e1      	bpl.n	800677a <__swbuf_r+0x2e>
 80067b6:	2e0a      	cmp	r6, #10
 80067b8:	d1df      	bne.n	800677a <__swbuf_r+0x2e>
 80067ba:	4621      	mov	r1, r4
 80067bc:	4628      	mov	r0, r5
 80067be:	f7ff fca5 	bl	800610c <_fflush_r>
 80067c2:	2800      	cmp	r0, #0
 80067c4:	d0d9      	beq.n	800677a <__swbuf_r+0x2e>
 80067c6:	e7d6      	b.n	8006776 <__swbuf_r+0x2a>

080067c8 <__swsetup_r>:
 80067c8:	b538      	push	{r3, r4, r5, lr}
 80067ca:	4b29      	ldr	r3, [pc, #164]	@ (8006870 <__swsetup_r+0xa8>)
 80067cc:	4605      	mov	r5, r0
 80067ce:	6818      	ldr	r0, [r3, #0]
 80067d0:	460c      	mov	r4, r1
 80067d2:	b118      	cbz	r0, 80067dc <__swsetup_r+0x14>
 80067d4:	6a03      	ldr	r3, [r0, #32]
 80067d6:	b90b      	cbnz	r3, 80067dc <__swsetup_r+0x14>
 80067d8:	f7ff f9d2 	bl	8005b80 <__sinit>
 80067dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80067e0:	0719      	lsls	r1, r3, #28
 80067e2:	d422      	bmi.n	800682a <__swsetup_r+0x62>
 80067e4:	06da      	lsls	r2, r3, #27
 80067e6:	d407      	bmi.n	80067f8 <__swsetup_r+0x30>
 80067e8:	2209      	movs	r2, #9
 80067ea:	602a      	str	r2, [r5, #0]
 80067ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80067f0:	81a3      	strh	r3, [r4, #12]
 80067f2:	f04f 30ff 	mov.w	r0, #4294967295
 80067f6:	e033      	b.n	8006860 <__swsetup_r+0x98>
 80067f8:	0758      	lsls	r0, r3, #29
 80067fa:	d512      	bpl.n	8006822 <__swsetup_r+0x5a>
 80067fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80067fe:	b141      	cbz	r1, 8006812 <__swsetup_r+0x4a>
 8006800:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006804:	4299      	cmp	r1, r3
 8006806:	d002      	beq.n	800680e <__swsetup_r+0x46>
 8006808:	4628      	mov	r0, r5
 800680a:	f7ff fafb 	bl	8005e04 <_free_r>
 800680e:	2300      	movs	r3, #0
 8006810:	6363      	str	r3, [r4, #52]	@ 0x34
 8006812:	89a3      	ldrh	r3, [r4, #12]
 8006814:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006818:	81a3      	strh	r3, [r4, #12]
 800681a:	2300      	movs	r3, #0
 800681c:	6063      	str	r3, [r4, #4]
 800681e:	6923      	ldr	r3, [r4, #16]
 8006820:	6023      	str	r3, [r4, #0]
 8006822:	89a3      	ldrh	r3, [r4, #12]
 8006824:	f043 0308 	orr.w	r3, r3, #8
 8006828:	81a3      	strh	r3, [r4, #12]
 800682a:	6923      	ldr	r3, [r4, #16]
 800682c:	b94b      	cbnz	r3, 8006842 <__swsetup_r+0x7a>
 800682e:	89a3      	ldrh	r3, [r4, #12]
 8006830:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006834:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006838:	d003      	beq.n	8006842 <__swsetup_r+0x7a>
 800683a:	4621      	mov	r1, r4
 800683c:	4628      	mov	r0, r5
 800683e:	f000 f883 	bl	8006948 <__smakebuf_r>
 8006842:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006846:	f013 0201 	ands.w	r2, r3, #1
 800684a:	d00a      	beq.n	8006862 <__swsetup_r+0x9a>
 800684c:	2200      	movs	r2, #0
 800684e:	60a2      	str	r2, [r4, #8]
 8006850:	6962      	ldr	r2, [r4, #20]
 8006852:	4252      	negs	r2, r2
 8006854:	61a2      	str	r2, [r4, #24]
 8006856:	6922      	ldr	r2, [r4, #16]
 8006858:	b942      	cbnz	r2, 800686c <__swsetup_r+0xa4>
 800685a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800685e:	d1c5      	bne.n	80067ec <__swsetup_r+0x24>
 8006860:	bd38      	pop	{r3, r4, r5, pc}
 8006862:	0799      	lsls	r1, r3, #30
 8006864:	bf58      	it	pl
 8006866:	6962      	ldrpl	r2, [r4, #20]
 8006868:	60a2      	str	r2, [r4, #8]
 800686a:	e7f4      	b.n	8006856 <__swsetup_r+0x8e>
 800686c:	2000      	movs	r0, #0
 800686e:	e7f7      	b.n	8006860 <__swsetup_r+0x98>
 8006870:	20013774 	.word	0x20013774

08006874 <_raise_r>:
 8006874:	291f      	cmp	r1, #31
 8006876:	b538      	push	{r3, r4, r5, lr}
 8006878:	4605      	mov	r5, r0
 800687a:	460c      	mov	r4, r1
 800687c:	d904      	bls.n	8006888 <_raise_r+0x14>
 800687e:	2316      	movs	r3, #22
 8006880:	6003      	str	r3, [r0, #0]
 8006882:	f04f 30ff 	mov.w	r0, #4294967295
 8006886:	bd38      	pop	{r3, r4, r5, pc}
 8006888:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800688a:	b112      	cbz	r2, 8006892 <_raise_r+0x1e>
 800688c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006890:	b94b      	cbnz	r3, 80068a6 <_raise_r+0x32>
 8006892:	4628      	mov	r0, r5
 8006894:	f000 f830 	bl	80068f8 <_getpid_r>
 8006898:	4622      	mov	r2, r4
 800689a:	4601      	mov	r1, r0
 800689c:	4628      	mov	r0, r5
 800689e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80068a2:	f000 b817 	b.w	80068d4 <_kill_r>
 80068a6:	2b01      	cmp	r3, #1
 80068a8:	d00a      	beq.n	80068c0 <_raise_r+0x4c>
 80068aa:	1c59      	adds	r1, r3, #1
 80068ac:	d103      	bne.n	80068b6 <_raise_r+0x42>
 80068ae:	2316      	movs	r3, #22
 80068b0:	6003      	str	r3, [r0, #0]
 80068b2:	2001      	movs	r0, #1
 80068b4:	e7e7      	b.n	8006886 <_raise_r+0x12>
 80068b6:	2100      	movs	r1, #0
 80068b8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80068bc:	4620      	mov	r0, r4
 80068be:	4798      	blx	r3
 80068c0:	2000      	movs	r0, #0
 80068c2:	e7e0      	b.n	8006886 <_raise_r+0x12>

080068c4 <raise>:
 80068c4:	4b02      	ldr	r3, [pc, #8]	@ (80068d0 <raise+0xc>)
 80068c6:	4601      	mov	r1, r0
 80068c8:	6818      	ldr	r0, [r3, #0]
 80068ca:	f7ff bfd3 	b.w	8006874 <_raise_r>
 80068ce:	bf00      	nop
 80068d0:	20013774 	.word	0x20013774

080068d4 <_kill_r>:
 80068d4:	b538      	push	{r3, r4, r5, lr}
 80068d6:	4d07      	ldr	r5, [pc, #28]	@ (80068f4 <_kill_r+0x20>)
 80068d8:	2300      	movs	r3, #0
 80068da:	4604      	mov	r4, r0
 80068dc:	4608      	mov	r0, r1
 80068de:	4611      	mov	r1, r2
 80068e0:	602b      	str	r3, [r5, #0]
 80068e2:	f7fb fe91 	bl	8002608 <_kill>
 80068e6:	1c43      	adds	r3, r0, #1
 80068e8:	d102      	bne.n	80068f0 <_kill_r+0x1c>
 80068ea:	682b      	ldr	r3, [r5, #0]
 80068ec:	b103      	cbz	r3, 80068f0 <_kill_r+0x1c>
 80068ee:	6023      	str	r3, [r4, #0]
 80068f0:	bd38      	pop	{r3, r4, r5, pc}
 80068f2:	bf00      	nop
 80068f4:	20013a60 	.word	0x20013a60

080068f8 <_getpid_r>:
 80068f8:	f7fb be7e 	b.w	80025f8 <_getpid>

080068fc <__swhatbuf_r>:
 80068fc:	b570      	push	{r4, r5, r6, lr}
 80068fe:	460c      	mov	r4, r1
 8006900:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006904:	2900      	cmp	r1, #0
 8006906:	b096      	sub	sp, #88	@ 0x58
 8006908:	4615      	mov	r5, r2
 800690a:	461e      	mov	r6, r3
 800690c:	da0d      	bge.n	800692a <__swhatbuf_r+0x2e>
 800690e:	89a3      	ldrh	r3, [r4, #12]
 8006910:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006914:	f04f 0100 	mov.w	r1, #0
 8006918:	bf14      	ite	ne
 800691a:	2340      	movne	r3, #64	@ 0x40
 800691c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006920:	2000      	movs	r0, #0
 8006922:	6031      	str	r1, [r6, #0]
 8006924:	602b      	str	r3, [r5, #0]
 8006926:	b016      	add	sp, #88	@ 0x58
 8006928:	bd70      	pop	{r4, r5, r6, pc}
 800692a:	466a      	mov	r2, sp
 800692c:	f000 f848 	bl	80069c0 <_fstat_r>
 8006930:	2800      	cmp	r0, #0
 8006932:	dbec      	blt.n	800690e <__swhatbuf_r+0x12>
 8006934:	9901      	ldr	r1, [sp, #4]
 8006936:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800693a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800693e:	4259      	negs	r1, r3
 8006940:	4159      	adcs	r1, r3
 8006942:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006946:	e7eb      	b.n	8006920 <__swhatbuf_r+0x24>

08006948 <__smakebuf_r>:
 8006948:	898b      	ldrh	r3, [r1, #12]
 800694a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800694c:	079d      	lsls	r5, r3, #30
 800694e:	4606      	mov	r6, r0
 8006950:	460c      	mov	r4, r1
 8006952:	d507      	bpl.n	8006964 <__smakebuf_r+0x1c>
 8006954:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006958:	6023      	str	r3, [r4, #0]
 800695a:	6123      	str	r3, [r4, #16]
 800695c:	2301      	movs	r3, #1
 800695e:	6163      	str	r3, [r4, #20]
 8006960:	b003      	add	sp, #12
 8006962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006964:	ab01      	add	r3, sp, #4
 8006966:	466a      	mov	r2, sp
 8006968:	f7ff ffc8 	bl	80068fc <__swhatbuf_r>
 800696c:	9f00      	ldr	r7, [sp, #0]
 800696e:	4605      	mov	r5, r0
 8006970:	4639      	mov	r1, r7
 8006972:	4630      	mov	r0, r6
 8006974:	f7ff faba 	bl	8005eec <_malloc_r>
 8006978:	b948      	cbnz	r0, 800698e <__smakebuf_r+0x46>
 800697a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800697e:	059a      	lsls	r2, r3, #22
 8006980:	d4ee      	bmi.n	8006960 <__smakebuf_r+0x18>
 8006982:	f023 0303 	bic.w	r3, r3, #3
 8006986:	f043 0302 	orr.w	r3, r3, #2
 800698a:	81a3      	strh	r3, [r4, #12]
 800698c:	e7e2      	b.n	8006954 <__smakebuf_r+0xc>
 800698e:	89a3      	ldrh	r3, [r4, #12]
 8006990:	6020      	str	r0, [r4, #0]
 8006992:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006996:	81a3      	strh	r3, [r4, #12]
 8006998:	9b01      	ldr	r3, [sp, #4]
 800699a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800699e:	b15b      	cbz	r3, 80069b8 <__smakebuf_r+0x70>
 80069a0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80069a4:	4630      	mov	r0, r6
 80069a6:	f000 f81d 	bl	80069e4 <_isatty_r>
 80069aa:	b128      	cbz	r0, 80069b8 <__smakebuf_r+0x70>
 80069ac:	89a3      	ldrh	r3, [r4, #12]
 80069ae:	f023 0303 	bic.w	r3, r3, #3
 80069b2:	f043 0301 	orr.w	r3, r3, #1
 80069b6:	81a3      	strh	r3, [r4, #12]
 80069b8:	89a3      	ldrh	r3, [r4, #12]
 80069ba:	431d      	orrs	r5, r3
 80069bc:	81a5      	strh	r5, [r4, #12]
 80069be:	e7cf      	b.n	8006960 <__smakebuf_r+0x18>

080069c0 <_fstat_r>:
 80069c0:	b538      	push	{r3, r4, r5, lr}
 80069c2:	4d07      	ldr	r5, [pc, #28]	@ (80069e0 <_fstat_r+0x20>)
 80069c4:	2300      	movs	r3, #0
 80069c6:	4604      	mov	r4, r0
 80069c8:	4608      	mov	r0, r1
 80069ca:	4611      	mov	r1, r2
 80069cc:	602b      	str	r3, [r5, #0]
 80069ce:	f7fb fe7b 	bl	80026c8 <_fstat>
 80069d2:	1c43      	adds	r3, r0, #1
 80069d4:	d102      	bne.n	80069dc <_fstat_r+0x1c>
 80069d6:	682b      	ldr	r3, [r5, #0]
 80069d8:	b103      	cbz	r3, 80069dc <_fstat_r+0x1c>
 80069da:	6023      	str	r3, [r4, #0]
 80069dc:	bd38      	pop	{r3, r4, r5, pc}
 80069de:	bf00      	nop
 80069e0:	20013a60 	.word	0x20013a60

080069e4 <_isatty_r>:
 80069e4:	b538      	push	{r3, r4, r5, lr}
 80069e6:	4d06      	ldr	r5, [pc, #24]	@ (8006a00 <_isatty_r+0x1c>)
 80069e8:	2300      	movs	r3, #0
 80069ea:	4604      	mov	r4, r0
 80069ec:	4608      	mov	r0, r1
 80069ee:	602b      	str	r3, [r5, #0]
 80069f0:	f7fb fe7a 	bl	80026e8 <_isatty>
 80069f4:	1c43      	adds	r3, r0, #1
 80069f6:	d102      	bne.n	80069fe <_isatty_r+0x1a>
 80069f8:	682b      	ldr	r3, [r5, #0]
 80069fa:	b103      	cbz	r3, 80069fe <_isatty_r+0x1a>
 80069fc:	6023      	str	r3, [r4, #0]
 80069fe:	bd38      	pop	{r3, r4, r5, pc}
 8006a00:	20013a60 	.word	0x20013a60

08006a04 <_gettimeofday>:
 8006a04:	4b02      	ldr	r3, [pc, #8]	@ (8006a10 <_gettimeofday+0xc>)
 8006a06:	2258      	movs	r2, #88	@ 0x58
 8006a08:	601a      	str	r2, [r3, #0]
 8006a0a:	f04f 30ff 	mov.w	r0, #4294967295
 8006a0e:	4770      	bx	lr
 8006a10:	20013a60 	.word	0x20013a60

08006a14 <_init>:
 8006a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a16:	bf00      	nop
 8006a18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006a1a:	bc08      	pop	{r3}
 8006a1c:	469e      	mov	lr, r3
 8006a1e:	4770      	bx	lr

08006a20 <_fini>:
 8006a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a22:	bf00      	nop
 8006a24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006a26:	bc08      	pop	{r3}
 8006a28:	469e      	mov	lr, r3
 8006a2a:	4770      	bx	lr
