
ILI9341.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007f60  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0003a604  08008130  08008130  00009130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08042734  08042734  0004e720  2**0
                  CONTENTS
  4 .ARM          00000008  08042734  08042734  00043734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0804273c  0804273c  0004e720  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0804273c  0804273c  0004373c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08042740  08042740  00043740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000a720  20000000  08042744  00044000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003e4  2000a720  0804ce64  0004e720  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000ab04  0804ce64  0004eb04  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0004e720  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e65b  00000000  00000000  0004e750  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002738  00000000  00000000  0005cdab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000be0  00000000  00000000  0005f4e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008f4  00000000  00000000  000600c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000239a1  00000000  00000000  000609bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011048  00000000  00000000  0008435d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000ce554  00000000  00000000  000953a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001638f9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000033b4  00000000  00000000  0016393c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000057  00000000  00000000  00166cf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000a720 	.word	0x2000a720
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08008118 	.word	0x08008118

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000a724 	.word	0x2000a724
 800020c:	08008118 	.word	0x08008118

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b96a 	b.w	80005ac <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	460c      	mov	r4, r1
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	d14e      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fc:	4694      	mov	ip, r2
 80002fe:	458c      	cmp	ip, r1
 8000300:	4686      	mov	lr, r0
 8000302:	fab2 f282 	clz	r2, r2
 8000306:	d962      	bls.n	80003ce <__udivmoddi4+0xde>
 8000308:	b14a      	cbz	r2, 800031e <__udivmoddi4+0x2e>
 800030a:	f1c2 0320 	rsb	r3, r2, #32
 800030e:	4091      	lsls	r1, r2
 8000310:	fa20 f303 	lsr.w	r3, r0, r3
 8000314:	fa0c fc02 	lsl.w	ip, ip, r2
 8000318:	4319      	orrs	r1, r3
 800031a:	fa00 fe02 	lsl.w	lr, r0, r2
 800031e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000322:	fa1f f68c 	uxth.w	r6, ip
 8000326:	fbb1 f4f7 	udiv	r4, r1, r7
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb07 1114 	mls	r1, r7, r4, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb04 f106 	mul.w	r1, r4, r6
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f104 30ff 	add.w	r0, r4, #4294967295
 8000346:	f080 8112 	bcs.w	800056e <__udivmoddi4+0x27e>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 810f 	bls.w	800056e <__udivmoddi4+0x27e>
 8000350:	3c02      	subs	r4, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a59      	subs	r1, r3, r1
 8000356:	fa1f f38e 	uxth.w	r3, lr
 800035a:	fbb1 f0f7 	udiv	r0, r1, r7
 800035e:	fb07 1110 	mls	r1, r7, r0, r1
 8000362:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000366:	fb00 f606 	mul.w	r6, r0, r6
 800036a:	429e      	cmp	r6, r3
 800036c:	d90a      	bls.n	8000384 <__udivmoddi4+0x94>
 800036e:	eb1c 0303 	adds.w	r3, ip, r3
 8000372:	f100 31ff 	add.w	r1, r0, #4294967295
 8000376:	f080 80fc 	bcs.w	8000572 <__udivmoddi4+0x282>
 800037a:	429e      	cmp	r6, r3
 800037c:	f240 80f9 	bls.w	8000572 <__udivmoddi4+0x282>
 8000380:	4463      	add	r3, ip
 8000382:	3802      	subs	r0, #2
 8000384:	1b9b      	subs	r3, r3, r6
 8000386:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800038a:	2100      	movs	r1, #0
 800038c:	b11d      	cbz	r5, 8000396 <__udivmoddi4+0xa6>
 800038e:	40d3      	lsrs	r3, r2
 8000390:	2200      	movs	r2, #0
 8000392:	e9c5 3200 	strd	r3, r2, [r5]
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d905      	bls.n	80003aa <__udivmoddi4+0xba>
 800039e:	b10d      	cbz	r5, 80003a4 <__udivmoddi4+0xb4>
 80003a0:	e9c5 0100 	strd	r0, r1, [r5]
 80003a4:	2100      	movs	r1, #0
 80003a6:	4608      	mov	r0, r1
 80003a8:	e7f5      	b.n	8000396 <__udivmoddi4+0xa6>
 80003aa:	fab3 f183 	clz	r1, r3
 80003ae:	2900      	cmp	r1, #0
 80003b0:	d146      	bne.n	8000440 <__udivmoddi4+0x150>
 80003b2:	42a3      	cmp	r3, r4
 80003b4:	d302      	bcc.n	80003bc <__udivmoddi4+0xcc>
 80003b6:	4290      	cmp	r0, r2
 80003b8:	f0c0 80f0 	bcc.w	800059c <__udivmoddi4+0x2ac>
 80003bc:	1a86      	subs	r6, r0, r2
 80003be:	eb64 0303 	sbc.w	r3, r4, r3
 80003c2:	2001      	movs	r0, #1
 80003c4:	2d00      	cmp	r5, #0
 80003c6:	d0e6      	beq.n	8000396 <__udivmoddi4+0xa6>
 80003c8:	e9c5 6300 	strd	r6, r3, [r5]
 80003cc:	e7e3      	b.n	8000396 <__udivmoddi4+0xa6>
 80003ce:	2a00      	cmp	r2, #0
 80003d0:	f040 8090 	bne.w	80004f4 <__udivmoddi4+0x204>
 80003d4:	eba1 040c 	sub.w	r4, r1, ip
 80003d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003dc:	fa1f f78c 	uxth.w	r7, ip
 80003e0:	2101      	movs	r1, #1
 80003e2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003e6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ea:	fb08 4416 	mls	r4, r8, r6, r4
 80003ee:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003f2:	fb07 f006 	mul.w	r0, r7, r6
 80003f6:	4298      	cmp	r0, r3
 80003f8:	d908      	bls.n	800040c <__udivmoddi4+0x11c>
 80003fa:	eb1c 0303 	adds.w	r3, ip, r3
 80003fe:	f106 34ff 	add.w	r4, r6, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x11a>
 8000404:	4298      	cmp	r0, r3
 8000406:	f200 80cd 	bhi.w	80005a4 <__udivmoddi4+0x2b4>
 800040a:	4626      	mov	r6, r4
 800040c:	1a1c      	subs	r4, r3, r0
 800040e:	fa1f f38e 	uxth.w	r3, lr
 8000412:	fbb4 f0f8 	udiv	r0, r4, r8
 8000416:	fb08 4410 	mls	r4, r8, r0, r4
 800041a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800041e:	fb00 f707 	mul.w	r7, r0, r7
 8000422:	429f      	cmp	r7, r3
 8000424:	d908      	bls.n	8000438 <__udivmoddi4+0x148>
 8000426:	eb1c 0303 	adds.w	r3, ip, r3
 800042a:	f100 34ff 	add.w	r4, r0, #4294967295
 800042e:	d202      	bcs.n	8000436 <__udivmoddi4+0x146>
 8000430:	429f      	cmp	r7, r3
 8000432:	f200 80b0 	bhi.w	8000596 <__udivmoddi4+0x2a6>
 8000436:	4620      	mov	r0, r4
 8000438:	1bdb      	subs	r3, r3, r7
 800043a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800043e:	e7a5      	b.n	800038c <__udivmoddi4+0x9c>
 8000440:	f1c1 0620 	rsb	r6, r1, #32
 8000444:	408b      	lsls	r3, r1
 8000446:	fa22 f706 	lsr.w	r7, r2, r6
 800044a:	431f      	orrs	r7, r3
 800044c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000450:	fa04 f301 	lsl.w	r3, r4, r1
 8000454:	ea43 030c 	orr.w	r3, r3, ip
 8000458:	40f4      	lsrs	r4, r6
 800045a:	fa00 f801 	lsl.w	r8, r0, r1
 800045e:	0c38      	lsrs	r0, r7, #16
 8000460:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000464:	fbb4 fef0 	udiv	lr, r4, r0
 8000468:	fa1f fc87 	uxth.w	ip, r7
 800046c:	fb00 441e 	mls	r4, r0, lr, r4
 8000470:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000474:	fb0e f90c 	mul.w	r9, lr, ip
 8000478:	45a1      	cmp	r9, r4
 800047a:	fa02 f201 	lsl.w	r2, r2, r1
 800047e:	d90a      	bls.n	8000496 <__udivmoddi4+0x1a6>
 8000480:	193c      	adds	r4, r7, r4
 8000482:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000486:	f080 8084 	bcs.w	8000592 <__udivmoddi4+0x2a2>
 800048a:	45a1      	cmp	r9, r4
 800048c:	f240 8081 	bls.w	8000592 <__udivmoddi4+0x2a2>
 8000490:	f1ae 0e02 	sub.w	lr, lr, #2
 8000494:	443c      	add	r4, r7
 8000496:	eba4 0409 	sub.w	r4, r4, r9
 800049a:	fa1f f983 	uxth.w	r9, r3
 800049e:	fbb4 f3f0 	udiv	r3, r4, r0
 80004a2:	fb00 4413 	mls	r4, r0, r3, r4
 80004a6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80004aa:	fb03 fc0c 	mul.w	ip, r3, ip
 80004ae:	45a4      	cmp	ip, r4
 80004b0:	d907      	bls.n	80004c2 <__udivmoddi4+0x1d2>
 80004b2:	193c      	adds	r4, r7, r4
 80004b4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004b8:	d267      	bcs.n	800058a <__udivmoddi4+0x29a>
 80004ba:	45a4      	cmp	ip, r4
 80004bc:	d965      	bls.n	800058a <__udivmoddi4+0x29a>
 80004be:	3b02      	subs	r3, #2
 80004c0:	443c      	add	r4, r7
 80004c2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004c6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ca:	eba4 040c 	sub.w	r4, r4, ip
 80004ce:	429c      	cmp	r4, r3
 80004d0:	46ce      	mov	lr, r9
 80004d2:	469c      	mov	ip, r3
 80004d4:	d351      	bcc.n	800057a <__udivmoddi4+0x28a>
 80004d6:	d04e      	beq.n	8000576 <__udivmoddi4+0x286>
 80004d8:	b155      	cbz	r5, 80004f0 <__udivmoddi4+0x200>
 80004da:	ebb8 030e 	subs.w	r3, r8, lr
 80004de:	eb64 040c 	sbc.w	r4, r4, ip
 80004e2:	fa04 f606 	lsl.w	r6, r4, r6
 80004e6:	40cb      	lsrs	r3, r1
 80004e8:	431e      	orrs	r6, r3
 80004ea:	40cc      	lsrs	r4, r1
 80004ec:	e9c5 6400 	strd	r6, r4, [r5]
 80004f0:	2100      	movs	r1, #0
 80004f2:	e750      	b.n	8000396 <__udivmoddi4+0xa6>
 80004f4:	f1c2 0320 	rsb	r3, r2, #32
 80004f8:	fa20 f103 	lsr.w	r1, r0, r3
 80004fc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000500:	fa24 f303 	lsr.w	r3, r4, r3
 8000504:	4094      	lsls	r4, r2
 8000506:	430c      	orrs	r4, r1
 8000508:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800050c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000510:	fa1f f78c 	uxth.w	r7, ip
 8000514:	fbb3 f0f8 	udiv	r0, r3, r8
 8000518:	fb08 3110 	mls	r1, r8, r0, r3
 800051c:	0c23      	lsrs	r3, r4, #16
 800051e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000522:	fb00 f107 	mul.w	r1, r0, r7
 8000526:	4299      	cmp	r1, r3
 8000528:	d908      	bls.n	800053c <__udivmoddi4+0x24c>
 800052a:	eb1c 0303 	adds.w	r3, ip, r3
 800052e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000532:	d22c      	bcs.n	800058e <__udivmoddi4+0x29e>
 8000534:	4299      	cmp	r1, r3
 8000536:	d92a      	bls.n	800058e <__udivmoddi4+0x29e>
 8000538:	3802      	subs	r0, #2
 800053a:	4463      	add	r3, ip
 800053c:	1a5b      	subs	r3, r3, r1
 800053e:	b2a4      	uxth	r4, r4
 8000540:	fbb3 f1f8 	udiv	r1, r3, r8
 8000544:	fb08 3311 	mls	r3, r8, r1, r3
 8000548:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800054c:	fb01 f307 	mul.w	r3, r1, r7
 8000550:	42a3      	cmp	r3, r4
 8000552:	d908      	bls.n	8000566 <__udivmoddi4+0x276>
 8000554:	eb1c 0404 	adds.w	r4, ip, r4
 8000558:	f101 36ff 	add.w	r6, r1, #4294967295
 800055c:	d213      	bcs.n	8000586 <__udivmoddi4+0x296>
 800055e:	42a3      	cmp	r3, r4
 8000560:	d911      	bls.n	8000586 <__udivmoddi4+0x296>
 8000562:	3902      	subs	r1, #2
 8000564:	4464      	add	r4, ip
 8000566:	1ae4      	subs	r4, r4, r3
 8000568:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800056c:	e739      	b.n	80003e2 <__udivmoddi4+0xf2>
 800056e:	4604      	mov	r4, r0
 8000570:	e6f0      	b.n	8000354 <__udivmoddi4+0x64>
 8000572:	4608      	mov	r0, r1
 8000574:	e706      	b.n	8000384 <__udivmoddi4+0x94>
 8000576:	45c8      	cmp	r8, r9
 8000578:	d2ae      	bcs.n	80004d8 <__udivmoddi4+0x1e8>
 800057a:	ebb9 0e02 	subs.w	lr, r9, r2
 800057e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000582:	3801      	subs	r0, #1
 8000584:	e7a8      	b.n	80004d8 <__udivmoddi4+0x1e8>
 8000586:	4631      	mov	r1, r6
 8000588:	e7ed      	b.n	8000566 <__udivmoddi4+0x276>
 800058a:	4603      	mov	r3, r0
 800058c:	e799      	b.n	80004c2 <__udivmoddi4+0x1d2>
 800058e:	4630      	mov	r0, r6
 8000590:	e7d4      	b.n	800053c <__udivmoddi4+0x24c>
 8000592:	46d6      	mov	lr, sl
 8000594:	e77f      	b.n	8000496 <__udivmoddi4+0x1a6>
 8000596:	4463      	add	r3, ip
 8000598:	3802      	subs	r0, #2
 800059a:	e74d      	b.n	8000438 <__udivmoddi4+0x148>
 800059c:	4606      	mov	r6, r0
 800059e:	4623      	mov	r3, r4
 80005a0:	4608      	mov	r0, r1
 80005a2:	e70f      	b.n	80003c4 <__udivmoddi4+0xd4>
 80005a4:	3e02      	subs	r6, #2
 80005a6:	4463      	add	r3, ip
 80005a8:	e730      	b.n	800040c <__udivmoddi4+0x11c>
 80005aa:	bf00      	nop

080005ac <__aeabi_idiv0>:
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop

080005b0 <SELECT>:
 80005b0:	b580      	push	{r7, lr}
 80005b2:	af00      	add	r7, sp, #0
 80005b4:	2200      	movs	r2, #0
 80005b6:	2140      	movs	r1, #64	@ 0x40
 80005b8:	4803      	ldr	r0, [pc, #12]	@ (80005c8 <SELECT+0x18>)
 80005ba:	f004 fc93 	bl	8004ee4 <HAL_GPIO_WritePin>
 80005be:	2001      	movs	r0, #1
 80005c0:	f003 fdb8 	bl	8004134 <HAL_Delay>
 80005c4:	bf00      	nop
 80005c6:	bd80      	pop	{r7, pc}
 80005c8:	40020400 	.word	0x40020400

080005cc <DESELECT>:
 80005cc:	b580      	push	{r7, lr}
 80005ce:	af00      	add	r7, sp, #0
 80005d0:	2201      	movs	r2, #1
 80005d2:	2140      	movs	r1, #64	@ 0x40
 80005d4:	4803      	ldr	r0, [pc, #12]	@ (80005e4 <DESELECT+0x18>)
 80005d6:	f004 fc85 	bl	8004ee4 <HAL_GPIO_WritePin>
 80005da:	2001      	movs	r0, #1
 80005dc:	f003 fdaa 	bl	8004134 <HAL_Delay>
 80005e0:	bf00      	nop
 80005e2:	bd80      	pop	{r7, pc}
 80005e4:	40020400 	.word	0x40020400

080005e8 <SPI_TxByte>:
 80005e8:	b580      	push	{r7, lr}
 80005ea:	b082      	sub	sp, #8
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	4603      	mov	r3, r0
 80005f0:	71fb      	strb	r3, [r7, #7]
 80005f2:	bf00      	nop
 80005f4:	4b08      	ldr	r3, [pc, #32]	@ (8000618 <SPI_TxByte+0x30>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	689b      	ldr	r3, [r3, #8]
 80005fa:	f003 0302 	and.w	r3, r3, #2
 80005fe:	2b02      	cmp	r3, #2
 8000600:	d1f8      	bne.n	80005f4 <SPI_TxByte+0xc>
 8000602:	1df9      	adds	r1, r7, #7
 8000604:	2364      	movs	r3, #100	@ 0x64
 8000606:	2201      	movs	r2, #1
 8000608:	4803      	ldr	r0, [pc, #12]	@ (8000618 <SPI_TxByte+0x30>)
 800060a:	f005 fa70 	bl	8005aee <HAL_SPI_Transmit>
 800060e:	bf00      	nop
 8000610:	3708      	adds	r7, #8
 8000612:	46bd      	mov	sp, r7
 8000614:	bd80      	pop	{r7, pc}
 8000616:	bf00      	nop
 8000618:	2000a744 	.word	0x2000a744

0800061c <SPI_TxBuffer>:
 800061c:	b580      	push	{r7, lr}
 800061e:	b082      	sub	sp, #8
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	807b      	strh	r3, [r7, #2]
 8000628:	bf00      	nop
 800062a:	4b08      	ldr	r3, [pc, #32]	@ (800064c <SPI_TxBuffer+0x30>)
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	689b      	ldr	r3, [r3, #8]
 8000630:	f003 0302 	and.w	r3, r3, #2
 8000634:	2b02      	cmp	r3, #2
 8000636:	d1f8      	bne.n	800062a <SPI_TxBuffer+0xe>
 8000638:	887a      	ldrh	r2, [r7, #2]
 800063a:	2364      	movs	r3, #100	@ 0x64
 800063c:	6879      	ldr	r1, [r7, #4]
 800063e:	4803      	ldr	r0, [pc, #12]	@ (800064c <SPI_TxBuffer+0x30>)
 8000640:	f005 fa55 	bl	8005aee <HAL_SPI_Transmit>
 8000644:	bf00      	nop
 8000646:	3708      	adds	r7, #8
 8000648:	46bd      	mov	sp, r7
 800064a:	bd80      	pop	{r7, pc}
 800064c:	2000a744 	.word	0x2000a744

08000650 <SPI_RxByte>:
 8000650:	b580      	push	{r7, lr}
 8000652:	b084      	sub	sp, #16
 8000654:	af02      	add	r7, sp, #8
 8000656:	23ff      	movs	r3, #255	@ 0xff
 8000658:	71fb      	strb	r3, [r7, #7]
 800065a:	bf00      	nop
 800065c:	4b09      	ldr	r3, [pc, #36]	@ (8000684 <SPI_RxByte+0x34>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	689b      	ldr	r3, [r3, #8]
 8000662:	f003 0302 	and.w	r3, r3, #2
 8000666:	2b02      	cmp	r3, #2
 8000668:	d1f8      	bne.n	800065c <SPI_RxByte+0xc>
 800066a:	1dba      	adds	r2, r7, #6
 800066c:	1df9      	adds	r1, r7, #7
 800066e:	2364      	movs	r3, #100	@ 0x64
 8000670:	9300      	str	r3, [sp, #0]
 8000672:	2301      	movs	r3, #1
 8000674:	4803      	ldr	r0, [pc, #12]	@ (8000684 <SPI_RxByte+0x34>)
 8000676:	f005 fb7e 	bl	8005d76 <HAL_SPI_TransmitReceive>
 800067a:	79bb      	ldrb	r3, [r7, #6]
 800067c:	4618      	mov	r0, r3
 800067e:	3708      	adds	r7, #8
 8000680:	46bd      	mov	sp, r7
 8000682:	bd80      	pop	{r7, pc}
 8000684:	2000a744 	.word	0x2000a744

08000688 <SPI_RxBytePtr>:
 8000688:	b580      	push	{r7, lr}
 800068a:	b082      	sub	sp, #8
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	f7ff ffde 	bl	8000650 <SPI_RxByte>
 8000694:	4603      	mov	r3, r0
 8000696:	461a      	mov	r2, r3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	701a      	strb	r2, [r3, #0]
 800069c:	bf00      	nop
 800069e:	3708      	adds	r7, #8
 80006a0:	46bd      	mov	sp, r7
 80006a2:	bd80      	pop	{r7, pc}

080006a4 <SD_ReadyWait>:
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b082      	sub	sp, #8
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	4b0a      	ldr	r3, [pc, #40]	@ (80006d4 <SD_ReadyWait+0x30>)
 80006ac:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 80006b0:	801a      	strh	r2, [r3, #0]
 80006b2:	f7ff ffcd 	bl	8000650 <SPI_RxByte>
 80006b6:	4603      	mov	r3, r0
 80006b8:	71fb      	strb	r3, [r7, #7]
 80006ba:	79fb      	ldrb	r3, [r7, #7]
 80006bc:	2bff      	cmp	r3, #255	@ 0xff
 80006be:	d003      	beq.n	80006c8 <SD_ReadyWait+0x24>
 80006c0:	4b04      	ldr	r3, [pc, #16]	@ (80006d4 <SD_ReadyWait+0x30>)
 80006c2:	881b      	ldrh	r3, [r3, #0]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d1f4      	bne.n	80006b2 <SD_ReadyWait+0xe>
 80006c8:	79fb      	ldrb	r3, [r7, #7]
 80006ca:	4618      	mov	r0, r3
 80006cc:	3708      	adds	r7, #8
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bd80      	pop	{r7, pc}
 80006d2:	bf00      	nop
 80006d4:	2000a73e 	.word	0x2000a73e

080006d8 <SD_PowerOn>:
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
 80006de:	f641 73ff 	movw	r3, #8191	@ 0x1fff
 80006e2:	60fb      	str	r3, [r7, #12]
 80006e4:	f7ff ff72 	bl	80005cc <DESELECT>
 80006e8:	2300      	movs	r3, #0
 80006ea:	60bb      	str	r3, [r7, #8]
 80006ec:	e005      	b.n	80006fa <SD_PowerOn+0x22>
 80006ee:	20ff      	movs	r0, #255	@ 0xff
 80006f0:	f7ff ff7a 	bl	80005e8 <SPI_TxByte>
 80006f4:	68bb      	ldr	r3, [r7, #8]
 80006f6:	3301      	adds	r3, #1
 80006f8:	60bb      	str	r3, [r7, #8]
 80006fa:	68bb      	ldr	r3, [r7, #8]
 80006fc:	2b09      	cmp	r3, #9
 80006fe:	ddf6      	ble.n	80006ee <SD_PowerOn+0x16>
 8000700:	f7ff ff56 	bl	80005b0 <SELECT>
 8000704:	2340      	movs	r3, #64	@ 0x40
 8000706:	703b      	strb	r3, [r7, #0]
 8000708:	2300      	movs	r3, #0
 800070a:	707b      	strb	r3, [r7, #1]
 800070c:	2300      	movs	r3, #0
 800070e:	70bb      	strb	r3, [r7, #2]
 8000710:	2300      	movs	r3, #0
 8000712:	70fb      	strb	r3, [r7, #3]
 8000714:	2300      	movs	r3, #0
 8000716:	713b      	strb	r3, [r7, #4]
 8000718:	2395      	movs	r3, #149	@ 0x95
 800071a:	717b      	strb	r3, [r7, #5]
 800071c:	463b      	mov	r3, r7
 800071e:	2106      	movs	r1, #6
 8000720:	4618      	mov	r0, r3
 8000722:	f7ff ff7b 	bl	800061c <SPI_TxBuffer>
 8000726:	e002      	b.n	800072e <SD_PowerOn+0x56>
 8000728:	68fb      	ldr	r3, [r7, #12]
 800072a:	3b01      	subs	r3, #1
 800072c:	60fb      	str	r3, [r7, #12]
 800072e:	f7ff ff8f 	bl	8000650 <SPI_RxByte>
 8000732:	4603      	mov	r3, r0
 8000734:	2b01      	cmp	r3, #1
 8000736:	d002      	beq.n	800073e <SD_PowerOn+0x66>
 8000738:	68fb      	ldr	r3, [r7, #12]
 800073a:	2b00      	cmp	r3, #0
 800073c:	d1f4      	bne.n	8000728 <SD_PowerOn+0x50>
 800073e:	f7ff ff45 	bl	80005cc <DESELECT>
 8000742:	20ff      	movs	r0, #255	@ 0xff
 8000744:	f7ff ff50 	bl	80005e8 <SPI_TxByte>
 8000748:	4b03      	ldr	r3, [pc, #12]	@ (8000758 <SD_PowerOn+0x80>)
 800074a:	2201      	movs	r2, #1
 800074c:	701a      	strb	r2, [r3, #0]
 800074e:	bf00      	nop
 8000750:	3710      	adds	r7, #16
 8000752:	46bd      	mov	sp, r7
 8000754:	bd80      	pop	{r7, pc}
 8000756:	bf00      	nop
 8000758:	2000a741 	.word	0x2000a741

0800075c <SD_PowerOff>:
 800075c:	b480      	push	{r7}
 800075e:	af00      	add	r7, sp, #0
 8000760:	4b03      	ldr	r3, [pc, #12]	@ (8000770 <SD_PowerOff+0x14>)
 8000762:	2200      	movs	r2, #0
 8000764:	701a      	strb	r2, [r3, #0]
 8000766:	bf00      	nop
 8000768:	46bd      	mov	sp, r7
 800076a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076e:	4770      	bx	lr
 8000770:	2000a741 	.word	0x2000a741

08000774 <SD_CheckPower>:
 8000774:	b480      	push	{r7}
 8000776:	af00      	add	r7, sp, #0
 8000778:	4b03      	ldr	r3, [pc, #12]	@ (8000788 <SD_CheckPower+0x14>)
 800077a:	781b      	ldrb	r3, [r3, #0]
 800077c:	4618      	mov	r0, r3
 800077e:	46bd      	mov	sp, r7
 8000780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000784:	4770      	bx	lr
 8000786:	bf00      	nop
 8000788:	2000a741 	.word	0x2000a741

0800078c <SD_RxDataBlock>:
 800078c:	b580      	push	{r7, lr}
 800078e:	b084      	sub	sp, #16
 8000790:	af00      	add	r7, sp, #0
 8000792:	6078      	str	r0, [r7, #4]
 8000794:	6039      	str	r1, [r7, #0]
 8000796:	4b13      	ldr	r3, [pc, #76]	@ (80007e4 <SD_RxDataBlock+0x58>)
 8000798:	22c8      	movs	r2, #200	@ 0xc8
 800079a:	801a      	strh	r2, [r3, #0]
 800079c:	f7ff ff58 	bl	8000650 <SPI_RxByte>
 80007a0:	4603      	mov	r3, r0
 80007a2:	73fb      	strb	r3, [r7, #15]
 80007a4:	7bfb      	ldrb	r3, [r7, #15]
 80007a6:	2bff      	cmp	r3, #255	@ 0xff
 80007a8:	d103      	bne.n	80007b2 <SD_RxDataBlock+0x26>
 80007aa:	4b0e      	ldr	r3, [pc, #56]	@ (80007e4 <SD_RxDataBlock+0x58>)
 80007ac:	881b      	ldrh	r3, [r3, #0]
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	d1f4      	bne.n	800079c <SD_RxDataBlock+0x10>
 80007b2:	7bfb      	ldrb	r3, [r7, #15]
 80007b4:	2bfe      	cmp	r3, #254	@ 0xfe
 80007b6:	d001      	beq.n	80007bc <SD_RxDataBlock+0x30>
 80007b8:	2300      	movs	r3, #0
 80007ba:	e00f      	b.n	80007dc <SD_RxDataBlock+0x50>
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	1c5a      	adds	r2, r3, #1
 80007c0:	607a      	str	r2, [r7, #4]
 80007c2:	4618      	mov	r0, r3
 80007c4:	f7ff ff60 	bl	8000688 <SPI_RxBytePtr>
 80007c8:	683b      	ldr	r3, [r7, #0]
 80007ca:	1e5a      	subs	r2, r3, #1
 80007cc:	603a      	str	r2, [r7, #0]
 80007ce:	2b00      	cmp	r3, #0
 80007d0:	d1f4      	bne.n	80007bc <SD_RxDataBlock+0x30>
 80007d2:	f7ff ff3d 	bl	8000650 <SPI_RxByte>
 80007d6:	f7ff ff3b 	bl	8000650 <SPI_RxByte>
 80007da:	2301      	movs	r3, #1
 80007dc:	4618      	mov	r0, r3
 80007de:	3710      	adds	r7, #16
 80007e0:	46bd      	mov	sp, r7
 80007e2:	bd80      	pop	{r7, pc}
 80007e4:	2000a73c 	.word	0x2000a73c

080007e8 <SD_TxDataBlock>:
 80007e8:	b580      	push	{r7, lr}
 80007ea:	b084      	sub	sp, #16
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
 80007f0:	460b      	mov	r3, r1
 80007f2:	70fb      	strb	r3, [r7, #3]
 80007f4:	2300      	movs	r3, #0
 80007f6:	73bb      	strb	r3, [r7, #14]
 80007f8:	f7ff ff54 	bl	80006a4 <SD_ReadyWait>
 80007fc:	4603      	mov	r3, r0
 80007fe:	2bff      	cmp	r3, #255	@ 0xff
 8000800:	d001      	beq.n	8000806 <SD_TxDataBlock+0x1e>
 8000802:	2300      	movs	r3, #0
 8000804:	e02f      	b.n	8000866 <SD_TxDataBlock+0x7e>
 8000806:	78fb      	ldrb	r3, [r7, #3]
 8000808:	4618      	mov	r0, r3
 800080a:	f7ff feed 	bl	80005e8 <SPI_TxByte>
 800080e:	78fb      	ldrb	r3, [r7, #3]
 8000810:	2bfd      	cmp	r3, #253	@ 0xfd
 8000812:	d020      	beq.n	8000856 <SD_TxDataBlock+0x6e>
 8000814:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000818:	6878      	ldr	r0, [r7, #4]
 800081a:	f7ff feff 	bl	800061c <SPI_TxBuffer>
 800081e:	f7ff ff17 	bl	8000650 <SPI_RxByte>
 8000822:	f7ff ff15 	bl	8000650 <SPI_RxByte>
 8000826:	e00b      	b.n	8000840 <SD_TxDataBlock+0x58>
 8000828:	f7ff ff12 	bl	8000650 <SPI_RxByte>
 800082c:	4603      	mov	r3, r0
 800082e:	73fb      	strb	r3, [r7, #15]
 8000830:	7bfb      	ldrb	r3, [r7, #15]
 8000832:	f003 031f 	and.w	r3, r3, #31
 8000836:	2b05      	cmp	r3, #5
 8000838:	d006      	beq.n	8000848 <SD_TxDataBlock+0x60>
 800083a:	7bbb      	ldrb	r3, [r7, #14]
 800083c:	3301      	adds	r3, #1
 800083e:	73bb      	strb	r3, [r7, #14]
 8000840:	7bbb      	ldrb	r3, [r7, #14]
 8000842:	2b40      	cmp	r3, #64	@ 0x40
 8000844:	d9f0      	bls.n	8000828 <SD_TxDataBlock+0x40>
 8000846:	e000      	b.n	800084a <SD_TxDataBlock+0x62>
 8000848:	bf00      	nop
 800084a:	bf00      	nop
 800084c:	f7ff ff00 	bl	8000650 <SPI_RxByte>
 8000850:	4603      	mov	r3, r0
 8000852:	2b00      	cmp	r3, #0
 8000854:	d0fa      	beq.n	800084c <SD_TxDataBlock+0x64>
 8000856:	7bfb      	ldrb	r3, [r7, #15]
 8000858:	f003 031f 	and.w	r3, r3, #31
 800085c:	2b05      	cmp	r3, #5
 800085e:	d101      	bne.n	8000864 <SD_TxDataBlock+0x7c>
 8000860:	2301      	movs	r3, #1
 8000862:	e000      	b.n	8000866 <SD_TxDataBlock+0x7e>
 8000864:	2300      	movs	r3, #0
 8000866:	4618      	mov	r0, r3
 8000868:	3710      	adds	r7, #16
 800086a:	46bd      	mov	sp, r7
 800086c:	bd80      	pop	{r7, pc}

0800086e <SD_SendCmd>:
 800086e:	b580      	push	{r7, lr}
 8000870:	b084      	sub	sp, #16
 8000872:	af00      	add	r7, sp, #0
 8000874:	4603      	mov	r3, r0
 8000876:	6039      	str	r1, [r7, #0]
 8000878:	71fb      	strb	r3, [r7, #7]
 800087a:	f7ff ff13 	bl	80006a4 <SD_ReadyWait>
 800087e:	4603      	mov	r3, r0
 8000880:	2bff      	cmp	r3, #255	@ 0xff
 8000882:	d001      	beq.n	8000888 <SD_SendCmd+0x1a>
 8000884:	23ff      	movs	r3, #255	@ 0xff
 8000886:	e042      	b.n	800090e <SD_SendCmd+0xa0>
 8000888:	79fb      	ldrb	r3, [r7, #7]
 800088a:	4618      	mov	r0, r3
 800088c:	f7ff feac 	bl	80005e8 <SPI_TxByte>
 8000890:	683b      	ldr	r3, [r7, #0]
 8000892:	0e1b      	lsrs	r3, r3, #24
 8000894:	b2db      	uxtb	r3, r3
 8000896:	4618      	mov	r0, r3
 8000898:	f7ff fea6 	bl	80005e8 <SPI_TxByte>
 800089c:	683b      	ldr	r3, [r7, #0]
 800089e:	0c1b      	lsrs	r3, r3, #16
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	4618      	mov	r0, r3
 80008a4:	f7ff fea0 	bl	80005e8 <SPI_TxByte>
 80008a8:	683b      	ldr	r3, [r7, #0]
 80008aa:	0a1b      	lsrs	r3, r3, #8
 80008ac:	b2db      	uxtb	r3, r3
 80008ae:	4618      	mov	r0, r3
 80008b0:	f7ff fe9a 	bl	80005e8 <SPI_TxByte>
 80008b4:	683b      	ldr	r3, [r7, #0]
 80008b6:	b2db      	uxtb	r3, r3
 80008b8:	4618      	mov	r0, r3
 80008ba:	f7ff fe95 	bl	80005e8 <SPI_TxByte>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b40      	cmp	r3, #64	@ 0x40
 80008c2:	d102      	bne.n	80008ca <SD_SendCmd+0x5c>
 80008c4:	2395      	movs	r3, #149	@ 0x95
 80008c6:	73fb      	strb	r3, [r7, #15]
 80008c8:	e007      	b.n	80008da <SD_SendCmd+0x6c>
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b48      	cmp	r3, #72	@ 0x48
 80008ce:	d102      	bne.n	80008d6 <SD_SendCmd+0x68>
 80008d0:	2387      	movs	r3, #135	@ 0x87
 80008d2:	73fb      	strb	r3, [r7, #15]
 80008d4:	e001      	b.n	80008da <SD_SendCmd+0x6c>
 80008d6:	2301      	movs	r3, #1
 80008d8:	73fb      	strb	r3, [r7, #15]
 80008da:	7bfb      	ldrb	r3, [r7, #15]
 80008dc:	4618      	mov	r0, r3
 80008de:	f7ff fe83 	bl	80005e8 <SPI_TxByte>
 80008e2:	79fb      	ldrb	r3, [r7, #7]
 80008e4:	2b4c      	cmp	r3, #76	@ 0x4c
 80008e6:	d101      	bne.n	80008ec <SD_SendCmd+0x7e>
 80008e8:	f7ff feb2 	bl	8000650 <SPI_RxByte>
 80008ec:	230a      	movs	r3, #10
 80008ee:	73bb      	strb	r3, [r7, #14]
 80008f0:	f7ff feae 	bl	8000650 <SPI_RxByte>
 80008f4:	4603      	mov	r3, r0
 80008f6:	737b      	strb	r3, [r7, #13]
 80008f8:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80008fc:	2b00      	cmp	r3, #0
 80008fe:	da05      	bge.n	800090c <SD_SendCmd+0x9e>
 8000900:	7bbb      	ldrb	r3, [r7, #14]
 8000902:	3b01      	subs	r3, #1
 8000904:	73bb      	strb	r3, [r7, #14]
 8000906:	7bbb      	ldrb	r3, [r7, #14]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d1f1      	bne.n	80008f0 <SD_SendCmd+0x82>
 800090c:	7b7b      	ldrb	r3, [r7, #13]
 800090e:	4618      	mov	r0, r3
 8000910:	3710      	adds	r7, #16
 8000912:	46bd      	mov	sp, r7
 8000914:	bd80      	pop	{r7, pc}
	...

08000918 <SD_disk_initialize>:
 8000918:	b590      	push	{r4, r7, lr}
 800091a:	b085      	sub	sp, #20
 800091c:	af00      	add	r7, sp, #0
 800091e:	4603      	mov	r3, r0
 8000920:	71fb      	strb	r3, [r7, #7]
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	2b00      	cmp	r3, #0
 8000926:	d001      	beq.n	800092c <SD_disk_initialize+0x14>
 8000928:	2301      	movs	r3, #1
 800092a:	e0d1      	b.n	8000ad0 <SD_disk_initialize+0x1b8>
 800092c:	4b6a      	ldr	r3, [pc, #424]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 800092e:	781b      	ldrb	r3, [r3, #0]
 8000930:	b2db      	uxtb	r3, r3
 8000932:	f003 0302 	and.w	r3, r3, #2
 8000936:	2b00      	cmp	r3, #0
 8000938:	d003      	beq.n	8000942 <SD_disk_initialize+0x2a>
 800093a:	4b67      	ldr	r3, [pc, #412]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 800093c:	781b      	ldrb	r3, [r3, #0]
 800093e:	b2db      	uxtb	r3, r3
 8000940:	e0c6      	b.n	8000ad0 <SD_disk_initialize+0x1b8>
 8000942:	f7ff fec9 	bl	80006d8 <SD_PowerOn>
 8000946:	f7ff fe33 	bl	80005b0 <SELECT>
 800094a:	2300      	movs	r3, #0
 800094c:	73bb      	strb	r3, [r7, #14]
 800094e:	2100      	movs	r1, #0
 8000950:	2040      	movs	r0, #64	@ 0x40
 8000952:	f7ff ff8c 	bl	800086e <SD_SendCmd>
 8000956:	4603      	mov	r3, r0
 8000958:	2b01      	cmp	r3, #1
 800095a:	f040 80a1 	bne.w	8000aa0 <SD_disk_initialize+0x188>
 800095e:	4b5f      	ldr	r3, [pc, #380]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000960:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000964:	801a      	strh	r2, [r3, #0]
 8000966:	f44f 71d5 	mov.w	r1, #426	@ 0x1aa
 800096a:	2048      	movs	r0, #72	@ 0x48
 800096c:	f7ff ff7f 	bl	800086e <SD_SendCmd>
 8000970:	4603      	mov	r3, r0
 8000972:	2b01      	cmp	r3, #1
 8000974:	d155      	bne.n	8000a22 <SD_disk_initialize+0x10a>
 8000976:	2300      	movs	r3, #0
 8000978:	73fb      	strb	r3, [r7, #15]
 800097a:	e00c      	b.n	8000996 <SD_disk_initialize+0x7e>
 800097c:	7bfc      	ldrb	r4, [r7, #15]
 800097e:	f7ff fe67 	bl	8000650 <SPI_RxByte>
 8000982:	4603      	mov	r3, r0
 8000984:	461a      	mov	r2, r3
 8000986:	f104 0310 	add.w	r3, r4, #16
 800098a:	443b      	add	r3, r7
 800098c:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000990:	7bfb      	ldrb	r3, [r7, #15]
 8000992:	3301      	adds	r3, #1
 8000994:	73fb      	strb	r3, [r7, #15]
 8000996:	7bfb      	ldrb	r3, [r7, #15]
 8000998:	2b03      	cmp	r3, #3
 800099a:	d9ef      	bls.n	800097c <SD_disk_initialize+0x64>
 800099c:	7abb      	ldrb	r3, [r7, #10]
 800099e:	2b01      	cmp	r3, #1
 80009a0:	d17e      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009a2:	7afb      	ldrb	r3, [r7, #11]
 80009a4:	2baa      	cmp	r3, #170	@ 0xaa
 80009a6:	d17b      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009a8:	2100      	movs	r1, #0
 80009aa:	2077      	movs	r0, #119	@ 0x77
 80009ac:	f7ff ff5f 	bl	800086e <SD_SendCmd>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b01      	cmp	r3, #1
 80009b4:	d807      	bhi.n	80009c6 <SD_disk_initialize+0xae>
 80009b6:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 80009ba:	2069      	movs	r0, #105	@ 0x69
 80009bc:	f7ff ff57 	bl	800086e <SD_SendCmd>
 80009c0:	4603      	mov	r3, r0
 80009c2:	2b00      	cmp	r3, #0
 80009c4:	d004      	beq.n	80009d0 <SD_disk_initialize+0xb8>
 80009c6:	4b45      	ldr	r3, [pc, #276]	@ (8000adc <SD_disk_initialize+0x1c4>)
 80009c8:	881b      	ldrh	r3, [r3, #0]
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d1ec      	bne.n	80009a8 <SD_disk_initialize+0x90>
 80009ce:	e000      	b.n	80009d2 <SD_disk_initialize+0xba>
 80009d0:	bf00      	nop
 80009d2:	4b42      	ldr	r3, [pc, #264]	@ (8000adc <SD_disk_initialize+0x1c4>)
 80009d4:	881b      	ldrh	r3, [r3, #0]
 80009d6:	2b00      	cmp	r3, #0
 80009d8:	d062      	beq.n	8000aa0 <SD_disk_initialize+0x188>
 80009da:	2100      	movs	r1, #0
 80009dc:	207a      	movs	r0, #122	@ 0x7a
 80009de:	f7ff ff46 	bl	800086e <SD_SendCmd>
 80009e2:	4603      	mov	r3, r0
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d15b      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009e8:	2300      	movs	r3, #0
 80009ea:	73fb      	strb	r3, [r7, #15]
 80009ec:	e00c      	b.n	8000a08 <SD_disk_initialize+0xf0>
 80009ee:	7bfc      	ldrb	r4, [r7, #15]
 80009f0:	f7ff fe2e 	bl	8000650 <SPI_RxByte>
 80009f4:	4603      	mov	r3, r0
 80009f6:	461a      	mov	r2, r3
 80009f8:	f104 0310 	add.w	r3, r4, #16
 80009fc:	443b      	add	r3, r7
 80009fe:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000a02:	7bfb      	ldrb	r3, [r7, #15]
 8000a04:	3301      	adds	r3, #1
 8000a06:	73fb      	strb	r3, [r7, #15]
 8000a08:	7bfb      	ldrb	r3, [r7, #15]
 8000a0a:	2b03      	cmp	r3, #3
 8000a0c:	d9ef      	bls.n	80009ee <SD_disk_initialize+0xd6>
 8000a0e:	7a3b      	ldrb	r3, [r7, #8]
 8000a10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d001      	beq.n	8000a1c <SD_disk_initialize+0x104>
 8000a18:	230c      	movs	r3, #12
 8000a1a:	e000      	b.n	8000a1e <SD_disk_initialize+0x106>
 8000a1c:	2304      	movs	r3, #4
 8000a1e:	73bb      	strb	r3, [r7, #14]
 8000a20:	e03e      	b.n	8000aa0 <SD_disk_initialize+0x188>
 8000a22:	2100      	movs	r1, #0
 8000a24:	2077      	movs	r0, #119	@ 0x77
 8000a26:	f7ff ff22 	bl	800086e <SD_SendCmd>
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	2b01      	cmp	r3, #1
 8000a2e:	d808      	bhi.n	8000a42 <SD_disk_initialize+0x12a>
 8000a30:	2100      	movs	r1, #0
 8000a32:	2069      	movs	r0, #105	@ 0x69
 8000a34:	f7ff ff1b 	bl	800086e <SD_SendCmd>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	2b01      	cmp	r3, #1
 8000a3c:	d801      	bhi.n	8000a42 <SD_disk_initialize+0x12a>
 8000a3e:	2302      	movs	r3, #2
 8000a40:	e000      	b.n	8000a44 <SD_disk_initialize+0x12c>
 8000a42:	2301      	movs	r3, #1
 8000a44:	73bb      	strb	r3, [r7, #14]
 8000a46:	7bbb      	ldrb	r3, [r7, #14]
 8000a48:	2b02      	cmp	r3, #2
 8000a4a:	d10e      	bne.n	8000a6a <SD_disk_initialize+0x152>
 8000a4c:	2100      	movs	r1, #0
 8000a4e:	2077      	movs	r0, #119	@ 0x77
 8000a50:	f7ff ff0d 	bl	800086e <SD_SendCmd>
 8000a54:	4603      	mov	r3, r0
 8000a56:	2b01      	cmp	r3, #1
 8000a58:	d80e      	bhi.n	8000a78 <SD_disk_initialize+0x160>
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	2069      	movs	r0, #105	@ 0x69
 8000a5e:	f7ff ff06 	bl	800086e <SD_SendCmd>
 8000a62:	4603      	mov	r3, r0
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d107      	bne.n	8000a78 <SD_disk_initialize+0x160>
 8000a68:	e00c      	b.n	8000a84 <SD_disk_initialize+0x16c>
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	2041      	movs	r0, #65	@ 0x41
 8000a6e:	f7ff fefe 	bl	800086e <SD_SendCmd>
 8000a72:	4603      	mov	r3, r0
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d004      	beq.n	8000a82 <SD_disk_initialize+0x16a>
 8000a78:	4b18      	ldr	r3, [pc, #96]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000a7a:	881b      	ldrh	r3, [r3, #0]
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d1e2      	bne.n	8000a46 <SD_disk_initialize+0x12e>
 8000a80:	e000      	b.n	8000a84 <SD_disk_initialize+0x16c>
 8000a82:	bf00      	nop
 8000a84:	4b15      	ldr	r3, [pc, #84]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000a86:	881b      	ldrh	r3, [r3, #0]
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d007      	beq.n	8000a9c <SD_disk_initialize+0x184>
 8000a8c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000a90:	2050      	movs	r0, #80	@ 0x50
 8000a92:	f7ff feec 	bl	800086e <SD_SendCmd>
 8000a96:	4603      	mov	r3, r0
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d001      	beq.n	8000aa0 <SD_disk_initialize+0x188>
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	73bb      	strb	r3, [r7, #14]
 8000aa0:	4a0f      	ldr	r2, [pc, #60]	@ (8000ae0 <SD_disk_initialize+0x1c8>)
 8000aa2:	7bbb      	ldrb	r3, [r7, #14]
 8000aa4:	7013      	strb	r3, [r2, #0]
 8000aa6:	f7ff fd91 	bl	80005cc <DESELECT>
 8000aaa:	f7ff fdd1 	bl	8000650 <SPI_RxByte>
 8000aae:	7bbb      	ldrb	r3, [r7, #14]
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	d008      	beq.n	8000ac6 <SD_disk_initialize+0x1ae>
 8000ab4:	4b08      	ldr	r3, [pc, #32]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000ab6:	781b      	ldrb	r3, [r3, #0]
 8000ab8:	b2db      	uxtb	r3, r3
 8000aba:	f023 0301 	bic.w	r3, r3, #1
 8000abe:	b2da      	uxtb	r2, r3
 8000ac0:	4b05      	ldr	r3, [pc, #20]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000ac2:	701a      	strb	r2, [r3, #0]
 8000ac4:	e001      	b.n	8000aca <SD_disk_initialize+0x1b2>
 8000ac6:	f7ff fe49 	bl	800075c <SD_PowerOff>
 8000aca:	4b03      	ldr	r3, [pc, #12]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	b2db      	uxtb	r3, r3
 8000ad0:	4618      	mov	r0, r3
 8000ad2:	3714      	adds	r7, #20
 8000ad4:	46bd      	mov	sp, r7
 8000ad6:	bd90      	pop	{r4, r7, pc}
 8000ad8:	20000000 	.word	0x20000000
 8000adc:	2000a73c 	.word	0x2000a73c
 8000ae0:	2000a740 	.word	0x2000a740

08000ae4 <SD_disk_status>:
 8000ae4:	b480      	push	{r7}
 8000ae6:	b083      	sub	sp, #12
 8000ae8:	af00      	add	r7, sp, #0
 8000aea:	4603      	mov	r3, r0
 8000aec:	71fb      	strb	r3, [r7, #7]
 8000aee:	79fb      	ldrb	r3, [r7, #7]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d001      	beq.n	8000af8 <SD_disk_status+0x14>
 8000af4:	2301      	movs	r3, #1
 8000af6:	e002      	b.n	8000afe <SD_disk_status+0x1a>
 8000af8:	4b04      	ldr	r3, [pc, #16]	@ (8000b0c <SD_disk_status+0x28>)
 8000afa:	781b      	ldrb	r3, [r3, #0]
 8000afc:	b2db      	uxtb	r3, r3
 8000afe:	4618      	mov	r0, r3
 8000b00:	370c      	adds	r7, #12
 8000b02:	46bd      	mov	sp, r7
 8000b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b08:	4770      	bx	lr
 8000b0a:	bf00      	nop
 8000b0c:	20000000 	.word	0x20000000

08000b10 <SD_disk_read>:
 8000b10:	b580      	push	{r7, lr}
 8000b12:	b084      	sub	sp, #16
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	60b9      	str	r1, [r7, #8]
 8000b18:	607a      	str	r2, [r7, #4]
 8000b1a:	603b      	str	r3, [r7, #0]
 8000b1c:	4603      	mov	r3, r0
 8000b1e:	73fb      	strb	r3, [r7, #15]
 8000b20:	7bfb      	ldrb	r3, [r7, #15]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d102      	bne.n	8000b2c <SD_disk_read+0x1c>
 8000b26:	683b      	ldr	r3, [r7, #0]
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d101      	bne.n	8000b30 <SD_disk_read+0x20>
 8000b2c:	2304      	movs	r3, #4
 8000b2e:	e051      	b.n	8000bd4 <SD_disk_read+0xc4>
 8000b30:	4b2a      	ldr	r3, [pc, #168]	@ (8000bdc <SD_disk_read+0xcc>)
 8000b32:	781b      	ldrb	r3, [r3, #0]
 8000b34:	b2db      	uxtb	r3, r3
 8000b36:	f003 0301 	and.w	r3, r3, #1
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d001      	beq.n	8000b42 <SD_disk_read+0x32>
 8000b3e:	2303      	movs	r3, #3
 8000b40:	e048      	b.n	8000bd4 <SD_disk_read+0xc4>
 8000b42:	4b27      	ldr	r3, [pc, #156]	@ (8000be0 <SD_disk_read+0xd0>)
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	f003 0304 	and.w	r3, r3, #4
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d102      	bne.n	8000b54 <SD_disk_read+0x44>
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	025b      	lsls	r3, r3, #9
 8000b52:	607b      	str	r3, [r7, #4]
 8000b54:	f7ff fd2c 	bl	80005b0 <SELECT>
 8000b58:	683b      	ldr	r3, [r7, #0]
 8000b5a:	2b01      	cmp	r3, #1
 8000b5c:	d111      	bne.n	8000b82 <SD_disk_read+0x72>
 8000b5e:	6879      	ldr	r1, [r7, #4]
 8000b60:	2051      	movs	r0, #81	@ 0x51
 8000b62:	f7ff fe84 	bl	800086e <SD_SendCmd>
 8000b66:	4603      	mov	r3, r0
 8000b68:	2b00      	cmp	r3, #0
 8000b6a:	d129      	bne.n	8000bc0 <SD_disk_read+0xb0>
 8000b6c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b70:	68b8      	ldr	r0, [r7, #8]
 8000b72:	f7ff fe0b 	bl	800078c <SD_RxDataBlock>
 8000b76:	4603      	mov	r3, r0
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	d021      	beq.n	8000bc0 <SD_disk_read+0xb0>
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	603b      	str	r3, [r7, #0]
 8000b80:	e01e      	b.n	8000bc0 <SD_disk_read+0xb0>
 8000b82:	6879      	ldr	r1, [r7, #4]
 8000b84:	2052      	movs	r0, #82	@ 0x52
 8000b86:	f7ff fe72 	bl	800086e <SD_SendCmd>
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d117      	bne.n	8000bc0 <SD_disk_read+0xb0>
 8000b90:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b94:	68b8      	ldr	r0, [r7, #8]
 8000b96:	f7ff fdf9 	bl	800078c <SD_RxDataBlock>
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	d00a      	beq.n	8000bb6 <SD_disk_read+0xa6>
 8000ba0:	68bb      	ldr	r3, [r7, #8]
 8000ba2:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000ba6:	60bb      	str	r3, [r7, #8]
 8000ba8:	683b      	ldr	r3, [r7, #0]
 8000baa:	3b01      	subs	r3, #1
 8000bac:	603b      	str	r3, [r7, #0]
 8000bae:	683b      	ldr	r3, [r7, #0]
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	d1ed      	bne.n	8000b90 <SD_disk_read+0x80>
 8000bb4:	e000      	b.n	8000bb8 <SD_disk_read+0xa8>
 8000bb6:	bf00      	nop
 8000bb8:	2100      	movs	r1, #0
 8000bba:	204c      	movs	r0, #76	@ 0x4c
 8000bbc:	f7ff fe57 	bl	800086e <SD_SendCmd>
 8000bc0:	f7ff fd04 	bl	80005cc <DESELECT>
 8000bc4:	f7ff fd44 	bl	8000650 <SPI_RxByte>
 8000bc8:	683b      	ldr	r3, [r7, #0]
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	bf14      	ite	ne
 8000bce:	2301      	movne	r3, #1
 8000bd0:	2300      	moveq	r3, #0
 8000bd2:	b2db      	uxtb	r3, r3
 8000bd4:	4618      	mov	r0, r3
 8000bd6:	3710      	adds	r7, #16
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	bd80      	pop	{r7, pc}
 8000bdc:	20000000 	.word	0x20000000
 8000be0:	2000a740 	.word	0x2000a740

08000be4 <SD_disk_write>:
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b084      	sub	sp, #16
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	60b9      	str	r1, [r7, #8]
 8000bec:	607a      	str	r2, [r7, #4]
 8000bee:	603b      	str	r3, [r7, #0]
 8000bf0:	4603      	mov	r3, r0
 8000bf2:	73fb      	strb	r3, [r7, #15]
 8000bf4:	7bfb      	ldrb	r3, [r7, #15]
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d102      	bne.n	8000c00 <SD_disk_write+0x1c>
 8000bfa:	683b      	ldr	r3, [r7, #0]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d101      	bne.n	8000c04 <SD_disk_write+0x20>
 8000c00:	2304      	movs	r3, #4
 8000c02:	e06b      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c04:	4b37      	ldr	r3, [pc, #220]	@ (8000ce4 <SD_disk_write+0x100>)
 8000c06:	781b      	ldrb	r3, [r3, #0]
 8000c08:	b2db      	uxtb	r3, r3
 8000c0a:	f003 0301 	and.w	r3, r3, #1
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d001      	beq.n	8000c16 <SD_disk_write+0x32>
 8000c12:	2303      	movs	r3, #3
 8000c14:	e062      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c16:	4b33      	ldr	r3, [pc, #204]	@ (8000ce4 <SD_disk_write+0x100>)
 8000c18:	781b      	ldrb	r3, [r3, #0]
 8000c1a:	b2db      	uxtb	r3, r3
 8000c1c:	f003 0304 	and.w	r3, r3, #4
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d001      	beq.n	8000c28 <SD_disk_write+0x44>
 8000c24:	2302      	movs	r3, #2
 8000c26:	e059      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c28:	4b2f      	ldr	r3, [pc, #188]	@ (8000ce8 <SD_disk_write+0x104>)
 8000c2a:	781b      	ldrb	r3, [r3, #0]
 8000c2c:	f003 0304 	and.w	r3, r3, #4
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d102      	bne.n	8000c3a <SD_disk_write+0x56>
 8000c34:	687b      	ldr	r3, [r7, #4]
 8000c36:	025b      	lsls	r3, r3, #9
 8000c38:	607b      	str	r3, [r7, #4]
 8000c3a:	f7ff fcb9 	bl	80005b0 <SELECT>
 8000c3e:	683b      	ldr	r3, [r7, #0]
 8000c40:	2b01      	cmp	r3, #1
 8000c42:	d110      	bne.n	8000c66 <SD_disk_write+0x82>
 8000c44:	6879      	ldr	r1, [r7, #4]
 8000c46:	2058      	movs	r0, #88	@ 0x58
 8000c48:	f7ff fe11 	bl	800086e <SD_SendCmd>
 8000c4c:	4603      	mov	r3, r0
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d13a      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000c52:	21fe      	movs	r1, #254	@ 0xfe
 8000c54:	68b8      	ldr	r0, [r7, #8]
 8000c56:	f7ff fdc7 	bl	80007e8 <SD_TxDataBlock>
 8000c5a:	4603      	mov	r3, r0
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d033      	beq.n	8000cc8 <SD_disk_write+0xe4>
 8000c60:	2300      	movs	r3, #0
 8000c62:	603b      	str	r3, [r7, #0]
 8000c64:	e030      	b.n	8000cc8 <SD_disk_write+0xe4>
 8000c66:	4b20      	ldr	r3, [pc, #128]	@ (8000ce8 <SD_disk_write+0x104>)
 8000c68:	781b      	ldrb	r3, [r3, #0]
 8000c6a:	f003 0302 	and.w	r3, r3, #2
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d007      	beq.n	8000c82 <SD_disk_write+0x9e>
 8000c72:	2100      	movs	r1, #0
 8000c74:	2077      	movs	r0, #119	@ 0x77
 8000c76:	f7ff fdfa 	bl	800086e <SD_SendCmd>
 8000c7a:	6839      	ldr	r1, [r7, #0]
 8000c7c:	2057      	movs	r0, #87	@ 0x57
 8000c7e:	f7ff fdf6 	bl	800086e <SD_SendCmd>
 8000c82:	6879      	ldr	r1, [r7, #4]
 8000c84:	2059      	movs	r0, #89	@ 0x59
 8000c86:	f7ff fdf2 	bl	800086e <SD_SendCmd>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d11b      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000c90:	21fc      	movs	r1, #252	@ 0xfc
 8000c92:	68b8      	ldr	r0, [r7, #8]
 8000c94:	f7ff fda8 	bl	80007e8 <SD_TxDataBlock>
 8000c98:	4603      	mov	r3, r0
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	d00a      	beq.n	8000cb4 <SD_disk_write+0xd0>
 8000c9e:	68bb      	ldr	r3, [r7, #8]
 8000ca0:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000ca4:	60bb      	str	r3, [r7, #8]
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	3b01      	subs	r3, #1
 8000caa:	603b      	str	r3, [r7, #0]
 8000cac:	683b      	ldr	r3, [r7, #0]
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d1ee      	bne.n	8000c90 <SD_disk_write+0xac>
 8000cb2:	e000      	b.n	8000cb6 <SD_disk_write+0xd2>
 8000cb4:	bf00      	nop
 8000cb6:	21fd      	movs	r1, #253	@ 0xfd
 8000cb8:	2000      	movs	r0, #0
 8000cba:	f7ff fd95 	bl	80007e8 <SD_TxDataBlock>
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d101      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000cc4:	2301      	movs	r3, #1
 8000cc6:	603b      	str	r3, [r7, #0]
 8000cc8:	f7ff fc80 	bl	80005cc <DESELECT>
 8000ccc:	f7ff fcc0 	bl	8000650 <SPI_RxByte>
 8000cd0:	683b      	ldr	r3, [r7, #0]
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	bf14      	ite	ne
 8000cd6:	2301      	movne	r3, #1
 8000cd8:	2300      	moveq	r3, #0
 8000cda:	b2db      	uxtb	r3, r3
 8000cdc:	4618      	mov	r0, r3
 8000cde:	3710      	adds	r7, #16
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	bd80      	pop	{r7, pc}
 8000ce4:	20000000 	.word	0x20000000
 8000ce8:	2000a740 	.word	0x2000a740

08000cec <SD_disk_ioctl>:
 8000cec:	b590      	push	{r4, r7, lr}
 8000cee:	b08b      	sub	sp, #44	@ 0x2c
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	603a      	str	r2, [r7, #0]
 8000cf6:	71fb      	strb	r3, [r7, #7]
 8000cf8:	460b      	mov	r3, r1
 8000cfa:	71bb      	strb	r3, [r7, #6]
 8000cfc:	683b      	ldr	r3, [r7, #0]
 8000cfe:	623b      	str	r3, [r7, #32]
 8000d00:	79fb      	ldrb	r3, [r7, #7]
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d001      	beq.n	8000d0a <SD_disk_ioctl+0x1e>
 8000d06:	2304      	movs	r3, #4
 8000d08:	e113      	b.n	8000f32 <SD_disk_ioctl+0x246>
 8000d0a:	2301      	movs	r3, #1
 8000d0c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d10:	79bb      	ldrb	r3, [r7, #6]
 8000d12:	2b05      	cmp	r3, #5
 8000d14:	d124      	bne.n	8000d60 <SD_disk_ioctl+0x74>
 8000d16:	6a3b      	ldr	r3, [r7, #32]
 8000d18:	781b      	ldrb	r3, [r3, #0]
 8000d1a:	2b02      	cmp	r3, #2
 8000d1c:	d012      	beq.n	8000d44 <SD_disk_ioctl+0x58>
 8000d1e:	2b02      	cmp	r3, #2
 8000d20:	dc1a      	bgt.n	8000d58 <SD_disk_ioctl+0x6c>
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d002      	beq.n	8000d2c <SD_disk_ioctl+0x40>
 8000d26:	2b01      	cmp	r3, #1
 8000d28:	d006      	beq.n	8000d38 <SD_disk_ioctl+0x4c>
 8000d2a:	e015      	b.n	8000d58 <SD_disk_ioctl+0x6c>
 8000d2c:	f7ff fd16 	bl	800075c <SD_PowerOff>
 8000d30:	2300      	movs	r3, #0
 8000d32:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d36:	e0fa      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d38:	f7ff fcce 	bl	80006d8 <SD_PowerOn>
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d42:	e0f4      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d44:	6a3b      	ldr	r3, [r7, #32]
 8000d46:	1c5c      	adds	r4, r3, #1
 8000d48:	f7ff fd14 	bl	8000774 <SD_CheckPower>
 8000d4c:	4603      	mov	r3, r0
 8000d4e:	7023      	strb	r3, [r4, #0]
 8000d50:	2300      	movs	r3, #0
 8000d52:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d56:	e0ea      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d58:	2304      	movs	r3, #4
 8000d5a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d5e:	e0e6      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d60:	4b76      	ldr	r3, [pc, #472]	@ (8000f3c <SD_disk_ioctl+0x250>)
 8000d62:	781b      	ldrb	r3, [r3, #0]
 8000d64:	b2db      	uxtb	r3, r3
 8000d66:	f003 0301 	and.w	r3, r3, #1
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	d001      	beq.n	8000d72 <SD_disk_ioctl+0x86>
 8000d6e:	2303      	movs	r3, #3
 8000d70:	e0df      	b.n	8000f32 <SD_disk_ioctl+0x246>
 8000d72:	f7ff fc1d 	bl	80005b0 <SELECT>
 8000d76:	79bb      	ldrb	r3, [r7, #6]
 8000d78:	2b0d      	cmp	r3, #13
 8000d7a:	f200 80c9 	bhi.w	8000f10 <SD_disk_ioctl+0x224>
 8000d7e:	a201      	add	r2, pc, #4	@ (adr r2, 8000d84 <SD_disk_ioctl+0x98>)
 8000d80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d84:	08000e7b 	.word	0x08000e7b
 8000d88:	08000dbd 	.word	0x08000dbd
 8000d8c:	08000e6b 	.word	0x08000e6b
 8000d90:	08000f11 	.word	0x08000f11
 8000d94:	08000f11 	.word	0x08000f11
 8000d98:	08000f11 	.word	0x08000f11
 8000d9c:	08000f11 	.word	0x08000f11
 8000da0:	08000f11 	.word	0x08000f11
 8000da4:	08000f11 	.word	0x08000f11
 8000da8:	08000f11 	.word	0x08000f11
 8000dac:	08000f11 	.word	0x08000f11
 8000db0:	08000e8d 	.word	0x08000e8d
 8000db4:	08000eb1 	.word	0x08000eb1
 8000db8:	08000ed5 	.word	0x08000ed5
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	2049      	movs	r0, #73	@ 0x49
 8000dc0:	f7ff fd55 	bl	800086e <SD_SendCmd>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	f040 80a6 	bne.w	8000f18 <SD_disk_ioctl+0x22c>
 8000dcc:	f107 030c 	add.w	r3, r7, #12
 8000dd0:	2110      	movs	r1, #16
 8000dd2:	4618      	mov	r0, r3
 8000dd4:	f7ff fcda 	bl	800078c <SD_RxDataBlock>
 8000dd8:	4603      	mov	r3, r0
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	f000 809c 	beq.w	8000f18 <SD_disk_ioctl+0x22c>
 8000de0:	7b3b      	ldrb	r3, [r7, #12]
 8000de2:	099b      	lsrs	r3, r3, #6
 8000de4:	b2db      	uxtb	r3, r3
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d10d      	bne.n	8000e06 <SD_disk_ioctl+0x11a>
 8000dea:	7d7b      	ldrb	r3, [r7, #21]
 8000dec:	461a      	mov	r2, r3
 8000dee:	7d3b      	ldrb	r3, [r7, #20]
 8000df0:	021b      	lsls	r3, r3, #8
 8000df2:	b29b      	uxth	r3, r3
 8000df4:	4413      	add	r3, r2
 8000df6:	b29b      	uxth	r3, r3
 8000df8:	3301      	adds	r3, #1
 8000dfa:	83fb      	strh	r3, [r7, #30]
 8000dfc:	8bfb      	ldrh	r3, [r7, #30]
 8000dfe:	029a      	lsls	r2, r3, #10
 8000e00:	683b      	ldr	r3, [r7, #0]
 8000e02:	601a      	str	r2, [r3, #0]
 8000e04:	e02d      	b.n	8000e62 <SD_disk_ioctl+0x176>
 8000e06:	7c7b      	ldrb	r3, [r7, #17]
 8000e08:	f003 030f 	and.w	r3, r3, #15
 8000e0c:	b2da      	uxtb	r2, r3
 8000e0e:	7dbb      	ldrb	r3, [r7, #22]
 8000e10:	09db      	lsrs	r3, r3, #7
 8000e12:	b2db      	uxtb	r3, r3
 8000e14:	4413      	add	r3, r2
 8000e16:	b2da      	uxtb	r2, r3
 8000e18:	7d7b      	ldrb	r3, [r7, #21]
 8000e1a:	005b      	lsls	r3, r3, #1
 8000e1c:	b2db      	uxtb	r3, r3
 8000e1e:	f003 0306 	and.w	r3, r3, #6
 8000e22:	b2db      	uxtb	r3, r3
 8000e24:	4413      	add	r3, r2
 8000e26:	b2db      	uxtb	r3, r3
 8000e28:	3302      	adds	r3, #2
 8000e2a:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000e2e:	7d3b      	ldrb	r3, [r7, #20]
 8000e30:	099b      	lsrs	r3, r3, #6
 8000e32:	b2db      	uxtb	r3, r3
 8000e34:	461a      	mov	r2, r3
 8000e36:	7cfb      	ldrb	r3, [r7, #19]
 8000e38:	009b      	lsls	r3, r3, #2
 8000e3a:	b29b      	uxth	r3, r3
 8000e3c:	4413      	add	r3, r2
 8000e3e:	b29a      	uxth	r2, r3
 8000e40:	7cbb      	ldrb	r3, [r7, #18]
 8000e42:	029b      	lsls	r3, r3, #10
 8000e44:	b29b      	uxth	r3, r3
 8000e46:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8000e4a:	b29b      	uxth	r3, r3
 8000e4c:	4413      	add	r3, r2
 8000e4e:	b29b      	uxth	r3, r3
 8000e50:	3301      	adds	r3, #1
 8000e52:	83fb      	strh	r3, [r7, #30]
 8000e54:	8bfa      	ldrh	r2, [r7, #30]
 8000e56:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000e5a:	3b09      	subs	r3, #9
 8000e5c:	409a      	lsls	r2, r3
 8000e5e:	683b      	ldr	r3, [r7, #0]
 8000e60:	601a      	str	r2, [r3, #0]
 8000e62:	2300      	movs	r3, #0
 8000e64:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e68:	e056      	b.n	8000f18 <SD_disk_ioctl+0x22c>
 8000e6a:	683b      	ldr	r3, [r7, #0]
 8000e6c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000e70:	801a      	strh	r2, [r3, #0]
 8000e72:	2300      	movs	r3, #0
 8000e74:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e78:	e055      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000e7a:	f7ff fc13 	bl	80006a4 <SD_ReadyWait>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2bff      	cmp	r3, #255	@ 0xff
 8000e82:	d14b      	bne.n	8000f1c <SD_disk_ioctl+0x230>
 8000e84:	2300      	movs	r3, #0
 8000e86:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e8a:	e047      	b.n	8000f1c <SD_disk_ioctl+0x230>
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	2049      	movs	r0, #73	@ 0x49
 8000e90:	f7ff fced 	bl	800086e <SD_SendCmd>
 8000e94:	4603      	mov	r3, r0
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d142      	bne.n	8000f20 <SD_disk_ioctl+0x234>
 8000e9a:	2110      	movs	r1, #16
 8000e9c:	6a38      	ldr	r0, [r7, #32]
 8000e9e:	f7ff fc75 	bl	800078c <SD_RxDataBlock>
 8000ea2:	4603      	mov	r3, r0
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	d03b      	beq.n	8000f20 <SD_disk_ioctl+0x234>
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000eae:	e037      	b.n	8000f20 <SD_disk_ioctl+0x234>
 8000eb0:	2100      	movs	r1, #0
 8000eb2:	204a      	movs	r0, #74	@ 0x4a
 8000eb4:	f7ff fcdb 	bl	800086e <SD_SendCmd>
 8000eb8:	4603      	mov	r3, r0
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d132      	bne.n	8000f24 <SD_disk_ioctl+0x238>
 8000ebe:	2110      	movs	r1, #16
 8000ec0:	6a38      	ldr	r0, [r7, #32]
 8000ec2:	f7ff fc63 	bl	800078c <SD_RxDataBlock>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d02b      	beq.n	8000f24 <SD_disk_ioctl+0x238>
 8000ecc:	2300      	movs	r3, #0
 8000ece:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000ed2:	e027      	b.n	8000f24 <SD_disk_ioctl+0x238>
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	207a      	movs	r0, #122	@ 0x7a
 8000ed8:	f7ff fcc9 	bl	800086e <SD_SendCmd>
 8000edc:	4603      	mov	r3, r0
 8000ede:	2b00      	cmp	r3, #0
 8000ee0:	d116      	bne.n	8000f10 <SD_disk_ioctl+0x224>
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000ee8:	e00b      	b.n	8000f02 <SD_disk_ioctl+0x216>
 8000eea:	6a3c      	ldr	r4, [r7, #32]
 8000eec:	1c63      	adds	r3, r4, #1
 8000eee:	623b      	str	r3, [r7, #32]
 8000ef0:	f7ff fbae 	bl	8000650 <SPI_RxByte>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	7023      	strb	r3, [r4, #0]
 8000ef8:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000efc:	3301      	adds	r3, #1
 8000efe:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000f02:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000f06:	2b03      	cmp	r3, #3
 8000f08:	d9ef      	bls.n	8000eea <SD_disk_ioctl+0x1fe>
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f10:	2304      	movs	r3, #4
 8000f12:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f16:	e006      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f18:	bf00      	nop
 8000f1a:	e004      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f1c:	bf00      	nop
 8000f1e:	e002      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f20:	bf00      	nop
 8000f22:	e000      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f24:	bf00      	nop
 8000f26:	f7ff fb51 	bl	80005cc <DESELECT>
 8000f2a:	f7ff fb91 	bl	8000650 <SPI_RxByte>
 8000f2e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f32:	4618      	mov	r0, r3
 8000f34:	372c      	adds	r7, #44	@ 0x2c
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bd90      	pop	{r4, r7, pc}
 8000f3a:	bf00      	nop
 8000f3c:	20000000 	.word	0x20000000

08000f40 <LCD_Init>:
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	2201      	movs	r2, #1
 8000f46:	2101      	movs	r1, #1
 8000f48:	4878      	ldr	r0, [pc, #480]	@ (800112c <LCD_Init+0x1ec>)
 8000f4a:	f003 ffcb 	bl	8004ee4 <HAL_GPIO_WritePin>
 8000f4e:	2201      	movs	r2, #1
 8000f50:	2113      	movs	r1, #19
 8000f52:	4877      	ldr	r0, [pc, #476]	@ (8001130 <LCD_Init+0x1f0>)
 8000f54:	f003 ffc6 	bl	8004ee4 <HAL_GPIO_WritePin>
 8000f58:	2201      	movs	r2, #1
 8000f5a:	2102      	movs	r1, #2
 8000f5c:	4875      	ldr	r0, [pc, #468]	@ (8001134 <LCD_Init+0x1f4>)
 8000f5e:	f003 ffc1 	bl	8004ee4 <HAL_GPIO_WritePin>
 8000f62:	2005      	movs	r0, #5
 8000f64:	f003 f8e6 	bl	8004134 <HAL_Delay>
 8000f68:	2200      	movs	r2, #0
 8000f6a:	2102      	movs	r1, #2
 8000f6c:	4871      	ldr	r0, [pc, #452]	@ (8001134 <LCD_Init+0x1f4>)
 8000f6e:	f003 ffb9 	bl	8004ee4 <HAL_GPIO_WritePin>
 8000f72:	2014      	movs	r0, #20
 8000f74:	f003 f8de 	bl	8004134 <HAL_Delay>
 8000f78:	2201      	movs	r2, #1
 8000f7a:	2102      	movs	r1, #2
 8000f7c:	486d      	ldr	r0, [pc, #436]	@ (8001134 <LCD_Init+0x1f4>)
 8000f7e:	f003 ffb1 	bl	8004ee4 <HAL_GPIO_WritePin>
 8000f82:	2096      	movs	r0, #150	@ 0x96
 8000f84:	f003 f8d6 	bl	8004134 <HAL_Delay>
 8000f88:	2200      	movs	r2, #0
 8000f8a:	2101      	movs	r1, #1
 8000f8c:	4867      	ldr	r0, [pc, #412]	@ (800112c <LCD_Init+0x1ec>)
 8000f8e:	f003 ffa9 	bl	8004ee4 <HAL_GPIO_WritePin>
 8000f92:	20e9      	movs	r0, #233	@ 0xe9
 8000f94:	f000 f8d0 	bl	8001138 <LCD_CMD>
 8000f98:	2020      	movs	r0, #32
 8000f9a:	f000 f973 	bl	8001284 <LCD_DATA>
 8000f9e:	2011      	movs	r0, #17
 8000fa0:	f000 f8ca 	bl	8001138 <LCD_CMD>
 8000fa4:	2064      	movs	r0, #100	@ 0x64
 8000fa6:	f003 f8c5 	bl	8004134 <HAL_Delay>
 8000faa:	20d1      	movs	r0, #209	@ 0xd1
 8000fac:	f000 f8c4 	bl	8001138 <LCD_CMD>
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	f000 f967 	bl	8001284 <LCD_DATA>
 8000fb6:	2071      	movs	r0, #113	@ 0x71
 8000fb8:	f000 f964 	bl	8001284 <LCD_DATA>
 8000fbc:	2019      	movs	r0, #25
 8000fbe:	f000 f961 	bl	8001284 <LCD_DATA>
 8000fc2:	20d0      	movs	r0, #208	@ 0xd0
 8000fc4:	f000 f8b8 	bl	8001138 <LCD_CMD>
 8000fc8:	2007      	movs	r0, #7
 8000fca:	f000 f95b 	bl	8001284 <LCD_DATA>
 8000fce:	2001      	movs	r0, #1
 8000fd0:	f000 f958 	bl	8001284 <LCD_DATA>
 8000fd4:	2008      	movs	r0, #8
 8000fd6:	f000 f955 	bl	8001284 <LCD_DATA>
 8000fda:	2036      	movs	r0, #54	@ 0x36
 8000fdc:	f000 f8ac 	bl	8001138 <LCD_CMD>
 8000fe0:	20e8      	movs	r0, #232	@ 0xe8
 8000fe2:	f000 f94f 	bl	8001284 <LCD_DATA>
 8000fe6:	203a      	movs	r0, #58	@ 0x3a
 8000fe8:	f000 f8a6 	bl	8001138 <LCD_CMD>
 8000fec:	2005      	movs	r0, #5
 8000fee:	f000 f949 	bl	8001284 <LCD_DATA>
 8000ff2:	20c1      	movs	r0, #193	@ 0xc1
 8000ff4:	f000 f8a0 	bl	8001138 <LCD_CMD>
 8000ff8:	2010      	movs	r0, #16
 8000ffa:	f000 f943 	bl	8001284 <LCD_DATA>
 8000ffe:	2010      	movs	r0, #16
 8001000:	f000 f940 	bl	8001284 <LCD_DATA>
 8001004:	2002      	movs	r0, #2
 8001006:	f000 f93d 	bl	8001284 <LCD_DATA>
 800100a:	2002      	movs	r0, #2
 800100c:	f000 f93a 	bl	8001284 <LCD_DATA>
 8001010:	20c0      	movs	r0, #192	@ 0xc0
 8001012:	f000 f891 	bl	8001138 <LCD_CMD>
 8001016:	2000      	movs	r0, #0
 8001018:	f000 f934 	bl	8001284 <LCD_DATA>
 800101c:	2035      	movs	r0, #53	@ 0x35
 800101e:	f000 f931 	bl	8001284 <LCD_DATA>
 8001022:	2000      	movs	r0, #0
 8001024:	f000 f92e 	bl	8001284 <LCD_DATA>
 8001028:	2000      	movs	r0, #0
 800102a:	f000 f92b 	bl	8001284 <LCD_DATA>
 800102e:	2001      	movs	r0, #1
 8001030:	f000 f928 	bl	8001284 <LCD_DATA>
 8001034:	2002      	movs	r0, #2
 8001036:	f000 f925 	bl	8001284 <LCD_DATA>
 800103a:	20c5      	movs	r0, #197	@ 0xc5
 800103c:	f000 f87c 	bl	8001138 <LCD_CMD>
 8001040:	2004      	movs	r0, #4
 8001042:	f000 f91f 	bl	8001284 <LCD_DATA>
 8001046:	20d2      	movs	r0, #210	@ 0xd2
 8001048:	f000 f876 	bl	8001138 <LCD_CMD>
 800104c:	2001      	movs	r0, #1
 800104e:	f000 f919 	bl	8001284 <LCD_DATA>
 8001052:	2044      	movs	r0, #68	@ 0x44
 8001054:	f000 f916 	bl	8001284 <LCD_DATA>
 8001058:	20c8      	movs	r0, #200	@ 0xc8
 800105a:	f000 f86d 	bl	8001138 <LCD_CMD>
 800105e:	2004      	movs	r0, #4
 8001060:	f000 f910 	bl	8001284 <LCD_DATA>
 8001064:	2067      	movs	r0, #103	@ 0x67
 8001066:	f000 f90d 	bl	8001284 <LCD_DATA>
 800106a:	2035      	movs	r0, #53	@ 0x35
 800106c:	f000 f90a 	bl	8001284 <LCD_DATA>
 8001070:	2004      	movs	r0, #4
 8001072:	f000 f907 	bl	8001284 <LCD_DATA>
 8001076:	2008      	movs	r0, #8
 8001078:	f000 f904 	bl	8001284 <LCD_DATA>
 800107c:	2006      	movs	r0, #6
 800107e:	f000 f901 	bl	8001284 <LCD_DATA>
 8001082:	2024      	movs	r0, #36	@ 0x24
 8001084:	f000 f8fe 	bl	8001284 <LCD_DATA>
 8001088:	2001      	movs	r0, #1
 800108a:	f000 f8fb 	bl	8001284 <LCD_DATA>
 800108e:	2037      	movs	r0, #55	@ 0x37
 8001090:	f000 f8f8 	bl	8001284 <LCD_DATA>
 8001094:	2040      	movs	r0, #64	@ 0x40
 8001096:	f000 f8f5 	bl	8001284 <LCD_DATA>
 800109a:	2003      	movs	r0, #3
 800109c:	f000 f8f2 	bl	8001284 <LCD_DATA>
 80010a0:	2010      	movs	r0, #16
 80010a2:	f000 f8ef 	bl	8001284 <LCD_DATA>
 80010a6:	2008      	movs	r0, #8
 80010a8:	f000 f8ec 	bl	8001284 <LCD_DATA>
 80010ac:	2080      	movs	r0, #128	@ 0x80
 80010ae:	f000 f8e9 	bl	8001284 <LCD_DATA>
 80010b2:	2000      	movs	r0, #0
 80010b4:	f000 f8e6 	bl	8001284 <LCD_DATA>
 80010b8:	202a      	movs	r0, #42	@ 0x2a
 80010ba:	f000 f83d 	bl	8001138 <LCD_CMD>
 80010be:	2000      	movs	r0, #0
 80010c0:	f000 f8e0 	bl	8001284 <LCD_DATA>
 80010c4:	2000      	movs	r0, #0
 80010c6:	f000 f8dd 	bl	8001284 <LCD_DATA>
 80010ca:	2001      	movs	r0, #1
 80010cc:	f000 f8da 	bl	8001284 <LCD_DATA>
 80010d0:	203f      	movs	r0, #63	@ 0x3f
 80010d2:	f000 f8d7 	bl	8001284 <LCD_DATA>
 80010d6:	202b      	movs	r0, #43	@ 0x2b
 80010d8:	f000 f82e 	bl	8001138 <LCD_CMD>
 80010dc:	2000      	movs	r0, #0
 80010de:	f000 f8d1 	bl	8001284 <LCD_DATA>
 80010e2:	2000      	movs	r0, #0
 80010e4:	f000 f8ce 	bl	8001284 <LCD_DATA>
 80010e8:	2001      	movs	r0, #1
 80010ea:	f000 f8cb 	bl	8001284 <LCD_DATA>
 80010ee:	20e0      	movs	r0, #224	@ 0xe0
 80010f0:	f000 f8c8 	bl	8001284 <LCD_DATA>
 80010f4:	2029      	movs	r0, #41	@ 0x29
 80010f6:	f000 f81f 	bl	8001138 <LCD_CMD>
 80010fa:	202c      	movs	r0, #44	@ 0x2c
 80010fc:	f000 f81c 	bl	8001138 <LCD_CMD>
 8001100:	2020      	movs	r0, #32
 8001102:	f000 f819 	bl	8001138 <LCD_CMD>
 8001106:	2078      	movs	r0, #120	@ 0x78
 8001108:	f003 f814 	bl	8004134 <HAL_Delay>
 800110c:	2011      	movs	r0, #17
 800110e:	f000 f813 	bl	8001138 <LCD_CMD>
 8001112:	2078      	movs	r0, #120	@ 0x78
 8001114:	f003 f80e 	bl	8004134 <HAL_Delay>
 8001118:	2029      	movs	r0, #41	@ 0x29
 800111a:	f000 f80d 	bl	8001138 <LCD_CMD>
 800111e:	2201      	movs	r2, #1
 8001120:	2101      	movs	r1, #1
 8001122:	4802      	ldr	r0, [pc, #8]	@ (800112c <LCD_Init+0x1ec>)
 8001124:	f003 fede 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001128:	bf00      	nop
 800112a:	bd80      	pop	{r7, pc}
 800112c:	40020400 	.word	0x40020400
 8001130:	40020000 	.word	0x40020000
 8001134:	40020800 	.word	0x40020800

08001138 <LCD_CMD>:
 8001138:	b580      	push	{r7, lr}
 800113a:	b082      	sub	sp, #8
 800113c:	af00      	add	r7, sp, #0
 800113e:	4603      	mov	r3, r0
 8001140:	71fb      	strb	r3, [r7, #7]
 8001142:	2200      	movs	r2, #0
 8001144:	2110      	movs	r1, #16
 8001146:	484c      	ldr	r0, [pc, #304]	@ (8001278 <LCD_CMD+0x140>)
 8001148:	f003 fecc 	bl	8004ee4 <HAL_GPIO_WritePin>
 800114c:	2200      	movs	r2, #0
 800114e:	2102      	movs	r1, #2
 8001150:	4849      	ldr	r0, [pc, #292]	@ (8001278 <LCD_CMD+0x140>)
 8001152:	f003 fec7 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001156:	79fb      	ldrb	r3, [r7, #7]
 8001158:	f003 0301 	and.w	r3, r3, #1
 800115c:	2b00      	cmp	r3, #0
 800115e:	d006      	beq.n	800116e <LCD_CMD+0x36>
 8001160:	2201      	movs	r2, #1
 8001162:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001166:	4844      	ldr	r0, [pc, #272]	@ (8001278 <LCD_CMD+0x140>)
 8001168:	f003 febc 	bl	8004ee4 <HAL_GPIO_WritePin>
 800116c:	e005      	b.n	800117a <LCD_CMD+0x42>
 800116e:	2200      	movs	r2, #0
 8001170:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001174:	4840      	ldr	r0, [pc, #256]	@ (8001278 <LCD_CMD+0x140>)
 8001176:	f003 feb5 	bl	8004ee4 <HAL_GPIO_WritePin>
 800117a:	79fb      	ldrb	r3, [r7, #7]
 800117c:	f003 0302 	and.w	r3, r3, #2
 8001180:	2b00      	cmp	r3, #0
 8001182:	d005      	beq.n	8001190 <LCD_CMD+0x58>
 8001184:	2201      	movs	r2, #1
 8001186:	2180      	movs	r1, #128	@ 0x80
 8001188:	483c      	ldr	r0, [pc, #240]	@ (800127c <LCD_CMD+0x144>)
 800118a:	f003 feab 	bl	8004ee4 <HAL_GPIO_WritePin>
 800118e:	e004      	b.n	800119a <LCD_CMD+0x62>
 8001190:	2200      	movs	r2, #0
 8001192:	2180      	movs	r1, #128	@ 0x80
 8001194:	4839      	ldr	r0, [pc, #228]	@ (800127c <LCD_CMD+0x144>)
 8001196:	f003 fea5 	bl	8004ee4 <HAL_GPIO_WritePin>
 800119a:	79fb      	ldrb	r3, [r7, #7]
 800119c:	f003 0304 	and.w	r3, r3, #4
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d006      	beq.n	80011b2 <LCD_CMD+0x7a>
 80011a4:	2201      	movs	r2, #1
 80011a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011aa:	4833      	ldr	r0, [pc, #204]	@ (8001278 <LCD_CMD+0x140>)
 80011ac:	f003 fe9a 	bl	8004ee4 <HAL_GPIO_WritePin>
 80011b0:	e005      	b.n	80011be <LCD_CMD+0x86>
 80011b2:	2200      	movs	r2, #0
 80011b4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011b8:	482f      	ldr	r0, [pc, #188]	@ (8001278 <LCD_CMD+0x140>)
 80011ba:	f003 fe93 	bl	8004ee4 <HAL_GPIO_WritePin>
 80011be:	79fb      	ldrb	r3, [r7, #7]
 80011c0:	f003 0308 	and.w	r3, r3, #8
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d005      	beq.n	80011d4 <LCD_CMD+0x9c>
 80011c8:	2201      	movs	r2, #1
 80011ca:	2108      	movs	r1, #8
 80011cc:	482c      	ldr	r0, [pc, #176]	@ (8001280 <LCD_CMD+0x148>)
 80011ce:	f003 fe89 	bl	8004ee4 <HAL_GPIO_WritePin>
 80011d2:	e004      	b.n	80011de <LCD_CMD+0xa6>
 80011d4:	2200      	movs	r2, #0
 80011d6:	2108      	movs	r1, #8
 80011d8:	4829      	ldr	r0, [pc, #164]	@ (8001280 <LCD_CMD+0x148>)
 80011da:	f003 fe83 	bl	8004ee4 <HAL_GPIO_WritePin>
 80011de:	79fb      	ldrb	r3, [r7, #7]
 80011e0:	f003 0310 	and.w	r3, r3, #16
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d005      	beq.n	80011f4 <LCD_CMD+0xbc>
 80011e8:	2201      	movs	r2, #1
 80011ea:	2120      	movs	r1, #32
 80011ec:	4824      	ldr	r0, [pc, #144]	@ (8001280 <LCD_CMD+0x148>)
 80011ee:	f003 fe79 	bl	8004ee4 <HAL_GPIO_WritePin>
 80011f2:	e004      	b.n	80011fe <LCD_CMD+0xc6>
 80011f4:	2200      	movs	r2, #0
 80011f6:	2120      	movs	r1, #32
 80011f8:	4821      	ldr	r0, [pc, #132]	@ (8001280 <LCD_CMD+0x148>)
 80011fa:	f003 fe73 	bl	8004ee4 <HAL_GPIO_WritePin>
 80011fe:	79fb      	ldrb	r3, [r7, #7]
 8001200:	f003 0320 	and.w	r3, r3, #32
 8001204:	2b00      	cmp	r3, #0
 8001206:	d005      	beq.n	8001214 <LCD_CMD+0xdc>
 8001208:	2201      	movs	r2, #1
 800120a:	2110      	movs	r1, #16
 800120c:	481c      	ldr	r0, [pc, #112]	@ (8001280 <LCD_CMD+0x148>)
 800120e:	f003 fe69 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001212:	e004      	b.n	800121e <LCD_CMD+0xe6>
 8001214:	2200      	movs	r2, #0
 8001216:	2110      	movs	r1, #16
 8001218:	4819      	ldr	r0, [pc, #100]	@ (8001280 <LCD_CMD+0x148>)
 800121a:	f003 fe63 	bl	8004ee4 <HAL_GPIO_WritePin>
 800121e:	79fb      	ldrb	r3, [r7, #7]
 8001220:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001224:	2b00      	cmp	r3, #0
 8001226:	d006      	beq.n	8001236 <LCD_CMD+0xfe>
 8001228:	2201      	movs	r2, #1
 800122a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800122e:	4814      	ldr	r0, [pc, #80]	@ (8001280 <LCD_CMD+0x148>)
 8001230:	f003 fe58 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001234:	e005      	b.n	8001242 <LCD_CMD+0x10a>
 8001236:	2200      	movs	r2, #0
 8001238:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800123c:	4810      	ldr	r0, [pc, #64]	@ (8001280 <LCD_CMD+0x148>)
 800123e:	f003 fe51 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001242:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001246:	2b00      	cmp	r3, #0
 8001248:	da06      	bge.n	8001258 <LCD_CMD+0x120>
 800124a:	2201      	movs	r2, #1
 800124c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001250:	4809      	ldr	r0, [pc, #36]	@ (8001278 <LCD_CMD+0x140>)
 8001252:	f003 fe47 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001256:	e005      	b.n	8001264 <LCD_CMD+0x12c>
 8001258:	2200      	movs	r2, #0
 800125a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800125e:	4806      	ldr	r0, [pc, #24]	@ (8001278 <LCD_CMD+0x140>)
 8001260:	f003 fe40 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001264:	2201      	movs	r2, #1
 8001266:	2102      	movs	r1, #2
 8001268:	4803      	ldr	r0, [pc, #12]	@ (8001278 <LCD_CMD+0x140>)
 800126a:	f003 fe3b 	bl	8004ee4 <HAL_GPIO_WritePin>
 800126e:	bf00      	nop
 8001270:	3708      	adds	r7, #8
 8001272:	46bd      	mov	sp, r7
 8001274:	bd80      	pop	{r7, pc}
 8001276:	bf00      	nop
 8001278:	40020000 	.word	0x40020000
 800127c:	40020800 	.word	0x40020800
 8001280:	40020400 	.word	0x40020400

08001284 <LCD_DATA>:
 8001284:	b580      	push	{r7, lr}
 8001286:	b082      	sub	sp, #8
 8001288:	af00      	add	r7, sp, #0
 800128a:	4603      	mov	r3, r0
 800128c:	71fb      	strb	r3, [r7, #7]
 800128e:	2201      	movs	r2, #1
 8001290:	2110      	movs	r1, #16
 8001292:	484c      	ldr	r0, [pc, #304]	@ (80013c4 <LCD_DATA+0x140>)
 8001294:	f003 fe26 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001298:	2200      	movs	r2, #0
 800129a:	2102      	movs	r1, #2
 800129c:	4849      	ldr	r0, [pc, #292]	@ (80013c4 <LCD_DATA+0x140>)
 800129e:	f003 fe21 	bl	8004ee4 <HAL_GPIO_WritePin>
 80012a2:	79fb      	ldrb	r3, [r7, #7]
 80012a4:	f003 0301 	and.w	r3, r3, #1
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d006      	beq.n	80012ba <LCD_DATA+0x36>
 80012ac:	2201      	movs	r2, #1
 80012ae:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80012b2:	4844      	ldr	r0, [pc, #272]	@ (80013c4 <LCD_DATA+0x140>)
 80012b4:	f003 fe16 	bl	8004ee4 <HAL_GPIO_WritePin>
 80012b8:	e005      	b.n	80012c6 <LCD_DATA+0x42>
 80012ba:	2200      	movs	r2, #0
 80012bc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80012c0:	4840      	ldr	r0, [pc, #256]	@ (80013c4 <LCD_DATA+0x140>)
 80012c2:	f003 fe0f 	bl	8004ee4 <HAL_GPIO_WritePin>
 80012c6:	79fb      	ldrb	r3, [r7, #7]
 80012c8:	f003 0302 	and.w	r3, r3, #2
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d005      	beq.n	80012dc <LCD_DATA+0x58>
 80012d0:	2201      	movs	r2, #1
 80012d2:	2180      	movs	r1, #128	@ 0x80
 80012d4:	483c      	ldr	r0, [pc, #240]	@ (80013c8 <LCD_DATA+0x144>)
 80012d6:	f003 fe05 	bl	8004ee4 <HAL_GPIO_WritePin>
 80012da:	e004      	b.n	80012e6 <LCD_DATA+0x62>
 80012dc:	2200      	movs	r2, #0
 80012de:	2180      	movs	r1, #128	@ 0x80
 80012e0:	4839      	ldr	r0, [pc, #228]	@ (80013c8 <LCD_DATA+0x144>)
 80012e2:	f003 fdff 	bl	8004ee4 <HAL_GPIO_WritePin>
 80012e6:	79fb      	ldrb	r3, [r7, #7]
 80012e8:	f003 0304 	and.w	r3, r3, #4
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d006      	beq.n	80012fe <LCD_DATA+0x7a>
 80012f0:	2201      	movs	r2, #1
 80012f2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80012f6:	4833      	ldr	r0, [pc, #204]	@ (80013c4 <LCD_DATA+0x140>)
 80012f8:	f003 fdf4 	bl	8004ee4 <HAL_GPIO_WritePin>
 80012fc:	e005      	b.n	800130a <LCD_DATA+0x86>
 80012fe:	2200      	movs	r2, #0
 8001300:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001304:	482f      	ldr	r0, [pc, #188]	@ (80013c4 <LCD_DATA+0x140>)
 8001306:	f003 fded 	bl	8004ee4 <HAL_GPIO_WritePin>
 800130a:	79fb      	ldrb	r3, [r7, #7]
 800130c:	f003 0308 	and.w	r3, r3, #8
 8001310:	2b00      	cmp	r3, #0
 8001312:	d005      	beq.n	8001320 <LCD_DATA+0x9c>
 8001314:	2201      	movs	r2, #1
 8001316:	2108      	movs	r1, #8
 8001318:	482c      	ldr	r0, [pc, #176]	@ (80013cc <LCD_DATA+0x148>)
 800131a:	f003 fde3 	bl	8004ee4 <HAL_GPIO_WritePin>
 800131e:	e004      	b.n	800132a <LCD_DATA+0xa6>
 8001320:	2200      	movs	r2, #0
 8001322:	2108      	movs	r1, #8
 8001324:	4829      	ldr	r0, [pc, #164]	@ (80013cc <LCD_DATA+0x148>)
 8001326:	f003 fddd 	bl	8004ee4 <HAL_GPIO_WritePin>
 800132a:	79fb      	ldrb	r3, [r7, #7]
 800132c:	f003 0310 	and.w	r3, r3, #16
 8001330:	2b00      	cmp	r3, #0
 8001332:	d005      	beq.n	8001340 <LCD_DATA+0xbc>
 8001334:	2201      	movs	r2, #1
 8001336:	2120      	movs	r1, #32
 8001338:	4824      	ldr	r0, [pc, #144]	@ (80013cc <LCD_DATA+0x148>)
 800133a:	f003 fdd3 	bl	8004ee4 <HAL_GPIO_WritePin>
 800133e:	e004      	b.n	800134a <LCD_DATA+0xc6>
 8001340:	2200      	movs	r2, #0
 8001342:	2120      	movs	r1, #32
 8001344:	4821      	ldr	r0, [pc, #132]	@ (80013cc <LCD_DATA+0x148>)
 8001346:	f003 fdcd 	bl	8004ee4 <HAL_GPIO_WritePin>
 800134a:	79fb      	ldrb	r3, [r7, #7]
 800134c:	f003 0320 	and.w	r3, r3, #32
 8001350:	2b00      	cmp	r3, #0
 8001352:	d005      	beq.n	8001360 <LCD_DATA+0xdc>
 8001354:	2201      	movs	r2, #1
 8001356:	2110      	movs	r1, #16
 8001358:	481c      	ldr	r0, [pc, #112]	@ (80013cc <LCD_DATA+0x148>)
 800135a:	f003 fdc3 	bl	8004ee4 <HAL_GPIO_WritePin>
 800135e:	e004      	b.n	800136a <LCD_DATA+0xe6>
 8001360:	2200      	movs	r2, #0
 8001362:	2110      	movs	r1, #16
 8001364:	4819      	ldr	r0, [pc, #100]	@ (80013cc <LCD_DATA+0x148>)
 8001366:	f003 fdbd 	bl	8004ee4 <HAL_GPIO_WritePin>
 800136a:	79fb      	ldrb	r3, [r7, #7]
 800136c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001370:	2b00      	cmp	r3, #0
 8001372:	d006      	beq.n	8001382 <LCD_DATA+0xfe>
 8001374:	2201      	movs	r2, #1
 8001376:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800137a:	4814      	ldr	r0, [pc, #80]	@ (80013cc <LCD_DATA+0x148>)
 800137c:	f003 fdb2 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001380:	e005      	b.n	800138e <LCD_DATA+0x10a>
 8001382:	2200      	movs	r2, #0
 8001384:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001388:	4810      	ldr	r0, [pc, #64]	@ (80013cc <LCD_DATA+0x148>)
 800138a:	f003 fdab 	bl	8004ee4 <HAL_GPIO_WritePin>
 800138e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001392:	2b00      	cmp	r3, #0
 8001394:	da06      	bge.n	80013a4 <LCD_DATA+0x120>
 8001396:	2201      	movs	r2, #1
 8001398:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800139c:	4809      	ldr	r0, [pc, #36]	@ (80013c4 <LCD_DATA+0x140>)
 800139e:	f003 fda1 	bl	8004ee4 <HAL_GPIO_WritePin>
 80013a2:	e005      	b.n	80013b0 <LCD_DATA+0x12c>
 80013a4:	2200      	movs	r2, #0
 80013a6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013aa:	4806      	ldr	r0, [pc, #24]	@ (80013c4 <LCD_DATA+0x140>)
 80013ac:	f003 fd9a 	bl	8004ee4 <HAL_GPIO_WritePin>
 80013b0:	2201      	movs	r2, #1
 80013b2:	2102      	movs	r1, #2
 80013b4:	4803      	ldr	r0, [pc, #12]	@ (80013c4 <LCD_DATA+0x140>)
 80013b6:	f003 fd95 	bl	8004ee4 <HAL_GPIO_WritePin>
 80013ba:	bf00      	nop
 80013bc:	3708      	adds	r7, #8
 80013be:	46bd      	mov	sp, r7
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	40020000 	.word	0x40020000
 80013c8:	40020800 	.word	0x40020800
 80013cc:	40020400 	.word	0x40020400

080013d0 <SetWindows>:
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b084      	sub	sp, #16
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	60f8      	str	r0, [r7, #12]
 80013d8:	60b9      	str	r1, [r7, #8]
 80013da:	607a      	str	r2, [r7, #4]
 80013dc:	603b      	str	r3, [r7, #0]
 80013de:	202a      	movs	r0, #42	@ 0x2a
 80013e0:	f7ff feaa 	bl	8001138 <LCD_CMD>
 80013e4:	68fb      	ldr	r3, [r7, #12]
 80013e6:	0a1b      	lsrs	r3, r3, #8
 80013e8:	b2db      	uxtb	r3, r3
 80013ea:	4618      	mov	r0, r3
 80013ec:	f7ff ff4a 	bl	8001284 <LCD_DATA>
 80013f0:	68fb      	ldr	r3, [r7, #12]
 80013f2:	b2db      	uxtb	r3, r3
 80013f4:	4618      	mov	r0, r3
 80013f6:	f7ff ff45 	bl	8001284 <LCD_DATA>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	0a1b      	lsrs	r3, r3, #8
 80013fe:	b2db      	uxtb	r3, r3
 8001400:	4618      	mov	r0, r3
 8001402:	f7ff ff3f 	bl	8001284 <LCD_DATA>
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	b2db      	uxtb	r3, r3
 800140a:	4618      	mov	r0, r3
 800140c:	f7ff ff3a 	bl	8001284 <LCD_DATA>
 8001410:	202b      	movs	r0, #43	@ 0x2b
 8001412:	f7ff fe91 	bl	8001138 <LCD_CMD>
 8001416:	68bb      	ldr	r3, [r7, #8]
 8001418:	0a1b      	lsrs	r3, r3, #8
 800141a:	b2db      	uxtb	r3, r3
 800141c:	4618      	mov	r0, r3
 800141e:	f7ff ff31 	bl	8001284 <LCD_DATA>
 8001422:	68bb      	ldr	r3, [r7, #8]
 8001424:	b2db      	uxtb	r3, r3
 8001426:	4618      	mov	r0, r3
 8001428:	f7ff ff2c 	bl	8001284 <LCD_DATA>
 800142c:	683b      	ldr	r3, [r7, #0]
 800142e:	0a1b      	lsrs	r3, r3, #8
 8001430:	b2db      	uxtb	r3, r3
 8001432:	4618      	mov	r0, r3
 8001434:	f7ff ff26 	bl	8001284 <LCD_DATA>
 8001438:	683b      	ldr	r3, [r7, #0]
 800143a:	b2db      	uxtb	r3, r3
 800143c:	4618      	mov	r0, r3
 800143e:	f7ff ff21 	bl	8001284 <LCD_DATA>
 8001442:	202c      	movs	r0, #44	@ 0x2c
 8001444:	f7ff fe78 	bl	8001138 <LCD_CMD>
 8001448:	bf00      	nop
 800144a:	3710      	adds	r7, #16
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}

08001450 <LCD_Clear>:
 8001450:	b580      	push	{r7, lr}
 8001452:	b084      	sub	sp, #16
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	202c      	movs	r0, #44	@ 0x2c
 800145a:	f7ff fe6d 	bl	8001138 <LCD_CMD>
 800145e:	2201      	movs	r2, #1
 8001460:	2110      	movs	r1, #16
 8001462:	481b      	ldr	r0, [pc, #108]	@ (80014d0 <LCD_Clear+0x80>)
 8001464:	f003 fd3e 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001468:	2200      	movs	r2, #0
 800146a:	2101      	movs	r1, #1
 800146c:	4819      	ldr	r0, [pc, #100]	@ (80014d4 <LCD_Clear+0x84>)
 800146e:	f003 fd39 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001472:	23ef      	movs	r3, #239	@ 0xef
 8001474:	f240 123f 	movw	r2, #319	@ 0x13f
 8001478:	2100      	movs	r1, #0
 800147a:	2000      	movs	r0, #0
 800147c:	f7ff ffa8 	bl	80013d0 <SetWindows>
 8001480:	2300      	movs	r3, #0
 8001482:	60fb      	str	r3, [r7, #12]
 8001484:	e016      	b.n	80014b4 <LCD_Clear+0x64>
 8001486:	2300      	movs	r3, #0
 8001488:	60bb      	str	r3, [r7, #8]
 800148a:	e00d      	b.n	80014a8 <LCD_Clear+0x58>
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	0a1b      	lsrs	r3, r3, #8
 8001490:	b2db      	uxtb	r3, r3
 8001492:	4618      	mov	r0, r3
 8001494:	f7ff fef6 	bl	8001284 <LCD_DATA>
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	b2db      	uxtb	r3, r3
 800149c:	4618      	mov	r0, r3
 800149e:	f7ff fef1 	bl	8001284 <LCD_DATA>
 80014a2:	68bb      	ldr	r3, [r7, #8]
 80014a4:	3301      	adds	r3, #1
 80014a6:	60bb      	str	r3, [r7, #8]
 80014a8:	68bb      	ldr	r3, [r7, #8]
 80014aa:	2bef      	cmp	r3, #239	@ 0xef
 80014ac:	d9ee      	bls.n	800148c <LCD_Clear+0x3c>
 80014ae:	68fb      	ldr	r3, [r7, #12]
 80014b0:	3301      	adds	r3, #1
 80014b2:	60fb      	str	r3, [r7, #12]
 80014b4:	68fb      	ldr	r3, [r7, #12]
 80014b6:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80014ba:	d3e4      	bcc.n	8001486 <LCD_Clear+0x36>
 80014bc:	2201      	movs	r2, #1
 80014be:	2101      	movs	r1, #1
 80014c0:	4804      	ldr	r0, [pc, #16]	@ (80014d4 <LCD_Clear+0x84>)
 80014c2:	f003 fd0f 	bl	8004ee4 <HAL_GPIO_WritePin>
 80014c6:	bf00      	nop
 80014c8:	3710      	adds	r7, #16
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}
 80014ce:	bf00      	nop
 80014d0:	40020000 	.word	0x40020000
 80014d4:	40020400 	.word	0x40020400

080014d8 <FillRect>:
 80014d8:	b580      	push	{r7, lr}
 80014da:	b08a      	sub	sp, #40	@ 0x28
 80014dc:	af00      	add	r7, sp, #0
 80014de:	60f8      	str	r0, [r7, #12]
 80014e0:	60b9      	str	r1, [r7, #8]
 80014e2:	607a      	str	r2, [r7, #4]
 80014e4:	603b      	str	r3, [r7, #0]
 80014e6:	202c      	movs	r0, #44	@ 0x2c
 80014e8:	f7ff fe26 	bl	8001138 <LCD_CMD>
 80014ec:	2201      	movs	r2, #1
 80014ee:	2110      	movs	r1, #16
 80014f0:	4824      	ldr	r0, [pc, #144]	@ (8001584 <FillRect+0xac>)
 80014f2:	f003 fcf7 	bl	8004ee4 <HAL_GPIO_WritePin>
 80014f6:	2200      	movs	r2, #0
 80014f8:	2101      	movs	r1, #1
 80014fa:	4823      	ldr	r0, [pc, #140]	@ (8001588 <FillRect+0xb0>)
 80014fc:	f003 fcf2 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001500:	68fa      	ldr	r2, [r7, #12]
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	4413      	add	r3, r2
 8001506:	61bb      	str	r3, [r7, #24]
 8001508:	68ba      	ldr	r2, [r7, #8]
 800150a:	683b      	ldr	r3, [r7, #0]
 800150c:	4413      	add	r3, r2
 800150e:	617b      	str	r3, [r7, #20]
 8001510:	69bb      	ldr	r3, [r7, #24]
 8001512:	1e5a      	subs	r2, r3, #1
 8001514:	697b      	ldr	r3, [r7, #20]
 8001516:	3b01      	subs	r3, #1
 8001518:	68b9      	ldr	r1, [r7, #8]
 800151a:	68f8      	ldr	r0, [r7, #12]
 800151c:	f7ff ff58 	bl	80013d0 <SetWindows>
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	683a      	ldr	r2, [r7, #0]
 8001524:	fb02 f303 	mul.w	r3, r2, r3
 8001528:	005b      	lsls	r3, r3, #1
 800152a:	3b01      	subs	r3, #1
 800152c:	627b      	str	r3, [r7, #36]	@ 0x24
 800152e:	2300      	movs	r3, #0
 8001530:	623b      	str	r3, [r7, #32]
 8001532:	e01a      	b.n	800156a <FillRect+0x92>
 8001534:	2300      	movs	r3, #0
 8001536:	61fb      	str	r3, [r7, #28]
 8001538:	e010      	b.n	800155c <FillRect+0x84>
 800153a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800153c:	0a1b      	lsrs	r3, r3, #8
 800153e:	b2db      	uxtb	r3, r3
 8001540:	4618      	mov	r0, r3
 8001542:	f7ff fe9f 	bl	8001284 <LCD_DATA>
 8001546:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001548:	b2db      	uxtb	r3, r3
 800154a:	4618      	mov	r0, r3
 800154c:	f7ff fe9a 	bl	8001284 <LCD_DATA>
 8001550:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001552:	3b02      	subs	r3, #2
 8001554:	627b      	str	r3, [r7, #36]	@ 0x24
 8001556:	69fb      	ldr	r3, [r7, #28]
 8001558:	3301      	adds	r3, #1
 800155a:	61fb      	str	r3, [r7, #28]
 800155c:	69fb      	ldr	r3, [r7, #28]
 800155e:	683a      	ldr	r2, [r7, #0]
 8001560:	429a      	cmp	r2, r3
 8001562:	d8ea      	bhi.n	800153a <FillRect+0x62>
 8001564:	6a3b      	ldr	r3, [r7, #32]
 8001566:	3301      	adds	r3, #1
 8001568:	623b      	str	r3, [r7, #32]
 800156a:	6a3b      	ldr	r3, [r7, #32]
 800156c:	687a      	ldr	r2, [r7, #4]
 800156e:	429a      	cmp	r2, r3
 8001570:	d8e0      	bhi.n	8001534 <FillRect+0x5c>
 8001572:	2201      	movs	r2, #1
 8001574:	2101      	movs	r1, #1
 8001576:	4804      	ldr	r0, [pc, #16]	@ (8001588 <FillRect+0xb0>)
 8001578:	f003 fcb4 	bl	8004ee4 <HAL_GPIO_WritePin>
 800157c:	bf00      	nop
 800157e:	3728      	adds	r7, #40	@ 0x28
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}
 8001584:	40020000 	.word	0x40020000
 8001588:	40020400 	.word	0x40020400

0800158c <LCD_Print>:
 800158c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001590:	b093      	sub	sp, #76	@ 0x4c
 8001592:	af00      	add	r7, sp, #0
 8001594:	60f8      	str	r0, [r7, #12]
 8001596:	60b9      	str	r1, [r7, #8]
 8001598:	607a      	str	r2, [r7, #4]
 800159a:	603b      	str	r3, [r7, #0]
 800159c:	466b      	mov	r3, sp
 800159e:	461e      	mov	r6, r3
 80015a0:	683b      	ldr	r3, [r7, #0]
 80015a2:	2b01      	cmp	r3, #1
 80015a4:	d103      	bne.n	80015ae <LCD_Print+0x22>
 80015a6:	2308      	movs	r3, #8
 80015a8:	647b      	str	r3, [r7, #68]	@ 0x44
 80015aa:	230c      	movs	r3, #12
 80015ac:	643b      	str	r3, [r7, #64]	@ 0x40
 80015ae:	683b      	ldr	r3, [r7, #0]
 80015b0:	2b02      	cmp	r3, #2
 80015b2:	d103      	bne.n	80015bc <LCD_Print+0x30>
 80015b4:	2310      	movs	r3, #16
 80015b6:	647b      	str	r3, [r7, #68]	@ 0x44
 80015b8:	2310      	movs	r3, #16
 80015ba:	643b      	str	r3, [r7, #64]	@ 0x40
 80015bc:	683b      	ldr	r3, [r7, #0]
 80015be:	2b03      	cmp	r3, #3
 80015c0:	d103      	bne.n	80015ca <LCD_Print+0x3e>
 80015c2:	2320      	movs	r3, #32
 80015c4:	647b      	str	r3, [r7, #68]	@ 0x44
 80015c6:	2332      	movs	r3, #50	@ 0x32
 80015c8:	643b      	str	r3, [r7, #64]	@ 0x40
 80015ca:	68f8      	ldr	r0, [r7, #12]
 80015cc:	f7fe fe20 	bl	8000210 <strlen>
 80015d0:	4603      	mov	r3, r0
 80015d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015d6:	1c59      	adds	r1, r3, #1
 80015d8:	1e4b      	subs	r3, r1, #1
 80015da:	623b      	str	r3, [r7, #32]
 80015dc:	460a      	mov	r2, r1
 80015de:	2300      	movs	r3, #0
 80015e0:	4690      	mov	r8, r2
 80015e2:	4699      	mov	r9, r3
 80015e4:	f04f 0200 	mov.w	r2, #0
 80015e8:	f04f 0300 	mov.w	r3, #0
 80015ec:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80015f0:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80015f4:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80015f8:	460a      	mov	r2, r1
 80015fa:	2300      	movs	r3, #0
 80015fc:	4614      	mov	r4, r2
 80015fe:	461d      	mov	r5, r3
 8001600:	f04f 0200 	mov.w	r2, #0
 8001604:	f04f 0300 	mov.w	r3, #0
 8001608:	00eb      	lsls	r3, r5, #3
 800160a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800160e:	00e2      	lsls	r2, r4, #3
 8001610:	460b      	mov	r3, r1
 8001612:	3307      	adds	r3, #7
 8001614:	08db      	lsrs	r3, r3, #3
 8001616:	00db      	lsls	r3, r3, #3
 8001618:	ebad 0d03 	sub.w	sp, sp, r3
 800161c:	466b      	mov	r3, sp
 800161e:	3300      	adds	r3, #0
 8001620:	61fb      	str	r3, [r7, #28]
 8001622:	2300      	movs	r3, #0
 8001624:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001626:	e00b      	b.n	8001640 <LCD_Print+0xb4>
 8001628:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800162a:	68fa      	ldr	r2, [r7, #12]
 800162c:	4413      	add	r3, r2
 800162e:	7819      	ldrb	r1, [r3, #0]
 8001630:	69fa      	ldr	r2, [r7, #28]
 8001632:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001634:	4413      	add	r3, r2
 8001636:	460a      	mov	r2, r1
 8001638:	701a      	strb	r2, [r3, #0]
 800163a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800163c:	3301      	adds	r3, #1
 800163e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001640:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001642:	68fa      	ldr	r2, [r7, #12]
 8001644:	4413      	add	r3, r2
 8001646:	781b      	ldrb	r3, [r3, #0]
 8001648:	2b00      	cmp	r3, #0
 800164a:	d1ed      	bne.n	8001628 <LCD_Print+0x9c>
 800164c:	2300      	movs	r3, #0
 800164e:	637b      	str	r3, [r7, #52]	@ 0x34
 8001650:	e077      	b.n	8001742 <LCD_Print+0x1b6>
 8001652:	69fa      	ldr	r2, [r7, #28]
 8001654:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001656:	4413      	add	r3, r2
 8001658:	781b      	ldrb	r3, [r3, #0]
 800165a:	76fb      	strb	r3, [r7, #27]
 800165c:	7efb      	ldrb	r3, [r7, #27]
 800165e:	617b      	str	r3, [r7, #20]
 8001660:	2200      	movs	r2, #0
 8001662:	2101      	movs	r1, #1
 8001664:	483c      	ldr	r0, [pc, #240]	@ (8001758 <LCD_Print+0x1cc>)
 8001666:	f003 fc3d 	bl	8004ee4 <HAL_GPIO_WritePin>
 800166a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800166c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800166e:	fb03 f202 	mul.w	r2, r3, r2
 8001672:	68bb      	ldr	r3, [r7, #8]
 8001674:	4413      	add	r3, r2
 8001676:	4618      	mov	r0, r3
 8001678:	6879      	ldr	r1, [r7, #4]
 800167a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800167c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800167e:	fb03 f202 	mul.w	r2, r3, r2
 8001682:	68bb      	ldr	r3, [r7, #8]
 8001684:	441a      	add	r2, r3
 8001686:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001688:	4413      	add	r3, r2
 800168a:	3b01      	subs	r3, #1
 800168c:	461c      	mov	r4, r3
 800168e:	687a      	ldr	r2, [r7, #4]
 8001690:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001692:	4413      	add	r3, r2
 8001694:	4622      	mov	r2, r4
 8001696:	f7ff fe9b 	bl	80013d0 <SetWindows>
 800169a:	2300      	movs	r3, #0
 800169c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800169e:	e044      	b.n	800172a <LCD_Print+0x19e>
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	2b01      	cmp	r3, #1
 80016a4:	d10b      	bne.n	80016be <LCD_Print+0x132>
 80016a6:	697b      	ldr	r3, [r7, #20]
 80016a8:	3b20      	subs	r3, #32
 80016aa:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80016ac:	fb02 f303 	mul.w	r3, r2, r3
 80016b0:	461a      	mov	r2, r3
 80016b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016b4:	4413      	add	r3, r2
 80016b6:	4a29      	ldr	r2, [pc, #164]	@ (800175c <LCD_Print+0x1d0>)
 80016b8:	4413      	add	r3, r2
 80016ba:	881b      	ldrh	r3, [r3, #0]
 80016bc:	633b      	str	r3, [r7, #48]	@ 0x30
 80016be:	683b      	ldr	r3, [r7, #0]
 80016c0:	2b02      	cmp	r3, #2
 80016c2:	d10c      	bne.n	80016de <LCD_Print+0x152>
 80016c4:	697b      	ldr	r3, [r7, #20]
 80016c6:	3b20      	subs	r3, #32
 80016c8:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80016ca:	fb02 f303 	mul.w	r3, r2, r3
 80016ce:	461a      	mov	r2, r3
 80016d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016d2:	4413      	add	r3, r2
 80016d4:	005b      	lsls	r3, r3, #1
 80016d6:	4a22      	ldr	r2, [pc, #136]	@ (8001760 <LCD_Print+0x1d4>)
 80016d8:	4413      	add	r3, r2
 80016da:	881b      	ldrh	r3, [r3, #0]
 80016dc:	633b      	str	r3, [r7, #48]	@ 0x30
 80016de:	2301      	movs	r3, #1
 80016e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80016e2:	e01b      	b.n	800171c <LCD_Print+0x190>
 80016e4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80016e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80016e8:	1ad3      	subs	r3, r2, r3
 80016ea:	2201      	movs	r2, #1
 80016ec:	409a      	lsls	r2, r3
 80016ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80016f0:	4013      	ands	r3, r2
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	dd02      	ble.n	80016fc <LCD_Print+0x170>
 80016f6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80016f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80016fa:	e001      	b.n	8001700 <LCD_Print+0x174>
 80016fc:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80016fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001700:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001702:	121b      	asrs	r3, r3, #8
 8001704:	b2db      	uxtb	r3, r3
 8001706:	4618      	mov	r0, r3
 8001708:	f7ff fdbc 	bl	8001284 <LCD_DATA>
 800170c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800170e:	b2db      	uxtb	r3, r3
 8001710:	4618      	mov	r0, r3
 8001712:	f7ff fdb7 	bl	8001284 <LCD_DATA>
 8001716:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001718:	3301      	adds	r3, #1
 800171a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800171c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800171e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001720:	429a      	cmp	r2, r3
 8001722:	dadf      	bge.n	80016e4 <LCD_Print+0x158>
 8001724:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001726:	3301      	adds	r3, #1
 8001728:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800172a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800172c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800172e:	429a      	cmp	r2, r3
 8001730:	dbb6      	blt.n	80016a0 <LCD_Print+0x114>
 8001732:	2201      	movs	r2, #1
 8001734:	2101      	movs	r1, #1
 8001736:	4808      	ldr	r0, [pc, #32]	@ (8001758 <LCD_Print+0x1cc>)
 8001738:	f003 fbd4 	bl	8004ee4 <HAL_GPIO_WritePin>
 800173c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800173e:	3301      	adds	r3, #1
 8001740:	637b      	str	r3, [r7, #52]	@ 0x34
 8001742:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8001744:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001746:	429a      	cmp	r2, r3
 8001748:	db83      	blt.n	8001652 <LCD_Print+0xc6>
 800174a:	46b5      	mov	sp, r6
 800174c:	bf00      	nop
 800174e:	374c      	adds	r7, #76	@ 0x4c
 8001750:	46bd      	mov	sp, r7
 8001752:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001756:	bf00      	nop
 8001758:	40020400 	.word	0x40020400
 800175c:	08008144 	.word	0x08008144
 8001760:	080085b8 	.word	0x080085b8

08001764 <LCD_Bitmap>:
 8001764:	b580      	push	{r7, lr}
 8001766:	b08a      	sub	sp, #40	@ 0x28
 8001768:	af00      	add	r7, sp, #0
 800176a:	60f8      	str	r0, [r7, #12]
 800176c:	60b9      	str	r1, [r7, #8]
 800176e:	607a      	str	r2, [r7, #4]
 8001770:	603b      	str	r3, [r7, #0]
 8001772:	202c      	movs	r0, #44	@ 0x2c
 8001774:	f7ff fce0 	bl	8001138 <LCD_CMD>
 8001778:	2201      	movs	r2, #1
 800177a:	2110      	movs	r1, #16
 800177c:	4824      	ldr	r0, [pc, #144]	@ (8001810 <LCD_Bitmap+0xac>)
 800177e:	f003 fbb1 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001782:	2200      	movs	r2, #0
 8001784:	2101      	movs	r1, #1
 8001786:	4823      	ldr	r0, [pc, #140]	@ (8001814 <LCD_Bitmap+0xb0>)
 8001788:	f003 fbac 	bl	8004ee4 <HAL_GPIO_WritePin>
 800178c:	68fa      	ldr	r2, [r7, #12]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	4413      	add	r3, r2
 8001792:	61bb      	str	r3, [r7, #24]
 8001794:	68ba      	ldr	r2, [r7, #8]
 8001796:	683b      	ldr	r3, [r7, #0]
 8001798:	4413      	add	r3, r2
 800179a:	617b      	str	r3, [r7, #20]
 800179c:	69bb      	ldr	r3, [r7, #24]
 800179e:	1e5a      	subs	r2, r3, #1
 80017a0:	697b      	ldr	r3, [r7, #20]
 80017a2:	3b01      	subs	r3, #1
 80017a4:	68b9      	ldr	r1, [r7, #8]
 80017a6:	68f8      	ldr	r0, [r7, #12]
 80017a8:	f7ff fe12 	bl	80013d0 <SetWindows>
 80017ac:	2300      	movs	r3, #0
 80017ae:	627b      	str	r3, [r7, #36]	@ 0x24
 80017b0:	2300      	movs	r3, #0
 80017b2:	623b      	str	r3, [r7, #32]
 80017b4:	e01e      	b.n	80017f4 <LCD_Bitmap+0x90>
 80017b6:	2300      	movs	r3, #0
 80017b8:	61fb      	str	r3, [r7, #28]
 80017ba:	e014      	b.n	80017e6 <LCD_Bitmap+0x82>
 80017bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80017be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017c0:	4413      	add	r3, r2
 80017c2:	781b      	ldrb	r3, [r3, #0]
 80017c4:	4618      	mov	r0, r3
 80017c6:	f7ff fd5d 	bl	8001284 <LCD_DATA>
 80017ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017cc:	3301      	adds	r3, #1
 80017ce:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80017d0:	4413      	add	r3, r2
 80017d2:	781b      	ldrb	r3, [r3, #0]
 80017d4:	4618      	mov	r0, r3
 80017d6:	f7ff fd55 	bl	8001284 <LCD_DATA>
 80017da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017dc:	3302      	adds	r3, #2
 80017de:	627b      	str	r3, [r7, #36]	@ 0x24
 80017e0:	69fb      	ldr	r3, [r7, #28]
 80017e2:	3301      	adds	r3, #1
 80017e4:	61fb      	str	r3, [r7, #28]
 80017e6:	69fb      	ldr	r3, [r7, #28]
 80017e8:	683a      	ldr	r2, [r7, #0]
 80017ea:	429a      	cmp	r2, r3
 80017ec:	d8e6      	bhi.n	80017bc <LCD_Bitmap+0x58>
 80017ee:	6a3b      	ldr	r3, [r7, #32]
 80017f0:	3301      	adds	r3, #1
 80017f2:	623b      	str	r3, [r7, #32]
 80017f4:	6a3b      	ldr	r3, [r7, #32]
 80017f6:	687a      	ldr	r2, [r7, #4]
 80017f8:	429a      	cmp	r2, r3
 80017fa:	d8dc      	bhi.n	80017b6 <LCD_Bitmap+0x52>
 80017fc:	2201      	movs	r2, #1
 80017fe:	2101      	movs	r1, #1
 8001800:	4804      	ldr	r0, [pc, #16]	@ (8001814 <LCD_Bitmap+0xb0>)
 8001802:	f003 fb6f 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001806:	bf00      	nop
 8001808:	3728      	adds	r7, #40	@ 0x28
 800180a:	46bd      	mov	sp, r7
 800180c:	bd80      	pop	{r7, pc}
 800180e:	bf00      	nop
 8001810:	40020000 	.word	0x40020000
 8001814:	40020400 	.word	0x40020400

08001818 <LCD_Sprite>:
 8001818:	b580      	push	{r7, lr}
 800181a:	b08c      	sub	sp, #48	@ 0x30
 800181c:	af00      	add	r7, sp, #0
 800181e:	60f8      	str	r0, [r7, #12]
 8001820:	60b9      	str	r1, [r7, #8]
 8001822:	607a      	str	r2, [r7, #4]
 8001824:	603b      	str	r3, [r7, #0]
 8001826:	202c      	movs	r0, #44	@ 0x2c
 8001828:	f7ff fc86 	bl	8001138 <LCD_CMD>
 800182c:	2201      	movs	r2, #1
 800182e:	2110      	movs	r1, #16
 8001830:	484d      	ldr	r0, [pc, #308]	@ (8001968 <LCD_Sprite+0x150>)
 8001832:	f003 fb57 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001836:	2200      	movs	r2, #0
 8001838:	2101      	movs	r1, #1
 800183a:	484c      	ldr	r0, [pc, #304]	@ (800196c <LCD_Sprite+0x154>)
 800183c:	f003 fb52 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001840:	68fa      	ldr	r2, [r7, #12]
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	4413      	add	r3, r2
 8001846:	61bb      	str	r3, [r7, #24]
 8001848:	68ba      	ldr	r2, [r7, #8]
 800184a:	683b      	ldr	r3, [r7, #0]
 800184c:	4413      	add	r3, r2
 800184e:	617b      	str	r3, [r7, #20]
 8001850:	68f8      	ldr	r0, [r7, #12]
 8001852:	68b9      	ldr	r1, [r7, #8]
 8001854:	69bb      	ldr	r3, [r7, #24]
 8001856:	1e5a      	subs	r2, r3, #1
 8001858:	697b      	ldr	r3, [r7, #20]
 800185a:	3b01      	subs	r3, #1
 800185c:	f7ff fdb8 	bl	80013d0 <SetWindows>
 8001860:	2300      	movs	r3, #0
 8001862:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001868:	fb02 f303 	mul.w	r3, r2, r3
 800186c:	613b      	str	r3, [r7, #16]
 800186e:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8001872:	2b00      	cmp	r3, #0
 8001874:	d03a      	beq.n	80018ec <LCD_Sprite+0xd4>
 8001876:	2300      	movs	r3, #0
 8001878:	62bb      	str	r3, [r7, #40]	@ 0x28
 800187a:	e032      	b.n	80018e2 <LCD_Sprite+0xca>
 800187c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800187e:	693a      	ldr	r2, [r7, #16]
 8001880:	fb03 f202 	mul.w	r2, r3, r2
 8001884:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001886:	6879      	ldr	r1, [r7, #4]
 8001888:	fb01 f303 	mul.w	r3, r1, r3
 800188c:	4413      	add	r3, r2
 800188e:	1e5a      	subs	r2, r3, #1
 8001890:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8001894:	1ad3      	subs	r3, r2, r3
 8001896:	005b      	lsls	r3, r3, #1
 8001898:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	005b      	lsls	r3, r3, #1
 800189e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80018a0:	4413      	add	r3, r2
 80018a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80018a4:	2300      	movs	r3, #0
 80018a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80018a8:	e014      	b.n	80018d4 <LCD_Sprite+0xbc>
 80018aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80018ac:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80018ae:	4413      	add	r3, r2
 80018b0:	781b      	ldrb	r3, [r3, #0]
 80018b2:	4618      	mov	r0, r3
 80018b4:	f7ff fce6 	bl	8001284 <LCD_DATA>
 80018b8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80018ba:	3301      	adds	r3, #1
 80018bc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80018be:	4413      	add	r3, r2
 80018c0:	781b      	ldrb	r3, [r3, #0]
 80018c2:	4618      	mov	r0, r3
 80018c4:	f7ff fcde 	bl	8001284 <LCD_DATA>
 80018c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80018ca:	3b02      	subs	r3, #2
 80018cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80018ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018d0:	3301      	adds	r3, #1
 80018d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80018d4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	429a      	cmp	r2, r3
 80018da:	dbe6      	blt.n	80018aa <LCD_Sprite+0x92>
 80018dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80018de:	3301      	adds	r3, #1
 80018e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80018e2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80018e4:	683b      	ldr	r3, [r7, #0]
 80018e6:	429a      	cmp	r2, r3
 80018e8:	dbc8      	blt.n	800187c <LCD_Sprite+0x64>
 80018ea:	e034      	b.n	8001956 <LCD_Sprite+0x13e>
 80018ec:	2300      	movs	r3, #0
 80018ee:	623b      	str	r3, [r7, #32]
 80018f0:	e02d      	b.n	800194e <LCD_Sprite+0x136>
 80018f2:	6a3b      	ldr	r3, [r7, #32]
 80018f4:	693a      	ldr	r2, [r7, #16]
 80018f6:	fb03 f202 	mul.w	r2, r3, r2
 80018fa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80018fc:	6879      	ldr	r1, [r7, #4]
 80018fe:	fb01 f303 	mul.w	r3, r1, r3
 8001902:	4413      	add	r3, r2
 8001904:	1c5a      	adds	r2, r3, #1
 8001906:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 800190a:	4413      	add	r3, r2
 800190c:	005b      	lsls	r3, r3, #1
 800190e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001910:	2300      	movs	r3, #0
 8001912:	61fb      	str	r3, [r7, #28]
 8001914:	e014      	b.n	8001940 <LCD_Sprite+0x128>
 8001916:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001918:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800191a:	4413      	add	r3, r2
 800191c:	781b      	ldrb	r3, [r3, #0]
 800191e:	4618      	mov	r0, r3
 8001920:	f7ff fcb0 	bl	8001284 <LCD_DATA>
 8001924:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001926:	3301      	adds	r3, #1
 8001928:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800192a:	4413      	add	r3, r2
 800192c:	781b      	ldrb	r3, [r3, #0]
 800192e:	4618      	mov	r0, r3
 8001930:	f7ff fca8 	bl	8001284 <LCD_DATA>
 8001934:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001936:	3302      	adds	r3, #2
 8001938:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800193a:	69fb      	ldr	r3, [r7, #28]
 800193c:	3301      	adds	r3, #1
 800193e:	61fb      	str	r3, [r7, #28]
 8001940:	69fa      	ldr	r2, [r7, #28]
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	429a      	cmp	r2, r3
 8001946:	dbe6      	blt.n	8001916 <LCD_Sprite+0xfe>
 8001948:	6a3b      	ldr	r3, [r7, #32]
 800194a:	3301      	adds	r3, #1
 800194c:	623b      	str	r3, [r7, #32]
 800194e:	6a3a      	ldr	r2, [r7, #32]
 8001950:	683b      	ldr	r3, [r7, #0]
 8001952:	429a      	cmp	r2, r3
 8001954:	dbcd      	blt.n	80018f2 <LCD_Sprite+0xda>
 8001956:	2201      	movs	r2, #1
 8001958:	2101      	movs	r1, #1
 800195a:	4804      	ldr	r0, [pc, #16]	@ (800196c <LCD_Sprite+0x154>)
 800195c:	f003 fac2 	bl	8004ee4 <HAL_GPIO_WritePin>
 8001960:	bf00      	nop
 8001962:	3730      	adds	r7, #48	@ 0x30
 8001964:	46bd      	mov	sp, r7
 8001966:	bd80      	pop	{r7, pc}
 8001968:	40020000 	.word	0x40020000
 800196c:	40020400 	.word	0x40020400

08001970 <actualizar_selectores>:
    return 1;  // Éxito
}


// Función para actualizar los selectores en la pantalla.
void actualizar_selectores() {
 8001970:	b580      	push	{r7, lr}
 8001972:	b082      	sub	sp, #8
 8001974:	af02      	add	r7, sp, #8
    // Limpiar la pantalla
    LCD_Bitmap(25, 70, 63, 17, SELECTOROFFJ1);
 8001976:	4b56      	ldr	r3, [pc, #344]	@ (8001ad0 <actualizar_selectores+0x160>)
 8001978:	9300      	str	r3, [sp, #0]
 800197a:	2311      	movs	r3, #17
 800197c:	223f      	movs	r2, #63	@ 0x3f
 800197e:	2146      	movs	r1, #70	@ 0x46
 8001980:	2019      	movs	r0, #25
 8001982:	f7ff feef 	bl	8001764 <LCD_Bitmap>
    LCD_Bitmap(95, 70, 63, 17, SELECTOROFFJ1);
 8001986:	4b52      	ldr	r3, [pc, #328]	@ (8001ad0 <actualizar_selectores+0x160>)
 8001988:	9300      	str	r3, [sp, #0]
 800198a:	2311      	movs	r3, #17
 800198c:	223f      	movs	r2, #63	@ 0x3f
 800198e:	2146      	movs	r1, #70	@ 0x46
 8001990:	205f      	movs	r0, #95	@ 0x5f
 8001992:	f7ff fee7 	bl	8001764 <LCD_Bitmap>
    LCD_Bitmap(165, 70, 63, 17, SELECTOROFFJ1);
 8001996:	4b4e      	ldr	r3, [pc, #312]	@ (8001ad0 <actualizar_selectores+0x160>)
 8001998:	9300      	str	r3, [sp, #0]
 800199a:	2311      	movs	r3, #17
 800199c:	223f      	movs	r2, #63	@ 0x3f
 800199e:	2146      	movs	r1, #70	@ 0x46
 80019a0:	20a5      	movs	r0, #165	@ 0xa5
 80019a2:	f7ff fedf 	bl	8001764 <LCD_Bitmap>
    LCD_Bitmap(235, 70, 63, 17, SELECTOROFFJ1);
 80019a6:	4b4a      	ldr	r3, [pc, #296]	@ (8001ad0 <actualizar_selectores+0x160>)
 80019a8:	9300      	str	r3, [sp, #0]
 80019aa:	2311      	movs	r3, #17
 80019ac:	223f      	movs	r2, #63	@ 0x3f
 80019ae:	2146      	movs	r1, #70	@ 0x46
 80019b0:	20eb      	movs	r0, #235	@ 0xeb
 80019b2:	f7ff fed7 	bl	8001764 <LCD_Bitmap>

    LCD_Bitmap(25, 131, 63, 17, SELECTOROFFJ1);
 80019b6:	4b46      	ldr	r3, [pc, #280]	@ (8001ad0 <actualizar_selectores+0x160>)
 80019b8:	9300      	str	r3, [sp, #0]
 80019ba:	2311      	movs	r3, #17
 80019bc:	223f      	movs	r2, #63	@ 0x3f
 80019be:	2183      	movs	r1, #131	@ 0x83
 80019c0:	2019      	movs	r0, #25
 80019c2:	f7ff fecf 	bl	8001764 <LCD_Bitmap>
    LCD_Bitmap(95, 131, 63, 17, SELECTOROFFJ1);
 80019c6:	4b42      	ldr	r3, [pc, #264]	@ (8001ad0 <actualizar_selectores+0x160>)
 80019c8:	9300      	str	r3, [sp, #0]
 80019ca:	2311      	movs	r3, #17
 80019cc:	223f      	movs	r2, #63	@ 0x3f
 80019ce:	2183      	movs	r1, #131	@ 0x83
 80019d0:	205f      	movs	r0, #95	@ 0x5f
 80019d2:	f7ff fec7 	bl	8001764 <LCD_Bitmap>
    LCD_Bitmap(165, 131, 63, 17, SELECTOROFFJ1);
 80019d6:	4b3e      	ldr	r3, [pc, #248]	@ (8001ad0 <actualizar_selectores+0x160>)
 80019d8:	9300      	str	r3, [sp, #0]
 80019da:	2311      	movs	r3, #17
 80019dc:	223f      	movs	r2, #63	@ 0x3f
 80019de:	2183      	movs	r1, #131	@ 0x83
 80019e0:	20a5      	movs	r0, #165	@ 0xa5
 80019e2:	f7ff febf 	bl	8001764 <LCD_Bitmap>
    LCD_Bitmap(235, 131, 63, 17, SELECTOROFFJ1);
 80019e6:	4b3a      	ldr	r3, [pc, #232]	@ (8001ad0 <actualizar_selectores+0x160>)
 80019e8:	9300      	str	r3, [sp, #0]
 80019ea:	2311      	movs	r3, #17
 80019ec:	223f      	movs	r2, #63	@ 0x3f
 80019ee:	2183      	movs	r1, #131	@ 0x83
 80019f0:	20eb      	movs	r0, #235	@ 0xeb
 80019f2:	f7ff feb7 	bl	8001764 <LCD_Bitmap>

    // Dibujar selector del Jugador 1
    switch (selector1_pos) {
 80019f6:	4b37      	ldr	r3, [pc, #220]	@ (8001ad4 <actualizar_selectores+0x164>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	3b01      	subs	r3, #1
 80019fc:	2b03      	cmp	r3, #3
 80019fe:	d82f      	bhi.n	8001a60 <actualizar_selectores+0xf0>
 8001a00:	a201      	add	r2, pc, #4	@ (adr r2, 8001a08 <actualizar_selectores+0x98>)
 8001a02:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a06:	bf00      	nop
 8001a08:	08001a19 	.word	0x08001a19
 8001a0c:	08001a2b 	.word	0x08001a2b
 8001a10:	08001a3d 	.word	0x08001a3d
 8001a14:	08001a4f 	.word	0x08001a4f
        case 1:
            LCD_Bitmap(25, 70, 63, 17, SELECTORONJ1);
 8001a18:	4b2f      	ldr	r3, [pc, #188]	@ (8001ad8 <actualizar_selectores+0x168>)
 8001a1a:	9300      	str	r3, [sp, #0]
 8001a1c:	2311      	movs	r3, #17
 8001a1e:	223f      	movs	r2, #63	@ 0x3f
 8001a20:	2146      	movs	r1, #70	@ 0x46
 8001a22:	2019      	movs	r0, #25
 8001a24:	f7ff fe9e 	bl	8001764 <LCD_Bitmap>
            break;
 8001a28:	e01a      	b.n	8001a60 <actualizar_selectores+0xf0>
        case 2:
            LCD_Bitmap(95, 70, 63, 17, SELECTORONJ1);
 8001a2a:	4b2b      	ldr	r3, [pc, #172]	@ (8001ad8 <actualizar_selectores+0x168>)
 8001a2c:	9300      	str	r3, [sp, #0]
 8001a2e:	2311      	movs	r3, #17
 8001a30:	223f      	movs	r2, #63	@ 0x3f
 8001a32:	2146      	movs	r1, #70	@ 0x46
 8001a34:	205f      	movs	r0, #95	@ 0x5f
 8001a36:	f7ff fe95 	bl	8001764 <LCD_Bitmap>
            break;
 8001a3a:	e011      	b.n	8001a60 <actualizar_selectores+0xf0>
        case 3:
            LCD_Bitmap(165, 70, 63, 17, SELECTORONJ1);
 8001a3c:	4b26      	ldr	r3, [pc, #152]	@ (8001ad8 <actualizar_selectores+0x168>)
 8001a3e:	9300      	str	r3, [sp, #0]
 8001a40:	2311      	movs	r3, #17
 8001a42:	223f      	movs	r2, #63	@ 0x3f
 8001a44:	2146      	movs	r1, #70	@ 0x46
 8001a46:	20a5      	movs	r0, #165	@ 0xa5
 8001a48:	f7ff fe8c 	bl	8001764 <LCD_Bitmap>
            break;
 8001a4c:	e008      	b.n	8001a60 <actualizar_selectores+0xf0>
        case 4:
            LCD_Bitmap(235, 70, 63, 17, SELECTORONJ1);
 8001a4e:	4b22      	ldr	r3, [pc, #136]	@ (8001ad8 <actualizar_selectores+0x168>)
 8001a50:	9300      	str	r3, [sp, #0]
 8001a52:	2311      	movs	r3, #17
 8001a54:	223f      	movs	r2, #63	@ 0x3f
 8001a56:	2146      	movs	r1, #70	@ 0x46
 8001a58:	20eb      	movs	r0, #235	@ 0xeb
 8001a5a:	f7ff fe83 	bl	8001764 <LCD_Bitmap>
            break;
 8001a5e:	bf00      	nop
    }

    // Dibujar selector del Jugador 2
    switch (selector2_pos) {
 8001a60:	4b1e      	ldr	r3, [pc, #120]	@ (8001adc <actualizar_selectores+0x16c>)
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	3b01      	subs	r3, #1
 8001a66:	2b03      	cmp	r3, #3
 8001a68:	d82e      	bhi.n	8001ac8 <actualizar_selectores+0x158>
 8001a6a:	a201      	add	r2, pc, #4	@ (adr r2, 8001a70 <actualizar_selectores+0x100>)
 8001a6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a70:	08001a81 	.word	0x08001a81
 8001a74:	08001a93 	.word	0x08001a93
 8001a78:	08001aa5 	.word	0x08001aa5
 8001a7c:	08001ab7 	.word	0x08001ab7
        case 1:
            LCD_Bitmap(25, 131, 63, 17, SELECTORONJ2);
 8001a80:	4b17      	ldr	r3, [pc, #92]	@ (8001ae0 <actualizar_selectores+0x170>)
 8001a82:	9300      	str	r3, [sp, #0]
 8001a84:	2311      	movs	r3, #17
 8001a86:	223f      	movs	r2, #63	@ 0x3f
 8001a88:	2183      	movs	r1, #131	@ 0x83
 8001a8a:	2019      	movs	r0, #25
 8001a8c:	f7ff fe6a 	bl	8001764 <LCD_Bitmap>
            break;
 8001a90:	e01a      	b.n	8001ac8 <actualizar_selectores+0x158>
        case 2:
            LCD_Bitmap(95, 131, 63, 17, SELECTORONJ2);
 8001a92:	4b13      	ldr	r3, [pc, #76]	@ (8001ae0 <actualizar_selectores+0x170>)
 8001a94:	9300      	str	r3, [sp, #0]
 8001a96:	2311      	movs	r3, #17
 8001a98:	223f      	movs	r2, #63	@ 0x3f
 8001a9a:	2183      	movs	r1, #131	@ 0x83
 8001a9c:	205f      	movs	r0, #95	@ 0x5f
 8001a9e:	f7ff fe61 	bl	8001764 <LCD_Bitmap>
            break;
 8001aa2:	e011      	b.n	8001ac8 <actualizar_selectores+0x158>
        case 3:
            LCD_Bitmap(165, 131, 63, 17, SELECTORONJ2);
 8001aa4:	4b0e      	ldr	r3, [pc, #56]	@ (8001ae0 <actualizar_selectores+0x170>)
 8001aa6:	9300      	str	r3, [sp, #0]
 8001aa8:	2311      	movs	r3, #17
 8001aaa:	223f      	movs	r2, #63	@ 0x3f
 8001aac:	2183      	movs	r1, #131	@ 0x83
 8001aae:	20a5      	movs	r0, #165	@ 0xa5
 8001ab0:	f7ff fe58 	bl	8001764 <LCD_Bitmap>
            break;
 8001ab4:	e008      	b.n	8001ac8 <actualizar_selectores+0x158>
        case 4:
            LCD_Bitmap(235, 131, 63, 17, SELECTORONJ2);
 8001ab6:	4b0a      	ldr	r3, [pc, #40]	@ (8001ae0 <actualizar_selectores+0x170>)
 8001ab8:	9300      	str	r3, [sp, #0]
 8001aba:	2311      	movs	r3, #17
 8001abc:	223f      	movs	r2, #63	@ 0x3f
 8001abe:	2183      	movs	r1, #131	@ 0x83
 8001ac0:	20eb      	movs	r0, #235	@ 0xeb
 8001ac2:	f7ff fe4f 	bl	8001764 <LCD_Bitmap>
            break;
 8001ac6:	bf00      	nop
    }
}
 8001ac8:	bf00      	nop
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bd80      	pop	{r7, pc}
 8001ace:	bf00      	nop
 8001ad0:	0801bce0 	.word	0x0801bce0
 8001ad4:	2000a67c 	.word	0x2000a67c
 8001ad8:	08018290 	.word	0x08018290
 8001adc:	2000a680 	.word	0x2000a680
 8001ae0:	08018af0 	.word	0x08018af0

08001ae4 <mover_colores>:

// Función para manejar los comandos de entrada
void mover_colores(char comando) {
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b082      	sub	sp, #8
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	4603      	mov	r3, r0
 8001aec:	71fb      	strb	r3, [r7, #7]
    switch (comando) {
 8001aee:	79fb      	ldrb	r3, [r7, #7]
 8001af0:	3b61      	subs	r3, #97	@ 0x61
 8001af2:	2b05      	cmp	r3, #5
 8001af4:	d83d      	bhi.n	8001b72 <mover_colores+0x8e>
 8001af6:	a201      	add	r2, pc, #4	@ (adr r2, 8001afc <mover_colores+0x18>)
 8001af8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001afc:	08001b15 	.word	0x08001b15
 8001b00:	08001b29 	.word	0x08001b29
 8001b04:	08001b73 	.word	0x08001b73
 8001b08:	08001b73 	.word	0x08001b73
 8001b0c:	08001b51 	.word	0x08001b51
 8001b10:	08001b3d 	.word	0x08001b3d
        case 'a': // Mover selector 1 a la izquierda
            if (selector1_pos > 1) {
 8001b14:	4b1a      	ldr	r3, [pc, #104]	@ (8001b80 <mover_colores+0x9c>)
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	2b01      	cmp	r3, #1
 8001b1a:	dd23      	ble.n	8001b64 <mover_colores+0x80>
                selector1_pos--;
 8001b1c:	4b18      	ldr	r3, [pc, #96]	@ (8001b80 <mover_colores+0x9c>)
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	3b01      	subs	r3, #1
 8001b22:	4a17      	ldr	r2, [pc, #92]	@ (8001b80 <mover_colores+0x9c>)
 8001b24:	6013      	str	r3, [r2, #0]
            }
            break;
 8001b26:	e01d      	b.n	8001b64 <mover_colores+0x80>
        case 'b': // Mover selector 1 a la derecha
            if (selector1_pos < 4) {
 8001b28:	4b15      	ldr	r3, [pc, #84]	@ (8001b80 <mover_colores+0x9c>)
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	2b03      	cmp	r3, #3
 8001b2e:	dc1b      	bgt.n	8001b68 <mover_colores+0x84>
                selector1_pos++;
 8001b30:	4b13      	ldr	r3, [pc, #76]	@ (8001b80 <mover_colores+0x9c>)
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	3301      	adds	r3, #1
 8001b36:	4a12      	ldr	r2, [pc, #72]	@ (8001b80 <mover_colores+0x9c>)
 8001b38:	6013      	str	r3, [r2, #0]
            }
            break;
 8001b3a:	e015      	b.n	8001b68 <mover_colores+0x84>
        case 'f': // Mover selector 2 a la izquierda
            if (selector2_pos > 1) {
 8001b3c:	4b11      	ldr	r3, [pc, #68]	@ (8001b84 <mover_colores+0xa0>)
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	2b01      	cmp	r3, #1
 8001b42:	dd13      	ble.n	8001b6c <mover_colores+0x88>
                selector2_pos--;
 8001b44:	4b0f      	ldr	r3, [pc, #60]	@ (8001b84 <mover_colores+0xa0>)
 8001b46:	681b      	ldr	r3, [r3, #0]
 8001b48:	3b01      	subs	r3, #1
 8001b4a:	4a0e      	ldr	r2, [pc, #56]	@ (8001b84 <mover_colores+0xa0>)
 8001b4c:	6013      	str	r3, [r2, #0]
            }
            break;
 8001b4e:	e00d      	b.n	8001b6c <mover_colores+0x88>
        case 'e': // Mover selector 2 a la derecha
            if (selector2_pos < 4) {
 8001b50:	4b0c      	ldr	r3, [pc, #48]	@ (8001b84 <mover_colores+0xa0>)
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	2b03      	cmp	r3, #3
 8001b56:	dc0b      	bgt.n	8001b70 <mover_colores+0x8c>
                selector2_pos++;
 8001b58:	4b0a      	ldr	r3, [pc, #40]	@ (8001b84 <mover_colores+0xa0>)
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	3301      	adds	r3, #1
 8001b5e:	4a09      	ldr	r2, [pc, #36]	@ (8001b84 <mover_colores+0xa0>)
 8001b60:	6013      	str	r3, [r2, #0]
            }
            break;
 8001b62:	e005      	b.n	8001b70 <mover_colores+0x8c>
            break;
 8001b64:	bf00      	nop
 8001b66:	e004      	b.n	8001b72 <mover_colores+0x8e>
            break;
 8001b68:	bf00      	nop
 8001b6a:	e002      	b.n	8001b72 <mover_colores+0x8e>
            break;
 8001b6c:	bf00      	nop
 8001b6e:	e000      	b.n	8001b72 <mover_colores+0x8e>
            break;
 8001b70:	bf00      	nop
    }

    // Actualizar la pantalla después de mover el selector
    actualizar_selectores();
 8001b72:	f7ff fefd 	bl	8001970 <actualizar_selectores>
}
 8001b76:	bf00      	nop
 8001b78:	3708      	adds	r7, #8
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}
 8001b7e:	bf00      	nop
 8001b80:	2000a67c 	.word	0x2000a67c
 8001b84:	2000a680 	.word	0x2000a680

08001b88 <dibujar_puntero>:

void dibujar_puntero(uint8_t y_coord) {
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af02      	add	r7, sp, #8
 8001b8e:	4603      	mov	r3, r0
 8001b90:	71fb      	strb	r3, [r7, #7]
    // Dibuja el puntero en la posición `y_coord` en la pantalla.
    LCD_Bitmap(80, y_coord, 14, 15, PUNTERO);
 8001b92:	79f9      	ldrb	r1, [r7, #7]
 8001b94:	4b05      	ldr	r3, [pc, #20]	@ (8001bac <dibujar_puntero+0x24>)
 8001b96:	9300      	str	r3, [sp, #0]
 8001b98:	230f      	movs	r3, #15
 8001b9a:	220e      	movs	r2, #14
 8001b9c:	2050      	movs	r0, #80	@ 0x50
 8001b9e:	f7ff fde1 	bl	8001764 <LCD_Bitmap>
}
 8001ba2:	bf00      	nop
 8001ba4:	3708      	adds	r7, #8
 8001ba6:	46bd      	mov	sp, r7
 8001ba8:	bd80      	pop	{r7, pc}
 8001baa:	bf00      	nop
 8001bac:	20000004 	.word	0x20000004

08001bb0 <borrar_puntero>:

void borrar_puntero(uint8_t y_coord) {
 8001bb0:	b580      	push	{r7, lr}
 8001bb2:	b084      	sub	sp, #16
 8001bb4:	af02      	add	r7, sp, #8
 8001bb6:	4603      	mov	r3, r0
 8001bb8:	71fb      	strb	r3, [r7, #7]
    // Borra el puntero en la posición `y_coord` de la pantalla.
    FillRect(80, y_coord, 14, 15, 0x2817);
 8001bba:	79f9      	ldrb	r1, [r7, #7]
 8001bbc:	f642 0317 	movw	r3, #10263	@ 0x2817
 8001bc0:	9300      	str	r3, [sp, #0]
 8001bc2:	230f      	movs	r3, #15
 8001bc4:	220e      	movs	r2, #14
 8001bc6:	2050      	movs	r0, #80	@ 0x50
 8001bc8:	f7ff fc86 	bl	80014d8 <FillRect>
}
 8001bcc:	bf00      	nop
 8001bce:	3708      	adds	r7, #8
 8001bd0:	46bd      	mov	sp, r7
 8001bd2:	bd80      	pop	{r7, pc}

08001bd4 <mover_puntero_arriba>:

// Función para mover el puntero hacia arriba
void mover_puntero_arriba(void) {
 8001bd4:	b580      	push	{r7, lr}
 8001bd6:	af00      	add	r7, sp, #0
    if (seleccion_actual == 2) {
 8001bd8:	4b0a      	ldr	r3, [pc, #40]	@ (8001c04 <mover_puntero_arriba+0x30>)
 8001bda:	781b      	ldrb	r3, [r3, #0]
 8001bdc:	2b02      	cmp	r3, #2
 8001bde:	d10e      	bne.n	8001bfe <mover_puntero_arriba+0x2a>
        // Borrar el puntero en la posición actual (segunda opción)
        borrar_puntero(OPCION2_Y);
 8001be0:	4b09      	ldr	r3, [pc, #36]	@ (8001c08 <mover_puntero_arriba+0x34>)
 8001be2:	681b      	ldr	r3, [r3, #0]
 8001be4:	b2db      	uxtb	r3, r3
 8001be6:	4618      	mov	r0, r3
 8001be8:	f7ff ffe2 	bl	8001bb0 <borrar_puntero>

        // Cambiar a la primera opción
        seleccion_actual = 1;
 8001bec:	4b05      	ldr	r3, [pc, #20]	@ (8001c04 <mover_puntero_arriba+0x30>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	701a      	strb	r2, [r3, #0]

        // Dibujar el puntero en la nueva posición (primera opción)
        dibujar_puntero(OPCION1_Y);
 8001bf2:	4b06      	ldr	r3, [pc, #24]	@ (8001c0c <mover_puntero_arriba+0x38>)
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	b2db      	uxtb	r3, r3
 8001bf8:	4618      	mov	r0, r3
 8001bfa:	f7ff ffc5 	bl	8001b88 <dibujar_puntero>
    }
}
 8001bfe:	bf00      	nop
 8001c00:	bd80      	pop	{r7, pc}
 8001c02:	bf00      	nop
 8001c04:	2000a99c 	.word	0x2000a99c
 8001c08:	2000a6ac 	.word	0x2000a6ac
 8001c0c:	2000a6a8 	.word	0x2000a6a8

08001c10 <mover_puntero_abajo>:

// Función para mover el puntero hacia abajo
void mover_puntero_abajo(void) {
 8001c10:	b580      	push	{r7, lr}
 8001c12:	af00      	add	r7, sp, #0
    if (seleccion_actual == 1) {
 8001c14:	4b0a      	ldr	r3, [pc, #40]	@ (8001c40 <mover_puntero_abajo+0x30>)
 8001c16:	781b      	ldrb	r3, [r3, #0]
 8001c18:	2b01      	cmp	r3, #1
 8001c1a:	d10e      	bne.n	8001c3a <mover_puntero_abajo+0x2a>
        // Borrar el puntero en la posición actual (primera opción)
        borrar_puntero(OPCION1_Y);
 8001c1c:	4b09      	ldr	r3, [pc, #36]	@ (8001c44 <mover_puntero_abajo+0x34>)
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	b2db      	uxtb	r3, r3
 8001c22:	4618      	mov	r0, r3
 8001c24:	f7ff ffc4 	bl	8001bb0 <borrar_puntero>

        // Cambiar a la segunda opción
        seleccion_actual = 2;
 8001c28:	4b05      	ldr	r3, [pc, #20]	@ (8001c40 <mover_puntero_abajo+0x30>)
 8001c2a:	2202      	movs	r2, #2
 8001c2c:	701a      	strb	r2, [r3, #0]

        // Dibujar el puntero en la nueva posición (segunda opción)
        dibujar_puntero(OPCION2_Y);
 8001c2e:	4b06      	ldr	r3, [pc, #24]	@ (8001c48 <mover_puntero_abajo+0x38>)
 8001c30:	681b      	ldr	r3, [r3, #0]
 8001c32:	b2db      	uxtb	r3, r3
 8001c34:	4618      	mov	r0, r3
 8001c36:	f7ff ffa7 	bl	8001b88 <dibujar_puntero>
    }
}
 8001c3a:	bf00      	nop
 8001c3c:	bd80      	pop	{r7, pc}
 8001c3e:	bf00      	nop
 8001c40:	2000a99c 	.word	0x2000a99c
 8001c44:	2000a6a8 	.word	0x2000a6a8
 8001c48:	2000a6ac 	.word	0x2000a6ac

08001c4c <check_collision>:


int check_collision(int jug_x, int jug_y, int green_x, int green_y) {
 8001c4c:	b480      	push	{r7}
 8001c4e:	b085      	sub	sp, #20
 8001c50:	af00      	add	r7, sp, #0
 8001c52:	60f8      	str	r0, [r7, #12]
 8001c54:	60b9      	str	r1, [r7, #8]
 8001c56:	607a      	str	r2, [r7, #4]
 8001c58:	603b      	str	r3, [r7, #0]
    return (jug_x < green_x + green_rect_width &&
 8001c5a:	4b12      	ldr	r3, [pc, #72]	@ (8001ca4 <check_collision+0x58>)
 8001c5c:	681a      	ldr	r2, [r3, #0]
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	4413      	add	r3, r2
            jug_x + jug_width > green_x &&
            jug_y < green_y + green_rect_height &&
 8001c62:	68fa      	ldr	r2, [r7, #12]
 8001c64:	429a      	cmp	r2, r3
 8001c66:	da16      	bge.n	8001c96 <check_collision+0x4a>
            jug_x + jug_width > green_x &&
 8001c68:	4b0f      	ldr	r3, [pc, #60]	@ (8001ca8 <check_collision+0x5c>)
 8001c6a:	681a      	ldr	r2, [r3, #0]
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	4413      	add	r3, r2
    return (jug_x < green_x + green_rect_width &&
 8001c70:	687a      	ldr	r2, [r7, #4]
 8001c72:	429a      	cmp	r2, r3
 8001c74:	da0f      	bge.n	8001c96 <check_collision+0x4a>
            jug_y < green_y + green_rect_height &&
 8001c76:	4b0d      	ldr	r3, [pc, #52]	@ (8001cac <check_collision+0x60>)
 8001c78:	681a      	ldr	r2, [r3, #0]
 8001c7a:	683b      	ldr	r3, [r7, #0]
 8001c7c:	4413      	add	r3, r2
            jug_x + jug_width > green_x &&
 8001c7e:	68ba      	ldr	r2, [r7, #8]
 8001c80:	429a      	cmp	r2, r3
 8001c82:	da08      	bge.n	8001c96 <check_collision+0x4a>
            jug_y + jug_height > green_y);
 8001c84:	4b0a      	ldr	r3, [pc, #40]	@ (8001cb0 <check_collision+0x64>)
 8001c86:	681a      	ldr	r2, [r3, #0]
 8001c88:	68bb      	ldr	r3, [r7, #8]
 8001c8a:	4413      	add	r3, r2
            jug_y < green_y + green_rect_height &&
 8001c8c:	683a      	ldr	r2, [r7, #0]
 8001c8e:	429a      	cmp	r2, r3
 8001c90:	da01      	bge.n	8001c96 <check_collision+0x4a>
 8001c92:	2301      	movs	r3, #1
 8001c94:	e000      	b.n	8001c98 <check_collision+0x4c>
 8001c96:	2300      	movs	r3, #0
}
 8001c98:	4618      	mov	r0, r3
 8001c9a:	3714      	adds	r7, #20
 8001c9c:	46bd      	mov	sp, r7
 8001c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ca2:	4770      	bx	lr
 8001ca4:	2000a66c 	.word	0x2000a66c
 8001ca8:	2000a654 	.word	0x2000a654
 8001cac:	2000a670 	.word	0x2000a670
 8001cb0:	2000a658 	.word	0x2000a658

08001cb4 <clear_previous_sprite>:

void clear_previous_sprite(int x, int y, int width, int height) {
 8001cb4:	b590      	push	{r4, r7, lr}
 8001cb6:	b087      	sub	sp, #28
 8001cb8:	af02      	add	r7, sp, #8
 8001cba:	60f8      	str	r0, [r7, #12]
 8001cbc:	60b9      	str	r1, [r7, #8]
 8001cbe:	607a      	str	r2, [r7, #4]
 8001cc0:	603b      	str	r3, [r7, #0]
    // Limpia la posición anterior del sprite dibujando un rectángulo blanco
    FillRect(x, y, width, height, 0xEDCC);  // Color blanco (0xFFFF) para limpiar
 8001cc2:	68f8      	ldr	r0, [r7, #12]
 8001cc4:	68b9      	ldr	r1, [r7, #8]
 8001cc6:	687a      	ldr	r2, [r7, #4]
 8001cc8:	683b      	ldr	r3, [r7, #0]
 8001cca:	f64e 54cc 	movw	r4, #60876	@ 0xedcc
 8001cce:	9400      	str	r4, [sp, #0]
 8001cd0:	f7ff fc02 	bl	80014d8 <FillRect>
}
 8001cd4:	bf00      	nop
 8001cd6:	3714      	adds	r7, #20
 8001cd8:	46bd      	mov	sp, r7
 8001cda:	bd90      	pop	{r4, r7, pc}

08001cdc <move_sprite_up>:

void move_sprite_up() {
 8001cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cde:	b087      	sub	sp, #28
 8001ce0:	af06      	add	r7, sp, #24
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x, sprite_y, sprite_width, sprite_height);
 8001ce2:	4b21      	ldr	r3, [pc, #132]	@ (8001d68 <move_sprite_up+0x8c>)
 8001ce4:	6818      	ldr	r0, [r3, #0]
 8001ce6:	4b21      	ldr	r3, [pc, #132]	@ (8001d6c <move_sprite_up+0x90>)
 8001ce8:	6819      	ldr	r1, [r3, #0]
 8001cea:	2222      	movs	r2, #34	@ 0x22
 8001cec:	2325      	movs	r3, #37	@ 0x25
 8001cee:	f7ff ffe1 	bl	8001cb4 <clear_previous_sprite>

    // Verificar si no se sale del límite superior antes de mover
    if (sprite_y - move_step >= y_limit_min) {
 8001cf2:	4b1e      	ldr	r3, [pc, #120]	@ (8001d6c <move_sprite_up+0x90>)
 8001cf4:	681a      	ldr	r2, [r3, #0]
 8001cf6:	4b1e      	ldr	r3, [pc, #120]	@ (8001d70 <move_sprite_up+0x94>)
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	1ad2      	subs	r2, r2, r3
 8001cfc:	4b1d      	ldr	r3, [pc, #116]	@ (8001d74 <move_sprite_up+0x98>)
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	429a      	cmp	r2, r3
 8001d02:	db06      	blt.n	8001d12 <move_sprite_up+0x36>
        sprite_y -= move_step;  // Mover hacia arriba
 8001d04:	4b19      	ldr	r3, [pc, #100]	@ (8001d6c <move_sprite_up+0x90>)
 8001d06:	681a      	ldr	r2, [r3, #0]
 8001d08:	4b19      	ldr	r3, [pc, #100]	@ (8001d70 <move_sprite_up+0x94>)
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	1ad3      	subs	r3, r2, r3
 8001d0e:	4a17      	ldr	r2, [pc, #92]	@ (8001d6c <move_sprite_up+0x90>)
 8001d10:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, seleccionJug1, 2, anima1, 0, 1);  // Dibuja el sprite en su nueva posición
 8001d12:	4b15      	ldr	r3, [pc, #84]	@ (8001d68 <move_sprite_up+0x8c>)
 8001d14:	6818      	ldr	r0, [r3, #0]
 8001d16:	4b15      	ldr	r3, [pc, #84]	@ (8001d6c <move_sprite_up+0x90>)
 8001d18:	6819      	ldr	r1, [r3, #0]
 8001d1a:	2522      	movs	r5, #34	@ 0x22
 8001d1c:	2625      	movs	r6, #37	@ 0x25
 8001d1e:	4b16      	ldr	r3, [pc, #88]	@ (8001d78 <move_sprite_up+0x9c>)
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	4a16      	ldr	r2, [pc, #88]	@ (8001d7c <move_sprite_up+0xa0>)
 8001d24:	6812      	ldr	r2, [r2, #0]
 8001d26:	2401      	movs	r4, #1
 8001d28:	9404      	str	r4, [sp, #16]
 8001d2a:	2400      	movs	r4, #0
 8001d2c:	9403      	str	r4, [sp, #12]
 8001d2e:	9202      	str	r2, [sp, #8]
 8001d30:	2202      	movs	r2, #2
 8001d32:	9201      	str	r2, [sp, #4]
 8001d34:	9300      	str	r3, [sp, #0]
 8001d36:	4633      	mov	r3, r6
 8001d38:	462a      	mov	r2, r5
 8001d3a:	f7ff fd6d 	bl	8001818 <LCD_Sprite>
    //LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
    if (check_collision(sprite_x, sprite_y, z, 150)) { //check_collision(sprite_x, sprite_y, green_rect_x, green_rect_y
 8001d3e:	4b0a      	ldr	r3, [pc, #40]	@ (8001d68 <move_sprite_up+0x8c>)
 8001d40:	6818      	ldr	r0, [r3, #0]
 8001d42:	4b0a      	ldr	r3, [pc, #40]	@ (8001d6c <move_sprite_up+0x90>)
 8001d44:	6819      	ldr	r1, [r3, #0]
 8001d46:	4b0e      	ldr	r3, [pc, #56]	@ (8001d80 <move_sprite_up+0xa4>)
 8001d48:	681a      	ldr	r2, [r3, #0]
 8001d4a:	2396      	movs	r3, #150	@ 0x96
 8001d4c:	f7ff ff7e 	bl	8001c4c <check_collision>
 8001d50:	4603      	mov	r3, r0
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d004      	beq.n	8001d60 <move_sprite_up+0x84>
        	colision++;
 8001d56:	4b0b      	ldr	r3, [pc, #44]	@ (8001d84 <move_sprite_up+0xa8>)
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	3301      	adds	r3, #1
 8001d5c:	4a09      	ldr	r2, [pc, #36]	@ (8001d84 <move_sprite_up+0xa8>)
 8001d5e:	6013      	str	r3, [r2, #0]

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);*/  // Imprimir colisiones en la pantalla

}
 8001d60:	bf00      	nop
 8001d62:	3704      	adds	r7, #4
 8001d64:	46bd      	mov	sp, r7
 8001d66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d68:	2000a698 	.word	0x2000a698
 8001d6c:	2000a69c 	.word	0x2000a69c
 8001d70:	2000a64c 	.word	0x2000a64c
 8001d74:	2000a65c 	.word	0x2000a65c
 8001d78:	2000a684 	.word	0x2000a684
 8001d7c:	2000a970 	.word	0x2000a970
 8001d80:	2000a674 	.word	0x2000a674
 8001d84:	2000a950 	.word	0x2000a950

08001d88 <move_sprite_down>:

void move_sprite_down() {
 8001d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d8a:	b087      	sub	sp, #28
 8001d8c:	af06      	add	r7, sp, #24
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x, sprite_y, sprite_width, sprite_height);
 8001d8e:	4b22      	ldr	r3, [pc, #136]	@ (8001e18 <move_sprite_down+0x90>)
 8001d90:	6818      	ldr	r0, [r3, #0]
 8001d92:	4b22      	ldr	r3, [pc, #136]	@ (8001e1c <move_sprite_down+0x94>)
 8001d94:	6819      	ldr	r1, [r3, #0]
 8001d96:	2222      	movs	r2, #34	@ 0x22
 8001d98:	2325      	movs	r3, #37	@ 0x25
 8001d9a:	f7ff ff8b 	bl	8001cb4 <clear_previous_sprite>

    // Verificar si no se sale del límite inferior antes de mover
    if (sprite_y + move_step + sprite_height <= y_limit_max) {
 8001d9e:	4b1f      	ldr	r3, [pc, #124]	@ (8001e1c <move_sprite_down+0x94>)
 8001da0:	681a      	ldr	r2, [r3, #0]
 8001da2:	4b1f      	ldr	r3, [pc, #124]	@ (8001e20 <move_sprite_down+0x98>)
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	4413      	add	r3, r2
 8001da8:	2225      	movs	r2, #37	@ 0x25
 8001daa:	441a      	add	r2, r3
 8001dac:	4b1d      	ldr	r3, [pc, #116]	@ (8001e24 <move_sprite_down+0x9c>)
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	429a      	cmp	r2, r3
 8001db2:	dc06      	bgt.n	8001dc2 <move_sprite_down+0x3a>
        sprite_y += move_step;  // Mover hacia abajo
 8001db4:	4b19      	ldr	r3, [pc, #100]	@ (8001e1c <move_sprite_down+0x94>)
 8001db6:	681a      	ldr	r2, [r3, #0]
 8001db8:	4b19      	ldr	r3, [pc, #100]	@ (8001e20 <move_sprite_down+0x98>)
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	4413      	add	r3, r2
 8001dbe:	4a17      	ldr	r2, [pc, #92]	@ (8001e1c <move_sprite_down+0x94>)
 8001dc0:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, seleccionJug1, 2, anima1, 0, 1);  // Dibuja el sprite en su nueva posición
 8001dc2:	4b15      	ldr	r3, [pc, #84]	@ (8001e18 <move_sprite_down+0x90>)
 8001dc4:	6818      	ldr	r0, [r3, #0]
 8001dc6:	4b15      	ldr	r3, [pc, #84]	@ (8001e1c <move_sprite_down+0x94>)
 8001dc8:	6819      	ldr	r1, [r3, #0]
 8001dca:	2522      	movs	r5, #34	@ 0x22
 8001dcc:	2625      	movs	r6, #37	@ 0x25
 8001dce:	4b16      	ldr	r3, [pc, #88]	@ (8001e28 <move_sprite_down+0xa0>)
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	4a16      	ldr	r2, [pc, #88]	@ (8001e2c <move_sprite_down+0xa4>)
 8001dd4:	6812      	ldr	r2, [r2, #0]
 8001dd6:	2401      	movs	r4, #1
 8001dd8:	9404      	str	r4, [sp, #16]
 8001dda:	2400      	movs	r4, #0
 8001ddc:	9403      	str	r4, [sp, #12]
 8001dde:	9202      	str	r2, [sp, #8]
 8001de0:	2202      	movs	r2, #2
 8001de2:	9201      	str	r2, [sp, #4]
 8001de4:	9300      	str	r3, [sp, #0]
 8001de6:	4633      	mov	r3, r6
 8001de8:	462a      	mov	r2, r5
 8001dea:	f7ff fd15 	bl	8001818 <LCD_Sprite>

    //LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
    if (check_collision(sprite_x, sprite_y, z, 200)) {
 8001dee:	4b0a      	ldr	r3, [pc, #40]	@ (8001e18 <move_sprite_down+0x90>)
 8001df0:	6818      	ldr	r0, [r3, #0]
 8001df2:	4b0a      	ldr	r3, [pc, #40]	@ (8001e1c <move_sprite_down+0x94>)
 8001df4:	6819      	ldr	r1, [r3, #0]
 8001df6:	4b0e      	ldr	r3, [pc, #56]	@ (8001e30 <move_sprite_down+0xa8>)
 8001df8:	681a      	ldr	r2, [r3, #0]
 8001dfa:	23c8      	movs	r3, #200	@ 0xc8
 8001dfc:	f7ff ff26 	bl	8001c4c <check_collision>
 8001e00:	4603      	mov	r3, r0
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d004      	beq.n	8001e10 <move_sprite_down+0x88>
    	colision++;
 8001e06:	4b0b      	ldr	r3, [pc, #44]	@ (8001e34 <move_sprite_down+0xac>)
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	3301      	adds	r3, #1
 8001e0c:	4a09      	ldr	r2, [pc, #36]	@ (8001e34 <move_sprite_down+0xac>)
 8001e0e:	6013      	str	r3, [r2, #0]
    }

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);  // Imprimir colisiones en la pantalla*/
}
 8001e10:	bf00      	nop
 8001e12:	3704      	adds	r7, #4
 8001e14:	46bd      	mov	sp, r7
 8001e16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e18:	2000a698 	.word	0x2000a698
 8001e1c:	2000a69c 	.word	0x2000a69c
 8001e20:	2000a64c 	.word	0x2000a64c
 8001e24:	2000a660 	.word	0x2000a660
 8001e28:	2000a684 	.word	0x2000a684
 8001e2c:	2000a970 	.word	0x2000a970
 8001e30:	2000a674 	.word	0x2000a674
 8001e34:	2000a950 	.word	0x2000a950

08001e38 <move_sprite_up1>:

void move_sprite_up1() {
 8001e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e3a:	b087      	sub	sp, #28
 8001e3c:	af06      	add	r7, sp, #24
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x1, sprite_y1, sprite_width1, sprite_height1);
 8001e3e:	4b21      	ldr	r3, [pc, #132]	@ (8001ec4 <move_sprite_up1+0x8c>)
 8001e40:	6818      	ldr	r0, [r3, #0]
 8001e42:	4b21      	ldr	r3, [pc, #132]	@ (8001ec8 <move_sprite_up1+0x90>)
 8001e44:	6819      	ldr	r1, [r3, #0]
 8001e46:	2222      	movs	r2, #34	@ 0x22
 8001e48:	2325      	movs	r3, #37	@ 0x25
 8001e4a:	f7ff ff33 	bl	8001cb4 <clear_previous_sprite>

    // Verificar si no se sale del límite superior antes de mover
    if (sprite_y1 - move_step1 >= y1_limit_min) {
 8001e4e:	4b1e      	ldr	r3, [pc, #120]	@ (8001ec8 <move_sprite_up1+0x90>)
 8001e50:	681a      	ldr	r2, [r3, #0]
 8001e52:	4b1e      	ldr	r3, [pc, #120]	@ (8001ecc <move_sprite_up1+0x94>)
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	1ad2      	subs	r2, r2, r3
 8001e58:	4b1d      	ldr	r3, [pc, #116]	@ (8001ed0 <move_sprite_up1+0x98>)
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	429a      	cmp	r2, r3
 8001e5e:	db06      	blt.n	8001e6e <move_sprite_up1+0x36>
        sprite_y1 -= move_step1;  // Mover hacia arriba
 8001e60:	4b19      	ldr	r3, [pc, #100]	@ (8001ec8 <move_sprite_up1+0x90>)
 8001e62:	681a      	ldr	r2, [r3, #0]
 8001e64:	4b19      	ldr	r3, [pc, #100]	@ (8001ecc <move_sprite_up1+0x94>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	1ad3      	subs	r3, r2, r3
 8001e6a:	4a17      	ldr	r2, [pc, #92]	@ (8001ec8 <move_sprite_up1+0x90>)
 8001e6c:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    LCD_Sprite(sprite_x1, sprite_y1, sprite_width1, sprite_height1, seleccionJug2, 2, anima2, 0, 1);  // Dibuja el sprite en su nueva posición
 8001e6e:	4b15      	ldr	r3, [pc, #84]	@ (8001ec4 <move_sprite_up1+0x8c>)
 8001e70:	6818      	ldr	r0, [r3, #0]
 8001e72:	4b15      	ldr	r3, [pc, #84]	@ (8001ec8 <move_sprite_up1+0x90>)
 8001e74:	6819      	ldr	r1, [r3, #0]
 8001e76:	2522      	movs	r5, #34	@ 0x22
 8001e78:	2625      	movs	r6, #37	@ 0x25
 8001e7a:	4b16      	ldr	r3, [pc, #88]	@ (8001ed4 <move_sprite_up1+0x9c>)
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	4a16      	ldr	r2, [pc, #88]	@ (8001ed8 <move_sprite_up1+0xa0>)
 8001e80:	6812      	ldr	r2, [r2, #0]
 8001e82:	2401      	movs	r4, #1
 8001e84:	9404      	str	r4, [sp, #16]
 8001e86:	2400      	movs	r4, #0
 8001e88:	9403      	str	r4, [sp, #12]
 8001e8a:	9202      	str	r2, [sp, #8]
 8001e8c:	2202      	movs	r2, #2
 8001e8e:	9201      	str	r2, [sp, #4]
 8001e90:	9300      	str	r3, [sp, #0]
 8001e92:	4633      	mov	r3, r6
 8001e94:	462a      	mov	r2, r5
 8001e96:	f7ff fcbf 	bl	8001818 <LCD_Sprite>
    //LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
    if (check_collision(sprite_x1, sprite_y1, z, 50)) { //check_collision(sprite_x, sprite_y, green_rect_x, green_rect_y
 8001e9a:	4b0a      	ldr	r3, [pc, #40]	@ (8001ec4 <move_sprite_up1+0x8c>)
 8001e9c:	6818      	ldr	r0, [r3, #0]
 8001e9e:	4b0a      	ldr	r3, [pc, #40]	@ (8001ec8 <move_sprite_up1+0x90>)
 8001ea0:	6819      	ldr	r1, [r3, #0]
 8001ea2:	4b0e      	ldr	r3, [pc, #56]	@ (8001edc <move_sprite_up1+0xa4>)
 8001ea4:	681a      	ldr	r2, [r3, #0]
 8001ea6:	2332      	movs	r3, #50	@ 0x32
 8001ea8:	f7ff fed0 	bl	8001c4c <check_collision>
 8001eac:	4603      	mov	r3, r0
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	d004      	beq.n	8001ebc <move_sprite_up1+0x84>
        	colision2++;
 8001eb2:	4b0b      	ldr	r3, [pc, #44]	@ (8001ee0 <move_sprite_up1+0xa8>)
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	3301      	adds	r3, #1
 8001eb8:	4a09      	ldr	r2, [pc, #36]	@ (8001ee0 <move_sprite_up1+0xa8>)
 8001eba:	6013      	str	r3, [r2, #0]

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);*/  // Imprimir colisiones en la pantalla

}
 8001ebc:	bf00      	nop
 8001ebe:	3704      	adds	r7, #4
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ec4:	2000a6a0 	.word	0x2000a6a0
 8001ec8:	2000a6a4 	.word	0x2000a6a4
 8001ecc:	2000a650 	.word	0x2000a650
 8001ed0:	2000a664 	.word	0x2000a664
 8001ed4:	2000a688 	.word	0x2000a688
 8001ed8:	2000a974 	.word	0x2000a974
 8001edc:	2000a674 	.word	0x2000a674
 8001ee0:	2000a954 	.word	0x2000a954

08001ee4 <move_sprite_down1>:

void move_sprite_down1() {
 8001ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ee6:	b087      	sub	sp, #28
 8001ee8:	af06      	add	r7, sp, #24
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x1, sprite_y1, sprite_width1, sprite_height1);
 8001eea:	4b22      	ldr	r3, [pc, #136]	@ (8001f74 <move_sprite_down1+0x90>)
 8001eec:	6818      	ldr	r0, [r3, #0]
 8001eee:	4b22      	ldr	r3, [pc, #136]	@ (8001f78 <move_sprite_down1+0x94>)
 8001ef0:	6819      	ldr	r1, [r3, #0]
 8001ef2:	2222      	movs	r2, #34	@ 0x22
 8001ef4:	2325      	movs	r3, #37	@ 0x25
 8001ef6:	f7ff fedd 	bl	8001cb4 <clear_previous_sprite>

    // Verificar si no se sale del límite inferior antes de mover
    if (sprite_y1 + move_step1 + sprite_height1 <= y1_limit_max) {
 8001efa:	4b1f      	ldr	r3, [pc, #124]	@ (8001f78 <move_sprite_down1+0x94>)
 8001efc:	681a      	ldr	r2, [r3, #0]
 8001efe:	4b1f      	ldr	r3, [pc, #124]	@ (8001f7c <move_sprite_down1+0x98>)
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	4413      	add	r3, r2
 8001f04:	2225      	movs	r2, #37	@ 0x25
 8001f06:	441a      	add	r2, r3
 8001f08:	4b1d      	ldr	r3, [pc, #116]	@ (8001f80 <move_sprite_down1+0x9c>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	429a      	cmp	r2, r3
 8001f0e:	dc06      	bgt.n	8001f1e <move_sprite_down1+0x3a>
        sprite_y1 += move_step1;  // Mover hacia abajo
 8001f10:	4b19      	ldr	r3, [pc, #100]	@ (8001f78 <move_sprite_down1+0x94>)
 8001f12:	681a      	ldr	r2, [r3, #0]
 8001f14:	4b19      	ldr	r3, [pc, #100]	@ (8001f7c <move_sprite_down1+0x98>)
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	4413      	add	r3, r2
 8001f1a:	4a17      	ldr	r2, [pc, #92]	@ (8001f78 <move_sprite_down1+0x94>)
 8001f1c:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    LCD_Sprite(sprite_x1, sprite_y1, sprite_width1, sprite_height1, seleccionJug2, 2, anima2, 0, 1);  // Dibuja el sprite en su nueva posición
 8001f1e:	4b15      	ldr	r3, [pc, #84]	@ (8001f74 <move_sprite_down1+0x90>)
 8001f20:	6818      	ldr	r0, [r3, #0]
 8001f22:	4b15      	ldr	r3, [pc, #84]	@ (8001f78 <move_sprite_down1+0x94>)
 8001f24:	6819      	ldr	r1, [r3, #0]
 8001f26:	2522      	movs	r5, #34	@ 0x22
 8001f28:	2625      	movs	r6, #37	@ 0x25
 8001f2a:	4b16      	ldr	r3, [pc, #88]	@ (8001f84 <move_sprite_down1+0xa0>)
 8001f2c:	681b      	ldr	r3, [r3, #0]
 8001f2e:	4a16      	ldr	r2, [pc, #88]	@ (8001f88 <move_sprite_down1+0xa4>)
 8001f30:	6812      	ldr	r2, [r2, #0]
 8001f32:	2401      	movs	r4, #1
 8001f34:	9404      	str	r4, [sp, #16]
 8001f36:	2400      	movs	r4, #0
 8001f38:	9403      	str	r4, [sp, #12]
 8001f3a:	9202      	str	r2, [sp, #8]
 8001f3c:	2202      	movs	r2, #2
 8001f3e:	9201      	str	r2, [sp, #4]
 8001f40:	9300      	str	r3, [sp, #0]
 8001f42:	4633      	mov	r3, r6
 8001f44:	462a      	mov	r2, r5
 8001f46:	f7ff fc67 	bl	8001818 <LCD_Sprite>

    //LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
    if (check_collision(sprite_x1, sprite_y1, z, 50)) {
 8001f4a:	4b0a      	ldr	r3, [pc, #40]	@ (8001f74 <move_sprite_down1+0x90>)
 8001f4c:	6818      	ldr	r0, [r3, #0]
 8001f4e:	4b0a      	ldr	r3, [pc, #40]	@ (8001f78 <move_sprite_down1+0x94>)
 8001f50:	6819      	ldr	r1, [r3, #0]
 8001f52:	4b0e      	ldr	r3, [pc, #56]	@ (8001f8c <move_sprite_down1+0xa8>)
 8001f54:	681a      	ldr	r2, [r3, #0]
 8001f56:	2332      	movs	r3, #50	@ 0x32
 8001f58:	f7ff fe78 	bl	8001c4c <check_collision>
 8001f5c:	4603      	mov	r3, r0
 8001f5e:	2b00      	cmp	r3, #0
 8001f60:	d004      	beq.n	8001f6c <move_sprite_down1+0x88>
    	colision2++;
 8001f62:	4b0b      	ldr	r3, [pc, #44]	@ (8001f90 <move_sprite_down1+0xac>)
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	3301      	adds	r3, #1
 8001f68:	4a09      	ldr	r2, [pc, #36]	@ (8001f90 <move_sprite_down1+0xac>)
 8001f6a:	6013      	str	r3, [r2, #0]
    }

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);  // Imprimir colisiones en la pantalla*/
}
 8001f6c:	bf00      	nop
 8001f6e:	3704      	adds	r7, #4
 8001f70:	46bd      	mov	sp, r7
 8001f72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f74:	2000a6a0 	.word	0x2000a6a0
 8001f78:	2000a6a4 	.word	0x2000a6a4
 8001f7c:	2000a650 	.word	0x2000a650
 8001f80:	2000a668 	.word	0x2000a668
 8001f84:	2000a688 	.word	0x2000a688
 8001f88:	2000a974 	.word	0x2000a974
 8001f8c:	2000a674 	.word	0x2000a674
 8001f90:	2000a954 	.word	0x2000a954

08001f94 <transmit_uart.0>:
    HAL_UART_Receive_DMA(&huart5, data2, 1);
    HAL_UART_Receive_DMA(&huart2, data, 1); //Comentar luego de pruebas
  	//HAL_UART_Receive_IT(&huart3, data, 1);
	LCD_Init();

	void transmit_uart(char *string){
 8001f94:	b580      	push	{r7, lr}
 8001f96:	b084      	sub	sp, #16
 8001f98:	af00      	add	r7, sp, #0
 8001f9a:	6078      	str	r0, [r7, #4]
 8001f9c:	f8c7 c000 	str.w	ip, [r7]
		  uint8_t len = strlen(string);
 8001fa0:	6878      	ldr	r0, [r7, #4]
 8001fa2:	f7fe f935 	bl	8000210 <strlen>
 8001fa6:	4603      	mov	r3, r0
 8001fa8:	73fb      	strb	r3, [r7, #15]
		  HAL_UART_Transmit(&huart5, (uint8_t*) string, len, 200); //200
 8001faa:	7bfb      	ldrb	r3, [r7, #15]
 8001fac:	b29a      	uxth	r2, r3
 8001fae:	23c8      	movs	r3, #200	@ 0xc8
 8001fb0:	6879      	ldr	r1, [r7, #4]
 8001fb2:	4803      	ldr	r0, [pc, #12]	@ (8001fc0 <transmit_uart.0+0x2c>)
 8001fb4:	f004 f9b4 	bl	8006320 <HAL_UART_Transmit>
	}
 8001fb8:	bf00      	nop
 8001fba:	3710      	adds	r7, #16
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	bd80      	pop	{r7, pc}
 8001fc0:	2000a79c 	.word	0x2000a79c

08001fc4 <main>:
{
 8001fc4:	b590      	push	{r4, r7, lr}
 8001fc6:	f5ad 5dfd 	sub.w	sp, sp, #8096	@ 0x1fa0
 8001fca:	b087      	sub	sp, #28
 8001fcc:	af06      	add	r7, sp, #24
int main(void)
 8001fce:	f507 53fd 	add.w	r3, r7, #8096	@ 0x1fa0
 8001fd2:	f103 0310 	add.w	r3, r3, #16
 8001fd6:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8001fda:	f102 0204 	add.w	r2, r2, #4
 8001fde:	6013      	str	r3, [r2, #0]
  HAL_Init();
 8001fe0:	f002 f836 	bl	8004050 <HAL_Init>
  SystemClock_Config();
 8001fe4:	f001 fb5e 	bl	80036a4 <SystemClock_Config>
  MX_GPIO_Init();
 8001fe8:	f001 fca4 	bl	8003934 <MX_GPIO_Init>
  MX_DMA_Init();
 8001fec:	f001 fc7a 	bl	80038e4 <MX_DMA_Init>
  MX_SPI1_Init();
 8001ff0:	f001 fbc4 	bl	800377c <MX_SPI1_Init>
  MX_USART3_UART_Init();
 8001ff4:	f001 fc4c 	bl	8003890 <MX_USART3_UART_Init>
  MX_FATFS_Init();
 8001ff8:	f005 fb2a 	bl	8007650 <MX_FATFS_Init>
  MX_UART5_Init();
 8001ffc:	f001 fbf4 	bl	80037e8 <MX_UART5_Init>
  MX_USART2_UART_Init();
 8002000:	f001 fc1c 	bl	800383c <MX_USART2_UART_Init>
    HAL_UART_Receive_DMA(&huart3, data, 1); //Recibir comandos via uart en DMA
 8002004:	2201      	movs	r2, #1
 8002006:	4972      	ldr	r1, [pc, #456]	@ (80021d0 <main+0x20c>)
 8002008:	4872      	ldr	r0, [pc, #456]	@ (80021d4 <main+0x210>)
 800200a:	f004 fa14 	bl	8006436 <HAL_UART_Receive_DMA>
    HAL_UART_Receive_DMA(&huart5, data2, 1);
 800200e:	2201      	movs	r2, #1
 8002010:	4971      	ldr	r1, [pc, #452]	@ (80021d8 <main+0x214>)
 8002012:	4872      	ldr	r0, [pc, #456]	@ (80021dc <main+0x218>)
 8002014:	f004 fa0f 	bl	8006436 <HAL_UART_Receive_DMA>
    HAL_UART_Receive_DMA(&huart2, data, 1); //Comentar luego de pruebas
 8002018:	2201      	movs	r2, #1
 800201a:	496d      	ldr	r1, [pc, #436]	@ (80021d0 <main+0x20c>)
 800201c:	4870      	ldr	r0, [pc, #448]	@ (80021e0 <main+0x21c>)
 800201e:	f004 fa0a 	bl	8006436 <HAL_UART_Receive_DMA>
	LCD_Init();
 8002022:	f7fe ff8d 	bl	8000f40 <LCD_Init>
	// Muestra la imagen desde el buffer de imagen binario
	// Ajusta las dimensiones según el tamaño de tu imagen (ejemplo 160x100)



	LCD_Clear(0xEE93);
 8002026:	f64e 6093 	movw	r0, #61075	@ 0xee93
 800202a:	f7ff fa11 	bl	8001450 <LCD_Clear>

	LCD_Bitmap(70, 35, 180, 68, exciteinicio);
 800202e:	4b6d      	ldr	r3, [pc, #436]	@ (80021e4 <main+0x220>)
 8002030:	9300      	str	r3, [sp, #0]
 8002032:	2344      	movs	r3, #68	@ 0x44
 8002034:	22b4      	movs	r2, #180	@ 0xb4
 8002036:	2123      	movs	r1, #35	@ 0x23
 8002038:	2046      	movs	r0, #70	@ 0x46
 800203a:	f7ff fb93 	bl	8001764 <LCD_Bitmap>
	LCD_Bitmap(45, 105, 234, 45, DESERT);
 800203e:	4b6a      	ldr	r3, [pc, #424]	@ (80021e8 <main+0x224>)
 8002040:	9300      	str	r3, [sp, #0]
 8002042:	232d      	movs	r3, #45	@ 0x2d
 8002044:	22ea      	movs	r2, #234	@ 0xea
 8002046:	2169      	movs	r1, #105	@ 0x69
 8002048:	202d      	movs	r0, #45	@ 0x2d
 800204a:	f7ff fb8b 	bl	8001764 <LCD_Bitmap>
	LCD_Bitmap(15, 200, 201, 22, LOGONINTENDO);
 800204e:	4b67      	ldr	r3, [pc, #412]	@ (80021ec <main+0x228>)
 8002050:	9300      	str	r3, [sp, #0]
 8002052:	2316      	movs	r3, #22
 8002054:	22c9      	movs	r2, #201	@ 0xc9
 8002056:	21c8      	movs	r1, #200	@ 0xc8
 8002058:	200f      	movs	r0, #15
 800205a:	f7ff fb83 	bl	8001764 <LCD_Bitmap>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {

		if(received_char == 'a' && unico == 1){
 800205e:	4b64      	ldr	r3, [pc, #400]	@ (80021f0 <main+0x22c>)
 8002060:	781b      	ldrb	r3, [r3, #0]
 8002062:	b2db      	uxtb	r3, r3
 8002064:	2b61      	cmp	r3, #97	@ 0x61
 8002066:	d10c      	bne.n	8002082 <main+0xbe>
 8002068:	4b62      	ldr	r3, [pc, #392]	@ (80021f4 <main+0x230>)
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	2b01      	cmp	r3, #1
 800206e:	d108      	bne.n	8002082 <main+0xbe>
			start = 1;
 8002070:	4b61      	ldr	r3, [pc, #388]	@ (80021f8 <main+0x234>)
 8002072:	2201      	movs	r2, #1
 8002074:	601a      	str	r2, [r3, #0]
			unico = 0;
 8002076:	4b5f      	ldr	r3, [pc, #380]	@ (80021f4 <main+0x230>)
 8002078:	2200      	movs	r2, #0
 800207a:	601a      	str	r2, [r3, #0]
			received_char = 'o';
 800207c:	4b5c      	ldr	r3, [pc, #368]	@ (80021f0 <main+0x22c>)
 800207e:	226f      	movs	r2, #111	@ 0x6f
 8002080:	701a      	strb	r2, [r3, #0]
		}
		if(start == 1){
 8002082:	4b5d      	ldr	r3, [pc, #372]	@ (80021f8 <main+0x234>)
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	2b01      	cmp	r3, #1
 8002088:	d12c      	bne.n	80020e4 <main+0x120>
			LCD_Clear(0x2817);
 800208a:	f642 0017 	movw	r0, #10263	@ 0x2817
 800208e:	f7ff f9df 	bl	8001450 <LCD_Clear>
			LCD_Bitmap(53, 25, 214, 85, LOGOEX);
 8002092:	4b5a      	ldr	r3, [pc, #360]	@ (80021fc <main+0x238>)
 8002094:	9300      	str	r3, [sp, #0]
 8002096:	2355      	movs	r3, #85	@ 0x55
 8002098:	22d6      	movs	r2, #214	@ 0xd6
 800209a:	2119      	movs	r1, #25
 800209c:	2035      	movs	r0, #53	@ 0x35
 800209e:	f7ff fb61 	bl	8001764 <LCD_Bitmap>
			LCD_Bitmap(110, 130, 98, 12, OPCION1);
 80020a2:	4b57      	ldr	r3, [pc, #348]	@ (8002200 <main+0x23c>)
 80020a4:	9300      	str	r3, [sp, #0]
 80020a6:	230c      	movs	r3, #12
 80020a8:	2262      	movs	r2, #98	@ 0x62
 80020aa:	2182      	movs	r1, #130	@ 0x82
 80020ac:	206e      	movs	r0, #110	@ 0x6e
 80020ae:	f7ff fb59 	bl	8001764 <LCD_Bitmap>
			LCD_Bitmap(110, 162, 142, 13, OPCION2);
 80020b2:	4b54      	ldr	r3, [pc, #336]	@ (8002204 <main+0x240>)
 80020b4:	9300      	str	r3, [sp, #0]
 80020b6:	230d      	movs	r3, #13
 80020b8:	228e      	movs	r2, #142	@ 0x8e
 80020ba:	21a2      	movs	r1, #162	@ 0xa2
 80020bc:	206e      	movs	r0, #110	@ 0x6e
 80020be:	f7ff fb51 	bl	8001764 <LCD_Bitmap>
			//LCD_Bitmap(110, 195, 84, 11, OPCION3);
			LCD_Bitmap(80, 130, 14, 15, PUNTERO);
 80020c2:	4b51      	ldr	r3, [pc, #324]	@ (8002208 <main+0x244>)
 80020c4:	9300      	str	r3, [sp, #0]
 80020c6:	230f      	movs	r3, #15
 80020c8:	220e      	movs	r2, #14
 80020ca:	2182      	movs	r1, #130	@ 0x82
 80020cc:	2050      	movs	r0, #80	@ 0x50
 80020ce:	f7ff fb49 	bl	8001764 <LCD_Bitmap>
			start = 0;
 80020d2:	4b49      	ldr	r3, [pc, #292]	@ (80021f8 <main+0x234>)
 80020d4:	2200      	movs	r2, #0
 80020d6:	601a      	str	r2, [r3, #0]
			inicio = 3;
 80020d8:	4b4c      	ldr	r3, [pc, #304]	@ (800220c <main+0x248>)
 80020da:	2203      	movs	r2, #3
 80020dc:	601a      	str	r2, [r3, #0]
			seleccion_actual = 1;
 80020de:	4b4c      	ldr	r3, [pc, #304]	@ (8002210 <main+0x24c>)
 80020e0:	2201      	movs	r2, #1
 80020e2:	701a      	strb	r2, [r3, #0]
		}
		if(inicio == 3 && received_char != new_command){ //
 80020e4:	4b49      	ldr	r3, [pc, #292]	@ (800220c <main+0x248>)
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	2b03      	cmp	r3, #3
 80020ea:	d120      	bne.n	800212e <main+0x16a>
 80020ec:	4b40      	ldr	r3, [pc, #256]	@ (80021f0 <main+0x22c>)
 80020ee:	781b      	ldrb	r3, [r3, #0]
 80020f0:	b2da      	uxtb	r2, r3
 80020f2:	4b48      	ldr	r3, [pc, #288]	@ (8002214 <main+0x250>)
 80020f4:	781b      	ldrb	r3, [r3, #0]
 80020f6:	b2db      	uxtb	r3, r3
 80020f8:	429a      	cmp	r2, r3
 80020fa:	d018      	beq.n	800212e <main+0x16a>
			//HAL_Delay(200);
			if(received_char == 'd'){
 80020fc:	4b3c      	ldr	r3, [pc, #240]	@ (80021f0 <main+0x22c>)
 80020fe:	781b      	ldrb	r3, [r3, #0]
 8002100:	b2db      	uxtb	r3, r3
 8002102:	2b64      	cmp	r3, #100	@ 0x64
 8002104:	d105      	bne.n	8002112 <main+0x14e>
				mover_puntero_arriba();
 8002106:	f7ff fd65 	bl	8001bd4 <mover_puntero_arriba>
				received_char = 'o';
 800210a:	4b39      	ldr	r3, [pc, #228]	@ (80021f0 <main+0x22c>)
 800210c:	226f      	movs	r2, #111	@ 0x6f
 800210e:	701a      	strb	r2, [r3, #0]
 8002110:	e009      	b.n	8002126 <main+0x162>
			}
			else if(received_char == 'c'){
 8002112:	4b37      	ldr	r3, [pc, #220]	@ (80021f0 <main+0x22c>)
 8002114:	781b      	ldrb	r3, [r3, #0]
 8002116:	b2db      	uxtb	r3, r3
 8002118:	2b63      	cmp	r3, #99	@ 0x63
 800211a:	d104      	bne.n	8002126 <main+0x162>
				mover_puntero_abajo();
 800211c:	f7ff fd78 	bl	8001c10 <mover_puntero_abajo>
				received_char = 'o';
 8002120:	4b33      	ldr	r3, [pc, #204]	@ (80021f0 <main+0x22c>)
 8002122:	226f      	movs	r2, #111	@ 0x6f
 8002124:	701a      	strb	r2, [r3, #0]
			}

			new_command == received_char;
 8002126:	4b3b      	ldr	r3, [pc, #236]	@ (8002214 <main+0x250>)
 8002128:	781b      	ldrb	r3, [r3, #0]
 800212a:	4b31      	ldr	r3, [pc, #196]	@ (80021f0 <main+0x22c>)
 800212c:	781b      	ldrb	r3, [r3, #0]
		}

		if(received_char == 'a' && seleccion_actual == 1){
 800212e:	4b30      	ldr	r3, [pc, #192]	@ (80021f0 <main+0x22c>)
 8002130:	781b      	ldrb	r3, [r3, #0]
 8002132:	b2db      	uxtb	r3, r3
 8002134:	2b61      	cmp	r3, #97	@ 0x61
 8002136:	d10f      	bne.n	8002158 <main+0x194>
 8002138:	4b35      	ldr	r3, [pc, #212]	@ (8002210 <main+0x24c>)
 800213a:	781b      	ldrb	r3, [r3, #0]
 800213c:	2b01      	cmp	r3, #1
 800213e:	d10b      	bne.n	8002158 <main+0x194>
			inicio = 0;
 8002140:	4b32      	ldr	r3, [pc, #200]	@ (800220c <main+0x248>)
 8002142:	2200      	movs	r2, #0
 8002144:	601a      	str	r2, [r3, #0]
			seleccion_actual = 0;
 8002146:	4b32      	ldr	r3, [pc, #200]	@ (8002210 <main+0x24c>)
 8002148:	2200      	movs	r2, #0
 800214a:	701a      	strb	r2, [r3, #0]
			pintjueg = 1;
 800214c:	4b32      	ldr	r3, [pc, #200]	@ (8002218 <main+0x254>)
 800214e:	2201      	movs	r2, #1
 8002150:	601a      	str	r2, [r3, #0]
			received_char = 'o';
 8002152:	4b27      	ldr	r3, [pc, #156]	@ (80021f0 <main+0x22c>)
 8002154:	226f      	movs	r2, #111	@ 0x6f
 8002156:	701a      	strb	r2, [r3, #0]
		}
		if(received_char == 'a' && seleccion_actual == 2){
 8002158:	4b25      	ldr	r3, [pc, #148]	@ (80021f0 <main+0x22c>)
 800215a:	781b      	ldrb	r3, [r3, #0]
 800215c:	b2db      	uxtb	r3, r3
 800215e:	2b61      	cmp	r3, #97	@ 0x61
 8002160:	d10f      	bne.n	8002182 <main+0x1be>
 8002162:	4b2b      	ldr	r3, [pc, #172]	@ (8002210 <main+0x24c>)
 8002164:	781b      	ldrb	r3, [r3, #0]
 8002166:	2b02      	cmp	r3, #2
 8002168:	d10b      	bne.n	8002182 <main+0x1be>
			inicio = 1;
 800216a:	4b28      	ldr	r3, [pc, #160]	@ (800220c <main+0x248>)
 800216c:	2201      	movs	r2, #1
 800216e:	601a      	str	r2, [r3, #0]
			seleccion_actual = 0;
 8002170:	4b27      	ldr	r3, [pc, #156]	@ (8002210 <main+0x24c>)
 8002172:	2200      	movs	r2, #0
 8002174:	701a      	strb	r2, [r3, #0]
			pintjueg = 1;
 8002176:	4b28      	ldr	r3, [pc, #160]	@ (8002218 <main+0x254>)
 8002178:	2201      	movs	r2, #1
 800217a:	601a      	str	r2, [r3, #0]
			received_char = 'o';
 800217c:	4b1c      	ldr	r3, [pc, #112]	@ (80021f0 <main+0x22c>)
 800217e:	226f      	movs	r2, #111	@ 0x6f
 8002180:	701a      	strb	r2, [r3, #0]
		}
		if(received_char == 'a' && seleccion_actual == 3){
 8002182:	4b1b      	ldr	r3, [pc, #108]	@ (80021f0 <main+0x22c>)
 8002184:	781b      	ldrb	r3, [r3, #0]
 8002186:	b2db      	uxtb	r3, r3
 8002188:	2b61      	cmp	r3, #97	@ 0x61
 800218a:	d10f      	bne.n	80021ac <main+0x1e8>
 800218c:	4b20      	ldr	r3, [pc, #128]	@ (8002210 <main+0x24c>)
 800218e:	781b      	ldrb	r3, [r3, #0]
 8002190:	2b03      	cmp	r3, #3
 8002192:	d10b      	bne.n	80021ac <main+0x1e8>
			inicio = 2;
 8002194:	4b1d      	ldr	r3, [pc, #116]	@ (800220c <main+0x248>)
 8002196:	2202      	movs	r2, #2
 8002198:	601a      	str	r2, [r3, #0]
			seleccion_actual = 0;
 800219a:	4b1d      	ldr	r3, [pc, #116]	@ (8002210 <main+0x24c>)
 800219c:	2200      	movs	r2, #0
 800219e:	701a      	strb	r2, [r3, #0]
			pintjueg = 1;
 80021a0:	4b1d      	ldr	r3, [pc, #116]	@ (8002218 <main+0x254>)
 80021a2:	2201      	movs	r2, #1
 80021a4:	601a      	str	r2, [r3, #0]
			received_char = 'o';
 80021a6:	4b12      	ldr	r3, [pc, #72]	@ (80021f0 <main+0x22c>)
 80021a8:	226f      	movs	r2, #111	@ 0x6f
 80021aa:	701a      	strb	r2, [r3, #0]
		}

		switch (inicio){
 80021ac:	4b17      	ldr	r3, [pc, #92]	@ (800220c <main+0x248>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	2b04      	cmp	r3, #4
 80021b2:	f201 823e 	bhi.w	8003632 <main+0x166e>
 80021b6:	a201      	add	r2, pc, #4	@ (adr r2, 80021bc <main+0x1f8>)
 80021b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80021bc:	0800221d 	.word	0x0800221d
 80021c0:	080032c1 	.word	0x080032c1
 80021c4:	080034cd 	.word	0x080034cd
 80021c8:	08003633 	.word	0x08003633
 80021cc:	08003589 	.word	0x08003589
 80021d0:	2000a934 	.word	0x2000a934
 80021d4:	2000a82c 	.word	0x2000a82c
 80021d8:	2000a938 	.word	0x2000a938
 80021dc:	2000a79c 	.word	0x2000a79c
 80021e0:	2000a7e4 	.word	0x2000a7e4
 80021e4:	0801d800 	.word	0x0801d800
 80021e8:	080237a0 	.word	0x080237a0
 80021ec:	080289e4 	.word	0x080289e4
 80021f0:	2000a94c 	.word	0x2000a94c
 80021f4:	2000a648 	.word	0x2000a648
 80021f8:	2000a93c 	.word	0x2000a93c
 80021fc:	200001a8 	.word	0x200001a8
 8002200:	20008fc4 	.word	0x20008fc4
 8002204:	200098f4 	.word	0x200098f4
 8002208:	20000004 	.word	0x20000004
 800220c:	2000a644 	.word	0x2000a644
 8002210:	2000a99c 	.word	0x2000a99c
 8002214:	2000a94e 	.word	0x2000a94e
 8002218:	2000a948 	.word	0x2000a948
			case 0:
				transmit_uart('1');
 800221c:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 8002220:	f103 0304 	add.w	r3, r3, #4
 8002224:	469c      	mov	ip, r3
 8002226:	2031      	movs	r0, #49	@ 0x31
 8002228:	f7ff feb4 	bl	8001f94 <transmit_uart.0>
				if(pintjueg == 1){
 800222c:	4bb8      	ldr	r3, [pc, #736]	@ (8002510 <main+0x54c>)
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	2b01      	cmp	r3, #1
 8002232:	f040 80b0 	bne.w	8002396 <main+0x3d2>
					LCD_Clear(0xEDCC);
 8002236:	f64e 50cc 	movw	r0, #60876	@ 0xedcc
 800223a:	f7ff f909 	bl	8001450 <LCD_Clear>


					LCD_Bitmap(0, 110, 42,15, MURO);
 800223e:	4bb5      	ldr	r3, [pc, #724]	@ (8002514 <main+0x550>)
 8002240:	9300      	str	r3, [sp, #0]
 8002242:	230f      	movs	r3, #15
 8002244:	222a      	movs	r2, #42	@ 0x2a
 8002246:	216e      	movs	r1, #110	@ 0x6e
 8002248:	2000      	movs	r0, #0
 800224a:	f7ff fa8b 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(40, 110, 42,15, MURO);
 800224e:	4bb1      	ldr	r3, [pc, #708]	@ (8002514 <main+0x550>)
 8002250:	9300      	str	r3, [sp, #0]
 8002252:	230f      	movs	r3, #15
 8002254:	222a      	movs	r2, #42	@ 0x2a
 8002256:	216e      	movs	r1, #110	@ 0x6e
 8002258:	2028      	movs	r0, #40	@ 0x28
 800225a:	f7ff fa83 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(80, 110, 42,15, MURO);
 800225e:	4bad      	ldr	r3, [pc, #692]	@ (8002514 <main+0x550>)
 8002260:	9300      	str	r3, [sp, #0]
 8002262:	230f      	movs	r3, #15
 8002264:	222a      	movs	r2, #42	@ 0x2a
 8002266:	216e      	movs	r1, #110	@ 0x6e
 8002268:	2050      	movs	r0, #80	@ 0x50
 800226a:	f7ff fa7b 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(120, 110, 42,15, MURO);
 800226e:	4ba9      	ldr	r3, [pc, #676]	@ (8002514 <main+0x550>)
 8002270:	9300      	str	r3, [sp, #0]
 8002272:	230f      	movs	r3, #15
 8002274:	222a      	movs	r2, #42	@ 0x2a
 8002276:	216e      	movs	r1, #110	@ 0x6e
 8002278:	2078      	movs	r0, #120	@ 0x78
 800227a:	f7ff fa73 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(160, 110, 42,15, MURO);
 800227e:	4ba5      	ldr	r3, [pc, #660]	@ (8002514 <main+0x550>)
 8002280:	9300      	str	r3, [sp, #0]
 8002282:	230f      	movs	r3, #15
 8002284:	222a      	movs	r2, #42	@ 0x2a
 8002286:	216e      	movs	r1, #110	@ 0x6e
 8002288:	20a0      	movs	r0, #160	@ 0xa0
 800228a:	f7ff fa6b 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(200, 110, 42,15, MURO);
 800228e:	4ba1      	ldr	r3, [pc, #644]	@ (8002514 <main+0x550>)
 8002290:	9300      	str	r3, [sp, #0]
 8002292:	230f      	movs	r3, #15
 8002294:	222a      	movs	r2, #42	@ 0x2a
 8002296:	216e      	movs	r1, #110	@ 0x6e
 8002298:	20c8      	movs	r0, #200	@ 0xc8
 800229a:	f7ff fa63 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(240, 110, 42,15, MURO);
 800229e:	4b9d      	ldr	r3, [pc, #628]	@ (8002514 <main+0x550>)
 80022a0:	9300      	str	r3, [sp, #0]
 80022a2:	230f      	movs	r3, #15
 80022a4:	222a      	movs	r2, #42	@ 0x2a
 80022a6:	216e      	movs	r1, #110	@ 0x6e
 80022a8:	20f0      	movs	r0, #240	@ 0xf0
 80022aa:	f7ff fa5b 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(280, 110, 42,15, MURO);
 80022ae:	4b99      	ldr	r3, [pc, #612]	@ (8002514 <main+0x550>)
 80022b0:	9300      	str	r3, [sp, #0]
 80022b2:	230f      	movs	r3, #15
 80022b4:	222a      	movs	r2, #42	@ 0x2a
 80022b6:	216e      	movs	r1, #110	@ 0x6e
 80022b8:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80022bc:	f7ff fa52 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(9, 8, 12,12, LETRAJ1);

					LCD_Bitmap(5, 215, 22,19, ICONJ2);
					LCD_Bitmap(7, 218, 16,12, LETRAJ2);*/

					LCD_Bitmap(5, 215, 22,19, ICONJ1);
 80022c0:	4b95      	ldr	r3, [pc, #596]	@ (8002518 <main+0x554>)
 80022c2:	9300      	str	r3, [sp, #0]
 80022c4:	2313      	movs	r3, #19
 80022c6:	2216      	movs	r2, #22
 80022c8:	21d7      	movs	r1, #215	@ 0xd7
 80022ca:	2005      	movs	r0, #5
 80022cc:	f7ff fa4a 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(9, 218, 12,12, LETRAJ1);
 80022d0:	4b92      	ldr	r3, [pc, #584]	@ (800251c <main+0x558>)
 80022d2:	9300      	str	r3, [sp, #0]
 80022d4:	230c      	movs	r3, #12
 80022d6:	220c      	movs	r2, #12
 80022d8:	21da      	movs	r1, #218	@ 0xda
 80022da:	2009      	movs	r0, #9
 80022dc:	f7ff fa42 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(5, 5, 22,19, ICONJ2);
 80022e0:	4b8f      	ldr	r3, [pc, #572]	@ (8002520 <main+0x55c>)
 80022e2:	9300      	str	r3, [sp, #0]
 80022e4:	2313      	movs	r3, #19
 80022e6:	2216      	movs	r2, #22
 80022e8:	2105      	movs	r1, #5
 80022ea:	2005      	movs	r0, #5
 80022ec:	f7ff fa3a 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(7, 8, 16,12, LETRAJ2);
 80022f0:	4b8c      	ldr	r3, [pc, #560]	@ (8002524 <main+0x560>)
 80022f2:	9300      	str	r3, [sp, #0]
 80022f4:	230c      	movs	r3, #12
 80022f6:	2210      	movs	r2, #16
 80022f8:	2108      	movs	r1, #8
 80022fa:	2007      	movs	r0, #7
 80022fc:	f7ff fa32 	bl	8001764 <LCD_Bitmap>




					//HEALTH BAR J2
					FillRect(26, 9, 35, 10, 0xBBE0);
 8002300:	f64b 33e0 	movw	r3, #48096	@ 0xbbe0
 8002304:	9300      	str	r3, [sp, #0]
 8002306:	230a      	movs	r3, #10
 8002308:	2223      	movs	r2, #35	@ 0x23
 800230a:	2109      	movs	r1, #9
 800230c:	201a      	movs	r0, #26
 800230e:	f7ff f8e3 	bl	80014d8 <FillRect>
					FillRect(61, 9, 35, 10, 0xBBE0);
 8002312:	f64b 33e0 	movw	r3, #48096	@ 0xbbe0
 8002316:	9300      	str	r3, [sp, #0]
 8002318:	230a      	movs	r3, #10
 800231a:	2223      	movs	r2, #35	@ 0x23
 800231c:	2109      	movs	r1, #9
 800231e:	203d      	movs	r0, #61	@ 0x3d
 8002320:	f7ff f8da 	bl	80014d8 <FillRect>
					FillRect(96, 9, 35, 10, 0xBBE0);
 8002324:	f64b 33e0 	movw	r3, #48096	@ 0xbbe0
 8002328:	9300      	str	r3, [sp, #0]
 800232a:	230a      	movs	r3, #10
 800232c:	2223      	movs	r2, #35	@ 0x23
 800232e:	2109      	movs	r1, #9
 8002330:	2060      	movs	r0, #96	@ 0x60
 8002332:	f7ff f8d1 	bl	80014d8 <FillRect>
					FillRect(131, 9, 35, 10, 0xBBE0);
 8002336:	f64b 33e0 	movw	r3, #48096	@ 0xbbe0
 800233a:	9300      	str	r3, [sp, #0]
 800233c:	230a      	movs	r3, #10
 800233e:	2223      	movs	r2, #35	@ 0x23
 8002340:	2109      	movs	r1, #9
 8002342:	2083      	movs	r0, #131	@ 0x83
 8002344:	f7ff f8c8 	bl	80014d8 <FillRect>

					//HEALTH BAR J2
					FillRect(26, 219, 35, 10, 0x321B);
 8002348:	f243 231b 	movw	r3, #12827	@ 0x321b
 800234c:	9300      	str	r3, [sp, #0]
 800234e:	230a      	movs	r3, #10
 8002350:	2223      	movs	r2, #35	@ 0x23
 8002352:	21db      	movs	r1, #219	@ 0xdb
 8002354:	201a      	movs	r0, #26
 8002356:	f7ff f8bf 	bl	80014d8 <FillRect>
					FillRect(61, 219, 35, 10, 0x321B);
 800235a:	f243 231b 	movw	r3, #12827	@ 0x321b
 800235e:	9300      	str	r3, [sp, #0]
 8002360:	230a      	movs	r3, #10
 8002362:	2223      	movs	r2, #35	@ 0x23
 8002364:	21db      	movs	r1, #219	@ 0xdb
 8002366:	203d      	movs	r0, #61	@ 0x3d
 8002368:	f7ff f8b6 	bl	80014d8 <FillRect>
					FillRect(96, 219, 35, 10, 0x321B);
 800236c:	f243 231b 	movw	r3, #12827	@ 0x321b
 8002370:	9300      	str	r3, [sp, #0]
 8002372:	230a      	movs	r3, #10
 8002374:	2223      	movs	r2, #35	@ 0x23
 8002376:	21db      	movs	r1, #219	@ 0xdb
 8002378:	2060      	movs	r0, #96	@ 0x60
 800237a:	f7ff f8ad 	bl	80014d8 <FillRect>
					FillRect(131, 219, 35, 10, 0x321B);
 800237e:	f243 231b 	movw	r3, #12827	@ 0x321b
 8002382:	9300      	str	r3, [sp, #0]
 8002384:	230a      	movs	r3, #10
 8002386:	2223      	movs	r2, #35	@ 0x23
 8002388:	21db      	movs	r1, #219	@ 0xdb
 800238a:	2083      	movs	r0, #131	@ 0x83
 800238c:	f7ff f8a4 	bl	80014d8 <FillRect>
					pintjueg = 0;
 8002390:	4b5f      	ldr	r3, [pc, #380]	@ (8002510 <main+0x54c>)
 8002392:	2200      	movs	r2, #0
 8002394:	601a      	str	r2, [r3, #0]
				//tiempo++;

				/*if(tiempo >= last_time_i && (selector1 == 0 || selector2 == 0)){
				}*/

				tiempo1++;
 8002396:	4b64      	ldr	r3, [pc, #400]	@ (8002528 <main+0x564>)
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	3301      	adds	r3, #1
 800239c:	4a62      	ldr	r2, [pc, #392]	@ (8002528 <main+0x564>)
 800239e:	6013      	str	r3, [r2, #0]
				tiempo2++;
 80023a0:	4b62      	ldr	r3, [pc, #392]	@ (800252c <main+0x568>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	3301      	adds	r3, #1
 80023a6:	4a61      	ldr	r2, [pc, #388]	@ (800252c <main+0x568>)
 80023a8:	6013      	str	r3, [r2, #0]

				if(selector1 == 0 && tiempo1 >= last_time_i){
 80023aa:	4b61      	ldr	r3, [pc, #388]	@ (8002530 <main+0x56c>)
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	f040 8094 	bne.w	80024dc <main+0x518>
 80023b4:	4b5c      	ldr	r3, [pc, #368]	@ (8002528 <main+0x564>)
 80023b6:	681a      	ldr	r2, [r3, #0]
 80023b8:	4b5e      	ldr	r3, [pc, #376]	@ (8002534 <main+0x570>)
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	429a      	cmp	r2, r3
 80023be:	f2c0 808d 	blt.w	80024dc <main+0x518>
					clear_previous_sprite(z, 130, 22, 25);
 80023c2:	4b5d      	ldr	r3, [pc, #372]	@ (8002538 <main+0x574>)
 80023c4:	6818      	ldr	r0, [r3, #0]
 80023c6:	2319      	movs	r3, #25
 80023c8:	2216      	movs	r2, #22
 80023ca:	2182      	movs	r1, #130	@ 0x82
 80023cc:	f7ff fc72 	bl	8001cb4 <clear_previous_sprite>
					int anima1 = (z / 4) % 4;  // Animación para el primer monstruo
 80023d0:	4b59      	ldr	r3, [pc, #356]	@ (8002538 <main+0x574>)
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	da00      	bge.n	80023da <main+0x416>
 80023d8:	3303      	adds	r3, #3
 80023da:	109b      	asrs	r3, r3, #2
 80023dc:	425a      	negs	r2, r3
 80023de:	f003 0303 	and.w	r3, r3, #3
 80023e2:	f002 0203 	and.w	r2, r2, #3
 80023e6:	bf58      	it	pl
 80023e8:	4253      	negpl	r3, r2
 80023ea:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 80023ee:	f102 021c 	add.w	r2, r2, #28
 80023f2:	6013      	str	r3, [r2, #0]
										// Dibujar los monstruos en la pantalla
					LCD_Sprite(z, 130, 21, 24, giroPOKEY, 4, anima1, 0, 1); // Primer monstruo
 80023f4:	4b50      	ldr	r3, [pc, #320]	@ (8002538 <main+0x574>)
 80023f6:	6818      	ldr	r0, [r3, #0]
 80023f8:	2301      	movs	r3, #1
 80023fa:	9304      	str	r3, [sp, #16]
 80023fc:	2300      	movs	r3, #0
 80023fe:	9303      	str	r3, [sp, #12]
 8002400:	f507 53fb 	add.w	r3, r7, #8032	@ 0x1f60
 8002404:	f103 031c 	add.w	r3, r3, #28
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	9302      	str	r3, [sp, #8]
 800240c:	2304      	movs	r3, #4
 800240e:	9301      	str	r3, [sp, #4]
 8002410:	4b4a      	ldr	r3, [pc, #296]	@ (800253c <main+0x578>)
 8002412:	9300      	str	r3, [sp, #0]
 8002414:	2318      	movs	r3, #24
 8002416:	2215      	movs	r2, #21
 8002418:	2182      	movs	r1, #130	@ 0x82
 800241a:	f7ff f9fd 	bl	8001818 <LCD_Sprite>
										// Incrementar las coordenadas para que los monstruos se muevan
					z--; // Incremento en X para el primer monstruo
 800241e:	4b46      	ldr	r3, [pc, #280]	@ (8002538 <main+0x574>)
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	3b01      	subs	r3, #1
 8002424:	4a44      	ldr	r2, [pc, #272]	@ (8002538 <main+0x574>)
 8002426:	6013      	str	r3, [r2, #0]
					if (check_collision(sprite_x, sprite_y, z, 150)) {
 8002428:	4b45      	ldr	r3, [pc, #276]	@ (8002540 <main+0x57c>)
 800242a:	6818      	ldr	r0, [r3, #0]
 800242c:	4b45      	ldr	r3, [pc, #276]	@ (8002544 <main+0x580>)
 800242e:	6819      	ldr	r1, [r3, #0]
 8002430:	4b41      	ldr	r3, [pc, #260]	@ (8002538 <main+0x574>)
 8002432:	681a      	ldr	r2, [r3, #0]
 8002434:	2396      	movs	r3, #150	@ 0x96
 8002436:	f7ff fc09 	bl	8001c4c <check_collision>
 800243a:	4603      	mov	r3, r0
 800243c:	2b00      	cmp	r3, #0
 800243e:	d034      	beq.n	80024aa <main+0x4e6>
						colision2++;
 8002440:	4b41      	ldr	r3, [pc, #260]	@ (8002548 <main+0x584>)
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	3301      	adds	r3, #1
 8002446:	4a40      	ldr	r2, [pc, #256]	@ (8002548 <main+0x584>)
 8002448:	6013      	str	r3, [r2, #0]
						boom2 = 1;
 800244a:	4b40      	ldr	r3, [pc, #256]	@ (800254c <main+0x588>)
 800244c:	2201      	movs	r2, #1
 800244e:	601a      	str	r2, [r3, #0]
						// Borrar el cactus cuando hay colisión
						FillRect(z, 130, 22, 25, 0xEDCC);
 8002450:	4b39      	ldr	r3, [pc, #228]	@ (8002538 <main+0x574>)
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	4618      	mov	r0, r3
 8002456:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 800245a:	9300      	str	r3, [sp, #0]
 800245c:	2319      	movs	r3, #25
 800245e:	2216      	movs	r2, #22
 8002460:	2182      	movs	r1, #130	@ 0x82
 8002462:	f7ff f839 	bl	80014d8 <FillRect>
						z = 300;
 8002466:	4b34      	ldr	r3, [pc, #208]	@ (8002538 <main+0x574>)
 8002468:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800246c:	601a      	str	r2, [r3, #0]
						FillRect(z, 130, 22, 25, 0xEDCC); // Rellenar con color de fondo
 800246e:	4b32      	ldr	r3, [pc, #200]	@ (8002538 <main+0x574>)
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	4618      	mov	r0, r3
 8002474:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002478:	9300      	str	r3, [sp, #0]
 800247a:	2319      	movs	r3, #25
 800247c:	2216      	movs	r2, #22
 800247e:	2182      	movs	r1, #130	@ 0x82
 8002480:	f7ff f82a 	bl	80014d8 <FillRect>
						selector1 = 1;
 8002484:	4b2a      	ldr	r3, [pc, #168]	@ (8002530 <main+0x56c>)
 8002486:	2201      	movs	r2, #1
 8002488:	601a      	str	r2, [r3, #0]
						//musica[0] = 'c';
						transmit_uart('3');
 800248a:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 800248e:	f103 0304 	add.w	r3, r3, #4
 8002492:	469c      	mov	ip, r3
 8002494:	2033      	movs	r0, #51	@ 0x33
 8002496:	f7ff fd7d 	bl	8001f94 <transmit_uart.0>
						transmit_uart2("1");
 800249a:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 800249e:	f103 0304 	add.w	r3, r3, #4
 80024a2:	469c      	mov	ip, r3
 80024a4:	482a      	ldr	r0, [pc, #168]	@ (8002550 <main+0x58c>)
 80024a6:	f001 f8e5 	bl	8003674 <transmit_uart2.1>
					}
					if (z == 0){
 80024aa:	4b23      	ldr	r3, [pc, #140]	@ (8002538 <main+0x574>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d114      	bne.n	80024dc <main+0x518>
						FillRect(z, 130, 22, 25, 0xEDCC); // Reiniciar la posición del enemigo
 80024b2:	4b21      	ldr	r3, [pc, #132]	@ (8002538 <main+0x574>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	4618      	mov	r0, r3
 80024b8:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80024bc:	9300      	str	r3, [sp, #0]
 80024be:	2319      	movs	r3, #25
 80024c0:	2216      	movs	r2, #22
 80024c2:	2182      	movs	r1, #130	@ 0x82
 80024c4:	f7ff f808 	bl	80014d8 <FillRect>
						z = 300;
 80024c8:	4b1b      	ldr	r3, [pc, #108]	@ (8002538 <main+0x574>)
 80024ca:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80024ce:	601a      	str	r2, [r3, #0]
						selector1 = 1;
 80024d0:	4b17      	ldr	r3, [pc, #92]	@ (8002530 <main+0x56c>)
 80024d2:	2201      	movs	r2, #1
 80024d4:	601a      	str	r2, [r3, #0]
						//tiempo = 0;
						tiempo1 = 0;
 80024d6:	4b14      	ldr	r3, [pc, #80]	@ (8002528 <main+0x564>)
 80024d8:	2200      	movs	r2, #0
 80024da:	601a      	str	r2, [r3, #0]
					}
				}

				if(selector2 == 0 && tiempo2 >= last_time_i){
 80024dc:	4b1d      	ldr	r3, [pc, #116]	@ (8002554 <main+0x590>)
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	f040 80bc 	bne.w	800265e <main+0x69a>
 80024e6:	4b11      	ldr	r3, [pc, #68]	@ (800252c <main+0x568>)
 80024e8:	681a      	ldr	r2, [r3, #0]
 80024ea:	4b12      	ldr	r3, [pc, #72]	@ (8002534 <main+0x570>)
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	429a      	cmp	r2, r3
 80024f0:	f2c0 80b5 	blt.w	800265e <main+0x69a>
					clear_previous_sprite(u, 30, 22, 25);
 80024f4:	4b18      	ldr	r3, [pc, #96]	@ (8002558 <main+0x594>)
 80024f6:	6818      	ldr	r0, [r3, #0]
 80024f8:	2319      	movs	r3, #25
 80024fa:	2216      	movs	r2, #22
 80024fc:	211e      	movs	r1, #30
 80024fe:	f7ff fbd9 	bl	8001cb4 <clear_previous_sprite>
					int anima3 = (u / 4) % 4;  // Animación para el segundo monstruo
 8002502:	4b15      	ldr	r3, [pc, #84]	@ (8002558 <main+0x594>)
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	2b00      	cmp	r3, #0
 8002508:	da28      	bge.n	800255c <main+0x598>
 800250a:	3303      	adds	r3, #3
 800250c:	e026      	b.n	800255c <main+0x598>
 800250e:	bf00      	nop
 8002510:	2000a948 	.word	0x2000a948
 8002514:	0802b598 	.word	0x0802b598
 8002518:	0802ac70 	.word	0x0802ac70
 800251c:	0802afb4 	.word	0x0802afb4
 8002520:	0802b0d4 	.word	0x0802b0d4
 8002524:	0802b418 	.word	0x0802b418
 8002528:	2000a968 	.word	0x2000a968
 800252c:	2000a96c 	.word	0x2000a96c
 8002530:	2000a960 	.word	0x2000a960
 8002534:	2000a694 	.word	0x2000a694
 8002538:	2000a674 	.word	0x2000a674
 800253c:	0802cda4 	.word	0x0802cda4
 8002540:	2000a698 	.word	0x2000a698
 8002544:	2000a69c 	.word	0x2000a69c
 8002548:	2000a954 	.word	0x2000a954
 800254c:	2000a97c 	.word	0x2000a97c
 8002550:	08008130 	.word	0x08008130
 8002554:	2000a964 	.word	0x2000a964
 8002558:	2000a678 	.word	0x2000a678
 800255c:	109b      	asrs	r3, r3, #2
 800255e:	425a      	negs	r2, r3
 8002560:	f003 0303 	and.w	r3, r3, #3
 8002564:	f002 0203 	and.w	r2, r2, #3
 8002568:	bf58      	it	pl
 800256a:	4253      	negpl	r3, r2
 800256c:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002570:	f102 0218 	add.w	r2, r2, #24
 8002574:	6013      	str	r3, [r2, #0]
					LCD_Sprite(u, 30, 21, 24, giroPOKEY, 4, anima3, 0, 1);      // Segundo monstruo
 8002576:	4bb1      	ldr	r3, [pc, #708]	@ (800283c <main+0x878>)
 8002578:	6818      	ldr	r0, [r3, #0]
 800257a:	2301      	movs	r3, #1
 800257c:	9304      	str	r3, [sp, #16]
 800257e:	2300      	movs	r3, #0
 8002580:	9303      	str	r3, [sp, #12]
 8002582:	f507 53fb 	add.w	r3, r7, #8032	@ 0x1f60
 8002586:	f103 0318 	add.w	r3, r3, #24
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	9302      	str	r3, [sp, #8]
 800258e:	2304      	movs	r3, #4
 8002590:	9301      	str	r3, [sp, #4]
 8002592:	4bab      	ldr	r3, [pc, #684]	@ (8002840 <main+0x87c>)
 8002594:	9300      	str	r3, [sp, #0]
 8002596:	2318      	movs	r3, #24
 8002598:	2215      	movs	r2, #21
 800259a:	211e      	movs	r1, #30
 800259c:	f7ff f93c 	bl	8001818 <LCD_Sprite>
					u--;
 80025a0:	4ba6      	ldr	r3, [pc, #664]	@ (800283c <main+0x878>)
 80025a2:	681b      	ldr	r3, [r3, #0]
 80025a4:	3b01      	subs	r3, #1
 80025a6:	4aa5      	ldr	r2, [pc, #660]	@ (800283c <main+0x878>)
 80025a8:	6013      	str	r3, [r2, #0]
					if(check_collision(sprite_x1, sprite_y1, u, 30)){
 80025aa:	4ba6      	ldr	r3, [pc, #664]	@ (8002844 <main+0x880>)
 80025ac:	6818      	ldr	r0, [r3, #0]
 80025ae:	4ba6      	ldr	r3, [pc, #664]	@ (8002848 <main+0x884>)
 80025b0:	6819      	ldr	r1, [r3, #0]
 80025b2:	4ba2      	ldr	r3, [pc, #648]	@ (800283c <main+0x878>)
 80025b4:	681a      	ldr	r2, [r3, #0]
 80025b6:	231e      	movs	r3, #30
 80025b8:	f7ff fb48 	bl	8001c4c <check_collision>
 80025bc:	4603      	mov	r3, r0
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d034      	beq.n	800262c <main+0x668>
						colision++;
 80025c2:	4ba2      	ldr	r3, [pc, #648]	@ (800284c <main+0x888>)
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	3301      	adds	r3, #1
 80025c8:	4aa0      	ldr	r2, [pc, #640]	@ (800284c <main+0x888>)
 80025ca:	6013      	str	r3, [r2, #0]
						boom1 = 1;
 80025cc:	4ba0      	ldr	r3, [pc, #640]	@ (8002850 <main+0x88c>)
 80025ce:	2201      	movs	r2, #1
 80025d0:	601a      	str	r2, [r3, #0]
						FillRect(u, 30, 22, 25, 0xEDCC);
 80025d2:	4b9a      	ldr	r3, [pc, #616]	@ (800283c <main+0x878>)
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	4618      	mov	r0, r3
 80025d8:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80025dc:	9300      	str	r3, [sp, #0]
 80025de:	2319      	movs	r3, #25
 80025e0:	2216      	movs	r2, #22
 80025e2:	211e      	movs	r1, #30
 80025e4:	f7fe ff78 	bl	80014d8 <FillRect>
						u = 300;
 80025e8:	4b94      	ldr	r3, [pc, #592]	@ (800283c <main+0x878>)
 80025ea:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80025ee:	601a      	str	r2, [r3, #0]
						FillRect(u, 30, 22, 25, 0xEDCC);
 80025f0:	4b92      	ldr	r3, [pc, #584]	@ (800283c <main+0x878>)
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	4618      	mov	r0, r3
 80025f6:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80025fa:	9300      	str	r3, [sp, #0]
 80025fc:	2319      	movs	r3, #25
 80025fe:	2216      	movs	r2, #22
 8002600:	211e      	movs	r1, #30
 8002602:	f7fe ff69 	bl	80014d8 <FillRect>
						selector2 = 1;
 8002606:	4b93      	ldr	r3, [pc, #588]	@ (8002854 <main+0x890>)
 8002608:	2201      	movs	r2, #1
 800260a:	601a      	str	r2, [r3, #0]
						//musica[0] = 'c';
						transmit_uart('3');
 800260c:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 8002610:	f103 0304 	add.w	r3, r3, #4
 8002614:	469c      	mov	ip, r3
 8002616:	2033      	movs	r0, #51	@ 0x33
 8002618:	f7ff fcbc 	bl	8001f94 <transmit_uart.0>
						transmit_uart2("1");
 800261c:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 8002620:	f103 0304 	add.w	r3, r3, #4
 8002624:	469c      	mov	ip, r3
 8002626:	488c      	ldr	r0, [pc, #560]	@ (8002858 <main+0x894>)
 8002628:	f001 f824 	bl	8003674 <transmit_uart2.1>
					}
					if(u == 0){
 800262c:	4b83      	ldr	r3, [pc, #524]	@ (800283c <main+0x878>)
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	2b00      	cmp	r3, #0
 8002632:	d114      	bne.n	800265e <main+0x69a>
						FillRect(u, 30, 22, 25, 0xEDCC);
 8002634:	4b81      	ldr	r3, [pc, #516]	@ (800283c <main+0x878>)
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	4618      	mov	r0, r3
 800263a:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 800263e:	9300      	str	r3, [sp, #0]
 8002640:	2319      	movs	r3, #25
 8002642:	2216      	movs	r2, #22
 8002644:	211e      	movs	r1, #30
 8002646:	f7fe ff47 	bl	80014d8 <FillRect>
						u = 300;
 800264a:	4b7c      	ldr	r3, [pc, #496]	@ (800283c <main+0x878>)
 800264c:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002650:	601a      	str	r2, [r3, #0]
						selector2 = 1;
 8002652:	4b80      	ldr	r3, [pc, #512]	@ (8002854 <main+0x890>)
 8002654:	2201      	movs	r2, #1
 8002656:	601a      	str	r2, [r3, #0]
						tiempo2 = 0;
 8002658:	4b80      	ldr	r3, [pc, #512]	@ (800285c <main+0x898>)
 800265a:	2200      	movs	r2, #0
 800265c:	601a      	str	r2, [r3, #0]
					}
				}


				if(selector1 == 1 && tiempo1 >= last_time_i){
 800265e:	4b80      	ldr	r3, [pc, #512]	@ (8002860 <main+0x89c>)
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	2b01      	cmp	r3, #1
 8002664:	f040 8097 	bne.w	8002796 <main+0x7d2>
 8002668:	4b7e      	ldr	r3, [pc, #504]	@ (8002864 <main+0x8a0>)
 800266a:	681a      	ldr	r2, [r3, #0]
 800266c:	4b7e      	ldr	r3, [pc, #504]	@ (8002868 <main+0x8a4>)
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	429a      	cmp	r2, r3
 8002672:	f2c0 8090 	blt.w	8002796 <main+0x7d2>
					clear_previous_sprite(z, 180, 35, 25);
 8002676:	4b7d      	ldr	r3, [pc, #500]	@ (800286c <main+0x8a8>)
 8002678:	6818      	ldr	r0, [r3, #0]
 800267a:	2319      	movs	r3, #25
 800267c:	2223      	movs	r2, #35	@ 0x23
 800267e:	21b4      	movs	r1, #180	@ 0xb4
 8002680:	f7ff fb18 	bl	8001cb4 <clear_previous_sprite>
					int anima1 = (z / 3) % 3;  // Animación para el primer monstruo
 8002684:	4b79      	ldr	r3, [pc, #484]	@ (800286c <main+0x8a8>)
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4a79      	ldr	r2, [pc, #484]	@ (8002870 <main+0x8ac>)
 800268a:	fb82 1203 	smull	r1, r2, r2, r3
 800268e:	17db      	asrs	r3, r3, #31
 8002690:	1ad2      	subs	r2, r2, r3
 8002692:	4b77      	ldr	r3, [pc, #476]	@ (8002870 <main+0x8ac>)
 8002694:	fb83 3102 	smull	r3, r1, r3, r2
 8002698:	17d3      	asrs	r3, r2, #31
 800269a:	1ac9      	subs	r1, r1, r3
 800269c:	460b      	mov	r3, r1
 800269e:	005b      	lsls	r3, r3, #1
 80026a0:	440b      	add	r3, r1
 80026a2:	1ad3      	subs	r3, r2, r3
 80026a4:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 80026a8:	f102 0214 	add.w	r2, r2, #20
 80026ac:	6013      	str	r3, [r2, #0]
					// Dibujar los monstruos en la pantalla
					LCD_Sprite(z, 180, 34, 25, CAMEL, 3, anima1, 0, 1); // Primer monstruo
 80026ae:	4b6f      	ldr	r3, [pc, #444]	@ (800286c <main+0x8a8>)
 80026b0:	6818      	ldr	r0, [r3, #0]
 80026b2:	2301      	movs	r3, #1
 80026b4:	9304      	str	r3, [sp, #16]
 80026b6:	2300      	movs	r3, #0
 80026b8:	9303      	str	r3, [sp, #12]
 80026ba:	f507 53fb 	add.w	r3, r7, #8032	@ 0x1f60
 80026be:	f103 0314 	add.w	r3, r3, #20
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	9302      	str	r3, [sp, #8]
 80026c6:	2303      	movs	r3, #3
 80026c8:	9301      	str	r3, [sp, #4]
 80026ca:	4b6a      	ldr	r3, [pc, #424]	@ (8002874 <main+0x8b0>)
 80026cc:	9300      	str	r3, [sp, #0]
 80026ce:	2319      	movs	r3, #25
 80026d0:	2222      	movs	r2, #34	@ 0x22
 80026d2:	21b4      	movs	r1, #180	@ 0xb4
 80026d4:	f7ff f8a0 	bl	8001818 <LCD_Sprite>
					// Incrementar las coordenadas para que los monstruos se muevan
					z--; // Incremento en X para el primer monstruo
 80026d8:	4b64      	ldr	r3, [pc, #400]	@ (800286c <main+0x8a8>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	3b01      	subs	r3, #1
 80026de:	4a63      	ldr	r2, [pc, #396]	@ (800286c <main+0x8a8>)
 80026e0:	6013      	str	r3, [r2, #0]
					if (check_collision(sprite_x, sprite_y, z, 180)) {
 80026e2:	4b65      	ldr	r3, [pc, #404]	@ (8002878 <main+0x8b4>)
 80026e4:	6818      	ldr	r0, [r3, #0]
 80026e6:	4b65      	ldr	r3, [pc, #404]	@ (800287c <main+0x8b8>)
 80026e8:	6819      	ldr	r1, [r3, #0]
 80026ea:	4b60      	ldr	r3, [pc, #384]	@ (800286c <main+0x8a8>)
 80026ec:	681a      	ldr	r2, [r3, #0]
 80026ee:	23b4      	movs	r3, #180	@ 0xb4
 80026f0:	f7ff faac 	bl	8001c4c <check_collision>
 80026f4:	4603      	mov	r3, r0
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d034      	beq.n	8002764 <main+0x7a0>
						colision2++;
 80026fa:	4b61      	ldr	r3, [pc, #388]	@ (8002880 <main+0x8bc>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	3301      	adds	r3, #1
 8002700:	4a5f      	ldr	r2, [pc, #380]	@ (8002880 <main+0x8bc>)
 8002702:	6013      	str	r3, [r2, #0]
						boom2 = 1;
 8002704:	4b5f      	ldr	r3, [pc, #380]	@ (8002884 <main+0x8c0>)
 8002706:	2201      	movs	r2, #1
 8002708:	601a      	str	r2, [r3, #0]
						// Borrar el cactus cuando hay colisión
						FillRect(z, 180, 34, 25, 0xEDCC);
 800270a:	4b58      	ldr	r3, [pc, #352]	@ (800286c <main+0x8a8>)
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	4618      	mov	r0, r3
 8002710:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002714:	9300      	str	r3, [sp, #0]
 8002716:	2319      	movs	r3, #25
 8002718:	2222      	movs	r2, #34	@ 0x22
 800271a:	21b4      	movs	r1, #180	@ 0xb4
 800271c:	f7fe fedc 	bl	80014d8 <FillRect>
						z = 300;
 8002720:	4b52      	ldr	r3, [pc, #328]	@ (800286c <main+0x8a8>)
 8002722:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002726:	601a      	str	r2, [r3, #0]
						FillRect(z, 180, 34, 25, 0xEDCC); // Rellenar con color de fondo
 8002728:	4b50      	ldr	r3, [pc, #320]	@ (800286c <main+0x8a8>)
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	4618      	mov	r0, r3
 800272e:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002732:	9300      	str	r3, [sp, #0]
 8002734:	2319      	movs	r3, #25
 8002736:	2222      	movs	r2, #34	@ 0x22
 8002738:	21b4      	movs	r1, #180	@ 0xb4
 800273a:	f7fe fecd 	bl	80014d8 <FillRect>
						selector1 = 0;
 800273e:	4b48      	ldr	r3, [pc, #288]	@ (8002860 <main+0x89c>)
 8002740:	2200      	movs	r2, #0
 8002742:	601a      	str	r2, [r3, #0]
						//musica[0] = 'c';
						transmit_uart('3');
 8002744:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 8002748:	f103 0304 	add.w	r3, r3, #4
 800274c:	469c      	mov	ip, r3
 800274e:	2033      	movs	r0, #51	@ 0x33
 8002750:	f7ff fc20 	bl	8001f94 <transmit_uart.0>
						transmit_uart2("1");
 8002754:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 8002758:	f103 0304 	add.w	r3, r3, #4
 800275c:	469c      	mov	ip, r3
 800275e:	483e      	ldr	r0, [pc, #248]	@ (8002858 <main+0x894>)
 8002760:	f000 ff88 	bl	8003674 <transmit_uart2.1>
					}
					if (z == 0){
 8002764:	4b41      	ldr	r3, [pc, #260]	@ (800286c <main+0x8a8>)
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	2b00      	cmp	r3, #0
 800276a:	d114      	bne.n	8002796 <main+0x7d2>
						FillRect(z, 180, 34, 25, 0xEDCC); // Reiniciar la posición del enemigo
 800276c:	4b3f      	ldr	r3, [pc, #252]	@ (800286c <main+0x8a8>)
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	4618      	mov	r0, r3
 8002772:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002776:	9300      	str	r3, [sp, #0]
 8002778:	2319      	movs	r3, #25
 800277a:	2222      	movs	r2, #34	@ 0x22
 800277c:	21b4      	movs	r1, #180	@ 0xb4
 800277e:	f7fe feab 	bl	80014d8 <FillRect>
						z = 300;
 8002782:	4b3a      	ldr	r3, [pc, #232]	@ (800286c <main+0x8a8>)
 8002784:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002788:	601a      	str	r2, [r3, #0]
						selector1 = 0;
 800278a:	4b35      	ldr	r3, [pc, #212]	@ (8002860 <main+0x89c>)
 800278c:	2200      	movs	r2, #0
 800278e:	601a      	str	r2, [r3, #0]
						tiempo1 = 0;
 8002790:	4b34      	ldr	r3, [pc, #208]	@ (8002864 <main+0x8a0>)
 8002792:	2200      	movs	r2, #0
 8002794:	601a      	str	r2, [r3, #0]
					}
				}

				if(selector2 == 1 && tiempo2 >= last_time_i){
 8002796:	4b2f      	ldr	r3, [pc, #188]	@ (8002854 <main+0x890>)
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	2b01      	cmp	r3, #1
 800279c:	f040 80bf 	bne.w	800291e <main+0x95a>
 80027a0:	4b2e      	ldr	r3, [pc, #184]	@ (800285c <main+0x898>)
 80027a2:	681a      	ldr	r2, [r3, #0]
 80027a4:	4b30      	ldr	r3, [pc, #192]	@ (8002868 <main+0x8a4>)
 80027a6:	681b      	ldr	r3, [r3, #0]
 80027a8:	429a      	cmp	r2, r3
 80027aa:	f2c0 80b8 	blt.w	800291e <main+0x95a>
					clear_previous_sprite(u, 80, 35, 25);
 80027ae:	4b23      	ldr	r3, [pc, #140]	@ (800283c <main+0x878>)
 80027b0:	6818      	ldr	r0, [r3, #0]
 80027b2:	2319      	movs	r3, #25
 80027b4:	2223      	movs	r2, #35	@ 0x23
 80027b6:	2150      	movs	r1, #80	@ 0x50
 80027b8:	f7ff fa7c 	bl	8001cb4 <clear_previous_sprite>
					int anima3 = (u / 3) % 3;  // Animación para el segundo monstruo
 80027bc:	4b1f      	ldr	r3, [pc, #124]	@ (800283c <main+0x878>)
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	4a2b      	ldr	r2, [pc, #172]	@ (8002870 <main+0x8ac>)
 80027c2:	fb82 1203 	smull	r1, r2, r2, r3
 80027c6:	17db      	asrs	r3, r3, #31
 80027c8:	1ad2      	subs	r2, r2, r3
 80027ca:	4b29      	ldr	r3, [pc, #164]	@ (8002870 <main+0x8ac>)
 80027cc:	fb83 3102 	smull	r3, r1, r3, r2
 80027d0:	17d3      	asrs	r3, r2, #31
 80027d2:	1ac9      	subs	r1, r1, r3
 80027d4:	460b      	mov	r3, r1
 80027d6:	005b      	lsls	r3, r3, #1
 80027d8:	440b      	add	r3, r1
 80027da:	1ad3      	subs	r3, r2, r3
 80027dc:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 80027e0:	f102 0210 	add.w	r2, r2, #16
 80027e4:	6013      	str	r3, [r2, #0]
					LCD_Sprite(u, 80, 34, 25, CAMEL, 3, anima3, 0, 1);      // Segundo monstruo
 80027e6:	4b15      	ldr	r3, [pc, #84]	@ (800283c <main+0x878>)
 80027e8:	6818      	ldr	r0, [r3, #0]
 80027ea:	2301      	movs	r3, #1
 80027ec:	9304      	str	r3, [sp, #16]
 80027ee:	2300      	movs	r3, #0
 80027f0:	9303      	str	r3, [sp, #12]
 80027f2:	f507 53fb 	add.w	r3, r7, #8032	@ 0x1f60
 80027f6:	f103 0310 	add.w	r3, r3, #16
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	9302      	str	r3, [sp, #8]
 80027fe:	2303      	movs	r3, #3
 8002800:	9301      	str	r3, [sp, #4]
 8002802:	4b1c      	ldr	r3, [pc, #112]	@ (8002874 <main+0x8b0>)
 8002804:	9300      	str	r3, [sp, #0]
 8002806:	2319      	movs	r3, #25
 8002808:	2222      	movs	r2, #34	@ 0x22
 800280a:	2150      	movs	r1, #80	@ 0x50
 800280c:	f7ff f804 	bl	8001818 <LCD_Sprite>
					u--;
 8002810:	4b0a      	ldr	r3, [pc, #40]	@ (800283c <main+0x878>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	3b01      	subs	r3, #1
 8002816:	4a09      	ldr	r2, [pc, #36]	@ (800283c <main+0x878>)
 8002818:	6013      	str	r3, [r2, #0]
					if(check_collision(sprite_x1, sprite_y1, u, 70)){
 800281a:	4b0a      	ldr	r3, [pc, #40]	@ (8002844 <main+0x880>)
 800281c:	6818      	ldr	r0, [r3, #0]
 800281e:	4b0a      	ldr	r3, [pc, #40]	@ (8002848 <main+0x884>)
 8002820:	6819      	ldr	r1, [r3, #0]
 8002822:	4b06      	ldr	r3, [pc, #24]	@ (800283c <main+0x878>)
 8002824:	681a      	ldr	r2, [r3, #0]
 8002826:	2346      	movs	r3, #70	@ 0x46
 8002828:	f7ff fa10 	bl	8001c4c <check_collision>
 800282c:	4603      	mov	r3, r0
 800282e:	2b00      	cmp	r3, #0
 8002830:	d05c      	beq.n	80028ec <main+0x928>
						colision++;
 8002832:	4b06      	ldr	r3, [pc, #24]	@ (800284c <main+0x888>)
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	3301      	adds	r3, #1
 8002838:	e026      	b.n	8002888 <main+0x8c4>
 800283a:	bf00      	nop
 800283c:	2000a678 	.word	0x2000a678
 8002840:	0802cda4 	.word	0x0802cda4
 8002844:	2000a6a0 	.word	0x2000a6a0
 8002848:	2000a6a4 	.word	0x2000a6a4
 800284c:	2000a950 	.word	0x2000a950
 8002850:	2000a978 	.word	0x2000a978
 8002854:	2000a964 	.word	0x2000a964
 8002858:	08008130 	.word	0x08008130
 800285c:	2000a96c 	.word	0x2000a96c
 8002860:	2000a960 	.word	0x2000a960
 8002864:	2000a968 	.word	0x2000a968
 8002868:	2000a694 	.word	0x2000a694
 800286c:	2000a674 	.word	0x2000a674
 8002870:	55555556 	.word	0x55555556
 8002874:	0802ba84 	.word	0x0802ba84
 8002878:	2000a698 	.word	0x2000a698
 800287c:	2000a69c 	.word	0x2000a69c
 8002880:	2000a954 	.word	0x2000a954
 8002884:	2000a97c 	.word	0x2000a97c
 8002888:	4aa1      	ldr	r2, [pc, #644]	@ (8002b10 <main+0xb4c>)
 800288a:	6013      	str	r3, [r2, #0]
						boom1 = 1;
 800288c:	4ba1      	ldr	r3, [pc, #644]	@ (8002b14 <main+0xb50>)
 800288e:	2201      	movs	r2, #1
 8002890:	601a      	str	r2, [r3, #0]
						FillRect(u, 80, 34, 25, 0xEDCC);
 8002892:	4ba1      	ldr	r3, [pc, #644]	@ (8002b18 <main+0xb54>)
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	4618      	mov	r0, r3
 8002898:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 800289c:	9300      	str	r3, [sp, #0]
 800289e:	2319      	movs	r3, #25
 80028a0:	2222      	movs	r2, #34	@ 0x22
 80028a2:	2150      	movs	r1, #80	@ 0x50
 80028a4:	f7fe fe18 	bl	80014d8 <FillRect>
						u = 300;
 80028a8:	4b9b      	ldr	r3, [pc, #620]	@ (8002b18 <main+0xb54>)
 80028aa:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80028ae:	601a      	str	r2, [r3, #0]
						FillRect(u, 80, 34, 25, 0xEDCC);
 80028b0:	4b99      	ldr	r3, [pc, #612]	@ (8002b18 <main+0xb54>)
 80028b2:	681b      	ldr	r3, [r3, #0]
 80028b4:	4618      	mov	r0, r3
 80028b6:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80028ba:	9300      	str	r3, [sp, #0]
 80028bc:	2319      	movs	r3, #25
 80028be:	2222      	movs	r2, #34	@ 0x22
 80028c0:	2150      	movs	r1, #80	@ 0x50
 80028c2:	f7fe fe09 	bl	80014d8 <FillRect>
						selector2 = 0;
 80028c6:	4b95      	ldr	r3, [pc, #596]	@ (8002b1c <main+0xb58>)
 80028c8:	2200      	movs	r2, #0
 80028ca:	601a      	str	r2, [r3, #0]
						//musica[0] = 'c';
						transmit_uart('3');
 80028cc:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 80028d0:	f103 0304 	add.w	r3, r3, #4
 80028d4:	469c      	mov	ip, r3
 80028d6:	2033      	movs	r0, #51	@ 0x33
 80028d8:	f7ff fb5c 	bl	8001f94 <transmit_uart.0>
						transmit_uart2("1");
 80028dc:	f507 53fa 	add.w	r3, r7, #8000	@ 0x1f40
 80028e0:	f103 0304 	add.w	r3, r3, #4
 80028e4:	469c      	mov	ip, r3
 80028e6:	488e      	ldr	r0, [pc, #568]	@ (8002b20 <main+0xb5c>)
 80028e8:	f000 fec4 	bl	8003674 <transmit_uart2.1>
					}
					if(u == 0){
 80028ec:	4b8a      	ldr	r3, [pc, #552]	@ (8002b18 <main+0xb54>)
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d114      	bne.n	800291e <main+0x95a>
						FillRect(u, 80, 34, 25, 0xEDCC);
 80028f4:	4b88      	ldr	r3, [pc, #544]	@ (8002b18 <main+0xb54>)
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	4618      	mov	r0, r3
 80028fa:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80028fe:	9300      	str	r3, [sp, #0]
 8002900:	2319      	movs	r3, #25
 8002902:	2222      	movs	r2, #34	@ 0x22
 8002904:	2150      	movs	r1, #80	@ 0x50
 8002906:	f7fe fde7 	bl	80014d8 <FillRect>
						u = 300;
 800290a:	4b83      	ldr	r3, [pc, #524]	@ (8002b18 <main+0xb54>)
 800290c:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002910:	601a      	str	r2, [r3, #0]
						selector2 = 0;
 8002912:	4b82      	ldr	r3, [pc, #520]	@ (8002b1c <main+0xb58>)
 8002914:	2200      	movs	r2, #0
 8002916:	601a      	str	r2, [r3, #0]
						tiempo2 = 0;
 8002918:	4b82      	ldr	r3, [pc, #520]	@ (8002b24 <main+0xb60>)
 800291a:	2200      	movs	r2, #0
 800291c:	601a      	str	r2, [r3, #0]
								}*/

				//if(random_number == 5 && )


				if(colision == 1){
 800291e:	4b7c      	ldr	r3, [pc, #496]	@ (8002b10 <main+0xb4c>)
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	2b01      	cmp	r3, #1
 8002924:	d16d      	bne.n	8002a02 <main+0xa3e>
					if(boom1 == 1){
 8002926:	4b7b      	ldr	r3, [pc, #492]	@ (8002b14 <main+0xb50>)
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	2b01      	cmp	r3, #1
 800292c:	d14b      	bne.n	80029c6 <main+0xa02>
						for(int x = 0; x < 80; x++){
 800292e:	2300      	movs	r3, #0
 8002930:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002934:	f102 021c 	add.w	r2, r2, #28
 8002938:	6013      	str	r3, [r2, #0]
 800293a:	e03a      	b.n	80029b2 <main+0x9ee>
							HAL_Delay(15);
 800293c:	200f      	movs	r0, #15
 800293e:	f001 fbf9 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002942:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002946:	f103 031c 	add.w	r3, r3, #28
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	4a76      	ldr	r2, [pc, #472]	@ (8002b28 <main+0xb64>)
 800294e:	fb82 1203 	smull	r1, r2, r2, r3
 8002952:	441a      	add	r2, r3
 8002954:	1152      	asrs	r2, r2, #5
 8002956:	17db      	asrs	r3, r3, #31
 8002958:	1ad2      	subs	r2, r2, r3
 800295a:	4b74      	ldr	r3, [pc, #464]	@ (8002b2c <main+0xb68>)
 800295c:	fb83 3102 	smull	r3, r1, r3, r2
 8002960:	17d3      	asrs	r3, r2, #31
 8002962:	1ac9      	subs	r1, r1, r3
 8002964:	460b      	mov	r3, r1
 8002966:	005b      	lsls	r3, r3, #1
 8002968:	440b      	add	r3, r1
 800296a:	1ad3      	subs	r3, r2, r3
 800296c:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002970:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x1, sprite_y1, 37, 37, caida2, 3, anima, 0, 1);
 8002972:	4b6f      	ldr	r3, [pc, #444]	@ (8002b30 <main+0xb6c>)
 8002974:	6818      	ldr	r0, [r3, #0]
 8002976:	4b6f      	ldr	r3, [pc, #444]	@ (8002b34 <main+0xb70>)
 8002978:	6819      	ldr	r1, [r3, #0]
 800297a:	4b6f      	ldr	r3, [pc, #444]	@ (8002b38 <main+0xb74>)
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	2201      	movs	r2, #1
 8002980:	9204      	str	r2, [sp, #16]
 8002982:	2200      	movs	r2, #0
 8002984:	9203      	str	r2, [sp, #12]
 8002986:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 800298a:	6812      	ldr	r2, [r2, #0]
 800298c:	9202      	str	r2, [sp, #8]
 800298e:	2203      	movs	r2, #3
 8002990:	9201      	str	r2, [sp, #4]
 8002992:	9300      	str	r3, [sp, #0]
 8002994:	2325      	movs	r3, #37	@ 0x25
 8002996:	2225      	movs	r2, #37	@ 0x25
 8002998:	f7fe ff3e 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 800299c:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 80029a0:	f103 031c 	add.w	r3, r3, #28
 80029a4:	681b      	ldr	r3, [r3, #0]
 80029a6:	3301      	adds	r3, #1
 80029a8:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 80029ac:	f102 021c 	add.w	r2, r2, #28
 80029b0:	6013      	str	r3, [r2, #0]
 80029b2:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 80029b6:	f103 031c 	add.w	r3, r3, #28
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	2b4f      	cmp	r3, #79	@ 0x4f
 80029be:	ddbd      	ble.n	800293c <main+0x978>
						}
						boom1 = 0;
 80029c0:	4b54      	ldr	r3, [pc, #336]	@ (8002b14 <main+0xb50>)
 80029c2:	2200      	movs	r2, #0
 80029c4:	601a      	str	r2, [r3, #0]
					}
					LCD_Sprite(sprite_x1, sprite_y1, 34, 37, seleccionJug2, 2, anima2, 0, 1);
 80029c6:	4b5a      	ldr	r3, [pc, #360]	@ (8002b30 <main+0xb6c>)
 80029c8:	6818      	ldr	r0, [r3, #0]
 80029ca:	4b5a      	ldr	r3, [pc, #360]	@ (8002b34 <main+0xb70>)
 80029cc:	6819      	ldr	r1, [r3, #0]
 80029ce:	4b5b      	ldr	r3, [pc, #364]	@ (8002b3c <main+0xb78>)
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	4a5b      	ldr	r2, [pc, #364]	@ (8002b40 <main+0xb7c>)
 80029d4:	6812      	ldr	r2, [r2, #0]
 80029d6:	2401      	movs	r4, #1
 80029d8:	9404      	str	r4, [sp, #16]
 80029da:	2400      	movs	r4, #0
 80029dc:	9403      	str	r4, [sp, #12]
 80029de:	9202      	str	r2, [sp, #8]
 80029e0:	2202      	movs	r2, #2
 80029e2:	9201      	str	r2, [sp, #4]
 80029e4:	9300      	str	r3, [sp, #0]
 80029e6:	2325      	movs	r3, #37	@ 0x25
 80029e8:	2222      	movs	r2, #34	@ 0x22
 80029ea:	f7fe ff15 	bl	8001818 <LCD_Sprite>
					FillRect(131, 9, 35, 10, 0xEDCC);
 80029ee:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80029f2:	9300      	str	r3, [sp, #0]
 80029f4:	230a      	movs	r3, #10
 80029f6:	2223      	movs	r2, #35	@ 0x23
 80029f8:	2109      	movs	r1, #9
 80029fa:	2083      	movs	r0, #131	@ 0x83
 80029fc:	f7fe fd6c 	bl	80014d8 <FillRect>
 8002a00:	e17f      	b.n	8002d02 <main+0xd3e>
				}else if(colision == 2){
 8002a02:	4b43      	ldr	r3, [pc, #268]	@ (8002b10 <main+0xb4c>)
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	2b02      	cmp	r3, #2
 8002a08:	d171      	bne.n	8002aee <main+0xb2a>
					if(boom1 == 1){
 8002a0a:	4b42      	ldr	r3, [pc, #264]	@ (8002b14 <main+0xb50>)
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	2b01      	cmp	r3, #1
 8002a10:	d14f      	bne.n	8002ab2 <main+0xaee>
						for(int x = 0; x < 80; x++){
 8002a12:	2300      	movs	r3, #0
 8002a14:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002a18:	f102 0218 	add.w	r2, r2, #24
 8002a1c:	6013      	str	r3, [r2, #0]
 8002a1e:	e03e      	b.n	8002a9e <main+0xada>
							HAL_Delay(15);
 8002a20:	200f      	movs	r0, #15
 8002a22:	f001 fb87 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002a26:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002a2a:	f103 0318 	add.w	r3, r3, #24
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	4a3d      	ldr	r2, [pc, #244]	@ (8002b28 <main+0xb64>)
 8002a32:	fb82 1203 	smull	r1, r2, r2, r3
 8002a36:	441a      	add	r2, r3
 8002a38:	1152      	asrs	r2, r2, #5
 8002a3a:	17db      	asrs	r3, r3, #31
 8002a3c:	1ad2      	subs	r2, r2, r3
 8002a3e:	4b3b      	ldr	r3, [pc, #236]	@ (8002b2c <main+0xb68>)
 8002a40:	fb83 3102 	smull	r3, r1, r3, r2
 8002a44:	17d3      	asrs	r3, r2, #31
 8002a46:	1ac9      	subs	r1, r1, r3
 8002a48:	460b      	mov	r3, r1
 8002a4a:	005b      	lsls	r3, r3, #1
 8002a4c:	440b      	add	r3, r1
 8002a4e:	1ad3      	subs	r3, r2, r3
 8002a50:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002a54:	f102 0204 	add.w	r2, r2, #4
 8002a58:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x1, sprite_y1, 37, 37, caida2, 3, anima, 0, 1);
 8002a5a:	4b35      	ldr	r3, [pc, #212]	@ (8002b30 <main+0xb6c>)
 8002a5c:	6818      	ldr	r0, [r3, #0]
 8002a5e:	4b35      	ldr	r3, [pc, #212]	@ (8002b34 <main+0xb70>)
 8002a60:	6819      	ldr	r1, [r3, #0]
 8002a62:	4b35      	ldr	r3, [pc, #212]	@ (8002b38 <main+0xb74>)
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	2201      	movs	r2, #1
 8002a68:	9204      	str	r2, [sp, #16]
 8002a6a:	2200      	movs	r2, #0
 8002a6c:	9203      	str	r2, [sp, #12]
 8002a6e:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002a72:	f102 0204 	add.w	r2, r2, #4
 8002a76:	6812      	ldr	r2, [r2, #0]
 8002a78:	9202      	str	r2, [sp, #8]
 8002a7a:	2203      	movs	r2, #3
 8002a7c:	9201      	str	r2, [sp, #4]
 8002a7e:	9300      	str	r3, [sp, #0]
 8002a80:	2325      	movs	r3, #37	@ 0x25
 8002a82:	2225      	movs	r2, #37	@ 0x25
 8002a84:	f7fe fec8 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002a88:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002a8c:	f103 0318 	add.w	r3, r3, #24
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	3301      	adds	r3, #1
 8002a94:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002a98:	f102 0218 	add.w	r2, r2, #24
 8002a9c:	6013      	str	r3, [r2, #0]
 8002a9e:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002aa2:	f103 0318 	add.w	r3, r3, #24
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	2b4f      	cmp	r3, #79	@ 0x4f
 8002aaa:	ddb9      	ble.n	8002a20 <main+0xa5c>
						}
						boom1 = 0;
 8002aac:	4b19      	ldr	r3, [pc, #100]	@ (8002b14 <main+0xb50>)
 8002aae:	2200      	movs	r2, #0
 8002ab0:	601a      	str	r2, [r3, #0]
					}
					LCD_Sprite(sprite_x1, sprite_y1, 34, 37, seleccionJug2, 2, anima2, 0, 1);
 8002ab2:	4b1f      	ldr	r3, [pc, #124]	@ (8002b30 <main+0xb6c>)
 8002ab4:	6818      	ldr	r0, [r3, #0]
 8002ab6:	4b1f      	ldr	r3, [pc, #124]	@ (8002b34 <main+0xb70>)
 8002ab8:	6819      	ldr	r1, [r3, #0]
 8002aba:	4b20      	ldr	r3, [pc, #128]	@ (8002b3c <main+0xb78>)
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	4a20      	ldr	r2, [pc, #128]	@ (8002b40 <main+0xb7c>)
 8002ac0:	6812      	ldr	r2, [r2, #0]
 8002ac2:	2401      	movs	r4, #1
 8002ac4:	9404      	str	r4, [sp, #16]
 8002ac6:	2400      	movs	r4, #0
 8002ac8:	9403      	str	r4, [sp, #12]
 8002aca:	9202      	str	r2, [sp, #8]
 8002acc:	2202      	movs	r2, #2
 8002ace:	9201      	str	r2, [sp, #4]
 8002ad0:	9300      	str	r3, [sp, #0]
 8002ad2:	2325      	movs	r3, #37	@ 0x25
 8002ad4:	2222      	movs	r2, #34	@ 0x22
 8002ad6:	f7fe fe9f 	bl	8001818 <LCD_Sprite>
					FillRect(96, 9, 35, 10, 0xEDCC);
 8002ada:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002ade:	9300      	str	r3, [sp, #0]
 8002ae0:	230a      	movs	r3, #10
 8002ae2:	2223      	movs	r2, #35	@ 0x23
 8002ae4:	2109      	movs	r1, #9
 8002ae6:	2060      	movs	r0, #96	@ 0x60
 8002ae8:	f7fe fcf6 	bl	80014d8 <FillRect>
 8002aec:	e109      	b.n	8002d02 <main+0xd3e>
				}else if(colision == 3){
 8002aee:	4b08      	ldr	r3, [pc, #32]	@ (8002b10 <main+0xb4c>)
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	2b03      	cmp	r3, #3
 8002af4:	f040 808d 	bne.w	8002c12 <main+0xc4e>
					if(boom1 == 1){
 8002af8:	4b06      	ldr	r3, [pc, #24]	@ (8002b14 <main+0xb50>)
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	2b01      	cmp	r3, #1
 8002afe:	d16a      	bne.n	8002bd6 <main+0xc12>
						for(int x = 0; x < 80; x++){
 8002b00:	2300      	movs	r3, #0
 8002b02:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002b06:	f102 0214 	add.w	r2, r2, #20
 8002b0a:	6013      	str	r3, [r2, #0]
 8002b0c:	e059      	b.n	8002bc2 <main+0xbfe>
 8002b0e:	bf00      	nop
 8002b10:	2000a950 	.word	0x2000a950
 8002b14:	2000a978 	.word	0x2000a978
 8002b18:	2000a678 	.word	0x2000a678
 8002b1c:	2000a964 	.word	0x2000a964
 8002b20:	08008130 	.word	0x08008130
 8002b24:	2000a96c 	.word	0x2000a96c
 8002b28:	ea0ea0eb 	.word	0xea0ea0eb
 8002b2c:	55555556 	.word	0x55555556
 8002b30:	2000a6a0 	.word	0x2000a6a0
 8002b34:	2000a6a4 	.word	0x2000a6a4
 8002b38:	2000a690 	.word	0x2000a690
 8002b3c:	2000a688 	.word	0x2000a688
 8002b40:	2000a974 	.word	0x2000a974
							HAL_Delay(15);
 8002b44:	200f      	movs	r0, #15
 8002b46:	f001 faf5 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002b4a:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002b4e:	f103 0314 	add.w	r3, r3, #20
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	4aae      	ldr	r2, [pc, #696]	@ (8002e10 <main+0xe4c>)
 8002b56:	fb82 1203 	smull	r1, r2, r2, r3
 8002b5a:	441a      	add	r2, r3
 8002b5c:	1152      	asrs	r2, r2, #5
 8002b5e:	17db      	asrs	r3, r3, #31
 8002b60:	1ad2      	subs	r2, r2, r3
 8002b62:	4bac      	ldr	r3, [pc, #688]	@ (8002e14 <main+0xe50>)
 8002b64:	fb83 3102 	smull	r3, r1, r3, r2
 8002b68:	17d3      	asrs	r3, r2, #31
 8002b6a:	1ac9      	subs	r1, r1, r3
 8002b6c:	460b      	mov	r3, r1
 8002b6e:	005b      	lsls	r3, r3, #1
 8002b70:	440b      	add	r3, r1
 8002b72:	1ad3      	subs	r3, r2, r3
 8002b74:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002b78:	f102 0208 	add.w	r2, r2, #8
 8002b7c:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x1, sprite_y1, 37, 37, caida2, 3, anima, 0, 1);
 8002b7e:	4ba6      	ldr	r3, [pc, #664]	@ (8002e18 <main+0xe54>)
 8002b80:	6818      	ldr	r0, [r3, #0]
 8002b82:	4ba6      	ldr	r3, [pc, #664]	@ (8002e1c <main+0xe58>)
 8002b84:	6819      	ldr	r1, [r3, #0]
 8002b86:	4ba6      	ldr	r3, [pc, #664]	@ (8002e20 <main+0xe5c>)
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	2201      	movs	r2, #1
 8002b8c:	9204      	str	r2, [sp, #16]
 8002b8e:	2200      	movs	r2, #0
 8002b90:	9203      	str	r2, [sp, #12]
 8002b92:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002b96:	f102 0208 	add.w	r2, r2, #8
 8002b9a:	6812      	ldr	r2, [r2, #0]
 8002b9c:	9202      	str	r2, [sp, #8]
 8002b9e:	2203      	movs	r2, #3
 8002ba0:	9201      	str	r2, [sp, #4]
 8002ba2:	9300      	str	r3, [sp, #0]
 8002ba4:	2325      	movs	r3, #37	@ 0x25
 8002ba6:	2225      	movs	r2, #37	@ 0x25
 8002ba8:	f7fe fe36 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002bac:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002bb0:	f103 0314 	add.w	r3, r3, #20
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	3301      	adds	r3, #1
 8002bb8:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002bbc:	f102 0214 	add.w	r2, r2, #20
 8002bc0:	6013      	str	r3, [r2, #0]
 8002bc2:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002bc6:	f103 0314 	add.w	r3, r3, #20
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	2b4f      	cmp	r3, #79	@ 0x4f
 8002bce:	ddb9      	ble.n	8002b44 <main+0xb80>
						}
						boom1 = 0;
 8002bd0:	4b94      	ldr	r3, [pc, #592]	@ (8002e24 <main+0xe60>)
 8002bd2:	2200      	movs	r2, #0
 8002bd4:	601a      	str	r2, [r3, #0]
					}
					LCD_Sprite(sprite_x1, sprite_y1, 34, 37, seleccionJug2, 2, anima2, 0, 1);
 8002bd6:	4b90      	ldr	r3, [pc, #576]	@ (8002e18 <main+0xe54>)
 8002bd8:	6818      	ldr	r0, [r3, #0]
 8002bda:	4b90      	ldr	r3, [pc, #576]	@ (8002e1c <main+0xe58>)
 8002bdc:	6819      	ldr	r1, [r3, #0]
 8002bde:	4b92      	ldr	r3, [pc, #584]	@ (8002e28 <main+0xe64>)
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	4a92      	ldr	r2, [pc, #584]	@ (8002e2c <main+0xe68>)
 8002be4:	6812      	ldr	r2, [r2, #0]
 8002be6:	2401      	movs	r4, #1
 8002be8:	9404      	str	r4, [sp, #16]
 8002bea:	2400      	movs	r4, #0
 8002bec:	9403      	str	r4, [sp, #12]
 8002bee:	9202      	str	r2, [sp, #8]
 8002bf0:	2202      	movs	r2, #2
 8002bf2:	9201      	str	r2, [sp, #4]
 8002bf4:	9300      	str	r3, [sp, #0]
 8002bf6:	2325      	movs	r3, #37	@ 0x25
 8002bf8:	2222      	movs	r2, #34	@ 0x22
 8002bfa:	f7fe fe0d 	bl	8001818 <LCD_Sprite>
					FillRect(61, 9, 35, 10, 0xEDCC);
 8002bfe:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002c02:	9300      	str	r3, [sp, #0]
 8002c04:	230a      	movs	r3, #10
 8002c06:	2223      	movs	r2, #35	@ 0x23
 8002c08:	2109      	movs	r1, #9
 8002c0a:	203d      	movs	r0, #61	@ 0x3d
 8002c0c:	f7fe fc64 	bl	80014d8 <FillRect>
 8002c10:	e077      	b.n	8002d02 <main+0xd3e>
				}else if(colision == 4){
 8002c12:	4b87      	ldr	r3, [pc, #540]	@ (8002e30 <main+0xe6c>)
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	2b04      	cmp	r3, #4
 8002c18:	d173      	bne.n	8002d02 <main+0xd3e>
					if(boom1 == 1){
 8002c1a:	4b82      	ldr	r3, [pc, #520]	@ (8002e24 <main+0xe60>)
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	2b01      	cmp	r3, #1
 8002c20:	d14f      	bne.n	8002cc2 <main+0xcfe>
						for(int x = 0; x < 80; x++){
 8002c22:	2300      	movs	r3, #0
 8002c24:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002c28:	f102 0210 	add.w	r2, r2, #16
 8002c2c:	6013      	str	r3, [r2, #0]
 8002c2e:	e03e      	b.n	8002cae <main+0xcea>
							HAL_Delay(15);
 8002c30:	200f      	movs	r0, #15
 8002c32:	f001 fa7f 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002c36:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002c3a:	f103 0310 	add.w	r3, r3, #16
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	4a73      	ldr	r2, [pc, #460]	@ (8002e10 <main+0xe4c>)
 8002c42:	fb82 1203 	smull	r1, r2, r2, r3
 8002c46:	441a      	add	r2, r3
 8002c48:	1152      	asrs	r2, r2, #5
 8002c4a:	17db      	asrs	r3, r3, #31
 8002c4c:	1ad2      	subs	r2, r2, r3
 8002c4e:	4b71      	ldr	r3, [pc, #452]	@ (8002e14 <main+0xe50>)
 8002c50:	fb83 3102 	smull	r3, r1, r3, r2
 8002c54:	17d3      	asrs	r3, r2, #31
 8002c56:	1ac9      	subs	r1, r1, r3
 8002c58:	460b      	mov	r3, r1
 8002c5a:	005b      	lsls	r3, r3, #1
 8002c5c:	440b      	add	r3, r1
 8002c5e:	1ad3      	subs	r3, r2, r3
 8002c60:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002c64:	f102 020c 	add.w	r2, r2, #12
 8002c68:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x1, sprite_y1, 37, 37, caida2, 3, anima, 0, 1);
 8002c6a:	4b6b      	ldr	r3, [pc, #428]	@ (8002e18 <main+0xe54>)
 8002c6c:	6818      	ldr	r0, [r3, #0]
 8002c6e:	4b6b      	ldr	r3, [pc, #428]	@ (8002e1c <main+0xe58>)
 8002c70:	6819      	ldr	r1, [r3, #0]
 8002c72:	4b6b      	ldr	r3, [pc, #428]	@ (8002e20 <main+0xe5c>)
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	2201      	movs	r2, #1
 8002c78:	9204      	str	r2, [sp, #16]
 8002c7a:	2200      	movs	r2, #0
 8002c7c:	9203      	str	r2, [sp, #12]
 8002c7e:	f507 52fb 	add.w	r2, r7, #8032	@ 0x1f60
 8002c82:	f102 020c 	add.w	r2, r2, #12
 8002c86:	6812      	ldr	r2, [r2, #0]
 8002c88:	9202      	str	r2, [sp, #8]
 8002c8a:	2203      	movs	r2, #3
 8002c8c:	9201      	str	r2, [sp, #4]
 8002c8e:	9300      	str	r3, [sp, #0]
 8002c90:	2325      	movs	r3, #37	@ 0x25
 8002c92:	2225      	movs	r2, #37	@ 0x25
 8002c94:	f7fe fdc0 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002c98:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002c9c:	f103 0310 	add.w	r3, r3, #16
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	3301      	adds	r3, #1
 8002ca4:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002ca8:	f102 0210 	add.w	r2, r2, #16
 8002cac:	6013      	str	r3, [r2, #0]
 8002cae:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002cb2:	f103 0310 	add.w	r3, r3, #16
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	2b4f      	cmp	r3, #79	@ 0x4f
 8002cba:	ddb9      	ble.n	8002c30 <main+0xc6c>
						}
						boom1 = 0;
 8002cbc:	4b59      	ldr	r3, [pc, #356]	@ (8002e24 <main+0xe60>)
 8002cbe:	2200      	movs	r2, #0
 8002cc0:	601a      	str	r2, [r3, #0]
					}
					LCD_Sprite(sprite_x1, sprite_y1, 34, 37, seleccionJug2, 2, anima2, 0, 1);
 8002cc2:	4b55      	ldr	r3, [pc, #340]	@ (8002e18 <main+0xe54>)
 8002cc4:	6818      	ldr	r0, [r3, #0]
 8002cc6:	4b55      	ldr	r3, [pc, #340]	@ (8002e1c <main+0xe58>)
 8002cc8:	6819      	ldr	r1, [r3, #0]
 8002cca:	4b57      	ldr	r3, [pc, #348]	@ (8002e28 <main+0xe64>)
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	4a57      	ldr	r2, [pc, #348]	@ (8002e2c <main+0xe68>)
 8002cd0:	6812      	ldr	r2, [r2, #0]
 8002cd2:	2401      	movs	r4, #1
 8002cd4:	9404      	str	r4, [sp, #16]
 8002cd6:	2400      	movs	r4, #0
 8002cd8:	9403      	str	r4, [sp, #12]
 8002cda:	9202      	str	r2, [sp, #8]
 8002cdc:	2202      	movs	r2, #2
 8002cde:	9201      	str	r2, [sp, #4]
 8002ce0:	9300      	str	r3, [sp, #0]
 8002ce2:	2325      	movs	r3, #37	@ 0x25
 8002ce4:	2222      	movs	r2, #34	@ 0x22
 8002ce6:	f7fe fd97 	bl	8001818 <LCD_Sprite>
					FillRect(26, 9, 35, 10, 0xEDCC);
 8002cea:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002cee:	9300      	str	r3, [sp, #0]
 8002cf0:	230a      	movs	r3, #10
 8002cf2:	2223      	movs	r2, #35	@ 0x23
 8002cf4:	2109      	movs	r1, #9
 8002cf6:	201a      	movs	r0, #26
 8002cf8:	f7fe fbee 	bl	80014d8 <FillRect>
					loser2 = 1;
 8002cfc:	4b4d      	ldr	r3, [pc, #308]	@ (8002e34 <main+0xe70>)
 8002cfe:	2201      	movs	r2, #1
 8002d00:	601a      	str	r2, [r3, #0]
				}


				if(colision2 == 1){
 8002d02:	4b4d      	ldr	r3, [pc, #308]	@ (8002e38 <main+0xe74>)
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	2b01      	cmp	r3, #1
 8002d08:	d171      	bne.n	8002dee <main+0xe2a>

					if(boom2 == 1){
 8002d0a:	4b4c      	ldr	r3, [pc, #304]	@ (8002e3c <main+0xe78>)
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	2b01      	cmp	r3, #1
 8002d10:	d14f      	bne.n	8002db2 <main+0xdee>
						int anima = (x/50)%3;
						LCD_Sprite(sprite_x, sprite_y, 31, 32, colijug1, 3, anima, 0, 1);
						if (x >= 320 - 32) {
							x = 0; // Restablece x para futuras ejecuciones
						}*/
						for(int x = 0; x < 80; x++){
 8002d12:	2300      	movs	r3, #0
 8002d14:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002d18:	f102 020c 	add.w	r2, r2, #12
 8002d1c:	6013      	str	r3, [r2, #0]
 8002d1e:	e03e      	b.n	8002d9e <main+0xdda>
							HAL_Delay(15);
 8002d20:	200f      	movs	r0, #15
 8002d22:	f001 fa07 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002d26:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002d2a:	f103 030c 	add.w	r3, r3, #12
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	4a37      	ldr	r2, [pc, #220]	@ (8002e10 <main+0xe4c>)
 8002d32:	fb82 1203 	smull	r1, r2, r2, r3
 8002d36:	441a      	add	r2, r3
 8002d38:	1152      	asrs	r2, r2, #5
 8002d3a:	17db      	asrs	r3, r3, #31
 8002d3c:	1ad2      	subs	r2, r2, r3
 8002d3e:	4b35      	ldr	r3, [pc, #212]	@ (8002e14 <main+0xe50>)
 8002d40:	fb83 3102 	smull	r3, r1, r3, r2
 8002d44:	17d3      	asrs	r3, r2, #31
 8002d46:	1ac9      	subs	r1, r1, r3
 8002d48:	460b      	mov	r3, r1
 8002d4a:	005b      	lsls	r3, r3, #1
 8002d4c:	440b      	add	r3, r1
 8002d4e:	1ad3      	subs	r3, r2, r3
 8002d50:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8002d54:	f102 0210 	add.w	r2, r2, #16
 8002d58:	6013      	str	r3, [r2, #0]
							//LCD_Sprite(sprite_x, sprite_y, 31, 32, colisionjug1, 3, anima, 0, 1);
							LCD_Sprite(sprite_x, sprite_y, 37, 37, caida1, 3, anima, 0, 1);
 8002d5a:	4b39      	ldr	r3, [pc, #228]	@ (8002e40 <main+0xe7c>)
 8002d5c:	6818      	ldr	r0, [r3, #0]
 8002d5e:	4b39      	ldr	r3, [pc, #228]	@ (8002e44 <main+0xe80>)
 8002d60:	6819      	ldr	r1, [r3, #0]
 8002d62:	4b39      	ldr	r3, [pc, #228]	@ (8002e48 <main+0xe84>)
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	2201      	movs	r2, #1
 8002d68:	9204      	str	r2, [sp, #16]
 8002d6a:	2200      	movs	r2, #0
 8002d6c:	9203      	str	r2, [sp, #12]
 8002d6e:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8002d72:	f102 0210 	add.w	r2, r2, #16
 8002d76:	6812      	ldr	r2, [r2, #0]
 8002d78:	9202      	str	r2, [sp, #8]
 8002d7a:	2203      	movs	r2, #3
 8002d7c:	9201      	str	r2, [sp, #4]
 8002d7e:	9300      	str	r3, [sp, #0]
 8002d80:	2325      	movs	r3, #37	@ 0x25
 8002d82:	2225      	movs	r2, #37	@ 0x25
 8002d84:	f7fe fd48 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002d88:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002d8c:	f103 030c 	add.w	r3, r3, #12
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	3301      	adds	r3, #1
 8002d94:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002d98:	f102 020c 	add.w	r2, r2, #12
 8002d9c:	6013      	str	r3, [r2, #0]
 8002d9e:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002da2:	f103 030c 	add.w	r3, r3, #12
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	2b4f      	cmp	r3, #79	@ 0x4f
 8002daa:	ddb9      	ble.n	8002d20 <main+0xd5c>
						}
						boom2 = 0;
 8002dac:	4b23      	ldr	r3, [pc, #140]	@ (8002e3c <main+0xe78>)
 8002dae:	2200      	movs	r2, #0
 8002db0:	601a      	str	r2, [r3, #0]
					}
					//LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
					LCD_Sprite(sprite_x, sprite_y, 34, 37, seleccionJug1, 2, anima1, 0, 1);
 8002db2:	4b23      	ldr	r3, [pc, #140]	@ (8002e40 <main+0xe7c>)
 8002db4:	6818      	ldr	r0, [r3, #0]
 8002db6:	4b23      	ldr	r3, [pc, #140]	@ (8002e44 <main+0xe80>)
 8002db8:	6819      	ldr	r1, [r3, #0]
 8002dba:	4b24      	ldr	r3, [pc, #144]	@ (8002e4c <main+0xe88>)
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	4a24      	ldr	r2, [pc, #144]	@ (8002e50 <main+0xe8c>)
 8002dc0:	6812      	ldr	r2, [r2, #0]
 8002dc2:	2401      	movs	r4, #1
 8002dc4:	9404      	str	r4, [sp, #16]
 8002dc6:	2400      	movs	r4, #0
 8002dc8:	9403      	str	r4, [sp, #12]
 8002dca:	9202      	str	r2, [sp, #8]
 8002dcc:	2202      	movs	r2, #2
 8002dce:	9201      	str	r2, [sp, #4]
 8002dd0:	9300      	str	r3, [sp, #0]
 8002dd2:	2325      	movs	r3, #37	@ 0x25
 8002dd4:	2222      	movs	r2, #34	@ 0x22
 8002dd6:	f7fe fd1f 	bl	8001818 <LCD_Sprite>
					FillRect(131, 219, 35, 10, 0xEDCC);
 8002dda:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002dde:	9300      	str	r3, [sp, #0]
 8002de0:	230a      	movs	r3, #10
 8002de2:	2223      	movs	r2, #35	@ 0x23
 8002de4:	21db      	movs	r1, #219	@ 0xdb
 8002de6:	2083      	movs	r0, #131	@ 0x83
 8002de8:	f7fe fb76 	bl	80014d8 <FillRect>
 8002dec:	e18f      	b.n	800310e <main+0x114a>

				}else if(colision2 == 2){
 8002dee:	4b12      	ldr	r3, [pc, #72]	@ (8002e38 <main+0xe74>)
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	2b02      	cmp	r3, #2
 8002df4:	f040 8095 	bne.w	8002f22 <main+0xf5e>
					if(boom2 == 1){
 8002df8:	4b10      	ldr	r3, [pc, #64]	@ (8002e3c <main+0xe78>)
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	2b01      	cmp	r3, #1
 8002dfe:	d172      	bne.n	8002ee6 <main+0xf22>
						int anima = (x/50)%3;
						LCD_Sprite(sprite_x, sprite_y, 31, 32, colijug1, 3, anima, 0, 1);
						if (x >= 320 - 32) {
							x = 0; // Restablece x para futuras ejecuciones
						}*/
						for(int x = 0; x < 80; x++){
 8002e00:	2300      	movs	r3, #0
 8002e02:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002e06:	f102 0208 	add.w	r2, r2, #8
 8002e0a:	6013      	str	r3, [r2, #0]
 8002e0c:	e061      	b.n	8002ed2 <main+0xf0e>
 8002e0e:	bf00      	nop
 8002e10:	ea0ea0eb 	.word	0xea0ea0eb
 8002e14:	55555556 	.word	0x55555556
 8002e18:	2000a6a0 	.word	0x2000a6a0
 8002e1c:	2000a6a4 	.word	0x2000a6a4
 8002e20:	2000a690 	.word	0x2000a690
 8002e24:	2000a978 	.word	0x2000a978
 8002e28:	2000a688 	.word	0x2000a688
 8002e2c:	2000a974 	.word	0x2000a974
 8002e30:	2000a950 	.word	0x2000a950
 8002e34:	2000a944 	.word	0x2000a944
 8002e38:	2000a954 	.word	0x2000a954
 8002e3c:	2000a97c 	.word	0x2000a97c
 8002e40:	2000a698 	.word	0x2000a698
 8002e44:	2000a69c 	.word	0x2000a69c
 8002e48:	2000a68c 	.word	0x2000a68c
 8002e4c:	2000a684 	.word	0x2000a684
 8002e50:	2000a970 	.word	0x2000a970
							HAL_Delay(15);
 8002e54:	200f      	movs	r0, #15
 8002e56:	f001 f96d 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002e5a:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002e5e:	f103 0308 	add.w	r3, r3, #8
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	4a70      	ldr	r2, [pc, #448]	@ (8003028 <main+0x1064>)
 8002e66:	fb82 1203 	smull	r1, r2, r2, r3
 8002e6a:	441a      	add	r2, r3
 8002e6c:	1152      	asrs	r2, r2, #5
 8002e6e:	17db      	asrs	r3, r3, #31
 8002e70:	1ad2      	subs	r2, r2, r3
 8002e72:	4b6e      	ldr	r3, [pc, #440]	@ (800302c <main+0x1068>)
 8002e74:	fb83 3102 	smull	r3, r1, r3, r2
 8002e78:	17d3      	asrs	r3, r2, #31
 8002e7a:	1ac9      	subs	r1, r1, r3
 8002e7c:	460b      	mov	r3, r1
 8002e7e:	005b      	lsls	r3, r3, #1
 8002e80:	440b      	add	r3, r1
 8002e82:	1ad3      	subs	r3, r2, r3
 8002e84:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8002e88:	f102 0214 	add.w	r2, r2, #20
 8002e8c:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x, sprite_y, 37, 37, caida1, 3, anima, 0, 1);
 8002e8e:	4b68      	ldr	r3, [pc, #416]	@ (8003030 <main+0x106c>)
 8002e90:	6818      	ldr	r0, [r3, #0]
 8002e92:	4b68      	ldr	r3, [pc, #416]	@ (8003034 <main+0x1070>)
 8002e94:	6819      	ldr	r1, [r3, #0]
 8002e96:	4b68      	ldr	r3, [pc, #416]	@ (8003038 <main+0x1074>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	2201      	movs	r2, #1
 8002e9c:	9204      	str	r2, [sp, #16]
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	9203      	str	r2, [sp, #12]
 8002ea2:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8002ea6:	f102 0214 	add.w	r2, r2, #20
 8002eaa:	6812      	ldr	r2, [r2, #0]
 8002eac:	9202      	str	r2, [sp, #8]
 8002eae:	2203      	movs	r2, #3
 8002eb0:	9201      	str	r2, [sp, #4]
 8002eb2:	9300      	str	r3, [sp, #0]
 8002eb4:	2325      	movs	r3, #37	@ 0x25
 8002eb6:	2225      	movs	r2, #37	@ 0x25
 8002eb8:	f7fe fcae 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002ebc:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002ec0:	f103 0308 	add.w	r3, r3, #8
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	3301      	adds	r3, #1
 8002ec8:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002ecc:	f102 0208 	add.w	r2, r2, #8
 8002ed0:	6013      	str	r3, [r2, #0]
 8002ed2:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002ed6:	f103 0308 	add.w	r3, r3, #8
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	2b4f      	cmp	r3, #79	@ 0x4f
 8002ede:	ddb9      	ble.n	8002e54 <main+0xe90>
						}
						boom2 = 0;
 8002ee0:	4b56      	ldr	r3, [pc, #344]	@ (800303c <main+0x1078>)
 8002ee2:	2200      	movs	r2, #0
 8002ee4:	601a      	str	r2, [r3, #0]
					}
					//LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
					LCD_Sprite(sprite_x, sprite_y, 34, 37, seleccionJug1, 2, anima1, 0, 1);
 8002ee6:	4b52      	ldr	r3, [pc, #328]	@ (8003030 <main+0x106c>)
 8002ee8:	6818      	ldr	r0, [r3, #0]
 8002eea:	4b52      	ldr	r3, [pc, #328]	@ (8003034 <main+0x1070>)
 8002eec:	6819      	ldr	r1, [r3, #0]
 8002eee:	4b54      	ldr	r3, [pc, #336]	@ (8003040 <main+0x107c>)
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	4a54      	ldr	r2, [pc, #336]	@ (8003044 <main+0x1080>)
 8002ef4:	6812      	ldr	r2, [r2, #0]
 8002ef6:	2401      	movs	r4, #1
 8002ef8:	9404      	str	r4, [sp, #16]
 8002efa:	2400      	movs	r4, #0
 8002efc:	9403      	str	r4, [sp, #12]
 8002efe:	9202      	str	r2, [sp, #8]
 8002f00:	2202      	movs	r2, #2
 8002f02:	9201      	str	r2, [sp, #4]
 8002f04:	9300      	str	r3, [sp, #0]
 8002f06:	2325      	movs	r3, #37	@ 0x25
 8002f08:	2222      	movs	r2, #34	@ 0x22
 8002f0a:	f7fe fc85 	bl	8001818 <LCD_Sprite>
					FillRect(96, 219, 35, 10, 0xEDCC);
 8002f0e:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002f12:	9300      	str	r3, [sp, #0]
 8002f14:	230a      	movs	r3, #10
 8002f16:	2223      	movs	r2, #35	@ 0x23
 8002f18:	21db      	movs	r1, #219	@ 0xdb
 8002f1a:	2060      	movs	r0, #96	@ 0x60
 8002f1c:	f7fe fadc 	bl	80014d8 <FillRect>
 8002f20:	e0f5      	b.n	800310e <main+0x114a>
				}else if(colision2 == 3){
 8002f22:	4b49      	ldr	r3, [pc, #292]	@ (8003048 <main+0x1084>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	2b03      	cmp	r3, #3
 8002f28:	d171      	bne.n	800300e <main+0x104a>
					if(boom2 == 1){
 8002f2a:	4b44      	ldr	r3, [pc, #272]	@ (800303c <main+0x1078>)
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	2b01      	cmp	r3, #1
 8002f30:	d14f      	bne.n	8002fd2 <main+0x100e>
						for(int x = 0; x < 80; x++){
 8002f32:	2300      	movs	r3, #0
 8002f34:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002f38:	f102 0204 	add.w	r2, r2, #4
 8002f3c:	6013      	str	r3, [r2, #0]
 8002f3e:	e03e      	b.n	8002fbe <main+0xffa>
							HAL_Delay(15);
 8002f40:	200f      	movs	r0, #15
 8002f42:	f001 f8f7 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8002f46:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002f4a:	f103 0304 	add.w	r3, r3, #4
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	4a35      	ldr	r2, [pc, #212]	@ (8003028 <main+0x1064>)
 8002f52:	fb82 1203 	smull	r1, r2, r2, r3
 8002f56:	441a      	add	r2, r3
 8002f58:	1152      	asrs	r2, r2, #5
 8002f5a:	17db      	asrs	r3, r3, #31
 8002f5c:	1ad2      	subs	r2, r2, r3
 8002f5e:	4b33      	ldr	r3, [pc, #204]	@ (800302c <main+0x1068>)
 8002f60:	fb83 3102 	smull	r3, r1, r3, r2
 8002f64:	17d3      	asrs	r3, r2, #31
 8002f66:	1ac9      	subs	r1, r1, r3
 8002f68:	460b      	mov	r3, r1
 8002f6a:	005b      	lsls	r3, r3, #1
 8002f6c:	440b      	add	r3, r1
 8002f6e:	1ad3      	subs	r3, r2, r3
 8002f70:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8002f74:	f102 0218 	add.w	r2, r2, #24
 8002f78:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x, sprite_y, 37, 37, caida1, 3, anima, 0, 1);
 8002f7a:	4b2d      	ldr	r3, [pc, #180]	@ (8003030 <main+0x106c>)
 8002f7c:	6818      	ldr	r0, [r3, #0]
 8002f7e:	4b2d      	ldr	r3, [pc, #180]	@ (8003034 <main+0x1070>)
 8002f80:	6819      	ldr	r1, [r3, #0]
 8002f82:	4b2d      	ldr	r3, [pc, #180]	@ (8003038 <main+0x1074>)
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	2201      	movs	r2, #1
 8002f88:	9204      	str	r2, [sp, #16]
 8002f8a:	2200      	movs	r2, #0
 8002f8c:	9203      	str	r2, [sp, #12]
 8002f8e:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8002f92:	f102 0218 	add.w	r2, r2, #24
 8002f96:	6812      	ldr	r2, [r2, #0]
 8002f98:	9202      	str	r2, [sp, #8]
 8002f9a:	2203      	movs	r2, #3
 8002f9c:	9201      	str	r2, [sp, #4]
 8002f9e:	9300      	str	r3, [sp, #0]
 8002fa0:	2325      	movs	r3, #37	@ 0x25
 8002fa2:	2225      	movs	r2, #37	@ 0x25
 8002fa4:	f7fe fc38 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002fa8:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002fac:	f103 0304 	add.w	r3, r3, #4
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	3301      	adds	r3, #1
 8002fb4:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8002fb8:	f102 0204 	add.w	r2, r2, #4
 8002fbc:	6013      	str	r3, [r2, #0]
 8002fbe:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8002fc2:	f103 0304 	add.w	r3, r3, #4
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	2b4f      	cmp	r3, #79	@ 0x4f
 8002fca:	ddb9      	ble.n	8002f40 <main+0xf7c>
						}
						boom2 = 0;
 8002fcc:	4b1b      	ldr	r3, [pc, #108]	@ (800303c <main+0x1078>)
 8002fce:	2200      	movs	r2, #0
 8002fd0:	601a      	str	r2, [r3, #0]
					}
					LCD_Sprite(sprite_x, sprite_y, 34, 37, seleccionJug1, 2, anima1, 0, 1);
 8002fd2:	4b17      	ldr	r3, [pc, #92]	@ (8003030 <main+0x106c>)
 8002fd4:	6818      	ldr	r0, [r3, #0]
 8002fd6:	4b17      	ldr	r3, [pc, #92]	@ (8003034 <main+0x1070>)
 8002fd8:	6819      	ldr	r1, [r3, #0]
 8002fda:	4b19      	ldr	r3, [pc, #100]	@ (8003040 <main+0x107c>)
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	4a19      	ldr	r2, [pc, #100]	@ (8003044 <main+0x1080>)
 8002fe0:	6812      	ldr	r2, [r2, #0]
 8002fe2:	2401      	movs	r4, #1
 8002fe4:	9404      	str	r4, [sp, #16]
 8002fe6:	2400      	movs	r4, #0
 8002fe8:	9403      	str	r4, [sp, #12]
 8002fea:	9202      	str	r2, [sp, #8]
 8002fec:	2202      	movs	r2, #2
 8002fee:	9201      	str	r2, [sp, #4]
 8002ff0:	9300      	str	r3, [sp, #0]
 8002ff2:	2325      	movs	r3, #37	@ 0x25
 8002ff4:	2222      	movs	r2, #34	@ 0x22
 8002ff6:	f7fe fc0f 	bl	8001818 <LCD_Sprite>
					FillRect(61, 219, 35, 10, 0xEDCC);
 8002ffa:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002ffe:	9300      	str	r3, [sp, #0]
 8003000:	230a      	movs	r3, #10
 8003002:	2223      	movs	r2, #35	@ 0x23
 8003004:	21db      	movs	r1, #219	@ 0xdb
 8003006:	203d      	movs	r0, #61	@ 0x3d
 8003008:	f7fe fa66 	bl	80014d8 <FillRect>
 800300c:	e07f      	b.n	800310e <main+0x114a>
				}else if(colision2 == 4){
 800300e:	4b0e      	ldr	r3, [pc, #56]	@ (8003048 <main+0x1084>)
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	2b04      	cmp	r3, #4
 8003014:	d17b      	bne.n	800310e <main+0x114a>
					if(boom2 == 1){
 8003016:	4b09      	ldr	r3, [pc, #36]	@ (800303c <main+0x1078>)
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	2b01      	cmp	r3, #1
 800301c:	d157      	bne.n	80030ce <main+0x110a>
						for(int x = 0; x < 80; x++){
 800301e:	2300      	movs	r3, #0
 8003020:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 8003024:	6013      	str	r3, [r2, #0]
 8003026:	e04a      	b.n	80030be <main+0x10fa>
 8003028:	ea0ea0eb 	.word	0xea0ea0eb
 800302c:	55555556 	.word	0x55555556
 8003030:	2000a698 	.word	0x2000a698
 8003034:	2000a69c 	.word	0x2000a69c
 8003038:	2000a68c 	.word	0x2000a68c
 800303c:	2000a97c 	.word	0x2000a97c
 8003040:	2000a684 	.word	0x2000a684
 8003044:	2000a970 	.word	0x2000a970
 8003048:	2000a954 	.word	0x2000a954
							HAL_Delay(15);
 800304c:	200f      	movs	r0, #15
 800304e:	f001 f871 	bl	8004134 <HAL_Delay>
							int anima = (x/35)%3;
 8003052:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	4a85      	ldr	r2, [pc, #532]	@ (8003270 <main+0x12ac>)
 800305a:	fb82 1203 	smull	r1, r2, r2, r3
 800305e:	441a      	add	r2, r3
 8003060:	1152      	asrs	r2, r2, #5
 8003062:	17db      	asrs	r3, r3, #31
 8003064:	1ad2      	subs	r2, r2, r3
 8003066:	4b83      	ldr	r3, [pc, #524]	@ (8003274 <main+0x12b0>)
 8003068:	fb83 3102 	smull	r3, r1, r3, r2
 800306c:	17d3      	asrs	r3, r2, #31
 800306e:	1ac9      	subs	r1, r1, r3
 8003070:	460b      	mov	r3, r1
 8003072:	005b      	lsls	r3, r3, #1
 8003074:	440b      	add	r3, r1
 8003076:	1ad3      	subs	r3, r2, r3
 8003078:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 800307c:	f102 021c 	add.w	r2, r2, #28
 8003080:	6013      	str	r3, [r2, #0]
							LCD_Sprite(sprite_x, sprite_y, 37, 37, caida1, 3, anima, 0, 1);
 8003082:	4b7d      	ldr	r3, [pc, #500]	@ (8003278 <main+0x12b4>)
 8003084:	6818      	ldr	r0, [r3, #0]
 8003086:	4b7d      	ldr	r3, [pc, #500]	@ (800327c <main+0x12b8>)
 8003088:	6819      	ldr	r1, [r3, #0]
 800308a:	4b7d      	ldr	r3, [pc, #500]	@ (8003280 <main+0x12bc>)
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	2201      	movs	r2, #1
 8003090:	9204      	str	r2, [sp, #16]
 8003092:	2200      	movs	r2, #0
 8003094:	9203      	str	r2, [sp, #12]
 8003096:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 800309a:	f102 021c 	add.w	r2, r2, #28
 800309e:	6812      	ldr	r2, [r2, #0]
 80030a0:	9202      	str	r2, [sp, #8]
 80030a2:	2203      	movs	r2, #3
 80030a4:	9201      	str	r2, [sp, #4]
 80030a6:	9300      	str	r3, [sp, #0]
 80030a8:	2325      	movs	r3, #37	@ 0x25
 80030aa:	2225      	movs	r2, #37	@ 0x25
 80030ac:	f7fe fbb4 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 80030b0:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	3301      	adds	r3, #1
 80030b8:	f507 52fc 	add.w	r2, r7, #8064	@ 0x1f80
 80030bc:	6013      	str	r3, [r2, #0]
 80030be:	f507 53fc 	add.w	r3, r7, #8064	@ 0x1f80
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	2b4f      	cmp	r3, #79	@ 0x4f
 80030c6:	ddc1      	ble.n	800304c <main+0x1088>
						}
						boom2 = 0;
 80030c8:	4b6e      	ldr	r3, [pc, #440]	@ (8003284 <main+0x12c0>)
 80030ca:	2200      	movs	r2, #0
 80030cc:	601a      	str	r2, [r3, #0]
					}
					LCD_Sprite(sprite_x, sprite_y, 34, 37, seleccionJug1, 2, anima1, 0, 1);
 80030ce:	4b6a      	ldr	r3, [pc, #424]	@ (8003278 <main+0x12b4>)
 80030d0:	6818      	ldr	r0, [r3, #0]
 80030d2:	4b6a      	ldr	r3, [pc, #424]	@ (800327c <main+0x12b8>)
 80030d4:	6819      	ldr	r1, [r3, #0]
 80030d6:	4b6c      	ldr	r3, [pc, #432]	@ (8003288 <main+0x12c4>)
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	4a6c      	ldr	r2, [pc, #432]	@ (800328c <main+0x12c8>)
 80030dc:	6812      	ldr	r2, [r2, #0]
 80030de:	2401      	movs	r4, #1
 80030e0:	9404      	str	r4, [sp, #16]
 80030e2:	2400      	movs	r4, #0
 80030e4:	9403      	str	r4, [sp, #12]
 80030e6:	9202      	str	r2, [sp, #8]
 80030e8:	2202      	movs	r2, #2
 80030ea:	9201      	str	r2, [sp, #4]
 80030ec:	9300      	str	r3, [sp, #0]
 80030ee:	2325      	movs	r3, #37	@ 0x25
 80030f0:	2222      	movs	r2, #34	@ 0x22
 80030f2:	f7fe fb91 	bl	8001818 <LCD_Sprite>
					FillRect(26, 219, 35, 10, 0xEDCC);
 80030f6:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80030fa:	9300      	str	r3, [sp, #0]
 80030fc:	230a      	movs	r3, #10
 80030fe:	2223      	movs	r2, #35	@ 0x23
 8003100:	21db      	movs	r1, #219	@ 0xdb
 8003102:	201a      	movs	r0, #26
 8003104:	f7fe f9e8 	bl	80014d8 <FillRect>
					loser1 = 1;
 8003108:	4b61      	ldr	r3, [pc, #388]	@ (8003290 <main+0x12cc>)
 800310a:	2201      	movs	r2, #1
 800310c:	601a      	str	r2, [r3, #0]
				}



				//Banderas de perdedores para cambio a podio
				if(loser1 == 1){
 800310e:	4b60      	ldr	r3, [pc, #384]	@ (8003290 <main+0x12cc>)
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	2b01      	cmp	r3, #1
 8003114:	d102      	bne.n	800311c <main+0x1158>
					//LCD_Print("Perdiste! JUG1 :(", 20, 100, 1, 0x001F, 0xCAB9);
					inicio = 4;
 8003116:	4b5f      	ldr	r3, [pc, #380]	@ (8003294 <main+0x12d0>)
 8003118:	2204      	movs	r2, #4
 800311a:	601a      	str	r2, [r3, #0]
				}
				if(loser2 == 1){
 800311c:	4b5e      	ldr	r3, [pc, #376]	@ (8003298 <main+0x12d4>)
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	2b01      	cmp	r3, #1
 8003122:	d102      	bne.n	800312a <main+0x1166>
					//LCD_Print("Perdiste! JUG2 :(", 20, 100, 1, 0x001F, 0xCAB9);
					inicio = 4;
 8003124:	4b5b      	ldr	r3, [pc, #364]	@ (8003294 <main+0x12d0>)
 8003126:	2204      	movs	r2, #4
 8003128:	601a      	str	r2, [r3, #0]
				}

				//Movimiento Jug2
				if (received_char == 'g') {
 800312a:	4b5c      	ldr	r3, [pc, #368]	@ (800329c <main+0x12d8>)
 800312c:	781b      	ldrb	r3, [r3, #0]
 800312e:	b2db      	uxtb	r3, r3
 8003130:	2b67      	cmp	r3, #103	@ 0x67
 8003132:	d107      	bne.n	8003144 <main+0x1180>
					//move_blue_cube_up();  // Mover cubo azul hacia arriba
					//move_jug1_up();
					move_sprite_up();
 8003134:	f7fe fdd2 	bl	8001cdc <move_sprite_up>
					received_char = 0;  // Resetear el comando
 8003138:	4b58      	ldr	r3, [pc, #352]	@ (800329c <main+0x12d8>)
 800313a:	2200      	movs	r2, #0
 800313c:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 800313e:	4b58      	ldr	r3, [pc, #352]	@ (80032a0 <main+0x12dc>)
 8003140:	2200      	movs	r2, #0
 8003142:	601a      	str	r2, [r3, #0]
				}
				if (received_char == 'h') {
 8003144:	4b55      	ldr	r3, [pc, #340]	@ (800329c <main+0x12d8>)
 8003146:	781b      	ldrb	r3, [r3, #0]
 8003148:	b2db      	uxtb	r3, r3
 800314a:	2b68      	cmp	r3, #104	@ 0x68
 800314c:	d107      	bne.n	800315e <main+0x119a>
					//move_blue_cube_down();  // Mover cubo azul hacia abajo
					//move_jug1_down();
					move_sprite_down();
 800314e:	f7fe fe1b 	bl	8001d88 <move_sprite_down>
					received_char = 0;  // Resetear el comando
 8003152:	4b52      	ldr	r3, [pc, #328]	@ (800329c <main+0x12d8>)
 8003154:	2200      	movs	r2, #0
 8003156:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8003158:	4b51      	ldr	r3, [pc, #324]	@ (80032a0 <main+0x12dc>)
 800315a:	2200      	movs	r2, #0
 800315c:	601a      	str	r2, [r3, #0]
				}

				//Movimiento Jug2
				if (received_char2 == 'i') {
 800315e:	4b51      	ldr	r3, [pc, #324]	@ (80032a4 <main+0x12e0>)
 8003160:	781b      	ldrb	r3, [r3, #0]
 8003162:	b2db      	uxtb	r3, r3
 8003164:	2b69      	cmp	r3, #105	@ 0x69
 8003166:	d107      	bne.n	8003178 <main+0x11b4>
					//move_green_cube_left();  // Mover cubo verde hacia la izquierda
					move_sprite_up1();
 8003168:	f7fe fe66 	bl	8001e38 <move_sprite_up1>

					received_char2 = 0;  // Resetear el comando
 800316c:	4b4d      	ldr	r3, [pc, #308]	@ (80032a4 <main+0x12e0>)
 800316e:	2200      	movs	r2, #0
 8003170:	701a      	strb	r2, [r3, #0]
					move2 = 0;
 8003172:	4b4d      	ldr	r3, [pc, #308]	@ (80032a8 <main+0x12e4>)
 8003174:	2200      	movs	r2, #0
 8003176:	601a      	str	r2, [r3, #0]
				}
				if(received_char2 == 'j'){
 8003178:	4b4a      	ldr	r3, [pc, #296]	@ (80032a4 <main+0x12e0>)
 800317a:	781b      	ldrb	r3, [r3, #0]
 800317c:	b2db      	uxtb	r3, r3
 800317e:	2b6a      	cmp	r3, #106	@ 0x6a
 8003180:	d107      	bne.n	8003192 <main+0x11ce>
					//move_green_cube_right();
					move_sprite_down1();
 8003182:	f7fe feaf 	bl	8001ee4 <move_sprite_down1>

					received_char2 = 0;
 8003186:	4b47      	ldr	r3, [pc, #284]	@ (80032a4 <main+0x12e0>)
 8003188:	2200      	movs	r2, #0
 800318a:	701a      	strb	r2, [r3, #0]
					move2 = 0;
 800318c:	4b46      	ldr	r3, [pc, #280]	@ (80032a8 <main+0x12e4>)
 800318e:	2200      	movs	r2, #0
 8003190:	601a      	str	r2, [r3, #0]
				m++;
				int anima2 = (m / 2) % 2;
				LCD_Sprite(sprite_x, sprite_y, 34, 37, seleccionJug1, 2, anima2, 0, 1);*/

				//Movimiento con comandos
				if(move2 != 1){
 8003192:	4b45      	ldr	r3, [pc, #276]	@ (80032a8 <main+0x12e4>)
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	2b01      	cmp	r3, #1
 8003198:	d02a      	beq.n	80031f0 <main+0x122c>
					c++;
 800319a:	4b44      	ldr	r3, [pc, #272]	@ (80032ac <main+0x12e8>)
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	3301      	adds	r3, #1
 80031a0:	4a42      	ldr	r2, [pc, #264]	@ (80032ac <main+0x12e8>)
 80031a2:	6013      	str	r3, [r2, #0]
					int anima4 = (c / 2) % 2;
 80031a4:	4b41      	ldr	r3, [pc, #260]	@ (80032ac <main+0x12e8>)
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	0fda      	lsrs	r2, r3, #31
 80031aa:	4413      	add	r3, r2
 80031ac:	105b      	asrs	r3, r3, #1
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	f003 0301 	and.w	r3, r3, #1
 80031b4:	bfb8      	it	lt
 80031b6:	425b      	neglt	r3, r3
 80031b8:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 80031bc:	f102 020c 	add.w	r2, r2, #12
 80031c0:	6013      	str	r3, [r2, #0]
					LCD_Sprite(sprite_x1, sprite_y1, 34, 37, seleccionJug2, 2, anima4, 0, 1);
 80031c2:	4b3b      	ldr	r3, [pc, #236]	@ (80032b0 <main+0x12ec>)
 80031c4:	6818      	ldr	r0, [r3, #0]
 80031c6:	4b3b      	ldr	r3, [pc, #236]	@ (80032b4 <main+0x12f0>)
 80031c8:	6819      	ldr	r1, [r3, #0]
 80031ca:	4b3b      	ldr	r3, [pc, #236]	@ (80032b8 <main+0x12f4>)
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	2201      	movs	r2, #1
 80031d0:	9204      	str	r2, [sp, #16]
 80031d2:	2200      	movs	r2, #0
 80031d4:	9203      	str	r2, [sp, #12]
 80031d6:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 80031da:	f102 020c 	add.w	r2, r2, #12
 80031de:	6812      	ldr	r2, [r2, #0]
 80031e0:	9202      	str	r2, [sp, #8]
 80031e2:	2202      	movs	r2, #2
 80031e4:	9201      	str	r2, [sp, #4]
 80031e6:	9300      	str	r3, [sp, #0]
 80031e8:	2325      	movs	r3, #37	@ 0x25
 80031ea:	2222      	movs	r2, #34	@ 0x22
 80031ec:	f7fe fb14 	bl	8001818 <LCD_Sprite>
				}
				if(move1 != 1){
 80031f0:	4b2b      	ldr	r3, [pc, #172]	@ (80032a0 <main+0x12dc>)
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	2b01      	cmp	r3, #1
 80031f6:	d02a      	beq.n	800324e <main+0x128a>
					m++;
 80031f8:	4b30      	ldr	r3, [pc, #192]	@ (80032bc <main+0x12f8>)
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	3301      	adds	r3, #1
 80031fe:	4a2f      	ldr	r2, [pc, #188]	@ (80032bc <main+0x12f8>)
 8003200:	6013      	str	r3, [r2, #0]
					int anima2 = (m / 2) % 2;
 8003202:	4b2e      	ldr	r3, [pc, #184]	@ (80032bc <main+0x12f8>)
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	0fda      	lsrs	r2, r3, #31
 8003208:	4413      	add	r3, r2
 800320a:	105b      	asrs	r3, r3, #1
 800320c:	2b00      	cmp	r3, #0
 800320e:	f003 0301 	and.w	r3, r3, #1
 8003212:	bfb8      	it	lt
 8003214:	425b      	neglt	r3, r3
 8003216:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 800321a:	f102 0208 	add.w	r2, r2, #8
 800321e:	6013      	str	r3, [r2, #0]
					LCD_Sprite(sprite_x, sprite_y, 34, 37, seleccionJug1, 2, anima2, 0, 1);
 8003220:	4b15      	ldr	r3, [pc, #84]	@ (8003278 <main+0x12b4>)
 8003222:	6818      	ldr	r0, [r3, #0]
 8003224:	4b15      	ldr	r3, [pc, #84]	@ (800327c <main+0x12b8>)
 8003226:	6819      	ldr	r1, [r3, #0]
 8003228:	4b17      	ldr	r3, [pc, #92]	@ (8003288 <main+0x12c4>)
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	2201      	movs	r2, #1
 800322e:	9204      	str	r2, [sp, #16]
 8003230:	2200      	movs	r2, #0
 8003232:	9203      	str	r2, [sp, #12]
 8003234:	f507 52fa 	add.w	r2, r7, #8000	@ 0x1f40
 8003238:	f102 0208 	add.w	r2, r2, #8
 800323c:	6812      	ldr	r2, [r2, #0]
 800323e:	9202      	str	r2, [sp, #8]
 8003240:	2202      	movs	r2, #2
 8003242:	9201      	str	r2, [sp, #4]
 8003244:	9300      	str	r3, [sp, #0]
 8003246:	2325      	movs	r3, #37	@ 0x25
 8003248:	2222      	movs	r2, #34	@ 0x22
 800324a:	f7fe fae5 	bl	8001818 <LCD_Sprite>
				}
				if(c == 20){
 800324e:	4b17      	ldr	r3, [pc, #92]	@ (80032ac <main+0x12e8>)
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	2b14      	cmp	r3, #20
 8003254:	d103      	bne.n	800325e <main+0x129a>
					c = 0;
 8003256:	4b15      	ldr	r3, [pc, #84]	@ (80032ac <main+0x12e8>)
 8003258:	2200      	movs	r2, #0
 800325a:	601a      	str	r2, [r3, #0]
				}else if(m == 20){
					m = 0;
				}
				break;
 800325c:	e1ec      	b.n	8003638 <main+0x1674>
				}else if(m == 20){
 800325e:	4b17      	ldr	r3, [pc, #92]	@ (80032bc <main+0x12f8>)
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	2b14      	cmp	r3, #20
 8003264:	f040 81e8 	bne.w	8003638 <main+0x1674>
					m = 0;
 8003268:	4b14      	ldr	r3, [pc, #80]	@ (80032bc <main+0x12f8>)
 800326a:	2200      	movs	r2, #0
 800326c:	601a      	str	r2, [r3, #0]
				break;
 800326e:	e1e3      	b.n	8003638 <main+0x1674>
 8003270:	ea0ea0eb 	.word	0xea0ea0eb
 8003274:	55555556 	.word	0x55555556
 8003278:	2000a698 	.word	0x2000a698
 800327c:	2000a69c 	.word	0x2000a69c
 8003280:	2000a68c 	.word	0x2000a68c
 8003284:	2000a97c 	.word	0x2000a97c
 8003288:	2000a684 	.word	0x2000a684
 800328c:	2000a970 	.word	0x2000a970
 8003290:	2000a940 	.word	0x2000a940
 8003294:	2000a644 	.word	0x2000a644
 8003298:	2000a944 	.word	0x2000a944
 800329c:	2000a94c 	.word	0x2000a94c
 80032a0:	2000a980 	.word	0x2000a980
 80032a4:	2000a94d 	.word	0x2000a94d
 80032a8:	2000a984 	.word	0x2000a984
 80032ac:	2000a958 	.word	0x2000a958
 80032b0:	2000a6a0 	.word	0x2000a6a0
 80032b4:	2000a6a4 	.word	0x2000a6a4
 80032b8:	2000a688 	.word	0x2000a688
 80032bc:	2000a95c 	.word	0x2000a95c
			case 1:
				if(pintjueg == 1){
 80032c0:	4b92      	ldr	r3, [pc, #584]	@ (800350c <main+0x1548>)
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	2b01      	cmp	r3, #1
 80032c6:	d17d      	bne.n	80033c4 <main+0x1400>
					LCD_Clear(0x00A7);
 80032c8:	20a7      	movs	r0, #167	@ 0xa7
 80032ca:	f7fe f8c1 	bl	8001450 <LCD_Clear>


					//             *       *

					LCD_Bitmap(25, 80, 63, 69, SELECTOROFF);
 80032ce:	4b90      	ldr	r3, [pc, #576]	@ (8003510 <main+0x154c>)
 80032d0:	9300      	str	r3, [sp, #0]
 80032d2:	2345      	movs	r3, #69	@ 0x45
 80032d4:	223f      	movs	r2, #63	@ 0x3f
 80032d6:	2150      	movs	r1, #80	@ 0x50
 80032d8:	2019      	movs	r0, #25
 80032da:	f7fe fa43 	bl	8001764 <LCD_Bitmap>

					//LCD_Bitmap(40, 90, 35, 38, buffer);
					LCD_Bitmap(40, 90, 35, 38, personaje1);
 80032de:	4b8d      	ldr	r3, [pc, #564]	@ (8003514 <main+0x1550>)
 80032e0:	9300      	str	r3, [sp, #0]
 80032e2:	2326      	movs	r3, #38	@ 0x26
 80032e4:	2223      	movs	r2, #35	@ 0x23
 80032e6:	215a      	movs	r1, #90	@ 0x5a
 80032e8:	2028      	movs	r0, #40	@ 0x28
 80032ea:	f7fe fa3b 	bl	8001764 <LCD_Bitmap>

					//memset(buffer, '\0', 100); //Limpia el buffer

					LCD_Bitmap(95, 80, 63, 69, SELECTOROFF);
 80032ee:	4b88      	ldr	r3, [pc, #544]	@ (8003510 <main+0x154c>)
 80032f0:	9300      	str	r3, [sp, #0]
 80032f2:	2345      	movs	r3, #69	@ 0x45
 80032f4:	223f      	movs	r2, #63	@ 0x3f
 80032f6:	2150      	movs	r1, #80	@ 0x50
 80032f8:	205f      	movs	r0, #95	@ 0x5f
 80032fa:	f7fe fa33 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(110, 90, 35, 38, personaje2);
 80032fe:	4b86      	ldr	r3, [pc, #536]	@ (8003518 <main+0x1554>)
 8003300:	9300      	str	r3, [sp, #0]
 8003302:	2326      	movs	r3, #38	@ 0x26
 8003304:	2223      	movs	r2, #35	@ 0x23
 8003306:	215a      	movs	r1, #90	@ 0x5a
 8003308:	206e      	movs	r0, #110	@ 0x6e
 800330a:	f7fe fa2b 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(165, 80, 63, 69, SELECTOROFF);
 800330e:	4b80      	ldr	r3, [pc, #512]	@ (8003510 <main+0x154c>)
 8003310:	9300      	str	r3, [sp, #0]
 8003312:	2345      	movs	r3, #69	@ 0x45
 8003314:	223f      	movs	r2, #63	@ 0x3f
 8003316:	2150      	movs	r1, #80	@ 0x50
 8003318:	20a5      	movs	r0, #165	@ 0xa5
 800331a:	f7fe fa23 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(180, 90, 35, 38, personaje3);
 800331e:	4b7f      	ldr	r3, [pc, #508]	@ (800351c <main+0x1558>)
 8003320:	9300      	str	r3, [sp, #0]
 8003322:	2326      	movs	r3, #38	@ 0x26
 8003324:	2223      	movs	r2, #35	@ 0x23
 8003326:	215a      	movs	r1, #90	@ 0x5a
 8003328:	20b4      	movs	r0, #180	@ 0xb4
 800332a:	f7fe fa1b 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(235, 80, 63, 69, SELECTOROFF);
 800332e:	4b78      	ldr	r3, [pc, #480]	@ (8003510 <main+0x154c>)
 8003330:	9300      	str	r3, [sp, #0]
 8003332:	2345      	movs	r3, #69	@ 0x45
 8003334:	223f      	movs	r2, #63	@ 0x3f
 8003336:	2150      	movs	r1, #80	@ 0x50
 8003338:	20eb      	movs	r0, #235	@ 0xeb
 800333a:	f7fe fa13 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(250, 90, 35, 38, personaje4);
 800333e:	4b78      	ldr	r3, [pc, #480]	@ (8003520 <main+0x155c>)
 8003340:	9300      	str	r3, [sp, #0]
 8003342:	2326      	movs	r3, #38	@ 0x26
 8003344:	2223      	movs	r2, #35	@ 0x23
 8003346:	215a      	movs	r1, #90	@ 0x5a
 8003348:	20fa      	movs	r0, #250	@ 0xfa
 800334a:	f7fe fa0b 	bl	8001764 <LCD_Bitmap>


					//Añadiendo barra gris del selector del jugador
					LCD_Bitmap(25, 70, 63, 17, SELECTOROFFJ1);
 800334e:	4b75      	ldr	r3, [pc, #468]	@ (8003524 <main+0x1560>)
 8003350:	9300      	str	r3, [sp, #0]
 8003352:	2311      	movs	r3, #17
 8003354:	223f      	movs	r2, #63	@ 0x3f
 8003356:	2146      	movs	r1, #70	@ 0x46
 8003358:	2019      	movs	r0, #25
 800335a:	f7fe fa03 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(95, 70, 63, 17, SELECTOROFFJ1);
 800335e:	4b71      	ldr	r3, [pc, #452]	@ (8003524 <main+0x1560>)
 8003360:	9300      	str	r3, [sp, #0]
 8003362:	2311      	movs	r3, #17
 8003364:	223f      	movs	r2, #63	@ 0x3f
 8003366:	2146      	movs	r1, #70	@ 0x46
 8003368:	205f      	movs	r0, #95	@ 0x5f
 800336a:	f7fe f9fb 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(165, 70, 63, 17, SELECTOROFFJ1);
 800336e:	4b6d      	ldr	r3, [pc, #436]	@ (8003524 <main+0x1560>)
 8003370:	9300      	str	r3, [sp, #0]
 8003372:	2311      	movs	r3, #17
 8003374:	223f      	movs	r2, #63	@ 0x3f
 8003376:	2146      	movs	r1, #70	@ 0x46
 8003378:	20a5      	movs	r0, #165	@ 0xa5
 800337a:	f7fe f9f3 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(235, 70, 63, 17, SELECTOROFFJ1);
 800337e:	4b69      	ldr	r3, [pc, #420]	@ (8003524 <main+0x1560>)
 8003380:	9300      	str	r3, [sp, #0]
 8003382:	2311      	movs	r3, #17
 8003384:	223f      	movs	r2, #63	@ 0x3f
 8003386:	2146      	movs	r1, #70	@ 0x46
 8003388:	20eb      	movs	r0, #235	@ 0xeb
 800338a:	f7fe f9eb 	bl	8001764 <LCD_Bitmap>

					//80+69-18 REFERENCIA PERSONAJE 1 (Poner la misma coordenada en x que SELECTOROFF del personaje)

					LCD_Bitmap(25, 70, 63, 17, SELECTORONJ1);
 800338e:	4b66      	ldr	r3, [pc, #408]	@ (8003528 <main+0x1564>)
 8003390:	9300      	str	r3, [sp, #0]
 8003392:	2311      	movs	r3, #17
 8003394:	223f      	movs	r2, #63	@ 0x3f
 8003396:	2146      	movs	r1, #70	@ 0x46
 8003398:	2019      	movs	r0, #25
 800339a:	f7fe f9e3 	bl	8001764 <LCD_Bitmap>

					//80+69-18 REFERENCIA PERSONAJE 4
					LCD_Bitmap(235, 131, 63, 17, SELECTORONJ2);
 800339e:	4b63      	ldr	r3, [pc, #396]	@ (800352c <main+0x1568>)
 80033a0:	9300      	str	r3, [sp, #0]
 80033a2:	2311      	movs	r3, #17
 80033a4:	223f      	movs	r2, #63	@ 0x3f
 80033a6:	2183      	movs	r1, #131	@ 0x83
 80033a8:	20eb      	movs	r0, #235	@ 0xeb
 80033aa:	f7fe f9db 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(60, 175, 200, 12, AVISOJUGADOR);
 80033ae:	4b60      	ldr	r3, [pc, #384]	@ (8003530 <main+0x156c>)
 80033b0:	9300      	str	r3, [sp, #0]
 80033b2:	230c      	movs	r3, #12
 80033b4:	22c8      	movs	r2, #200	@ 0xc8
 80033b6:	21af      	movs	r1, #175	@ 0xaf
 80033b8:	203c      	movs	r0, #60	@ 0x3c
 80033ba:	f7fe f9d3 	bl	8001764 <LCD_Bitmap>



					pintjueg = 0;
 80033be:	4b53      	ldr	r3, [pc, #332]	@ (800350c <main+0x1548>)
 80033c0:	2200      	movs	r2, #0
 80033c2:	601a      	str	r2, [r3, #0]
				}
				if(received_char != new_command){
 80033c4:	4b5b      	ldr	r3, [pc, #364]	@ (8003534 <main+0x1570>)
 80033c6:	781b      	ldrb	r3, [r3, #0]
 80033c8:	b2da      	uxtb	r2, r3
 80033ca:	4b5b      	ldr	r3, [pc, #364]	@ (8003538 <main+0x1574>)
 80033cc:	781b      	ldrb	r3, [r3, #0]
 80033ce:	b2db      	uxtb	r3, r3
 80033d0:	429a      	cmp	r2, r3
 80033d2:	d00a      	beq.n	80033ea <main+0x1426>
					mover_colores(received_char);
 80033d4:	4b57      	ldr	r3, [pc, #348]	@ (8003534 <main+0x1570>)
 80033d6:	781b      	ldrb	r3, [r3, #0]
 80033d8:	b2db      	uxtb	r3, r3
 80033da:	4618      	mov	r0, r3
 80033dc:	f7fe fb82 	bl	8001ae4 <mover_colores>
					new_command = received_char;
 80033e0:	4b54      	ldr	r3, [pc, #336]	@ (8003534 <main+0x1570>)
 80033e2:	781b      	ldrb	r3, [r3, #0]
 80033e4:	b2da      	uxtb	r2, r3
 80033e6:	4b54      	ldr	r3, [pc, #336]	@ (8003538 <main+0x1574>)
 80033e8:	701a      	strb	r2, [r3, #0]
				}
				// Dependiendo de la posición del selector, se asigna la animación correspondiente
				if(received_char == 'a'){
 80033ea:	4b52      	ldr	r3, [pc, #328]	@ (8003534 <main+0x1570>)
 80033ec:	781b      	ldrb	r3, [r3, #0]
 80033ee:	b2db      	uxtb	r3, r3
 80033f0:	2b61      	cmp	r3, #97	@ 0x61
 80033f2:	d15b      	bne.n	80034ac <main+0x14e8>
					if (selector1_pos == 1) {
 80033f4:	4b51      	ldr	r3, [pc, #324]	@ (800353c <main+0x1578>)
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	2b01      	cmp	r3, #1
 80033fa:	d106      	bne.n	800340a <main+0x1446>
						seleccionJug1 = movjug1;
 80033fc:	4b50      	ldr	r3, [pc, #320]	@ (8003540 <main+0x157c>)
 80033fe:	4a51      	ldr	r2, [pc, #324]	@ (8003544 <main+0x1580>)
 8003400:	601a      	str	r2, [r3, #0]
						caida1 = colisionjug1;
 8003402:	4b51      	ldr	r3, [pc, #324]	@ (8003548 <main+0x1584>)
 8003404:	4a51      	ldr	r2, [pc, #324]	@ (800354c <main+0x1588>)
 8003406:	601a      	str	r2, [r3, #0]
 8003408:	e01f      	b.n	800344a <main+0x1486>
					} else if (selector1_pos == 2) {
 800340a:	4b4c      	ldr	r3, [pc, #304]	@ (800353c <main+0x1578>)
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	2b02      	cmp	r3, #2
 8003410:	d106      	bne.n	8003420 <main+0x145c>
						seleccionJug1 = movjug2;
 8003412:	4b4b      	ldr	r3, [pc, #300]	@ (8003540 <main+0x157c>)
 8003414:	4a4e      	ldr	r2, [pc, #312]	@ (8003550 <main+0x158c>)
 8003416:	601a      	str	r2, [r3, #0]
						caida1 = colisionjug2;
 8003418:	4b4b      	ldr	r3, [pc, #300]	@ (8003548 <main+0x1584>)
 800341a:	4a4e      	ldr	r2, [pc, #312]	@ (8003554 <main+0x1590>)
 800341c:	601a      	str	r2, [r3, #0]
 800341e:	e014      	b.n	800344a <main+0x1486>
					} else if (selector1_pos == 3) {
 8003420:	4b46      	ldr	r3, [pc, #280]	@ (800353c <main+0x1578>)
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	2b03      	cmp	r3, #3
 8003426:	d106      	bne.n	8003436 <main+0x1472>
						seleccionJug1 = movjug3;
 8003428:	4b45      	ldr	r3, [pc, #276]	@ (8003540 <main+0x157c>)
 800342a:	4a4b      	ldr	r2, [pc, #300]	@ (8003558 <main+0x1594>)
 800342c:	601a      	str	r2, [r3, #0]
						caida1 = colisionjug3;
 800342e:	4b46      	ldr	r3, [pc, #280]	@ (8003548 <main+0x1584>)
 8003430:	4a4a      	ldr	r2, [pc, #296]	@ (800355c <main+0x1598>)
 8003432:	601a      	str	r2, [r3, #0]
 8003434:	e009      	b.n	800344a <main+0x1486>
					} else if (selector1_pos == 4) {
 8003436:	4b41      	ldr	r3, [pc, #260]	@ (800353c <main+0x1578>)
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	2b04      	cmp	r3, #4
 800343c:	d105      	bne.n	800344a <main+0x1486>
						seleccionJug1 = movjug4;
 800343e:	4b40      	ldr	r3, [pc, #256]	@ (8003540 <main+0x157c>)
 8003440:	4a47      	ldr	r2, [pc, #284]	@ (8003560 <main+0x159c>)
 8003442:	601a      	str	r2, [r3, #0]
						caida1 = colisionjug4;
 8003444:	4b40      	ldr	r3, [pc, #256]	@ (8003548 <main+0x1584>)
 8003446:	4a47      	ldr	r2, [pc, #284]	@ (8003564 <main+0x15a0>)
 8003448:	601a      	str	r2, [r3, #0]
					}

					if (selector2_pos == 1) {
 800344a:	4b47      	ldr	r3, [pc, #284]	@ (8003568 <main+0x15a4>)
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	2b01      	cmp	r3, #1
 8003450:	d106      	bne.n	8003460 <main+0x149c>
						seleccionJug2 = movjug1;
 8003452:	4b46      	ldr	r3, [pc, #280]	@ (800356c <main+0x15a8>)
 8003454:	4a3b      	ldr	r2, [pc, #236]	@ (8003544 <main+0x1580>)
 8003456:	601a      	str	r2, [r3, #0]
						caida2 = colisionjug1;
 8003458:	4b45      	ldr	r3, [pc, #276]	@ (8003570 <main+0x15ac>)
 800345a:	4a3c      	ldr	r2, [pc, #240]	@ (800354c <main+0x1588>)
 800345c:	601a      	str	r2, [r3, #0]
 800345e:	e01f      	b.n	80034a0 <main+0x14dc>
					} else if (selector2_pos == 2) {
 8003460:	4b41      	ldr	r3, [pc, #260]	@ (8003568 <main+0x15a4>)
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	2b02      	cmp	r3, #2
 8003466:	d106      	bne.n	8003476 <main+0x14b2>
						seleccionJug2 = movjug2;
 8003468:	4b40      	ldr	r3, [pc, #256]	@ (800356c <main+0x15a8>)
 800346a:	4a39      	ldr	r2, [pc, #228]	@ (8003550 <main+0x158c>)
 800346c:	601a      	str	r2, [r3, #0]
						caida2 = colisionjug2;
 800346e:	4b40      	ldr	r3, [pc, #256]	@ (8003570 <main+0x15ac>)
 8003470:	4a38      	ldr	r2, [pc, #224]	@ (8003554 <main+0x1590>)
 8003472:	601a      	str	r2, [r3, #0]
 8003474:	e014      	b.n	80034a0 <main+0x14dc>
					} else if (selector2_pos == 3) {
 8003476:	4b3c      	ldr	r3, [pc, #240]	@ (8003568 <main+0x15a4>)
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	2b03      	cmp	r3, #3
 800347c:	d106      	bne.n	800348c <main+0x14c8>
						seleccionJug2 = movjug3;
 800347e:	4b3b      	ldr	r3, [pc, #236]	@ (800356c <main+0x15a8>)
 8003480:	4a35      	ldr	r2, [pc, #212]	@ (8003558 <main+0x1594>)
 8003482:	601a      	str	r2, [r3, #0]
						caida2 = colisionjug3;
 8003484:	4b3a      	ldr	r3, [pc, #232]	@ (8003570 <main+0x15ac>)
 8003486:	4a35      	ldr	r2, [pc, #212]	@ (800355c <main+0x1598>)
 8003488:	601a      	str	r2, [r3, #0]
 800348a:	e009      	b.n	80034a0 <main+0x14dc>
					} else if (selector2_pos == 4) {
 800348c:	4b36      	ldr	r3, [pc, #216]	@ (8003568 <main+0x15a4>)
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	2b04      	cmp	r3, #4
 8003492:	d105      	bne.n	80034a0 <main+0x14dc>
						seleccionJug2 = movjug4;
 8003494:	4b35      	ldr	r3, [pc, #212]	@ (800356c <main+0x15a8>)
 8003496:	4a32      	ldr	r2, [pc, #200]	@ (8003560 <main+0x159c>)
 8003498:	601a      	str	r2, [r3, #0]
						caida2 = colisionjug4;
 800349a:	4b35      	ldr	r3, [pc, #212]	@ (8003570 <main+0x15ac>)
 800349c:	4a31      	ldr	r2, [pc, #196]	@ (8003564 <main+0x15a0>)
 800349e:	601a      	str	r2, [r3, #0]
					}
					start = 1;
 80034a0:	4b34      	ldr	r3, [pc, #208]	@ (8003574 <main+0x15b0>)
 80034a2:	2201      	movs	r2, #1
 80034a4:	601a      	str	r2, [r3, #0]
					received_char = 'o';
 80034a6:	4b23      	ldr	r3, [pc, #140]	@ (8003534 <main+0x1570>)
 80034a8:	226f      	movs	r2, #111	@ 0x6f
 80034aa:	701a      	strb	r2, [r3, #0]
				}
				if(received_char == 'c'){
 80034ac:	4b21      	ldr	r3, [pc, #132]	@ (8003534 <main+0x1570>)
 80034ae:	781b      	ldrb	r3, [r3, #0]
 80034b0:	b2db      	uxtb	r3, r3
 80034b2:	2b63      	cmp	r3, #99	@ 0x63
 80034b4:	f040 80c3 	bne.w	800363e <main+0x167a>
					start = 1;
 80034b8:	4b2e      	ldr	r3, [pc, #184]	@ (8003574 <main+0x15b0>)
 80034ba:	2201      	movs	r2, #1
 80034bc:	601a      	str	r2, [r3, #0]
					inicio = 5;
 80034be:	4b2e      	ldr	r3, [pc, #184]	@ (8003578 <main+0x15b4>)
 80034c0:	2205      	movs	r2, #5
 80034c2:	601a      	str	r2, [r3, #0]
					received_char = 'o';
 80034c4:	4b1b      	ldr	r3, [pc, #108]	@ (8003534 <main+0x1570>)
 80034c6:	226f      	movs	r2, #111	@ 0x6f
 80034c8:	701a      	strb	r2, [r3, #0]
				}

				//Implementar lectura boton 'b' regreso a menu , start = 1, logica seria mover selectores JUG1 y JUG2 guardar selecciones para imprimir en juego
				break;
 80034ca:	e0b8      	b.n	800363e <main+0x167a>
			case 2:
				if(pintjueg == 1){
 80034cc:	4b0f      	ldr	r3, [pc, #60]	@ (800350c <main+0x1548>)
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	2b01      	cmp	r3, #1
 80034d2:	f040 80b7 	bne.w	8003644 <main+0x1680>
					LCD_Clear(0xFFFF);
 80034d6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80034da:	f7fd ffb9 	bl	8001450 <LCD_Clear>
					sprintf(Pant, "Colisiones: %d", colision);
 80034de:	4b27      	ldr	r3, [pc, #156]	@ (800357c <main+0x15b8>)
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	461a      	mov	r2, r3
 80034e4:	4926      	ldr	r1, [pc, #152]	@ (8003580 <main+0x15bc>)
 80034e6:	4827      	ldr	r0, [pc, #156]	@ (8003584 <main+0x15c0>)
 80034e8:	f004 f976 	bl	80077d8 <siprintf>
					LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);
 80034ec:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80034f0:	9301      	str	r3, [sp, #4]
 80034f2:	231f      	movs	r3, #31
 80034f4:	9300      	str	r3, [sp, #0]
 80034f6:	2301      	movs	r3, #1
 80034f8:	2264      	movs	r2, #100	@ 0x64
 80034fa:	2114      	movs	r1, #20
 80034fc:	4821      	ldr	r0, [pc, #132]	@ (8003584 <main+0x15c0>)
 80034fe:	f7fe f845 	bl	800158c <LCD_Print>
					pintjueg = 0;
 8003502:	4b02      	ldr	r3, [pc, #8]	@ (800350c <main+0x1548>)
 8003504:	2200      	movs	r2, #0
 8003506:	601a      	str	r2, [r3, #0]
				}

				break;
 8003508:	e09c      	b.n	8003644 <main+0x1680>
 800350a:	bf00      	nop
 800350c:	2000a948 	.word	0x2000a948
 8003510:	08016098 	.word	0x08016098
 8003514:	08019350 	.word	0x08019350
 8003518:	08019db4 	.word	0x08019db4
 800351c:	0801a818 	.word	0x0801a818
 8003520:	0801b27c 	.word	0x0801b27c
 8003524:	0801bce0 	.word	0x0801bce0
 8003528:	08018290 	.word	0x08018290
 800352c:	08018af0 	.word	0x08018af0
 8003530:	0801c540 	.word	0x0801c540
 8003534:	2000a94c 	.word	0x2000a94c
 8003538:	2000a94e 	.word	0x2000a94e
 800353c:	2000a67c 	.word	0x2000a67c
 8003540:	2000a684 	.word	0x2000a684
 8003544:	08009198 	.word	0x08009198
 8003548:	2000a68c 	.word	0x2000a68c
 800354c:	0800e038 	.word	0x0800e038
 8003550:	0800a540 	.word	0x0800a540
 8003554:	08010050 	.word	0x08010050
 8003558:	0800b8e8 	.word	0x0800b8e8
 800355c:	08012068 	.word	0x08012068
 8003560:	0800cc90 	.word	0x0800cc90
 8003564:	08014080 	.word	0x08014080
 8003568:	2000a680 	.word	0x2000a680
 800356c:	2000a688 	.word	0x2000a688
 8003570:	2000a690 	.word	0x2000a690
 8003574:	2000a93c 	.word	0x2000a93c
 8003578:	2000a644 	.word	0x2000a644
 800357c:	2000a950 	.word	0x2000a950
 8003580:	08008134 	.word	0x08008134
 8003584:	2000a988 	.word	0x2000a988
			case 4:
				if(loser2 == 1){
 8003588:	4b31      	ldr	r3, [pc, #196]	@ (8003650 <main+0x168c>)
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	2b01      	cmp	r3, #1
 800358e:	d11e      	bne.n	80035ce <main+0x160a>
					//Podio ganador1
					LCD_Clear(0x0015);
 8003590:	2015      	movs	r0, #21
 8003592:	f7fd ff5d 	bl	8001450 <LCD_Clear>
					LCD_Bitmap(75, 85, 173, 119, podio);
 8003596:	4b2f      	ldr	r3, [pc, #188]	@ (8003654 <main+0x1690>)
 8003598:	9300      	str	r3, [sp, #0]
 800359a:	2377      	movs	r3, #119	@ 0x77
 800359c:	22ad      	movs	r2, #173	@ 0xad
 800359e:	2155      	movs	r1, #85	@ 0x55
 80035a0:	204b      	movs	r0, #75	@ 0x4b
 80035a2:	f7fe f8df 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(115, 10, 96, 84, trofeo);
 80035a6:	4b2c      	ldr	r3, [pc, #176]	@ (8003658 <main+0x1694>)
 80035a8:	9300      	str	r3, [sp, #0]
 80035aa:	2354      	movs	r3, #84	@ 0x54
 80035ac:	2260      	movs	r2, #96	@ 0x60
 80035ae:	210a      	movs	r1, #10
 80035b0:	2073      	movs	r0, #115	@ 0x73
 80035b2:	f7fe f8d7 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(25, 205, 274, 25, aviso1);
 80035b6:	4b29      	ldr	r3, [pc, #164]	@ (800365c <main+0x1698>)
 80035b8:	9300      	str	r3, [sp, #0]
 80035ba:	2319      	movs	r3, #25
 80035bc:	f44f 7289 	mov.w	r2, #274	@ 0x112
 80035c0:	21cd      	movs	r1, #205	@ 0xcd
 80035c2:	2019      	movs	r0, #25
 80035c4:	f7fe f8ce 	bl	8001764 <LCD_Bitmap>
					loser2 = 0;
 80035c8:	4b21      	ldr	r3, [pc, #132]	@ (8003650 <main+0x168c>)
 80035ca:	2200      	movs	r2, #0
 80035cc:	601a      	str	r2, [r3, #0]
					//inicio = 3;
				}
				if(loser1 == 1){
 80035ce:	4b24      	ldr	r3, [pc, #144]	@ (8003660 <main+0x169c>)
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	2b01      	cmp	r3, #1
 80035d4:	d11e      	bne.n	8003614 <main+0x1650>
					//Podio ganador
					LCD_Clear(0x0015);
 80035d6:	2015      	movs	r0, #21
 80035d8:	f7fd ff3a 	bl	8001450 <LCD_Clear>
					LCD_Bitmap(75, 85, 173, 119, podio);
 80035dc:	4b1d      	ldr	r3, [pc, #116]	@ (8003654 <main+0x1690>)
 80035de:	9300      	str	r3, [sp, #0]
 80035e0:	2377      	movs	r3, #119	@ 0x77
 80035e2:	22ad      	movs	r2, #173	@ 0xad
 80035e4:	2155      	movs	r1, #85	@ 0x55
 80035e6:	204b      	movs	r0, #75	@ 0x4b
 80035e8:	f7fe f8bc 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(115, 10, 96, 84, trofeo);
 80035ec:	4b1a      	ldr	r3, [pc, #104]	@ (8003658 <main+0x1694>)
 80035ee:	9300      	str	r3, [sp, #0]
 80035f0:	2354      	movs	r3, #84	@ 0x54
 80035f2:	2260      	movs	r2, #96	@ 0x60
 80035f4:	210a      	movs	r1, #10
 80035f6:	2073      	movs	r0, #115	@ 0x73
 80035f8:	f7fe f8b4 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(25, 205, 274, 25, aviso2);
 80035fc:	4b19      	ldr	r3, [pc, #100]	@ (8003664 <main+0x16a0>)
 80035fe:	9300      	str	r3, [sp, #0]
 8003600:	2319      	movs	r3, #25
 8003602:	f44f 7289 	mov.w	r2, #274	@ 0x112
 8003606:	21cd      	movs	r1, #205	@ 0xcd
 8003608:	2019      	movs	r0, #25
 800360a:	f7fe f8ab 	bl	8001764 <LCD_Bitmap>
					loser1 = 0;
 800360e:	4b14      	ldr	r3, [pc, #80]	@ (8003660 <main+0x169c>)
 8003610:	2200      	movs	r2, #0
 8003612:	601a      	str	r2, [r3, #0]
					//inicio = 3;
				}
				if(received_char == 'c'){
 8003614:	4b14      	ldr	r3, [pc, #80]	@ (8003668 <main+0x16a4>)
 8003616:	781b      	ldrb	r3, [r3, #0]
 8003618:	b2db      	uxtb	r3, r3
 800361a:	2b63      	cmp	r3, #99	@ 0x63
 800361c:	d115      	bne.n	800364a <main+0x1686>
					start = 1;
 800361e:	4b13      	ldr	r3, [pc, #76]	@ (800366c <main+0x16a8>)
 8003620:	2201      	movs	r2, #1
 8003622:	601a      	str	r2, [r3, #0]
					inicio = 5;
 8003624:	4b12      	ldr	r3, [pc, #72]	@ (8003670 <main+0x16ac>)
 8003626:	2205      	movs	r2, #5
 8003628:	601a      	str	r2, [r3, #0]
					received_char = 'o';
 800362a:	4b0f      	ldr	r3, [pc, #60]	@ (8003668 <main+0x16a4>)
 800362c:	226f      	movs	r2, #111	@ 0x6f
 800362e:	701a      	strb	r2, [r3, #0]
				}

				break;
 8003630:	e00b      	b.n	800364a <main+0x1686>
			default:
				break;
 8003632:	bf00      	nop
 8003634:	f7fe bd13 	b.w	800205e <main+0x9a>
				break;
 8003638:	bf00      	nop
 800363a:	f7fe bd10 	b.w	800205e <main+0x9a>
				break;
 800363e:	bf00      	nop
 8003640:	f7fe bd0d 	b.w	800205e <main+0x9a>
				break;
 8003644:	bf00      	nop
 8003646:	f7fe bd0a 	b.w	800205e <main+0x9a>
				break;
 800364a:	bf00      	nop
		if(received_char == 'a' && unico == 1){
 800364c:	f7fe bd07 	b.w	800205e <main+0x9a>
 8003650:	2000a944 	.word	0x2000a944
 8003654:	0802dd64 	.word	0x0802dd64
 8003658:	08037e3c 	.word	0x08037e3c
 800365c:	0803bdfc 	.word	0x0803bdfc
 8003660:	2000a940 	.word	0x2000a940
 8003664:	0803f380 	.word	0x0803f380
 8003668:	2000a94c 	.word	0x2000a94c
 800366c:	2000a93c 	.word	0x2000a93c
 8003670:	2000a644 	.word	0x2000a644

08003674 <transmit_uart2.1>:
	void transmit_uart2(char *string){
 8003674:	b580      	push	{r7, lr}
 8003676:	b084      	sub	sp, #16
 8003678:	af00      	add	r7, sp, #0
 800367a:	6078      	str	r0, [r7, #4]
 800367c:	f8c7 c000 	str.w	ip, [r7]
			  uint8_t len = strlen(string);
 8003680:	6878      	ldr	r0, [r7, #4]
 8003682:	f7fc fdc5 	bl	8000210 <strlen>
 8003686:	4603      	mov	r3, r0
 8003688:	73fb      	strb	r3, [r7, #15]
			  HAL_UART_Transmit(&huart3, (uint8_t*) string, len, 200); //200
 800368a:	7bfb      	ldrb	r3, [r7, #15]
 800368c:	b29a      	uxth	r2, r3
 800368e:	23c8      	movs	r3, #200	@ 0xc8
 8003690:	6879      	ldr	r1, [r7, #4]
 8003692:	4803      	ldr	r0, [pc, #12]	@ (80036a0 <transmit_uart2.1+0x2c>)
 8003694:	f002 fe44 	bl	8006320 <HAL_UART_Transmit>
	}
 8003698:	bf00      	nop
 800369a:	3710      	adds	r7, #16
 800369c:	46bd      	mov	sp, r7
 800369e:	bd80      	pop	{r7, pc}
 80036a0:	2000a82c 	.word	0x2000a82c

080036a4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80036a4:	b580      	push	{r7, lr}
 80036a6:	b094      	sub	sp, #80	@ 0x50
 80036a8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80036aa:	f107 031c 	add.w	r3, r7, #28
 80036ae:	2234      	movs	r2, #52	@ 0x34
 80036b0:	2100      	movs	r1, #0
 80036b2:	4618      	mov	r0, r3
 80036b4:	f004 f8b0 	bl	8007818 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80036b8:	f107 0308 	add.w	r3, r7, #8
 80036bc:	2200      	movs	r2, #0
 80036be:	601a      	str	r2, [r3, #0]
 80036c0:	605a      	str	r2, [r3, #4]
 80036c2:	609a      	str	r2, [r3, #8]
 80036c4:	60da      	str	r2, [r3, #12]
 80036c6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80036c8:	2300      	movs	r3, #0
 80036ca:	607b      	str	r3, [r7, #4]
 80036cc:	4b29      	ldr	r3, [pc, #164]	@ (8003774 <SystemClock_Config+0xd0>)
 80036ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036d0:	4a28      	ldr	r2, [pc, #160]	@ (8003774 <SystemClock_Config+0xd0>)
 80036d2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80036d6:	6413      	str	r3, [r2, #64]	@ 0x40
 80036d8:	4b26      	ldr	r3, [pc, #152]	@ (8003774 <SystemClock_Config+0xd0>)
 80036da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036dc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80036e0:	607b      	str	r3, [r7, #4]
 80036e2:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80036e4:	2300      	movs	r3, #0
 80036e6:	603b      	str	r3, [r7, #0]
 80036e8:	4b23      	ldr	r3, [pc, #140]	@ (8003778 <SystemClock_Config+0xd4>)
 80036ea:	681b      	ldr	r3, [r3, #0]
 80036ec:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80036f0:	4a21      	ldr	r2, [pc, #132]	@ (8003778 <SystemClock_Config+0xd4>)
 80036f2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80036f6:	6013      	str	r3, [r2, #0]
 80036f8:	4b1f      	ldr	r3, [pc, #124]	@ (8003778 <SystemClock_Config+0xd4>)
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8003700:	603b      	str	r3, [r7, #0]
 8003702:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003704:	2302      	movs	r3, #2
 8003706:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003708:	2301      	movs	r3, #1
 800370a:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800370c:	2310      	movs	r3, #16
 800370e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003710:	2302      	movs	r3, #2
 8003712:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003714:	2300      	movs	r3, #0
 8003716:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8003718:	2308      	movs	r3, #8
 800371a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 800371c:	2350      	movs	r3, #80	@ 0x50
 800371e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8003720:	2302      	movs	r3, #2
 8003722:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8003724:	2302      	movs	r3, #2
 8003726:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8003728:	2302      	movs	r3, #2
 800372a:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800372c:	f107 031c 	add.w	r3, r7, #28
 8003730:	4618      	mov	r0, r3
 8003732:	f001 feb5 	bl	80054a0 <HAL_RCC_OscConfig>
 8003736:	4603      	mov	r3, r0
 8003738:	2b00      	cmp	r3, #0
 800373a:	d001      	beq.n	8003740 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 800373c:	f000 f9f8 	bl	8003b30 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003740:	230f      	movs	r3, #15
 8003742:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003744:	2302      	movs	r3, #2
 8003746:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003748:	2300      	movs	r3, #0
 800374a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800374c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003750:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003752:	2300      	movs	r3, #0
 8003754:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8003756:	f107 0308 	add.w	r3, r7, #8
 800375a:	2102      	movs	r1, #2
 800375c:	4618      	mov	r0, r3
 800375e:	f001 fbdb 	bl	8004f18 <HAL_RCC_ClockConfig>
 8003762:	4603      	mov	r3, r0
 8003764:	2b00      	cmp	r3, #0
 8003766:	d001      	beq.n	800376c <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8003768:	f000 f9e2 	bl	8003b30 <Error_Handler>
  }
}
 800376c:	bf00      	nop
 800376e:	3750      	adds	r7, #80	@ 0x50
 8003770:	46bd      	mov	sp, r7
 8003772:	bd80      	pop	{r7, pc}
 8003774:	40023800 	.word	0x40023800
 8003778:	40007000 	.word	0x40007000

0800377c <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 800377c:	b580      	push	{r7, lr}
 800377e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8003780:	4b17      	ldr	r3, [pc, #92]	@ (80037e0 <MX_SPI1_Init+0x64>)
 8003782:	4a18      	ldr	r2, [pc, #96]	@ (80037e4 <MX_SPI1_Init+0x68>)
 8003784:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8003786:	4b16      	ldr	r3, [pc, #88]	@ (80037e0 <MX_SPI1_Init+0x64>)
 8003788:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800378c:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800378e:	4b14      	ldr	r3, [pc, #80]	@ (80037e0 <MX_SPI1_Init+0x64>)
 8003790:	2200      	movs	r2, #0
 8003792:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003794:	4b12      	ldr	r3, [pc, #72]	@ (80037e0 <MX_SPI1_Init+0x64>)
 8003796:	2200      	movs	r2, #0
 8003798:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800379a:	4b11      	ldr	r3, [pc, #68]	@ (80037e0 <MX_SPI1_Init+0x64>)
 800379c:	2200      	movs	r2, #0
 800379e:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80037a0:	4b0f      	ldr	r3, [pc, #60]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037a2:	2200      	movs	r2, #0
 80037a4:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80037a6:	4b0e      	ldr	r3, [pc, #56]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037a8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80037ac:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80037ae:	4b0c      	ldr	r3, [pc, #48]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037b0:	2200      	movs	r2, #0
 80037b2:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80037b4:	4b0a      	ldr	r3, [pc, #40]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037b6:	2200      	movs	r2, #0
 80037b8:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80037ba:	4b09      	ldr	r3, [pc, #36]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037bc:	2200      	movs	r2, #0
 80037be:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80037c0:	4b07      	ldr	r3, [pc, #28]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037c2:	2200      	movs	r2, #0
 80037c4:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 80037c6:	4b06      	ldr	r3, [pc, #24]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037c8:	220a      	movs	r2, #10
 80037ca:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80037cc:	4804      	ldr	r0, [pc, #16]	@ (80037e0 <MX_SPI1_Init+0x64>)
 80037ce:	f002 f905 	bl	80059dc <HAL_SPI_Init>
 80037d2:	4603      	mov	r3, r0
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d001      	beq.n	80037dc <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80037d8:	f000 f9aa 	bl	8003b30 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80037dc:	bf00      	nop
 80037de:	bd80      	pop	{r7, pc}
 80037e0:	2000a744 	.word	0x2000a744
 80037e4:	40013000 	.word	0x40013000

080037e8 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 80037e8:	b580      	push	{r7, lr}
 80037ea:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80037ec:	4b11      	ldr	r3, [pc, #68]	@ (8003834 <MX_UART5_Init+0x4c>)
 80037ee:	4a12      	ldr	r2, [pc, #72]	@ (8003838 <MX_UART5_Init+0x50>)
 80037f0:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 9600;
 80037f2:	4b10      	ldr	r3, [pc, #64]	@ (8003834 <MX_UART5_Init+0x4c>)
 80037f4:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 80037f8:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80037fa:	4b0e      	ldr	r3, [pc, #56]	@ (8003834 <MX_UART5_Init+0x4c>)
 80037fc:	2200      	movs	r2, #0
 80037fe:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8003800:	4b0c      	ldr	r3, [pc, #48]	@ (8003834 <MX_UART5_Init+0x4c>)
 8003802:	2200      	movs	r2, #0
 8003804:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 8003806:	4b0b      	ldr	r3, [pc, #44]	@ (8003834 <MX_UART5_Init+0x4c>)
 8003808:	2200      	movs	r2, #0
 800380a:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 800380c:	4b09      	ldr	r3, [pc, #36]	@ (8003834 <MX_UART5_Init+0x4c>)
 800380e:	220c      	movs	r2, #12
 8003810:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003812:	4b08      	ldr	r3, [pc, #32]	@ (8003834 <MX_UART5_Init+0x4c>)
 8003814:	2200      	movs	r2, #0
 8003816:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 8003818:	4b06      	ldr	r3, [pc, #24]	@ (8003834 <MX_UART5_Init+0x4c>)
 800381a:	2200      	movs	r2, #0
 800381c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 800381e:	4805      	ldr	r0, [pc, #20]	@ (8003834 <MX_UART5_Init+0x4c>)
 8003820:	f002 fd2e 	bl	8006280 <HAL_UART_Init>
 8003824:	4603      	mov	r3, r0
 8003826:	2b00      	cmp	r3, #0
 8003828:	d001      	beq.n	800382e <MX_UART5_Init+0x46>
  {
    Error_Handler();
 800382a:	f000 f981 	bl	8003b30 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 800382e:	bf00      	nop
 8003830:	bd80      	pop	{r7, pc}
 8003832:	bf00      	nop
 8003834:	2000a79c 	.word	0x2000a79c
 8003838:	40005000 	.word	0x40005000

0800383c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800383c:	b580      	push	{r7, lr}
 800383e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003840:	4b11      	ldr	r3, [pc, #68]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003842:	4a12      	ldr	r2, [pc, #72]	@ (800388c <MX_USART2_UART_Init+0x50>)
 8003844:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8003846:	4b10      	ldr	r3, [pc, #64]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003848:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800384c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800384e:	4b0e      	ldr	r3, [pc, #56]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003850:	2200      	movs	r2, #0
 8003852:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8003854:	4b0c      	ldr	r3, [pc, #48]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003856:	2200      	movs	r2, #0
 8003858:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800385a:	4b0b      	ldr	r3, [pc, #44]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 800385c:	2200      	movs	r2, #0
 800385e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_RX;
 8003860:	4b09      	ldr	r3, [pc, #36]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003862:	2204      	movs	r2, #4
 8003864:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003866:	4b08      	ldr	r3, [pc, #32]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003868:	2200      	movs	r2, #0
 800386a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800386c:	4b06      	ldr	r3, [pc, #24]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 800386e:	2200      	movs	r2, #0
 8003870:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8003872:	4805      	ldr	r0, [pc, #20]	@ (8003888 <MX_USART2_UART_Init+0x4c>)
 8003874:	f002 fd04 	bl	8006280 <HAL_UART_Init>
 8003878:	4603      	mov	r3, r0
 800387a:	2b00      	cmp	r3, #0
 800387c:	d001      	beq.n	8003882 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800387e:	f000 f957 	bl	8003b30 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8003882:	bf00      	nop
 8003884:	bd80      	pop	{r7, pc}
 8003886:	bf00      	nop
 8003888:	2000a7e4 	.word	0x2000a7e4
 800388c:	40004400 	.word	0x40004400

08003890 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8003890:	b580      	push	{r7, lr}
 8003892:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8003894:	4b11      	ldr	r3, [pc, #68]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 8003896:	4a12      	ldr	r2, [pc, #72]	@ (80038e0 <MX_USART3_UART_Init+0x50>)
 8003898:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 800389a:	4b10      	ldr	r3, [pc, #64]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 800389c:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 80038a0:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80038a2:	4b0e      	ldr	r3, [pc, #56]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038a4:	2200      	movs	r2, #0
 80038a6:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80038a8:	4b0c      	ldr	r3, [pc, #48]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038aa:	2200      	movs	r2, #0
 80038ac:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80038ae:	4b0b      	ldr	r3, [pc, #44]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038b0:	2200      	movs	r2, #0
 80038b2:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80038b4:	4b09      	ldr	r3, [pc, #36]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038b6:	220c      	movs	r2, #12
 80038b8:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80038ba:	4b08      	ldr	r3, [pc, #32]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038bc:	2200      	movs	r2, #0
 80038be:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80038c0:	4b06      	ldr	r3, [pc, #24]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038c2:	2200      	movs	r2, #0
 80038c4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80038c6:	4805      	ldr	r0, [pc, #20]	@ (80038dc <MX_USART3_UART_Init+0x4c>)
 80038c8:	f002 fcda 	bl	8006280 <HAL_UART_Init>
 80038cc:	4603      	mov	r3, r0
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d001      	beq.n	80038d6 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80038d2:	f000 f92d 	bl	8003b30 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80038d6:	bf00      	nop
 80038d8:	bd80      	pop	{r7, pc}
 80038da:	bf00      	nop
 80038dc:	2000a82c 	.word	0x2000a82c
 80038e0:	40004800 	.word	0x40004800

080038e4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80038e4:	b580      	push	{r7, lr}
 80038e6:	b082      	sub	sp, #8
 80038e8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80038ea:	2300      	movs	r3, #0
 80038ec:	607b      	str	r3, [r7, #4]
 80038ee:	4b10      	ldr	r3, [pc, #64]	@ (8003930 <MX_DMA_Init+0x4c>)
 80038f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038f2:	4a0f      	ldr	r2, [pc, #60]	@ (8003930 <MX_DMA_Init+0x4c>)
 80038f4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80038f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80038fa:	4b0d      	ldr	r3, [pc, #52]	@ (8003930 <MX_DMA_Init+0x4c>)
 80038fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038fe:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003902:	607b      	str	r3, [r7, #4]
 8003904:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 8003906:	2200      	movs	r2, #0
 8003908:	2100      	movs	r1, #0
 800390a:	200c      	movs	r0, #12
 800390c:	f000 fd11 	bl	8004332 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 8003910:	200c      	movs	r0, #12
 8003912:	f000 fd2a 	bl	800436a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 8003916:	2200      	movs	r2, #0
 8003918:	2100      	movs	r1, #0
 800391a:	2010      	movs	r0, #16
 800391c:	f000 fd09 	bl	8004332 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8003920:	2010      	movs	r0, #16
 8003922:	f000 fd22 	bl	800436a <HAL_NVIC_EnableIRQ>

}
 8003926:	bf00      	nop
 8003928:	3708      	adds	r7, #8
 800392a:	46bd      	mov	sp, r7
 800392c:	bd80      	pop	{r7, pc}
 800392e:	bf00      	nop
 8003930:	40023800 	.word	0x40023800

08003934 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8003934:	b580      	push	{r7, lr}
 8003936:	b08a      	sub	sp, #40	@ 0x28
 8003938:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800393a:	f107 0314 	add.w	r3, r7, #20
 800393e:	2200      	movs	r2, #0
 8003940:	601a      	str	r2, [r3, #0]
 8003942:	605a      	str	r2, [r3, #4]
 8003944:	609a      	str	r2, [r3, #8]
 8003946:	60da      	str	r2, [r3, #12]
 8003948:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800394a:	2300      	movs	r3, #0
 800394c:	613b      	str	r3, [r7, #16]
 800394e:	4b4c      	ldr	r3, [pc, #304]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 8003950:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003952:	4a4b      	ldr	r2, [pc, #300]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 8003954:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003958:	6313      	str	r3, [r2, #48]	@ 0x30
 800395a:	4b49      	ldr	r3, [pc, #292]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 800395c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800395e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003962:	613b      	str	r3, [r7, #16]
 8003964:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003966:	2300      	movs	r3, #0
 8003968:	60fb      	str	r3, [r7, #12]
 800396a:	4b45      	ldr	r3, [pc, #276]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 800396c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800396e:	4a44      	ldr	r2, [pc, #272]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 8003970:	f043 0304 	orr.w	r3, r3, #4
 8003974:	6313      	str	r3, [r2, #48]	@ 0x30
 8003976:	4b42      	ldr	r3, [pc, #264]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 8003978:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800397a:	f003 0304 	and.w	r3, r3, #4
 800397e:	60fb      	str	r3, [r7, #12]
 8003980:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003982:	2300      	movs	r3, #0
 8003984:	60bb      	str	r3, [r7, #8]
 8003986:	4b3e      	ldr	r3, [pc, #248]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 8003988:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800398a:	4a3d      	ldr	r2, [pc, #244]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 800398c:	f043 0301 	orr.w	r3, r3, #1
 8003990:	6313      	str	r3, [r2, #48]	@ 0x30
 8003992:	4b3b      	ldr	r3, [pc, #236]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 8003994:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003996:	f003 0301 	and.w	r3, r3, #1
 800399a:	60bb      	str	r3, [r7, #8]
 800399c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800399e:	2300      	movs	r3, #0
 80039a0:	607b      	str	r3, [r7, #4]
 80039a2:	4b37      	ldr	r3, [pc, #220]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 80039a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039a6:	4a36      	ldr	r2, [pc, #216]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 80039a8:	f043 0302 	orr.w	r3, r3, #2
 80039ac:	6313      	str	r3, [r2, #48]	@ 0x30
 80039ae:	4b34      	ldr	r3, [pc, #208]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 80039b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039b2:	f003 0302 	and.w	r3, r3, #2
 80039b6:	607b      	str	r3, [r7, #4]
 80039b8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80039ba:	2300      	movs	r3, #0
 80039bc:	603b      	str	r3, [r7, #0]
 80039be:	4b30      	ldr	r3, [pc, #192]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 80039c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039c2:	4a2f      	ldr	r2, [pc, #188]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 80039c4:	f043 0308 	orr.w	r3, r3, #8
 80039c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80039ca:	4b2d      	ldr	r3, [pc, #180]	@ (8003a80 <MX_GPIO_Init+0x14c>)
 80039cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039ce:	f003 0308 	and.w	r3, r3, #8
 80039d2:	603b      	str	r3, [r7, #0]
 80039d4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin|LCD_D1_Pin, GPIO_PIN_RESET);
 80039d6:	2200      	movs	r2, #0
 80039d8:	2182      	movs	r1, #130	@ 0x82
 80039da:	482a      	ldr	r0, [pc, #168]	@ (8003a84 <MX_GPIO_Init+0x150>)
 80039dc:	f001 fa82 	bl	8004ee4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 80039e0:	2200      	movs	r2, #0
 80039e2:	f240 7113 	movw	r1, #1811	@ 0x713
 80039e6:	4828      	ldr	r0, [pc, #160]	@ (8003a88 <MX_GPIO_Init+0x154>)
 80039e8:	f001 fa7c 	bl	8004ee4 <HAL_GPIO_WritePin>
                          |LCD_D0_Pin|LCD_D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 80039ec:	2200      	movs	r2, #0
 80039ee:	f240 4139 	movw	r1, #1081	@ 0x439
 80039f2:	4826      	ldr	r0, [pc, #152]	@ (8003a8c <MX_GPIO_Init+0x158>)
 80039f4:	f001 fa76 	bl	8004ee4 <HAL_GPIO_WritePin>
                          |LCD_D4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SD_SS_GPIO_Port, SD_SS_Pin, GPIO_PIN_SET);
 80039f8:	2201      	movs	r2, #1
 80039fa:	2140      	movs	r1, #64	@ 0x40
 80039fc:	4823      	ldr	r0, [pc, #140]	@ (8003a8c <MX_GPIO_Init+0x158>)
 80039fe:	f001 fa71 	bl	8004ee4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_RST_Pin LCD_D1_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin|LCD_D1_Pin;
 8003a02:	2382      	movs	r3, #130	@ 0x82
 8003a04:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003a06:	2301      	movs	r3, #1
 8003a08:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a0a:	2300      	movs	r3, #0
 8003a0c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003a0e:	2302      	movs	r3, #2
 8003a10:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003a12:	f107 0314 	add.w	r3, r7, #20
 8003a16:	4619      	mov	r1, r3
 8003a18:	481a      	ldr	r0, [pc, #104]	@ (8003a84 <MX_GPIO_Init+0x150>)
 8003a1a:	f001 f8cf 	bl	8004bbc <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_RD_Pin LCD_WR_Pin LCD_RS_Pin LCD_D7_Pin
                           LCD_D0_Pin LCD_D2_Pin */
  GPIO_InitStruct.Pin = LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8003a1e:	f240 7313 	movw	r3, #1811	@ 0x713
 8003a22:	617b      	str	r3, [r7, #20]
                          |LCD_D0_Pin|LCD_D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003a24:	2301      	movs	r3, #1
 8003a26:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a28:	2300      	movs	r3, #0
 8003a2a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003a2c:	2302      	movs	r3, #2
 8003a2e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a30:	f107 0314 	add.w	r3, r7, #20
 8003a34:	4619      	mov	r1, r3
 8003a36:	4814      	ldr	r0, [pc, #80]	@ (8003a88 <MX_GPIO_Init+0x154>)
 8003a38:	f001 f8c0 	bl	8004bbc <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_CS_Pin LCD_D6_Pin LCD_D3_Pin LCD_D5_Pin
                           LCD_D4_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 8003a3c:	f240 4339 	movw	r3, #1081	@ 0x439
 8003a40:	617b      	str	r3, [r7, #20]
                          |LCD_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003a42:	2301      	movs	r3, #1
 8003a44:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a46:	2300      	movs	r3, #0
 8003a48:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003a4a:	2302      	movs	r3, #2
 8003a4c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003a4e:	f107 0314 	add.w	r3, r7, #20
 8003a52:	4619      	mov	r1, r3
 8003a54:	480d      	ldr	r0, [pc, #52]	@ (8003a8c <MX_GPIO_Init+0x158>)
 8003a56:	f001 f8b1 	bl	8004bbc <HAL_GPIO_Init>

  /*Configure GPIO pin : SD_SS_Pin */
  GPIO_InitStruct.Pin = SD_SS_Pin;
 8003a5a:	2340      	movs	r3, #64	@ 0x40
 8003a5c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003a5e:	2301      	movs	r3, #1
 8003a60:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a62:	2300      	movs	r3, #0
 8003a64:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8003a66:	2301      	movs	r3, #1
 8003a68:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SD_SS_GPIO_Port, &GPIO_InitStruct);
 8003a6a:	f107 0314 	add.w	r3, r7, #20
 8003a6e:	4619      	mov	r1, r3
 8003a70:	4806      	ldr	r0, [pc, #24]	@ (8003a8c <MX_GPIO_Init+0x158>)
 8003a72:	f001 f8a3 	bl	8004bbc <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8003a76:	bf00      	nop
 8003a78:	3728      	adds	r7, #40	@ 0x28
 8003a7a:	46bd      	mov	sp, r7
 8003a7c:	bd80      	pop	{r7, pc}
 8003a7e:	bf00      	nop
 8003a80:	40023800 	.word	0x40023800
 8003a84:	40020800 	.word	0x40020800
 8003a88:	40020000 	.word	0x40020000
 8003a8c:	40020400 	.word	0x40020400

08003a90 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */


void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b082      	sub	sp, #8
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]

	//HAL_UART_Receive_IT(&huart3, data, 1);
	if(huart->Instance == USART3){
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	681b      	ldr	r3, [r3, #0]
 8003a9c:	4a18      	ldr	r2, [pc, #96]	@ (8003b00 <HAL_UART_RxCpltCallback+0x70>)
 8003a9e:	4293      	cmp	r3, r2
 8003aa0:	d10b      	bne.n	8003aba <HAL_UART_RxCpltCallback+0x2a>

		HAL_UART_Receive_DMA(&huart3, data, 1);
 8003aa2:	2201      	movs	r2, #1
 8003aa4:	4917      	ldr	r1, [pc, #92]	@ (8003b04 <HAL_UART_RxCpltCallback+0x74>)
 8003aa6:	4818      	ldr	r0, [pc, #96]	@ (8003b08 <HAL_UART_RxCpltCallback+0x78>)
 8003aa8:	f002 fcc5 	bl	8006436 <HAL_UART_Receive_DMA>
		received_char = data[0];
 8003aac:	4b15      	ldr	r3, [pc, #84]	@ (8003b04 <HAL_UART_RxCpltCallback+0x74>)
 8003aae:	781a      	ldrb	r2, [r3, #0]
 8003ab0:	4b16      	ldr	r3, [pc, #88]	@ (8003b0c <HAL_UART_RxCpltCallback+0x7c>)
 8003ab2:	701a      	strb	r2, [r3, #0]
		move1 = 1;
 8003ab4:	4b16      	ldr	r3, [pc, #88]	@ (8003b10 <HAL_UART_RxCpltCallback+0x80>)
 8003ab6:	2201      	movs	r2, #1
 8003ab8:	601a      	str	r2, [r3, #0]
	}

	if(huart->Instance == UART5){
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	4a15      	ldr	r2, [pc, #84]	@ (8003b14 <HAL_UART_RxCpltCallback+0x84>)
 8003ac0:	4293      	cmp	r3, r2
 8003ac2:	d10b      	bne.n	8003adc <HAL_UART_RxCpltCallback+0x4c>
		HAL_UART_Receive_DMA(&huart5, data2, 1);
 8003ac4:	2201      	movs	r2, #1
 8003ac6:	4914      	ldr	r1, [pc, #80]	@ (8003b18 <HAL_UART_RxCpltCallback+0x88>)
 8003ac8:	4814      	ldr	r0, [pc, #80]	@ (8003b1c <HAL_UART_RxCpltCallback+0x8c>)
 8003aca:	f002 fcb4 	bl	8006436 <HAL_UART_Receive_DMA>
		received_char2 = data2[0];
 8003ace:	4b12      	ldr	r3, [pc, #72]	@ (8003b18 <HAL_UART_RxCpltCallback+0x88>)
 8003ad0:	781a      	ldrb	r2, [r3, #0]
 8003ad2:	4b13      	ldr	r3, [pc, #76]	@ (8003b20 <HAL_UART_RxCpltCallback+0x90>)
 8003ad4:	701a      	strb	r2, [r3, #0]
		move2 = 1;
 8003ad6:	4b13      	ldr	r3, [pc, #76]	@ (8003b24 <HAL_UART_RxCpltCallback+0x94>)
 8003ad8:	2201      	movs	r2, #1
 8003ada:	601a      	str	r2, [r3, #0]
	}

	if(huart->Instance == USART2){
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	4a11      	ldr	r2, [pc, #68]	@ (8003b28 <HAL_UART_RxCpltCallback+0x98>)
 8003ae2:	4293      	cmp	r3, r2
 8003ae4:	d108      	bne.n	8003af8 <HAL_UART_RxCpltCallback+0x68>
		HAL_UART_Receive_DMA(&huart2, data, 1);
 8003ae6:	2201      	movs	r2, #1
 8003ae8:	4906      	ldr	r1, [pc, #24]	@ (8003b04 <HAL_UART_RxCpltCallback+0x74>)
 8003aea:	4810      	ldr	r0, [pc, #64]	@ (8003b2c <HAL_UART_RxCpltCallback+0x9c>)
 8003aec:	f002 fca3 	bl	8006436 <HAL_UART_Receive_DMA>
		//received_char2 = data2[0];
		received_char = data[0];
 8003af0:	4b04      	ldr	r3, [pc, #16]	@ (8003b04 <HAL_UART_RxCpltCallback+0x74>)
 8003af2:	781a      	ldrb	r2, [r3, #0]
 8003af4:	4b05      	ldr	r3, [pc, #20]	@ (8003b0c <HAL_UART_RxCpltCallback+0x7c>)
 8003af6:	701a      	strb	r2, [r3, #0]
	}




}
 8003af8:	bf00      	nop
 8003afa:	3708      	adds	r7, #8
 8003afc:	46bd      	mov	sp, r7
 8003afe:	bd80      	pop	{r7, pc}
 8003b00:	40004800 	.word	0x40004800
 8003b04:	2000a934 	.word	0x2000a934
 8003b08:	2000a82c 	.word	0x2000a82c
 8003b0c:	2000a94c 	.word	0x2000a94c
 8003b10:	2000a980 	.word	0x2000a980
 8003b14:	40005000 	.word	0x40005000
 8003b18:	2000a938 	.word	0x2000a938
 8003b1c:	2000a79c 	.word	0x2000a79c
 8003b20:	2000a94d 	.word	0x2000a94d
 8003b24:	2000a984 	.word	0x2000a984
 8003b28:	40004400 	.word	0x40004400
 8003b2c:	2000a7e4 	.word	0x2000a7e4

08003b30 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003b30:	b480      	push	{r7}
 8003b32:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003b34:	b672      	cpsid	i
}
 8003b36:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8003b38:	bf00      	nop
 8003b3a:	e7fd      	b.n	8003b38 <Error_Handler+0x8>

08003b3c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003b3c:	b480      	push	{r7}
 8003b3e:	b083      	sub	sp, #12
 8003b40:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003b42:	2300      	movs	r3, #0
 8003b44:	607b      	str	r3, [r7, #4]
 8003b46:	4b10      	ldr	r3, [pc, #64]	@ (8003b88 <HAL_MspInit+0x4c>)
 8003b48:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b4a:	4a0f      	ldr	r2, [pc, #60]	@ (8003b88 <HAL_MspInit+0x4c>)
 8003b4c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003b50:	6453      	str	r3, [r2, #68]	@ 0x44
 8003b52:	4b0d      	ldr	r3, [pc, #52]	@ (8003b88 <HAL_MspInit+0x4c>)
 8003b54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b56:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003b5a:	607b      	str	r3, [r7, #4]
 8003b5c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8003b5e:	2300      	movs	r3, #0
 8003b60:	603b      	str	r3, [r7, #0]
 8003b62:	4b09      	ldr	r3, [pc, #36]	@ (8003b88 <HAL_MspInit+0x4c>)
 8003b64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b66:	4a08      	ldr	r2, [pc, #32]	@ (8003b88 <HAL_MspInit+0x4c>)
 8003b68:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003b6c:	6413      	str	r3, [r2, #64]	@ 0x40
 8003b6e:	4b06      	ldr	r3, [pc, #24]	@ (8003b88 <HAL_MspInit+0x4c>)
 8003b70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b72:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003b76:	603b      	str	r3, [r7, #0]
 8003b78:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003b7a:	bf00      	nop
 8003b7c:	370c      	adds	r7, #12
 8003b7e:	46bd      	mov	sp, r7
 8003b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b84:	4770      	bx	lr
 8003b86:	bf00      	nop
 8003b88:	40023800 	.word	0x40023800

08003b8c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b08a      	sub	sp, #40	@ 0x28
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003b94:	f107 0314 	add.w	r3, r7, #20
 8003b98:	2200      	movs	r2, #0
 8003b9a:	601a      	str	r2, [r3, #0]
 8003b9c:	605a      	str	r2, [r3, #4]
 8003b9e:	609a      	str	r2, [r3, #8]
 8003ba0:	60da      	str	r2, [r3, #12]
 8003ba2:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	4a19      	ldr	r2, [pc, #100]	@ (8003c10 <HAL_SPI_MspInit+0x84>)
 8003baa:	4293      	cmp	r3, r2
 8003bac:	d12b      	bne.n	8003c06 <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8003bae:	2300      	movs	r3, #0
 8003bb0:	613b      	str	r3, [r7, #16]
 8003bb2:	4b18      	ldr	r3, [pc, #96]	@ (8003c14 <HAL_SPI_MspInit+0x88>)
 8003bb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003bb6:	4a17      	ldr	r2, [pc, #92]	@ (8003c14 <HAL_SPI_MspInit+0x88>)
 8003bb8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003bbc:	6453      	str	r3, [r2, #68]	@ 0x44
 8003bbe:	4b15      	ldr	r3, [pc, #84]	@ (8003c14 <HAL_SPI_MspInit+0x88>)
 8003bc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003bc2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003bc6:	613b      	str	r3, [r7, #16]
 8003bc8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003bca:	2300      	movs	r3, #0
 8003bcc:	60fb      	str	r3, [r7, #12]
 8003bce:	4b11      	ldr	r3, [pc, #68]	@ (8003c14 <HAL_SPI_MspInit+0x88>)
 8003bd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bd2:	4a10      	ldr	r2, [pc, #64]	@ (8003c14 <HAL_SPI_MspInit+0x88>)
 8003bd4:	f043 0301 	orr.w	r3, r3, #1
 8003bd8:	6313      	str	r3, [r2, #48]	@ 0x30
 8003bda:	4b0e      	ldr	r3, [pc, #56]	@ (8003c14 <HAL_SPI_MspInit+0x88>)
 8003bdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bde:	f003 0301 	and.w	r3, r3, #1
 8003be2:	60fb      	str	r3, [r7, #12]
 8003be4:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8003be6:	23e0      	movs	r3, #224	@ 0xe0
 8003be8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003bea:	2302      	movs	r3, #2
 8003bec:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003bee:	2300      	movs	r3, #0
 8003bf0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003bf2:	2303      	movs	r3, #3
 8003bf4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8003bf6:	2305      	movs	r3, #5
 8003bf8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003bfa:	f107 0314 	add.w	r3, r7, #20
 8003bfe:	4619      	mov	r1, r3
 8003c00:	4805      	ldr	r0, [pc, #20]	@ (8003c18 <HAL_SPI_MspInit+0x8c>)
 8003c02:	f000 ffdb 	bl	8004bbc <HAL_GPIO_Init>

  /* USER CODE END SPI1_MspInit 1 */

  }

}
 8003c06:	bf00      	nop
 8003c08:	3728      	adds	r7, #40	@ 0x28
 8003c0a:	46bd      	mov	sp, r7
 8003c0c:	bd80      	pop	{r7, pc}
 8003c0e:	bf00      	nop
 8003c10:	40013000 	.word	0x40013000
 8003c14:	40023800 	.word	0x40023800
 8003c18:	40020000 	.word	0x40020000

08003c1c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003c1c:	b580      	push	{r7, lr}
 8003c1e:	b08e      	sub	sp, #56	@ 0x38
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003c24:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003c28:	2200      	movs	r2, #0
 8003c2a:	601a      	str	r2, [r3, #0]
 8003c2c:	605a      	str	r2, [r3, #4]
 8003c2e:	609a      	str	r2, [r3, #8]
 8003c30:	60da      	str	r2, [r3, #12]
 8003c32:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART5)
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	4a8d      	ldr	r2, [pc, #564]	@ (8003e70 <HAL_UART_MspInit+0x254>)
 8003c3a:	4293      	cmp	r3, r2
 8003c3c:	d14b      	bne.n	8003cd6 <HAL_UART_MspInit+0xba>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8003c3e:	2300      	movs	r3, #0
 8003c40:	623b      	str	r3, [r7, #32]
 8003c42:	4b8c      	ldr	r3, [pc, #560]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c46:	4a8b      	ldr	r2, [pc, #556]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c48:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003c4c:	6413      	str	r3, [r2, #64]	@ 0x40
 8003c4e:	4b89      	ldr	r3, [pc, #548]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c50:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c52:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003c56:	623b      	str	r3, [r7, #32]
 8003c58:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003c5a:	2300      	movs	r3, #0
 8003c5c:	61fb      	str	r3, [r7, #28]
 8003c5e:	4b85      	ldr	r3, [pc, #532]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c62:	4a84      	ldr	r2, [pc, #528]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c64:	f043 0304 	orr.w	r3, r3, #4
 8003c68:	6313      	str	r3, [r2, #48]	@ 0x30
 8003c6a:	4b82      	ldr	r3, [pc, #520]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c6e:	f003 0304 	and.w	r3, r3, #4
 8003c72:	61fb      	str	r3, [r7, #28]
 8003c74:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003c76:	2300      	movs	r3, #0
 8003c78:	61bb      	str	r3, [r7, #24]
 8003c7a:	4b7e      	ldr	r3, [pc, #504]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c7e:	4a7d      	ldr	r2, [pc, #500]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c80:	f043 0308 	orr.w	r3, r3, #8
 8003c84:	6313      	str	r3, [r2, #48]	@ 0x30
 8003c86:	4b7b      	ldr	r3, [pc, #492]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003c88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c8a:	f003 0308 	and.w	r3, r3, #8
 8003c8e:	61bb      	str	r3, [r7, #24]
 8003c90:	69bb      	ldr	r3, [r7, #24]
    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8003c92:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003c96:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003c98:	2302      	movs	r3, #2
 8003c9a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c9c:	2300      	movs	r3, #0
 8003c9e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003ca0:	2303      	movs	r3, #3
 8003ca2:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8003ca4:	2308      	movs	r3, #8
 8003ca6:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003ca8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003cac:	4619      	mov	r1, r3
 8003cae:	4872      	ldr	r0, [pc, #456]	@ (8003e78 <HAL_UART_MspInit+0x25c>)
 8003cb0:	f000 ff84 	bl	8004bbc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8003cb4:	2304      	movs	r3, #4
 8003cb6:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003cb8:	2302      	movs	r3, #2
 8003cba:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003cc0:	2303      	movs	r3, #3
 8003cc2:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8003cc4:	2308      	movs	r3, #8
 8003cc6:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003cc8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003ccc:	4619      	mov	r1, r3
 8003cce:	486b      	ldr	r0, [pc, #428]	@ (8003e7c <HAL_UART_MspInit+0x260>)
 8003cd0:	f000 ff74 	bl	8004bbc <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8003cd4:	e0c8      	b.n	8003e68 <HAL_UART_MspInit+0x24c>
  else if(huart->Instance==USART2)
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	4a69      	ldr	r2, [pc, #420]	@ (8003e80 <HAL_UART_MspInit+0x264>)
 8003cdc:	4293      	cmp	r3, r2
 8003cde:	d15a      	bne.n	8003d96 <HAL_UART_MspInit+0x17a>
    __HAL_RCC_USART2_CLK_ENABLE();
 8003ce0:	2300      	movs	r3, #0
 8003ce2:	617b      	str	r3, [r7, #20]
 8003ce4:	4b63      	ldr	r3, [pc, #396]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003ce6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ce8:	4a62      	ldr	r2, [pc, #392]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003cea:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003cee:	6413      	str	r3, [r2, #64]	@ 0x40
 8003cf0:	4b60      	ldr	r3, [pc, #384]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003cf2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cf4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003cf8:	617b      	str	r3, [r7, #20]
 8003cfa:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	613b      	str	r3, [r7, #16]
 8003d00:	4b5c      	ldr	r3, [pc, #368]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003d02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003d04:	4a5b      	ldr	r2, [pc, #364]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003d06:	f043 0301 	orr.w	r3, r3, #1
 8003d0a:	6313      	str	r3, [r2, #48]	@ 0x30
 8003d0c:	4b59      	ldr	r3, [pc, #356]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003d0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003d10:	f003 0301 	and.w	r3, r3, #1
 8003d14:	613b      	str	r3, [r7, #16]
 8003d16:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8003d18:	230c      	movs	r3, #12
 8003d1a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003d1c:	2302      	movs	r3, #2
 8003d1e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003d20:	2300      	movs	r3, #0
 8003d22:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003d24:	2303      	movs	r3, #3
 8003d26:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8003d28:	2307      	movs	r3, #7
 8003d2a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003d2c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003d30:	4619      	mov	r1, r3
 8003d32:	4854      	ldr	r0, [pc, #336]	@ (8003e84 <HAL_UART_MspInit+0x268>)
 8003d34:	f000 ff42 	bl	8004bbc <HAL_GPIO_Init>
    hdma_usart2_rx.Instance = DMA1_Stream5;
 8003d38:	4b53      	ldr	r3, [pc, #332]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d3a:	4a54      	ldr	r2, [pc, #336]	@ (8003e8c <HAL_UART_MspInit+0x270>)
 8003d3c:	601a      	str	r2, [r3, #0]
    hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 8003d3e:	4b52      	ldr	r3, [pc, #328]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d40:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003d44:	605a      	str	r2, [r3, #4]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8003d46:	4b50      	ldr	r3, [pc, #320]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d48:	2200      	movs	r2, #0
 8003d4a:	609a      	str	r2, [r3, #8]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8003d4c:	4b4e      	ldr	r3, [pc, #312]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d4e:	2200      	movs	r2, #0
 8003d50:	60da      	str	r2, [r3, #12]
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8003d52:	4b4d      	ldr	r3, [pc, #308]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d54:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003d58:	611a      	str	r2, [r3, #16]
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8003d5a:	4b4b      	ldr	r3, [pc, #300]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d5c:	2200      	movs	r2, #0
 8003d5e:	615a      	str	r2, [r3, #20]
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8003d60:	4b49      	ldr	r3, [pc, #292]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d62:	2200      	movs	r2, #0
 8003d64:	619a      	str	r2, [r3, #24]
    hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 8003d66:	4b48      	ldr	r3, [pc, #288]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d68:	2200      	movs	r2, #0
 8003d6a:	61da      	str	r2, [r3, #28]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 8003d6c:	4b46      	ldr	r3, [pc, #280]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d6e:	2200      	movs	r2, #0
 8003d70:	621a      	str	r2, [r3, #32]
    hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8003d72:	4b45      	ldr	r3, [pc, #276]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d74:	2200      	movs	r2, #0
 8003d76:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 8003d78:	4843      	ldr	r0, [pc, #268]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d7a:	f000 fb1d 	bl	80043b8 <HAL_DMA_Init>
 8003d7e:	4603      	mov	r3, r0
 8003d80:	2b00      	cmp	r3, #0
 8003d82:	d001      	beq.n	8003d88 <HAL_UART_MspInit+0x16c>
      Error_Handler();
 8003d84:	f7ff fed4 	bl	8003b30 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	4a3f      	ldr	r2, [pc, #252]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d8c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003d8e:	4a3e      	ldr	r2, [pc, #248]	@ (8003e88 <HAL_UART_MspInit+0x26c>)
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	6393      	str	r3, [r2, #56]	@ 0x38
}
 8003d94:	e068      	b.n	8003e68 <HAL_UART_MspInit+0x24c>
  else if(huart->Instance==USART3)
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	681b      	ldr	r3, [r3, #0]
 8003d9a:	4a3d      	ldr	r2, [pc, #244]	@ (8003e90 <HAL_UART_MspInit+0x274>)
 8003d9c:	4293      	cmp	r3, r2
 8003d9e:	d163      	bne.n	8003e68 <HAL_UART_MspInit+0x24c>
    __HAL_RCC_USART3_CLK_ENABLE();
 8003da0:	2300      	movs	r3, #0
 8003da2:	60fb      	str	r3, [r7, #12]
 8003da4:	4b33      	ldr	r3, [pc, #204]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003da6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003da8:	4a32      	ldr	r2, [pc, #200]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003daa:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003dae:	6413      	str	r3, [r2, #64]	@ 0x40
 8003db0:	4b30      	ldr	r3, [pc, #192]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003db2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003db4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003db8:	60fb      	str	r3, [r7, #12]
 8003dba:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	60bb      	str	r3, [r7, #8]
 8003dc0:	4b2c      	ldr	r3, [pc, #176]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003dc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003dc4:	4a2b      	ldr	r2, [pc, #172]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003dc6:	f043 0304 	orr.w	r3, r3, #4
 8003dca:	6313      	str	r3, [r2, #48]	@ 0x30
 8003dcc:	4b29      	ldr	r3, [pc, #164]	@ (8003e74 <HAL_UART_MspInit+0x258>)
 8003dce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003dd0:	f003 0304 	and.w	r3, r3, #4
 8003dd4:	60bb      	str	r3, [r7, #8]
 8003dd6:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_10;
 8003dd8:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8003ddc:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003dde:	2302      	movs	r3, #2
 8003de0:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003de2:	2300      	movs	r3, #0
 8003de4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003de6:	2303      	movs	r3, #3
 8003de8:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8003dea:	2307      	movs	r3, #7
 8003dec:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003dee:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003df2:	4619      	mov	r1, r3
 8003df4:	4820      	ldr	r0, [pc, #128]	@ (8003e78 <HAL_UART_MspInit+0x25c>)
 8003df6:	f000 fee1 	bl	8004bbc <HAL_GPIO_Init>
    hdma_usart3_rx.Instance = DMA1_Stream1;
 8003dfa:	4b26      	ldr	r3, [pc, #152]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003dfc:	4a26      	ldr	r2, [pc, #152]	@ (8003e98 <HAL_UART_MspInit+0x27c>)
 8003dfe:	601a      	str	r2, [r3, #0]
    hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 8003e00:	4b24      	ldr	r3, [pc, #144]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e02:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003e06:	605a      	str	r2, [r3, #4]
    hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8003e08:	4b22      	ldr	r3, [pc, #136]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	609a      	str	r2, [r3, #8]
    hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8003e0e:	4b21      	ldr	r3, [pc, #132]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e10:	2200      	movs	r2, #0
 8003e12:	60da      	str	r2, [r3, #12]
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 8003e14:	4b1f      	ldr	r3, [pc, #124]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e16:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003e1a:	611a      	str	r2, [r3, #16]
    hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8003e1c:	4b1d      	ldr	r3, [pc, #116]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e1e:	2200      	movs	r2, #0
 8003e20:	615a      	str	r2, [r3, #20]
    hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8003e22:	4b1c      	ldr	r3, [pc, #112]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e24:	2200      	movs	r2, #0
 8003e26:	619a      	str	r2, [r3, #24]
    hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 8003e28:	4b1a      	ldr	r3, [pc, #104]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e2a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003e2e:	61da      	str	r2, [r3, #28]
    hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 8003e30:	4b18      	ldr	r3, [pc, #96]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e32:	2200      	movs	r2, #0
 8003e34:	621a      	str	r2, [r3, #32]
    hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8003e36:	4b17      	ldr	r3, [pc, #92]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e38:	2200      	movs	r2, #0
 8003e3a:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 8003e3c:	4815      	ldr	r0, [pc, #84]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e3e:	f000 fabb 	bl	80043b8 <HAL_DMA_Init>
 8003e42:	4603      	mov	r3, r0
 8003e44:	2b00      	cmp	r3, #0
 8003e46:	d001      	beq.n	8003e4c <HAL_UART_MspInit+0x230>
      Error_Handler();
 8003e48:	f7ff fe72 	bl	8003b30 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	4a11      	ldr	r2, [pc, #68]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e50:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003e52:	4a10      	ldr	r2, [pc, #64]	@ (8003e94 <HAL_UART_MspInit+0x278>)
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8003e58:	2200      	movs	r2, #0
 8003e5a:	2100      	movs	r1, #0
 8003e5c:	2027      	movs	r0, #39	@ 0x27
 8003e5e:	f000 fa68 	bl	8004332 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8003e62:	2027      	movs	r0, #39	@ 0x27
 8003e64:	f000 fa81 	bl	800436a <HAL_NVIC_EnableIRQ>
}
 8003e68:	bf00      	nop
 8003e6a:	3738      	adds	r7, #56	@ 0x38
 8003e6c:	46bd      	mov	sp, r7
 8003e6e:	bd80      	pop	{r7, pc}
 8003e70:	40005000 	.word	0x40005000
 8003e74:	40023800 	.word	0x40023800
 8003e78:	40020800 	.word	0x40020800
 8003e7c:	40020c00 	.word	0x40020c00
 8003e80:	40004400 	.word	0x40004400
 8003e84:	40020000 	.word	0x40020000
 8003e88:	2000a874 	.word	0x2000a874
 8003e8c:	40026088 	.word	0x40026088
 8003e90:	40004800 	.word	0x40004800
 8003e94:	2000a8d4 	.word	0x2000a8d4
 8003e98:	40026028 	.word	0x40026028

08003e9c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003e9c:	b480      	push	{r7}
 8003e9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8003ea0:	bf00      	nop
 8003ea2:	e7fd      	b.n	8003ea0 <NMI_Handler+0x4>

08003ea4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003ea4:	b480      	push	{r7}
 8003ea6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003ea8:	bf00      	nop
 8003eaa:	e7fd      	b.n	8003ea8 <HardFault_Handler+0x4>

08003eac <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003eac:	b480      	push	{r7}
 8003eae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003eb0:	bf00      	nop
 8003eb2:	e7fd      	b.n	8003eb0 <MemManage_Handler+0x4>

08003eb4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003eb4:	b480      	push	{r7}
 8003eb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003eb8:	bf00      	nop
 8003eba:	e7fd      	b.n	8003eb8 <BusFault_Handler+0x4>

08003ebc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003ebc:	b480      	push	{r7}
 8003ebe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003ec0:	bf00      	nop
 8003ec2:	e7fd      	b.n	8003ec0 <UsageFault_Handler+0x4>

08003ec4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003ec4:	b480      	push	{r7}
 8003ec6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8003ec8:	bf00      	nop
 8003eca:	46bd      	mov	sp, r7
 8003ecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ed0:	4770      	bx	lr

08003ed2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003ed2:	b480      	push	{r7}
 8003ed4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003ed6:	bf00      	nop
 8003ed8:	46bd      	mov	sp, r7
 8003eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ede:	4770      	bx	lr

08003ee0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003ee0:	b480      	push	{r7}
 8003ee2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003ee4:	bf00      	nop
 8003ee6:	46bd      	mov	sp, r7
 8003ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eec:	4770      	bx	lr
	...

08003ef0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003ef0:	b580      	push	{r7, lr}
 8003ef2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */
	if(Timer1 > 0){
 8003ef4:	4b0c      	ldr	r3, [pc, #48]	@ (8003f28 <SysTick_Handler+0x38>)
 8003ef6:	881b      	ldrh	r3, [r3, #0]
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d005      	beq.n	8003f08 <SysTick_Handler+0x18>
		Timer1--;
 8003efc:	4b0a      	ldr	r3, [pc, #40]	@ (8003f28 <SysTick_Handler+0x38>)
 8003efe:	881b      	ldrh	r3, [r3, #0]
 8003f00:	3b01      	subs	r3, #1
 8003f02:	b29a      	uxth	r2, r3
 8003f04:	4b08      	ldr	r3, [pc, #32]	@ (8003f28 <SysTick_Handler+0x38>)
 8003f06:	801a      	strh	r2, [r3, #0]
	}
	if(Timer2 > 0){
 8003f08:	4b08      	ldr	r3, [pc, #32]	@ (8003f2c <SysTick_Handler+0x3c>)
 8003f0a:	881b      	ldrh	r3, [r3, #0]
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	d005      	beq.n	8003f1c <SysTick_Handler+0x2c>
		Timer2--;
 8003f10:	4b06      	ldr	r3, [pc, #24]	@ (8003f2c <SysTick_Handler+0x3c>)
 8003f12:	881b      	ldrh	r3, [r3, #0]
 8003f14:	3b01      	subs	r3, #1
 8003f16:	b29a      	uxth	r2, r3
 8003f18:	4b04      	ldr	r3, [pc, #16]	@ (8003f2c <SysTick_Handler+0x3c>)
 8003f1a:	801a      	strh	r2, [r3, #0]
	}
  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003f1c:	f000 f8ea 	bl	80040f4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  HAL_SYSTICK_IRQHandler();
 8003f20:	f000 fa3d 	bl	800439e <HAL_SYSTICK_IRQHandler>
  /* USER CODE END SysTick_IRQn 1 */
}
 8003f24:	bf00      	nop
 8003f26:	bd80      	pop	{r7, pc}
 8003f28:	2000a73c 	.word	0x2000a73c
 8003f2c:	2000a73e 	.word	0x2000a73e

08003f30 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 8003f30:	b580      	push	{r7, lr}
 8003f32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
 8003f34:	4802      	ldr	r0, [pc, #8]	@ (8003f40 <DMA1_Stream1_IRQHandler+0x10>)
 8003f36:	f000 fbd7 	bl	80046e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 8003f3a:	bf00      	nop
 8003f3c:	bd80      	pop	{r7, pc}
 8003f3e:	bf00      	nop
 8003f40:	2000a8d4 	.word	0x2000a8d4

08003f44 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 8003f44:	b580      	push	{r7, lr}
 8003f46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
 8003f48:	4802      	ldr	r0, [pc, #8]	@ (8003f54 <DMA1_Stream5_IRQHandler+0x10>)
 8003f4a:	f000 fbcd 	bl	80046e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 8003f4e:	bf00      	nop
 8003f50:	bd80      	pop	{r7, pc}
 8003f52:	bf00      	nop
 8003f54:	2000a874 	.word	0x2000a874

08003f58 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8003f58:	b580      	push	{r7, lr}
 8003f5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8003f5c:	4802      	ldr	r0, [pc, #8]	@ (8003f68 <USART3_IRQHandler+0x10>)
 8003f5e:	f002 fa8f 	bl	8006480 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8003f62:	bf00      	nop
 8003f64:	bd80      	pop	{r7, pc}
 8003f66:	bf00      	nop
 8003f68:	2000a82c 	.word	0x2000a82c

08003f6c <_sbrk>:
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b086      	sub	sp, #24
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	6078      	str	r0, [r7, #4]
 8003f74:	4a14      	ldr	r2, [pc, #80]	@ (8003fc8 <_sbrk+0x5c>)
 8003f76:	4b15      	ldr	r3, [pc, #84]	@ (8003fcc <_sbrk+0x60>)
 8003f78:	1ad3      	subs	r3, r2, r3
 8003f7a:	617b      	str	r3, [r7, #20]
 8003f7c:	697b      	ldr	r3, [r7, #20]
 8003f7e:	613b      	str	r3, [r7, #16]
 8003f80:	4b13      	ldr	r3, [pc, #76]	@ (8003fd0 <_sbrk+0x64>)
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	2b00      	cmp	r3, #0
 8003f86:	d102      	bne.n	8003f8e <_sbrk+0x22>
 8003f88:	4b11      	ldr	r3, [pc, #68]	@ (8003fd0 <_sbrk+0x64>)
 8003f8a:	4a12      	ldr	r2, [pc, #72]	@ (8003fd4 <_sbrk+0x68>)
 8003f8c:	601a      	str	r2, [r3, #0]
 8003f8e:	4b10      	ldr	r3, [pc, #64]	@ (8003fd0 <_sbrk+0x64>)
 8003f90:	681a      	ldr	r2, [r3, #0]
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	4413      	add	r3, r2
 8003f96:	693a      	ldr	r2, [r7, #16]
 8003f98:	429a      	cmp	r2, r3
 8003f9a:	d207      	bcs.n	8003fac <_sbrk+0x40>
 8003f9c:	f003 fc44 	bl	8007828 <__errno>
 8003fa0:	4603      	mov	r3, r0
 8003fa2:	220c      	movs	r2, #12
 8003fa4:	601a      	str	r2, [r3, #0]
 8003fa6:	f04f 33ff 	mov.w	r3, #4294967295
 8003faa:	e009      	b.n	8003fc0 <_sbrk+0x54>
 8003fac:	4b08      	ldr	r3, [pc, #32]	@ (8003fd0 <_sbrk+0x64>)
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	60fb      	str	r3, [r7, #12]
 8003fb2:	4b07      	ldr	r3, [pc, #28]	@ (8003fd0 <_sbrk+0x64>)
 8003fb4:	681a      	ldr	r2, [r3, #0]
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	4413      	add	r3, r2
 8003fba:	4a05      	ldr	r2, [pc, #20]	@ (8003fd0 <_sbrk+0x64>)
 8003fbc:	6013      	str	r3, [r2, #0]
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	4618      	mov	r0, r3
 8003fc2:	3718      	adds	r7, #24
 8003fc4:	46bd      	mov	sp, r7
 8003fc6:	bd80      	pop	{r7, pc}
 8003fc8:	20020000 	.word	0x20020000
 8003fcc:	00000400 	.word	0x00000400
 8003fd0:	2000a9a0 	.word	0x2000a9a0
 8003fd4:	2000ab08 	.word	0x2000ab08

08003fd8 <SystemInit>:
 8003fd8:	b480      	push	{r7}
 8003fda:	af00      	add	r7, sp, #0
 8003fdc:	4b06      	ldr	r3, [pc, #24]	@ (8003ff8 <SystemInit+0x20>)
 8003fde:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003fe2:	4a05      	ldr	r2, [pc, #20]	@ (8003ff8 <SystemInit+0x20>)
 8003fe4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003fe8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003fec:	bf00      	nop
 8003fee:	46bd      	mov	sp, r7
 8003ff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ff4:	4770      	bx	lr
 8003ff6:	bf00      	nop
 8003ff8:	e000ed00 	.word	0xe000ed00

08003ffc <Reset_Handler>:
 8003ffc:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8004034 <LoopFillZerobss+0xe>
 8004000:	f7ff ffea 	bl	8003fd8 <SystemInit>
 8004004:	480c      	ldr	r0, [pc, #48]	@ (8004038 <LoopFillZerobss+0x12>)
 8004006:	490d      	ldr	r1, [pc, #52]	@ (800403c <LoopFillZerobss+0x16>)
 8004008:	4a0d      	ldr	r2, [pc, #52]	@ (8004040 <LoopFillZerobss+0x1a>)
 800400a:	2300      	movs	r3, #0
 800400c:	e002      	b.n	8004014 <LoopCopyDataInit>

0800400e <CopyDataInit>:
 800400e:	58d4      	ldr	r4, [r2, r3]
 8004010:	50c4      	str	r4, [r0, r3]
 8004012:	3304      	adds	r3, #4

08004014 <LoopCopyDataInit>:
 8004014:	18c4      	adds	r4, r0, r3
 8004016:	428c      	cmp	r4, r1
 8004018:	d3f9      	bcc.n	800400e <CopyDataInit>
 800401a:	4a0a      	ldr	r2, [pc, #40]	@ (8004044 <LoopFillZerobss+0x1e>)
 800401c:	4c0a      	ldr	r4, [pc, #40]	@ (8004048 <LoopFillZerobss+0x22>)
 800401e:	2300      	movs	r3, #0
 8004020:	e001      	b.n	8004026 <LoopFillZerobss>

08004022 <FillZerobss>:
 8004022:	6013      	str	r3, [r2, #0]
 8004024:	3204      	adds	r2, #4

08004026 <LoopFillZerobss>:
 8004026:	42a2      	cmp	r2, r4
 8004028:	d3fb      	bcc.n	8004022 <FillZerobss>
 800402a:	f003 fc03 	bl	8007834 <__libc_init_array>
 800402e:	f7fd ffc9 	bl	8001fc4 <main>
 8004032:	4770      	bx	lr
 8004034:	20020000 	.word	0x20020000
 8004038:	20000000 	.word	0x20000000
 800403c:	2000a720 	.word	0x2000a720
 8004040:	08042744 	.word	0x08042744
 8004044:	2000a720 	.word	0x2000a720
 8004048:	2000ab04 	.word	0x2000ab04

0800404c <ADC_IRQHandler>:
 800404c:	e7fe      	b.n	800404c <ADC_IRQHandler>
	...

08004050 <HAL_Init>:
 8004050:	b580      	push	{r7, lr}
 8004052:	af00      	add	r7, sp, #0
 8004054:	4b0e      	ldr	r3, [pc, #56]	@ (8004090 <HAL_Init+0x40>)
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	4a0d      	ldr	r2, [pc, #52]	@ (8004090 <HAL_Init+0x40>)
 800405a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800405e:	6013      	str	r3, [r2, #0]
 8004060:	4b0b      	ldr	r3, [pc, #44]	@ (8004090 <HAL_Init+0x40>)
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	4a0a      	ldr	r2, [pc, #40]	@ (8004090 <HAL_Init+0x40>)
 8004066:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800406a:	6013      	str	r3, [r2, #0]
 800406c:	4b08      	ldr	r3, [pc, #32]	@ (8004090 <HAL_Init+0x40>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a07      	ldr	r2, [pc, #28]	@ (8004090 <HAL_Init+0x40>)
 8004072:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004076:	6013      	str	r3, [r2, #0]
 8004078:	2003      	movs	r0, #3
 800407a:	f000 f94f 	bl	800431c <HAL_NVIC_SetPriorityGrouping>
 800407e:	200f      	movs	r0, #15
 8004080:	f000 f808 	bl	8004094 <HAL_InitTick>
 8004084:	f7ff fd5a 	bl	8003b3c <HAL_MspInit>
 8004088:	2300      	movs	r3, #0
 800408a:	4618      	mov	r0, r3
 800408c:	bd80      	pop	{r7, pc}
 800408e:	bf00      	nop
 8004090:	40023c00 	.word	0x40023c00

08004094 <HAL_InitTick>:
 8004094:	b580      	push	{r7, lr}
 8004096:	b082      	sub	sp, #8
 8004098:	af00      	add	r7, sp, #0
 800409a:	6078      	str	r0, [r7, #4]
 800409c:	4b12      	ldr	r3, [pc, #72]	@ (80040e8 <HAL_InitTick+0x54>)
 800409e:	681a      	ldr	r2, [r3, #0]
 80040a0:	4b12      	ldr	r3, [pc, #72]	@ (80040ec <HAL_InitTick+0x58>)
 80040a2:	781b      	ldrb	r3, [r3, #0]
 80040a4:	4619      	mov	r1, r3
 80040a6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80040aa:	fbb3 f3f1 	udiv	r3, r3, r1
 80040ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80040b2:	4618      	mov	r0, r3
 80040b4:	f000 f967 	bl	8004386 <HAL_SYSTICK_Config>
 80040b8:	4603      	mov	r3, r0
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d001      	beq.n	80040c2 <HAL_InitTick+0x2e>
 80040be:	2301      	movs	r3, #1
 80040c0:	e00e      	b.n	80040e0 <HAL_InitTick+0x4c>
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	2b0f      	cmp	r3, #15
 80040c6:	d80a      	bhi.n	80040de <HAL_InitTick+0x4a>
 80040c8:	2200      	movs	r2, #0
 80040ca:	6879      	ldr	r1, [r7, #4]
 80040cc:	f04f 30ff 	mov.w	r0, #4294967295
 80040d0:	f000 f92f 	bl	8004332 <HAL_NVIC_SetPriority>
 80040d4:	4a06      	ldr	r2, [pc, #24]	@ (80040f0 <HAL_InitTick+0x5c>)
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6013      	str	r3, [r2, #0]
 80040da:	2300      	movs	r3, #0
 80040dc:	e000      	b.n	80040e0 <HAL_InitTick+0x4c>
 80040de:	2301      	movs	r3, #1
 80040e0:	4618      	mov	r0, r3
 80040e2:	3708      	adds	r7, #8
 80040e4:	46bd      	mov	sp, r7
 80040e6:	bd80      	pop	{r7, pc}
 80040e8:	2000a6b0 	.word	0x2000a6b0
 80040ec:	2000a6b8 	.word	0x2000a6b8
 80040f0:	2000a6b4 	.word	0x2000a6b4

080040f4 <HAL_IncTick>:
 80040f4:	b480      	push	{r7}
 80040f6:	af00      	add	r7, sp, #0
 80040f8:	4b06      	ldr	r3, [pc, #24]	@ (8004114 <HAL_IncTick+0x20>)
 80040fa:	781b      	ldrb	r3, [r3, #0]
 80040fc:	461a      	mov	r2, r3
 80040fe:	4b06      	ldr	r3, [pc, #24]	@ (8004118 <HAL_IncTick+0x24>)
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	4413      	add	r3, r2
 8004104:	4a04      	ldr	r2, [pc, #16]	@ (8004118 <HAL_IncTick+0x24>)
 8004106:	6013      	str	r3, [r2, #0]
 8004108:	bf00      	nop
 800410a:	46bd      	mov	sp, r7
 800410c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004110:	4770      	bx	lr
 8004112:	bf00      	nop
 8004114:	2000a6b8 	.word	0x2000a6b8
 8004118:	2000a9a4 	.word	0x2000a9a4

0800411c <HAL_GetTick>:
 800411c:	b480      	push	{r7}
 800411e:	af00      	add	r7, sp, #0
 8004120:	4b03      	ldr	r3, [pc, #12]	@ (8004130 <HAL_GetTick+0x14>)
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	4618      	mov	r0, r3
 8004126:	46bd      	mov	sp, r7
 8004128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800412c:	4770      	bx	lr
 800412e:	bf00      	nop
 8004130:	2000a9a4 	.word	0x2000a9a4

08004134 <HAL_Delay>:
 8004134:	b580      	push	{r7, lr}
 8004136:	b084      	sub	sp, #16
 8004138:	af00      	add	r7, sp, #0
 800413a:	6078      	str	r0, [r7, #4]
 800413c:	f7ff ffee 	bl	800411c <HAL_GetTick>
 8004140:	60b8      	str	r0, [r7, #8]
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	60fb      	str	r3, [r7, #12]
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	f1b3 3fff 	cmp.w	r3, #4294967295
 800414c:	d005      	beq.n	800415a <HAL_Delay+0x26>
 800414e:	4b0a      	ldr	r3, [pc, #40]	@ (8004178 <HAL_Delay+0x44>)
 8004150:	781b      	ldrb	r3, [r3, #0]
 8004152:	461a      	mov	r2, r3
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	4413      	add	r3, r2
 8004158:	60fb      	str	r3, [r7, #12]
 800415a:	bf00      	nop
 800415c:	f7ff ffde 	bl	800411c <HAL_GetTick>
 8004160:	4602      	mov	r2, r0
 8004162:	68bb      	ldr	r3, [r7, #8]
 8004164:	1ad3      	subs	r3, r2, r3
 8004166:	68fa      	ldr	r2, [r7, #12]
 8004168:	429a      	cmp	r2, r3
 800416a:	d8f7      	bhi.n	800415c <HAL_Delay+0x28>
 800416c:	bf00      	nop
 800416e:	bf00      	nop
 8004170:	3710      	adds	r7, #16
 8004172:	46bd      	mov	sp, r7
 8004174:	bd80      	pop	{r7, pc}
 8004176:	bf00      	nop
 8004178:	2000a6b8 	.word	0x2000a6b8

0800417c <__NVIC_SetPriorityGrouping>:
 800417c:	b480      	push	{r7}
 800417e:	b085      	sub	sp, #20
 8004180:	af00      	add	r7, sp, #0
 8004182:	6078      	str	r0, [r7, #4]
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	f003 0307 	and.w	r3, r3, #7
 800418a:	60fb      	str	r3, [r7, #12]
 800418c:	4b0c      	ldr	r3, [pc, #48]	@ (80041c0 <__NVIC_SetPriorityGrouping+0x44>)
 800418e:	68db      	ldr	r3, [r3, #12]
 8004190:	60bb      	str	r3, [r7, #8]
 8004192:	68ba      	ldr	r2, [r7, #8]
 8004194:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004198:	4013      	ands	r3, r2
 800419a:	60bb      	str	r3, [r7, #8]
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	021a      	lsls	r2, r3, #8
 80041a0:	68bb      	ldr	r3, [r7, #8]
 80041a2:	4313      	orrs	r3, r2
 80041a4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80041a8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80041ac:	60bb      	str	r3, [r7, #8]
 80041ae:	4a04      	ldr	r2, [pc, #16]	@ (80041c0 <__NVIC_SetPriorityGrouping+0x44>)
 80041b0:	68bb      	ldr	r3, [r7, #8]
 80041b2:	60d3      	str	r3, [r2, #12]
 80041b4:	bf00      	nop
 80041b6:	3714      	adds	r7, #20
 80041b8:	46bd      	mov	sp, r7
 80041ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041be:	4770      	bx	lr
 80041c0:	e000ed00 	.word	0xe000ed00

080041c4 <__NVIC_GetPriorityGrouping>:
 80041c4:	b480      	push	{r7}
 80041c6:	af00      	add	r7, sp, #0
 80041c8:	4b04      	ldr	r3, [pc, #16]	@ (80041dc <__NVIC_GetPriorityGrouping+0x18>)
 80041ca:	68db      	ldr	r3, [r3, #12]
 80041cc:	0a1b      	lsrs	r3, r3, #8
 80041ce:	f003 0307 	and.w	r3, r3, #7
 80041d2:	4618      	mov	r0, r3
 80041d4:	46bd      	mov	sp, r7
 80041d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041da:	4770      	bx	lr
 80041dc:	e000ed00 	.word	0xe000ed00

080041e0 <__NVIC_EnableIRQ>:
 80041e0:	b480      	push	{r7}
 80041e2:	b083      	sub	sp, #12
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	4603      	mov	r3, r0
 80041e8:	71fb      	strb	r3, [r7, #7]
 80041ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	db0b      	blt.n	800420a <__NVIC_EnableIRQ+0x2a>
 80041f2:	79fb      	ldrb	r3, [r7, #7]
 80041f4:	f003 021f 	and.w	r2, r3, #31
 80041f8:	4907      	ldr	r1, [pc, #28]	@ (8004218 <__NVIC_EnableIRQ+0x38>)
 80041fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041fe:	095b      	lsrs	r3, r3, #5
 8004200:	2001      	movs	r0, #1
 8004202:	fa00 f202 	lsl.w	r2, r0, r2
 8004206:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800420a:	bf00      	nop
 800420c:	370c      	adds	r7, #12
 800420e:	46bd      	mov	sp, r7
 8004210:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004214:	4770      	bx	lr
 8004216:	bf00      	nop
 8004218:	e000e100 	.word	0xe000e100

0800421c <__NVIC_SetPriority>:
 800421c:	b480      	push	{r7}
 800421e:	b083      	sub	sp, #12
 8004220:	af00      	add	r7, sp, #0
 8004222:	4603      	mov	r3, r0
 8004224:	6039      	str	r1, [r7, #0]
 8004226:	71fb      	strb	r3, [r7, #7]
 8004228:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800422c:	2b00      	cmp	r3, #0
 800422e:	db0a      	blt.n	8004246 <__NVIC_SetPriority+0x2a>
 8004230:	683b      	ldr	r3, [r7, #0]
 8004232:	b2da      	uxtb	r2, r3
 8004234:	490c      	ldr	r1, [pc, #48]	@ (8004268 <__NVIC_SetPriority+0x4c>)
 8004236:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800423a:	0112      	lsls	r2, r2, #4
 800423c:	b2d2      	uxtb	r2, r2
 800423e:	440b      	add	r3, r1
 8004240:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004244:	e00a      	b.n	800425c <__NVIC_SetPriority+0x40>
 8004246:	683b      	ldr	r3, [r7, #0]
 8004248:	b2da      	uxtb	r2, r3
 800424a:	4908      	ldr	r1, [pc, #32]	@ (800426c <__NVIC_SetPriority+0x50>)
 800424c:	79fb      	ldrb	r3, [r7, #7]
 800424e:	f003 030f 	and.w	r3, r3, #15
 8004252:	3b04      	subs	r3, #4
 8004254:	0112      	lsls	r2, r2, #4
 8004256:	b2d2      	uxtb	r2, r2
 8004258:	440b      	add	r3, r1
 800425a:	761a      	strb	r2, [r3, #24]
 800425c:	bf00      	nop
 800425e:	370c      	adds	r7, #12
 8004260:	46bd      	mov	sp, r7
 8004262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004266:	4770      	bx	lr
 8004268:	e000e100 	.word	0xe000e100
 800426c:	e000ed00 	.word	0xe000ed00

08004270 <NVIC_EncodePriority>:
 8004270:	b480      	push	{r7}
 8004272:	b089      	sub	sp, #36	@ 0x24
 8004274:	af00      	add	r7, sp, #0
 8004276:	60f8      	str	r0, [r7, #12]
 8004278:	60b9      	str	r1, [r7, #8]
 800427a:	607a      	str	r2, [r7, #4]
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	f003 0307 	and.w	r3, r3, #7
 8004282:	61fb      	str	r3, [r7, #28]
 8004284:	69fb      	ldr	r3, [r7, #28]
 8004286:	f1c3 0307 	rsb	r3, r3, #7
 800428a:	2b04      	cmp	r3, #4
 800428c:	bf28      	it	cs
 800428e:	2304      	movcs	r3, #4
 8004290:	61bb      	str	r3, [r7, #24]
 8004292:	69fb      	ldr	r3, [r7, #28]
 8004294:	3304      	adds	r3, #4
 8004296:	2b06      	cmp	r3, #6
 8004298:	d902      	bls.n	80042a0 <NVIC_EncodePriority+0x30>
 800429a:	69fb      	ldr	r3, [r7, #28]
 800429c:	3b03      	subs	r3, #3
 800429e:	e000      	b.n	80042a2 <NVIC_EncodePriority+0x32>
 80042a0:	2300      	movs	r3, #0
 80042a2:	617b      	str	r3, [r7, #20]
 80042a4:	f04f 32ff 	mov.w	r2, #4294967295
 80042a8:	69bb      	ldr	r3, [r7, #24]
 80042aa:	fa02 f303 	lsl.w	r3, r2, r3
 80042ae:	43da      	mvns	r2, r3
 80042b0:	68bb      	ldr	r3, [r7, #8]
 80042b2:	401a      	ands	r2, r3
 80042b4:	697b      	ldr	r3, [r7, #20]
 80042b6:	409a      	lsls	r2, r3
 80042b8:	f04f 31ff 	mov.w	r1, #4294967295
 80042bc:	697b      	ldr	r3, [r7, #20]
 80042be:	fa01 f303 	lsl.w	r3, r1, r3
 80042c2:	43d9      	mvns	r1, r3
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	400b      	ands	r3, r1
 80042c8:	4313      	orrs	r3, r2
 80042ca:	4618      	mov	r0, r3
 80042cc:	3724      	adds	r7, #36	@ 0x24
 80042ce:	46bd      	mov	sp, r7
 80042d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042d4:	4770      	bx	lr
	...

080042d8 <SysTick_Config>:
 80042d8:	b580      	push	{r7, lr}
 80042da:	b082      	sub	sp, #8
 80042dc:	af00      	add	r7, sp, #0
 80042de:	6078      	str	r0, [r7, #4]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	3b01      	subs	r3, #1
 80042e4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80042e8:	d301      	bcc.n	80042ee <SysTick_Config+0x16>
 80042ea:	2301      	movs	r3, #1
 80042ec:	e00f      	b.n	800430e <SysTick_Config+0x36>
 80042ee:	4a0a      	ldr	r2, [pc, #40]	@ (8004318 <SysTick_Config+0x40>)
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	3b01      	subs	r3, #1
 80042f4:	6053      	str	r3, [r2, #4]
 80042f6:	210f      	movs	r1, #15
 80042f8:	f04f 30ff 	mov.w	r0, #4294967295
 80042fc:	f7ff ff8e 	bl	800421c <__NVIC_SetPriority>
 8004300:	4b05      	ldr	r3, [pc, #20]	@ (8004318 <SysTick_Config+0x40>)
 8004302:	2200      	movs	r2, #0
 8004304:	609a      	str	r2, [r3, #8]
 8004306:	4b04      	ldr	r3, [pc, #16]	@ (8004318 <SysTick_Config+0x40>)
 8004308:	2207      	movs	r2, #7
 800430a:	601a      	str	r2, [r3, #0]
 800430c:	2300      	movs	r3, #0
 800430e:	4618      	mov	r0, r3
 8004310:	3708      	adds	r7, #8
 8004312:	46bd      	mov	sp, r7
 8004314:	bd80      	pop	{r7, pc}
 8004316:	bf00      	nop
 8004318:	e000e010 	.word	0xe000e010

0800431c <HAL_NVIC_SetPriorityGrouping>:
 800431c:	b580      	push	{r7, lr}
 800431e:	b082      	sub	sp, #8
 8004320:	af00      	add	r7, sp, #0
 8004322:	6078      	str	r0, [r7, #4]
 8004324:	6878      	ldr	r0, [r7, #4]
 8004326:	f7ff ff29 	bl	800417c <__NVIC_SetPriorityGrouping>
 800432a:	bf00      	nop
 800432c:	3708      	adds	r7, #8
 800432e:	46bd      	mov	sp, r7
 8004330:	bd80      	pop	{r7, pc}

08004332 <HAL_NVIC_SetPriority>:
 8004332:	b580      	push	{r7, lr}
 8004334:	b086      	sub	sp, #24
 8004336:	af00      	add	r7, sp, #0
 8004338:	4603      	mov	r3, r0
 800433a:	60b9      	str	r1, [r7, #8]
 800433c:	607a      	str	r2, [r7, #4]
 800433e:	73fb      	strb	r3, [r7, #15]
 8004340:	2300      	movs	r3, #0
 8004342:	617b      	str	r3, [r7, #20]
 8004344:	f7ff ff3e 	bl	80041c4 <__NVIC_GetPriorityGrouping>
 8004348:	6178      	str	r0, [r7, #20]
 800434a:	687a      	ldr	r2, [r7, #4]
 800434c:	68b9      	ldr	r1, [r7, #8]
 800434e:	6978      	ldr	r0, [r7, #20]
 8004350:	f7ff ff8e 	bl	8004270 <NVIC_EncodePriority>
 8004354:	4602      	mov	r2, r0
 8004356:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800435a:	4611      	mov	r1, r2
 800435c:	4618      	mov	r0, r3
 800435e:	f7ff ff5d 	bl	800421c <__NVIC_SetPriority>
 8004362:	bf00      	nop
 8004364:	3718      	adds	r7, #24
 8004366:	46bd      	mov	sp, r7
 8004368:	bd80      	pop	{r7, pc}

0800436a <HAL_NVIC_EnableIRQ>:
 800436a:	b580      	push	{r7, lr}
 800436c:	b082      	sub	sp, #8
 800436e:	af00      	add	r7, sp, #0
 8004370:	4603      	mov	r3, r0
 8004372:	71fb      	strb	r3, [r7, #7]
 8004374:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004378:	4618      	mov	r0, r3
 800437a:	f7ff ff31 	bl	80041e0 <__NVIC_EnableIRQ>
 800437e:	bf00      	nop
 8004380:	3708      	adds	r7, #8
 8004382:	46bd      	mov	sp, r7
 8004384:	bd80      	pop	{r7, pc}

08004386 <HAL_SYSTICK_Config>:
 8004386:	b580      	push	{r7, lr}
 8004388:	b082      	sub	sp, #8
 800438a:	af00      	add	r7, sp, #0
 800438c:	6078      	str	r0, [r7, #4]
 800438e:	6878      	ldr	r0, [r7, #4]
 8004390:	f7ff ffa2 	bl	80042d8 <SysTick_Config>
 8004394:	4603      	mov	r3, r0
 8004396:	4618      	mov	r0, r3
 8004398:	3708      	adds	r7, #8
 800439a:	46bd      	mov	sp, r7
 800439c:	bd80      	pop	{r7, pc}

0800439e <HAL_SYSTICK_IRQHandler>:
 800439e:	b580      	push	{r7, lr}
 80043a0:	af00      	add	r7, sp, #0
 80043a2:	f000 f802 	bl	80043aa <HAL_SYSTICK_Callback>
 80043a6:	bf00      	nop
 80043a8:	bd80      	pop	{r7, pc}

080043aa <HAL_SYSTICK_Callback>:
 80043aa:	b480      	push	{r7}
 80043ac:	af00      	add	r7, sp, #0
 80043ae:	bf00      	nop
 80043b0:	46bd      	mov	sp, r7
 80043b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b6:	4770      	bx	lr

080043b8 <HAL_DMA_Init>:
 80043b8:	b580      	push	{r7, lr}
 80043ba:	b086      	sub	sp, #24
 80043bc:	af00      	add	r7, sp, #0
 80043be:	6078      	str	r0, [r7, #4]
 80043c0:	2300      	movs	r3, #0
 80043c2:	617b      	str	r3, [r7, #20]
 80043c4:	f7ff feaa 	bl	800411c <HAL_GetTick>
 80043c8:	6138      	str	r0, [r7, #16]
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d101      	bne.n	80043d4 <HAL_DMA_Init+0x1c>
 80043d0:	2301      	movs	r3, #1
 80043d2:	e099      	b.n	8004508 <HAL_DMA_Init+0x150>
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	2202      	movs	r2, #2
 80043d8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	2200      	movs	r2, #0
 80043e0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	681a      	ldr	r2, [r3, #0]
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	681b      	ldr	r3, [r3, #0]
 80043ee:	f022 0201 	bic.w	r2, r2, #1
 80043f2:	601a      	str	r2, [r3, #0]
 80043f4:	e00f      	b.n	8004416 <HAL_DMA_Init+0x5e>
 80043f6:	f7ff fe91 	bl	800411c <HAL_GetTick>
 80043fa:	4602      	mov	r2, r0
 80043fc:	693b      	ldr	r3, [r7, #16]
 80043fe:	1ad3      	subs	r3, r2, r3
 8004400:	2b05      	cmp	r3, #5
 8004402:	d908      	bls.n	8004416 <HAL_DMA_Init+0x5e>
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	2220      	movs	r2, #32
 8004408:	655a      	str	r2, [r3, #84]	@ 0x54
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	2203      	movs	r2, #3
 800440e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004412:	2303      	movs	r3, #3
 8004414:	e078      	b.n	8004508 <HAL_DMA_Init+0x150>
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	f003 0301 	and.w	r3, r3, #1
 8004420:	2b00      	cmp	r3, #0
 8004422:	d1e8      	bne.n	80043f6 <HAL_DMA_Init+0x3e>
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	617b      	str	r3, [r7, #20]
 800442c:	697a      	ldr	r2, [r7, #20]
 800442e:	4b38      	ldr	r3, [pc, #224]	@ (8004510 <HAL_DMA_Init+0x158>)
 8004430:	4013      	ands	r3, r2
 8004432:	617b      	str	r3, [r7, #20]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	685a      	ldr	r2, [r3, #4]
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	689b      	ldr	r3, [r3, #8]
 800443c:	431a      	orrs	r2, r3
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	68db      	ldr	r3, [r3, #12]
 8004442:	431a      	orrs	r2, r3
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	691b      	ldr	r3, [r3, #16]
 8004448:	431a      	orrs	r2, r3
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	695b      	ldr	r3, [r3, #20]
 800444e:	431a      	orrs	r2, r3
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	699b      	ldr	r3, [r3, #24]
 8004454:	431a      	orrs	r2, r3
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	69db      	ldr	r3, [r3, #28]
 800445a:	431a      	orrs	r2, r3
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	6a1b      	ldr	r3, [r3, #32]
 8004460:	4313      	orrs	r3, r2
 8004462:	697a      	ldr	r2, [r7, #20]
 8004464:	4313      	orrs	r3, r2
 8004466:	617b      	str	r3, [r7, #20]
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800446c:	2b04      	cmp	r3, #4
 800446e:	d107      	bne.n	8004480 <HAL_DMA_Init+0xc8>
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004478:	4313      	orrs	r3, r2
 800447a:	697a      	ldr	r2, [r7, #20]
 800447c:	4313      	orrs	r3, r2
 800447e:	617b      	str	r3, [r7, #20]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	697a      	ldr	r2, [r7, #20]
 8004486:	601a      	str	r2, [r3, #0]
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	695b      	ldr	r3, [r3, #20]
 800448e:	617b      	str	r3, [r7, #20]
 8004490:	697b      	ldr	r3, [r7, #20]
 8004492:	f023 0307 	bic.w	r3, r3, #7
 8004496:	617b      	str	r3, [r7, #20]
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800449c:	697a      	ldr	r2, [r7, #20]
 800449e:	4313      	orrs	r3, r2
 80044a0:	617b      	str	r3, [r7, #20]
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044a6:	2b04      	cmp	r3, #4
 80044a8:	d117      	bne.n	80044da <HAL_DMA_Init+0x122>
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80044ae:	697a      	ldr	r2, [r7, #20]
 80044b0:	4313      	orrs	r3, r2
 80044b2:	617b      	str	r3, [r7, #20]
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	d00e      	beq.n	80044da <HAL_DMA_Init+0x122>
 80044bc:	6878      	ldr	r0, [r7, #4]
 80044be:	f000 fb01 	bl	8004ac4 <DMA_CheckFifoParam>
 80044c2:	4603      	mov	r3, r0
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	d008      	beq.n	80044da <HAL_DMA_Init+0x122>
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	2240      	movs	r2, #64	@ 0x40
 80044cc:	655a      	str	r2, [r3, #84]	@ 0x54
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	2201      	movs	r2, #1
 80044d2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80044d6:	2301      	movs	r3, #1
 80044d8:	e016      	b.n	8004508 <HAL_DMA_Init+0x150>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	697a      	ldr	r2, [r7, #20]
 80044e0:	615a      	str	r2, [r3, #20]
 80044e2:	6878      	ldr	r0, [r7, #4]
 80044e4:	f000 fab8 	bl	8004a58 <DMA_CalcBaseAndBitshift>
 80044e8:	4603      	mov	r3, r0
 80044ea:	60fb      	str	r3, [r7, #12]
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80044f0:	223f      	movs	r2, #63	@ 0x3f
 80044f2:	409a      	lsls	r2, r3
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	609a      	str	r2, [r3, #8]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	2200      	movs	r2, #0
 80044fc:	655a      	str	r2, [r3, #84]	@ 0x54
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	2201      	movs	r2, #1
 8004502:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004506:	2300      	movs	r3, #0
 8004508:	4618      	mov	r0, r3
 800450a:	3718      	adds	r7, #24
 800450c:	46bd      	mov	sp, r7
 800450e:	bd80      	pop	{r7, pc}
 8004510:	f010803f 	.word	0xf010803f

08004514 <HAL_DMA_Start_IT>:
 8004514:	b580      	push	{r7, lr}
 8004516:	b086      	sub	sp, #24
 8004518:	af00      	add	r7, sp, #0
 800451a:	60f8      	str	r0, [r7, #12]
 800451c:	60b9      	str	r1, [r7, #8]
 800451e:	607a      	str	r2, [r7, #4]
 8004520:	603b      	str	r3, [r7, #0]
 8004522:	2300      	movs	r3, #0
 8004524:	75fb      	strb	r3, [r7, #23]
 8004526:	68fb      	ldr	r3, [r7, #12]
 8004528:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800452a:	613b      	str	r3, [r7, #16]
 800452c:	68fb      	ldr	r3, [r7, #12]
 800452e:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8004532:	2b01      	cmp	r3, #1
 8004534:	d101      	bne.n	800453a <HAL_DMA_Start_IT+0x26>
 8004536:	2302      	movs	r3, #2
 8004538:	e040      	b.n	80045bc <HAL_DMA_Start_IT+0xa8>
 800453a:	68fb      	ldr	r3, [r7, #12]
 800453c:	2201      	movs	r2, #1
 800453e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004542:	68fb      	ldr	r3, [r7, #12]
 8004544:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8004548:	b2db      	uxtb	r3, r3
 800454a:	2b01      	cmp	r3, #1
 800454c:	d12f      	bne.n	80045ae <HAL_DMA_Start_IT+0x9a>
 800454e:	68fb      	ldr	r3, [r7, #12]
 8004550:	2202      	movs	r2, #2
 8004552:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004556:	68fb      	ldr	r3, [r7, #12]
 8004558:	2200      	movs	r2, #0
 800455a:	655a      	str	r2, [r3, #84]	@ 0x54
 800455c:	683b      	ldr	r3, [r7, #0]
 800455e:	687a      	ldr	r2, [r7, #4]
 8004560:	68b9      	ldr	r1, [r7, #8]
 8004562:	68f8      	ldr	r0, [r7, #12]
 8004564:	f000 fa4a 	bl	80049fc <DMA_SetConfig>
 8004568:	68fb      	ldr	r3, [r7, #12]
 800456a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800456c:	223f      	movs	r2, #63	@ 0x3f
 800456e:	409a      	lsls	r2, r3
 8004570:	693b      	ldr	r3, [r7, #16]
 8004572:	609a      	str	r2, [r3, #8]
 8004574:	68fb      	ldr	r3, [r7, #12]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	681a      	ldr	r2, [r3, #0]
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f042 0216 	orr.w	r2, r2, #22
 8004582:	601a      	str	r2, [r3, #0]
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004588:	2b00      	cmp	r3, #0
 800458a:	d007      	beq.n	800459c <HAL_DMA_Start_IT+0x88>
 800458c:	68fb      	ldr	r3, [r7, #12]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	681a      	ldr	r2, [r3, #0]
 8004592:	68fb      	ldr	r3, [r7, #12]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	f042 0208 	orr.w	r2, r2, #8
 800459a:	601a      	str	r2, [r3, #0]
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	681a      	ldr	r2, [r3, #0]
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f042 0201 	orr.w	r2, r2, #1
 80045aa:	601a      	str	r2, [r3, #0]
 80045ac:	e005      	b.n	80045ba <HAL_DMA_Start_IT+0xa6>
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	2200      	movs	r2, #0
 80045b2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80045b6:	2302      	movs	r3, #2
 80045b8:	75fb      	strb	r3, [r7, #23]
 80045ba:	7dfb      	ldrb	r3, [r7, #23]
 80045bc:	4618      	mov	r0, r3
 80045be:	3718      	adds	r7, #24
 80045c0:	46bd      	mov	sp, r7
 80045c2:	bd80      	pop	{r7, pc}

080045c4 <HAL_DMA_Abort>:
 80045c4:	b580      	push	{r7, lr}
 80045c6:	b084      	sub	sp, #16
 80045c8:	af00      	add	r7, sp, #0
 80045ca:	6078      	str	r0, [r7, #4]
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80045d0:	60fb      	str	r3, [r7, #12]
 80045d2:	f7ff fda3 	bl	800411c <HAL_GetTick>
 80045d6:	60b8      	str	r0, [r7, #8]
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80045de:	b2db      	uxtb	r3, r3
 80045e0:	2b02      	cmp	r3, #2
 80045e2:	d008      	beq.n	80045f6 <HAL_DMA_Abort+0x32>
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	2280      	movs	r2, #128	@ 0x80
 80045e8:	655a      	str	r2, [r3, #84]	@ 0x54
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	2200      	movs	r2, #0
 80045ee:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80045f2:	2301      	movs	r3, #1
 80045f4:	e052      	b.n	800469c <HAL_DMA_Abort+0xd8>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	681a      	ldr	r2, [r3, #0]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	f022 0216 	bic.w	r2, r2, #22
 8004604:	601a      	str	r2, [r3, #0]
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	695a      	ldr	r2, [r3, #20]
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004614:	615a      	str	r2, [r3, #20]
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800461a:	2b00      	cmp	r3, #0
 800461c:	d103      	bne.n	8004626 <HAL_DMA_Abort+0x62>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004622:	2b00      	cmp	r3, #0
 8004624:	d007      	beq.n	8004636 <HAL_DMA_Abort+0x72>
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	681a      	ldr	r2, [r3, #0]
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	f022 0208 	bic.w	r2, r2, #8
 8004634:	601a      	str	r2, [r3, #0]
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	681a      	ldr	r2, [r3, #0]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	f022 0201 	bic.w	r2, r2, #1
 8004644:	601a      	str	r2, [r3, #0]
 8004646:	e013      	b.n	8004670 <HAL_DMA_Abort+0xac>
 8004648:	f7ff fd68 	bl	800411c <HAL_GetTick>
 800464c:	4602      	mov	r2, r0
 800464e:	68bb      	ldr	r3, [r7, #8]
 8004650:	1ad3      	subs	r3, r2, r3
 8004652:	2b05      	cmp	r3, #5
 8004654:	d90c      	bls.n	8004670 <HAL_DMA_Abort+0xac>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	2220      	movs	r2, #32
 800465a:	655a      	str	r2, [r3, #84]	@ 0x54
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	2203      	movs	r2, #3
 8004660:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	2200      	movs	r2, #0
 8004668:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800466c:	2303      	movs	r3, #3
 800466e:	e015      	b.n	800469c <HAL_DMA_Abort+0xd8>
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	f003 0301 	and.w	r3, r3, #1
 800467a:	2b00      	cmp	r3, #0
 800467c:	d1e4      	bne.n	8004648 <HAL_DMA_Abort+0x84>
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004682:	223f      	movs	r2, #63	@ 0x3f
 8004684:	409a      	lsls	r2, r3
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	609a      	str	r2, [r3, #8]
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	2201      	movs	r2, #1
 800468e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	2200      	movs	r2, #0
 8004696:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800469a:	2300      	movs	r3, #0
 800469c:	4618      	mov	r0, r3
 800469e:	3710      	adds	r7, #16
 80046a0:	46bd      	mov	sp, r7
 80046a2:	bd80      	pop	{r7, pc}

080046a4 <HAL_DMA_Abort_IT>:
 80046a4:	b480      	push	{r7}
 80046a6:	b083      	sub	sp, #12
 80046a8:	af00      	add	r7, sp, #0
 80046aa:	6078      	str	r0, [r7, #4]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80046b2:	b2db      	uxtb	r3, r3
 80046b4:	2b02      	cmp	r3, #2
 80046b6:	d004      	beq.n	80046c2 <HAL_DMA_Abort_IT+0x1e>
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	2280      	movs	r2, #128	@ 0x80
 80046bc:	655a      	str	r2, [r3, #84]	@ 0x54
 80046be:	2301      	movs	r3, #1
 80046c0:	e00c      	b.n	80046dc <HAL_DMA_Abort_IT+0x38>
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	2205      	movs	r2, #5
 80046c6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	681a      	ldr	r2, [r3, #0]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	f022 0201 	bic.w	r2, r2, #1
 80046d8:	601a      	str	r2, [r3, #0]
 80046da:	2300      	movs	r3, #0
 80046dc:	4618      	mov	r0, r3
 80046de:	370c      	adds	r7, #12
 80046e0:	46bd      	mov	sp, r7
 80046e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046e6:	4770      	bx	lr

080046e8 <HAL_DMA_IRQHandler>:
 80046e8:	b580      	push	{r7, lr}
 80046ea:	b086      	sub	sp, #24
 80046ec:	af00      	add	r7, sp, #0
 80046ee:	6078      	str	r0, [r7, #4]
 80046f0:	2300      	movs	r3, #0
 80046f2:	60bb      	str	r3, [r7, #8]
 80046f4:	4b8e      	ldr	r3, [pc, #568]	@ (8004930 <HAL_DMA_IRQHandler+0x248>)
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a8e      	ldr	r2, [pc, #568]	@ (8004934 <HAL_DMA_IRQHandler+0x24c>)
 80046fa:	fba2 2303 	umull	r2, r3, r2, r3
 80046fe:	0a9b      	lsrs	r3, r3, #10
 8004700:	617b      	str	r3, [r7, #20]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004706:	613b      	str	r3, [r7, #16]
 8004708:	693b      	ldr	r3, [r7, #16]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	60fb      	str	r3, [r7, #12]
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004712:	2208      	movs	r2, #8
 8004714:	409a      	lsls	r2, r3
 8004716:	68fb      	ldr	r3, [r7, #12]
 8004718:	4013      	ands	r3, r2
 800471a:	2b00      	cmp	r3, #0
 800471c:	d01a      	beq.n	8004754 <HAL_DMA_IRQHandler+0x6c>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	681b      	ldr	r3, [r3, #0]
 8004724:	f003 0304 	and.w	r3, r3, #4
 8004728:	2b00      	cmp	r3, #0
 800472a:	d013      	beq.n	8004754 <HAL_DMA_IRQHandler+0x6c>
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	681a      	ldr	r2, [r3, #0]
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f022 0204 	bic.w	r2, r2, #4
 800473a:	601a      	str	r2, [r3, #0]
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004740:	2208      	movs	r2, #8
 8004742:	409a      	lsls	r2, r3
 8004744:	693b      	ldr	r3, [r7, #16]
 8004746:	609a      	str	r2, [r3, #8]
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800474c:	f043 0201 	orr.w	r2, r3, #1
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	655a      	str	r2, [r3, #84]	@ 0x54
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004758:	2201      	movs	r2, #1
 800475a:	409a      	lsls	r2, r3
 800475c:	68fb      	ldr	r3, [r7, #12]
 800475e:	4013      	ands	r3, r2
 8004760:	2b00      	cmp	r3, #0
 8004762:	d012      	beq.n	800478a <HAL_DMA_IRQHandler+0xa2>
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	695b      	ldr	r3, [r3, #20]
 800476a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800476e:	2b00      	cmp	r3, #0
 8004770:	d00b      	beq.n	800478a <HAL_DMA_IRQHandler+0xa2>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004776:	2201      	movs	r2, #1
 8004778:	409a      	lsls	r2, r3
 800477a:	693b      	ldr	r3, [r7, #16]
 800477c:	609a      	str	r2, [r3, #8]
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004782:	f043 0202 	orr.w	r2, r3, #2
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	655a      	str	r2, [r3, #84]	@ 0x54
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800478e:	2204      	movs	r2, #4
 8004790:	409a      	lsls	r2, r3
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	4013      	ands	r3, r2
 8004796:	2b00      	cmp	r3, #0
 8004798:	d012      	beq.n	80047c0 <HAL_DMA_IRQHandler+0xd8>
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	f003 0302 	and.w	r3, r3, #2
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d00b      	beq.n	80047c0 <HAL_DMA_IRQHandler+0xd8>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80047ac:	2204      	movs	r2, #4
 80047ae:	409a      	lsls	r2, r3
 80047b0:	693b      	ldr	r3, [r7, #16]
 80047b2:	609a      	str	r2, [r3, #8]
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047b8:	f043 0204 	orr.w	r2, r3, #4
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	655a      	str	r2, [r3, #84]	@ 0x54
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80047c4:	2210      	movs	r2, #16
 80047c6:	409a      	lsls	r2, r3
 80047c8:	68fb      	ldr	r3, [r7, #12]
 80047ca:	4013      	ands	r3, r2
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d043      	beq.n	8004858 <HAL_DMA_IRQHandler+0x170>
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	f003 0308 	and.w	r3, r3, #8
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d03c      	beq.n	8004858 <HAL_DMA_IRQHandler+0x170>
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80047e2:	2210      	movs	r2, #16
 80047e4:	409a      	lsls	r2, r3
 80047e6:	693b      	ldr	r3, [r7, #16]
 80047e8:	609a      	str	r2, [r3, #8]
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80047f4:	2b00      	cmp	r3, #0
 80047f6:	d018      	beq.n	800482a <HAL_DMA_IRQHandler+0x142>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004802:	2b00      	cmp	r3, #0
 8004804:	d108      	bne.n	8004818 <HAL_DMA_IRQHandler+0x130>
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800480a:	2b00      	cmp	r3, #0
 800480c:	d024      	beq.n	8004858 <HAL_DMA_IRQHandler+0x170>
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004812:	6878      	ldr	r0, [r7, #4]
 8004814:	4798      	blx	r3
 8004816:	e01f      	b.n	8004858 <HAL_DMA_IRQHandler+0x170>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800481c:	2b00      	cmp	r3, #0
 800481e:	d01b      	beq.n	8004858 <HAL_DMA_IRQHandler+0x170>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004824:	6878      	ldr	r0, [r7, #4]
 8004826:	4798      	blx	r3
 8004828:	e016      	b.n	8004858 <HAL_DMA_IRQHandler+0x170>
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	681b      	ldr	r3, [r3, #0]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004834:	2b00      	cmp	r3, #0
 8004836:	d107      	bne.n	8004848 <HAL_DMA_IRQHandler+0x160>
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	681a      	ldr	r2, [r3, #0]
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f022 0208 	bic.w	r2, r2, #8
 8004846:	601a      	str	r2, [r3, #0]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800484c:	2b00      	cmp	r3, #0
 800484e:	d003      	beq.n	8004858 <HAL_DMA_IRQHandler+0x170>
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004854:	6878      	ldr	r0, [r7, #4]
 8004856:	4798      	blx	r3
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800485c:	2220      	movs	r2, #32
 800485e:	409a      	lsls	r2, r3
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	4013      	ands	r3, r2
 8004864:	2b00      	cmp	r3, #0
 8004866:	f000 808f 	beq.w	8004988 <HAL_DMA_IRQHandler+0x2a0>
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	f003 0310 	and.w	r3, r3, #16
 8004874:	2b00      	cmp	r3, #0
 8004876:	f000 8087 	beq.w	8004988 <HAL_DMA_IRQHandler+0x2a0>
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800487e:	2220      	movs	r2, #32
 8004880:	409a      	lsls	r2, r3
 8004882:	693b      	ldr	r3, [r7, #16]
 8004884:	609a      	str	r2, [r3, #8]
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800488c:	b2db      	uxtb	r3, r3
 800488e:	2b05      	cmp	r3, #5
 8004890:	d136      	bne.n	8004900 <HAL_DMA_IRQHandler+0x218>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	681a      	ldr	r2, [r3, #0]
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f022 0216 	bic.w	r2, r2, #22
 80048a0:	601a      	str	r2, [r3, #0]
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	695a      	ldr	r2, [r3, #20]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80048b0:	615a      	str	r2, [r3, #20]
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d103      	bne.n	80048c2 <HAL_DMA_IRQHandler+0x1da>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80048be:	2b00      	cmp	r3, #0
 80048c0:	d007      	beq.n	80048d2 <HAL_DMA_IRQHandler+0x1ea>
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	681a      	ldr	r2, [r3, #0]
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	f022 0208 	bic.w	r2, r2, #8
 80048d0:	601a      	str	r2, [r3, #0]
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80048d6:	223f      	movs	r2, #63	@ 0x3f
 80048d8:	409a      	lsls	r2, r3
 80048da:	693b      	ldr	r3, [r7, #16]
 80048dc:	609a      	str	r2, [r3, #8]
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	2201      	movs	r2, #1
 80048e2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	2200      	movs	r2, #0
 80048ea:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d07e      	beq.n	80049f4 <HAL_DMA_IRQHandler+0x30c>
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80048fa:	6878      	ldr	r0, [r7, #4]
 80048fc:	4798      	blx	r3
 80048fe:	e079      	b.n	80049f4 <HAL_DMA_IRQHandler+0x30c>
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	681b      	ldr	r3, [r3, #0]
 8004906:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800490a:	2b00      	cmp	r3, #0
 800490c:	d01d      	beq.n	800494a <HAL_DMA_IRQHandler+0x262>
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004918:	2b00      	cmp	r3, #0
 800491a:	d10d      	bne.n	8004938 <HAL_DMA_IRQHandler+0x250>
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004920:	2b00      	cmp	r3, #0
 8004922:	d031      	beq.n	8004988 <HAL_DMA_IRQHandler+0x2a0>
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004928:	6878      	ldr	r0, [r7, #4]
 800492a:	4798      	blx	r3
 800492c:	e02c      	b.n	8004988 <HAL_DMA_IRQHandler+0x2a0>
 800492e:	bf00      	nop
 8004930:	2000a6b0 	.word	0x2000a6b0
 8004934:	1b4e81b5 	.word	0x1b4e81b5
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800493c:	2b00      	cmp	r3, #0
 800493e:	d023      	beq.n	8004988 <HAL_DMA_IRQHandler+0x2a0>
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004944:	6878      	ldr	r0, [r7, #4]
 8004946:	4798      	blx	r3
 8004948:	e01e      	b.n	8004988 <HAL_DMA_IRQHandler+0x2a0>
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004954:	2b00      	cmp	r3, #0
 8004956:	d10f      	bne.n	8004978 <HAL_DMA_IRQHandler+0x290>
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	681a      	ldr	r2, [r3, #0]
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	f022 0210 	bic.w	r2, r2, #16
 8004966:	601a      	str	r2, [r3, #0]
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	2201      	movs	r2, #1
 800496c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	2200      	movs	r2, #0
 8004974:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800497c:	2b00      	cmp	r3, #0
 800497e:	d003      	beq.n	8004988 <HAL_DMA_IRQHandler+0x2a0>
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004984:	6878      	ldr	r0, [r7, #4]
 8004986:	4798      	blx	r3
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800498c:	2b00      	cmp	r3, #0
 800498e:	d032      	beq.n	80049f6 <HAL_DMA_IRQHandler+0x30e>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004994:	f003 0301 	and.w	r3, r3, #1
 8004998:	2b00      	cmp	r3, #0
 800499a:	d022      	beq.n	80049e2 <HAL_DMA_IRQHandler+0x2fa>
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	2205      	movs	r2, #5
 80049a0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	681a      	ldr	r2, [r3, #0]
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	f022 0201 	bic.w	r2, r2, #1
 80049b2:	601a      	str	r2, [r3, #0]
 80049b4:	68bb      	ldr	r3, [r7, #8]
 80049b6:	3301      	adds	r3, #1
 80049b8:	60bb      	str	r3, [r7, #8]
 80049ba:	697a      	ldr	r2, [r7, #20]
 80049bc:	429a      	cmp	r2, r3
 80049be:	d307      	bcc.n	80049d0 <HAL_DMA_IRQHandler+0x2e8>
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	f003 0301 	and.w	r3, r3, #1
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d1f2      	bne.n	80049b4 <HAL_DMA_IRQHandler+0x2cc>
 80049ce:	e000      	b.n	80049d2 <HAL_DMA_IRQHandler+0x2ea>
 80049d0:	bf00      	nop
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	2201      	movs	r2, #1
 80049d6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	2200      	movs	r2, #0
 80049de:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d005      	beq.n	80049f6 <HAL_DMA_IRQHandler+0x30e>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80049ee:	6878      	ldr	r0, [r7, #4]
 80049f0:	4798      	blx	r3
 80049f2:	e000      	b.n	80049f6 <HAL_DMA_IRQHandler+0x30e>
 80049f4:	bf00      	nop
 80049f6:	3718      	adds	r7, #24
 80049f8:	46bd      	mov	sp, r7
 80049fa:	bd80      	pop	{r7, pc}

080049fc <DMA_SetConfig>:
 80049fc:	b480      	push	{r7}
 80049fe:	b085      	sub	sp, #20
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	60f8      	str	r0, [r7, #12]
 8004a04:	60b9      	str	r1, [r7, #8]
 8004a06:	607a      	str	r2, [r7, #4]
 8004a08:	603b      	str	r3, [r7, #0]
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	681a      	ldr	r2, [r3, #0]
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004a18:	601a      	str	r2, [r3, #0]
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	683a      	ldr	r2, [r7, #0]
 8004a20:	605a      	str	r2, [r3, #4]
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	689b      	ldr	r3, [r3, #8]
 8004a26:	2b40      	cmp	r3, #64	@ 0x40
 8004a28:	d108      	bne.n	8004a3c <DMA_SetConfig+0x40>
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	687a      	ldr	r2, [r7, #4]
 8004a30:	609a      	str	r2, [r3, #8]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	68ba      	ldr	r2, [r7, #8]
 8004a38:	60da      	str	r2, [r3, #12]
 8004a3a:	e007      	b.n	8004a4c <DMA_SetConfig+0x50>
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	68ba      	ldr	r2, [r7, #8]
 8004a42:	609a      	str	r2, [r3, #8]
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	687a      	ldr	r2, [r7, #4]
 8004a4a:	60da      	str	r2, [r3, #12]
 8004a4c:	bf00      	nop
 8004a4e:	3714      	adds	r7, #20
 8004a50:	46bd      	mov	sp, r7
 8004a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a56:	4770      	bx	lr

08004a58 <DMA_CalcBaseAndBitshift>:
 8004a58:	b480      	push	{r7}
 8004a5a:	b085      	sub	sp, #20
 8004a5c:	af00      	add	r7, sp, #0
 8004a5e:	6078      	str	r0, [r7, #4]
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	b2db      	uxtb	r3, r3
 8004a66:	3b10      	subs	r3, #16
 8004a68:	4a14      	ldr	r2, [pc, #80]	@ (8004abc <DMA_CalcBaseAndBitshift+0x64>)
 8004a6a:	fba2 2303 	umull	r2, r3, r2, r3
 8004a6e:	091b      	lsrs	r3, r3, #4
 8004a70:	60fb      	str	r3, [r7, #12]
 8004a72:	4a13      	ldr	r2, [pc, #76]	@ (8004ac0 <DMA_CalcBaseAndBitshift+0x68>)
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	4413      	add	r3, r2
 8004a78:	781b      	ldrb	r3, [r3, #0]
 8004a7a:	461a      	mov	r2, r3
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004a80:	68fb      	ldr	r3, [r7, #12]
 8004a82:	2b03      	cmp	r3, #3
 8004a84:	d909      	bls.n	8004a9a <DMA_CalcBaseAndBitshift+0x42>
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8004a8e:	f023 0303 	bic.w	r3, r3, #3
 8004a92:	1d1a      	adds	r2, r3, #4
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	659a      	str	r2, [r3, #88]	@ 0x58
 8004a98:	e007      	b.n	8004aaa <DMA_CalcBaseAndBitshift+0x52>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8004aa2:	f023 0303 	bic.w	r3, r3, #3
 8004aa6:	687a      	ldr	r2, [r7, #4]
 8004aa8:	6593      	str	r3, [r2, #88]	@ 0x58
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004aae:	4618      	mov	r0, r3
 8004ab0:	3714      	adds	r7, #20
 8004ab2:	46bd      	mov	sp, r7
 8004ab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ab8:	4770      	bx	lr
 8004aba:	bf00      	nop
 8004abc:	aaaaaaab 	.word	0xaaaaaaab
 8004ac0:	080426f8 	.word	0x080426f8

08004ac4 <DMA_CheckFifoParam>:
 8004ac4:	b480      	push	{r7}
 8004ac6:	b085      	sub	sp, #20
 8004ac8:	af00      	add	r7, sp, #0
 8004aca:	6078      	str	r0, [r7, #4]
 8004acc:	2300      	movs	r3, #0
 8004ace:	73fb      	strb	r3, [r7, #15]
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ad4:	60bb      	str	r3, [r7, #8]
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	699b      	ldr	r3, [r3, #24]
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	d11f      	bne.n	8004b1e <DMA_CheckFifoParam+0x5a>
 8004ade:	68bb      	ldr	r3, [r7, #8]
 8004ae0:	2b03      	cmp	r3, #3
 8004ae2:	d856      	bhi.n	8004b92 <DMA_CheckFifoParam+0xce>
 8004ae4:	a201      	add	r2, pc, #4	@ (adr r2, 8004aec <DMA_CheckFifoParam+0x28>)
 8004ae6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004aea:	bf00      	nop
 8004aec:	08004afd 	.word	0x08004afd
 8004af0:	08004b0f 	.word	0x08004b0f
 8004af4:	08004afd 	.word	0x08004afd
 8004af8:	08004b93 	.word	0x08004b93
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b00:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	d046      	beq.n	8004b96 <DMA_CheckFifoParam+0xd2>
 8004b08:	2301      	movs	r3, #1
 8004b0a:	73fb      	strb	r3, [r7, #15]
 8004b0c:	e043      	b.n	8004b96 <DMA_CheckFifoParam+0xd2>
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b12:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8004b16:	d140      	bne.n	8004b9a <DMA_CheckFifoParam+0xd6>
 8004b18:	2301      	movs	r3, #1
 8004b1a:	73fb      	strb	r3, [r7, #15]
 8004b1c:	e03d      	b.n	8004b9a <DMA_CheckFifoParam+0xd6>
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	699b      	ldr	r3, [r3, #24]
 8004b22:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004b26:	d121      	bne.n	8004b6c <DMA_CheckFifoParam+0xa8>
 8004b28:	68bb      	ldr	r3, [r7, #8]
 8004b2a:	2b03      	cmp	r3, #3
 8004b2c:	d837      	bhi.n	8004b9e <DMA_CheckFifoParam+0xda>
 8004b2e:	a201      	add	r2, pc, #4	@ (adr r2, 8004b34 <DMA_CheckFifoParam+0x70>)
 8004b30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b34:	08004b45 	.word	0x08004b45
 8004b38:	08004b4b 	.word	0x08004b4b
 8004b3c:	08004b45 	.word	0x08004b45
 8004b40:	08004b5d 	.word	0x08004b5d
 8004b44:	2301      	movs	r3, #1
 8004b46:	73fb      	strb	r3, [r7, #15]
 8004b48:	e030      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b4e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d025      	beq.n	8004ba2 <DMA_CheckFifoParam+0xde>
 8004b56:	2301      	movs	r3, #1
 8004b58:	73fb      	strb	r3, [r7, #15]
 8004b5a:	e022      	b.n	8004ba2 <DMA_CheckFifoParam+0xde>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b60:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8004b64:	d11f      	bne.n	8004ba6 <DMA_CheckFifoParam+0xe2>
 8004b66:	2301      	movs	r3, #1
 8004b68:	73fb      	strb	r3, [r7, #15]
 8004b6a:	e01c      	b.n	8004ba6 <DMA_CheckFifoParam+0xe2>
 8004b6c:	68bb      	ldr	r3, [r7, #8]
 8004b6e:	2b02      	cmp	r3, #2
 8004b70:	d903      	bls.n	8004b7a <DMA_CheckFifoParam+0xb6>
 8004b72:	68bb      	ldr	r3, [r7, #8]
 8004b74:	2b03      	cmp	r3, #3
 8004b76:	d003      	beq.n	8004b80 <DMA_CheckFifoParam+0xbc>
 8004b78:	e018      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004b7a:	2301      	movs	r3, #1
 8004b7c:	73fb      	strb	r3, [r7, #15]
 8004b7e:	e015      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b84:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d00e      	beq.n	8004baa <DMA_CheckFifoParam+0xe6>
 8004b8c:	2301      	movs	r3, #1
 8004b8e:	73fb      	strb	r3, [r7, #15]
 8004b90:	e00b      	b.n	8004baa <DMA_CheckFifoParam+0xe6>
 8004b92:	bf00      	nop
 8004b94:	e00a      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004b96:	bf00      	nop
 8004b98:	e008      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004b9a:	bf00      	nop
 8004b9c:	e006      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004b9e:	bf00      	nop
 8004ba0:	e004      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004ba2:	bf00      	nop
 8004ba4:	e002      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004ba6:	bf00      	nop
 8004ba8:	e000      	b.n	8004bac <DMA_CheckFifoParam+0xe8>
 8004baa:	bf00      	nop
 8004bac:	7bfb      	ldrb	r3, [r7, #15]
 8004bae:	4618      	mov	r0, r3
 8004bb0:	3714      	adds	r7, #20
 8004bb2:	46bd      	mov	sp, r7
 8004bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb8:	4770      	bx	lr
 8004bba:	bf00      	nop

08004bbc <HAL_GPIO_Init>:
 8004bbc:	b480      	push	{r7}
 8004bbe:	b089      	sub	sp, #36	@ 0x24
 8004bc0:	af00      	add	r7, sp, #0
 8004bc2:	6078      	str	r0, [r7, #4]
 8004bc4:	6039      	str	r1, [r7, #0]
 8004bc6:	2300      	movs	r3, #0
 8004bc8:	617b      	str	r3, [r7, #20]
 8004bca:	2300      	movs	r3, #0
 8004bcc:	613b      	str	r3, [r7, #16]
 8004bce:	2300      	movs	r3, #0
 8004bd0:	61bb      	str	r3, [r7, #24]
 8004bd2:	2300      	movs	r3, #0
 8004bd4:	61fb      	str	r3, [r7, #28]
 8004bd6:	e165      	b.n	8004ea4 <HAL_GPIO_Init+0x2e8>
 8004bd8:	2201      	movs	r2, #1
 8004bda:	69fb      	ldr	r3, [r7, #28]
 8004bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8004be0:	617b      	str	r3, [r7, #20]
 8004be2:	683b      	ldr	r3, [r7, #0]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	697a      	ldr	r2, [r7, #20]
 8004be8:	4013      	ands	r3, r2
 8004bea:	613b      	str	r3, [r7, #16]
 8004bec:	693a      	ldr	r2, [r7, #16]
 8004bee:	697b      	ldr	r3, [r7, #20]
 8004bf0:	429a      	cmp	r2, r3
 8004bf2:	f040 8154 	bne.w	8004e9e <HAL_GPIO_Init+0x2e2>
 8004bf6:	683b      	ldr	r3, [r7, #0]
 8004bf8:	685b      	ldr	r3, [r3, #4]
 8004bfa:	f003 0303 	and.w	r3, r3, #3
 8004bfe:	2b01      	cmp	r3, #1
 8004c00:	d005      	beq.n	8004c0e <HAL_GPIO_Init+0x52>
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	685b      	ldr	r3, [r3, #4]
 8004c06:	f003 0303 	and.w	r3, r3, #3
 8004c0a:	2b02      	cmp	r3, #2
 8004c0c:	d130      	bne.n	8004c70 <HAL_GPIO_Init+0xb4>
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	689b      	ldr	r3, [r3, #8]
 8004c12:	61bb      	str	r3, [r7, #24]
 8004c14:	69fb      	ldr	r3, [r7, #28]
 8004c16:	005b      	lsls	r3, r3, #1
 8004c18:	2203      	movs	r2, #3
 8004c1a:	fa02 f303 	lsl.w	r3, r2, r3
 8004c1e:	43db      	mvns	r3, r3
 8004c20:	69ba      	ldr	r2, [r7, #24]
 8004c22:	4013      	ands	r3, r2
 8004c24:	61bb      	str	r3, [r7, #24]
 8004c26:	683b      	ldr	r3, [r7, #0]
 8004c28:	68da      	ldr	r2, [r3, #12]
 8004c2a:	69fb      	ldr	r3, [r7, #28]
 8004c2c:	005b      	lsls	r3, r3, #1
 8004c2e:	fa02 f303 	lsl.w	r3, r2, r3
 8004c32:	69ba      	ldr	r2, [r7, #24]
 8004c34:	4313      	orrs	r3, r2
 8004c36:	61bb      	str	r3, [r7, #24]
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	69ba      	ldr	r2, [r7, #24]
 8004c3c:	609a      	str	r2, [r3, #8]
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	685b      	ldr	r3, [r3, #4]
 8004c42:	61bb      	str	r3, [r7, #24]
 8004c44:	2201      	movs	r2, #1
 8004c46:	69fb      	ldr	r3, [r7, #28]
 8004c48:	fa02 f303 	lsl.w	r3, r2, r3
 8004c4c:	43db      	mvns	r3, r3
 8004c4e:	69ba      	ldr	r2, [r7, #24]
 8004c50:	4013      	ands	r3, r2
 8004c52:	61bb      	str	r3, [r7, #24]
 8004c54:	683b      	ldr	r3, [r7, #0]
 8004c56:	685b      	ldr	r3, [r3, #4]
 8004c58:	091b      	lsrs	r3, r3, #4
 8004c5a:	f003 0201 	and.w	r2, r3, #1
 8004c5e:	69fb      	ldr	r3, [r7, #28]
 8004c60:	fa02 f303 	lsl.w	r3, r2, r3
 8004c64:	69ba      	ldr	r2, [r7, #24]
 8004c66:	4313      	orrs	r3, r2
 8004c68:	61bb      	str	r3, [r7, #24]
 8004c6a:	687b      	ldr	r3, [r7, #4]
 8004c6c:	69ba      	ldr	r2, [r7, #24]
 8004c6e:	605a      	str	r2, [r3, #4]
 8004c70:	683b      	ldr	r3, [r7, #0]
 8004c72:	685b      	ldr	r3, [r3, #4]
 8004c74:	f003 0303 	and.w	r3, r3, #3
 8004c78:	2b03      	cmp	r3, #3
 8004c7a:	d017      	beq.n	8004cac <HAL_GPIO_Init+0xf0>
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	68db      	ldr	r3, [r3, #12]
 8004c80:	61bb      	str	r3, [r7, #24]
 8004c82:	69fb      	ldr	r3, [r7, #28]
 8004c84:	005b      	lsls	r3, r3, #1
 8004c86:	2203      	movs	r2, #3
 8004c88:	fa02 f303 	lsl.w	r3, r2, r3
 8004c8c:	43db      	mvns	r3, r3
 8004c8e:	69ba      	ldr	r2, [r7, #24]
 8004c90:	4013      	ands	r3, r2
 8004c92:	61bb      	str	r3, [r7, #24]
 8004c94:	683b      	ldr	r3, [r7, #0]
 8004c96:	689a      	ldr	r2, [r3, #8]
 8004c98:	69fb      	ldr	r3, [r7, #28]
 8004c9a:	005b      	lsls	r3, r3, #1
 8004c9c:	fa02 f303 	lsl.w	r3, r2, r3
 8004ca0:	69ba      	ldr	r2, [r7, #24]
 8004ca2:	4313      	orrs	r3, r2
 8004ca4:	61bb      	str	r3, [r7, #24]
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	69ba      	ldr	r2, [r7, #24]
 8004caa:	60da      	str	r2, [r3, #12]
 8004cac:	683b      	ldr	r3, [r7, #0]
 8004cae:	685b      	ldr	r3, [r3, #4]
 8004cb0:	f003 0303 	and.w	r3, r3, #3
 8004cb4:	2b02      	cmp	r3, #2
 8004cb6:	d123      	bne.n	8004d00 <HAL_GPIO_Init+0x144>
 8004cb8:	69fb      	ldr	r3, [r7, #28]
 8004cba:	08da      	lsrs	r2, r3, #3
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	3208      	adds	r2, #8
 8004cc0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004cc4:	61bb      	str	r3, [r7, #24]
 8004cc6:	69fb      	ldr	r3, [r7, #28]
 8004cc8:	f003 0307 	and.w	r3, r3, #7
 8004ccc:	009b      	lsls	r3, r3, #2
 8004cce:	220f      	movs	r2, #15
 8004cd0:	fa02 f303 	lsl.w	r3, r2, r3
 8004cd4:	43db      	mvns	r3, r3
 8004cd6:	69ba      	ldr	r2, [r7, #24]
 8004cd8:	4013      	ands	r3, r2
 8004cda:	61bb      	str	r3, [r7, #24]
 8004cdc:	683b      	ldr	r3, [r7, #0]
 8004cde:	691a      	ldr	r2, [r3, #16]
 8004ce0:	69fb      	ldr	r3, [r7, #28]
 8004ce2:	f003 0307 	and.w	r3, r3, #7
 8004ce6:	009b      	lsls	r3, r3, #2
 8004ce8:	fa02 f303 	lsl.w	r3, r2, r3
 8004cec:	69ba      	ldr	r2, [r7, #24]
 8004cee:	4313      	orrs	r3, r2
 8004cf0:	61bb      	str	r3, [r7, #24]
 8004cf2:	69fb      	ldr	r3, [r7, #28]
 8004cf4:	08da      	lsrs	r2, r3, #3
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	3208      	adds	r2, #8
 8004cfa:	69b9      	ldr	r1, [r7, #24]
 8004cfc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	61bb      	str	r3, [r7, #24]
 8004d06:	69fb      	ldr	r3, [r7, #28]
 8004d08:	005b      	lsls	r3, r3, #1
 8004d0a:	2203      	movs	r2, #3
 8004d0c:	fa02 f303 	lsl.w	r3, r2, r3
 8004d10:	43db      	mvns	r3, r3
 8004d12:	69ba      	ldr	r2, [r7, #24]
 8004d14:	4013      	ands	r3, r2
 8004d16:	61bb      	str	r3, [r7, #24]
 8004d18:	683b      	ldr	r3, [r7, #0]
 8004d1a:	685b      	ldr	r3, [r3, #4]
 8004d1c:	f003 0203 	and.w	r2, r3, #3
 8004d20:	69fb      	ldr	r3, [r7, #28]
 8004d22:	005b      	lsls	r3, r3, #1
 8004d24:	fa02 f303 	lsl.w	r3, r2, r3
 8004d28:	69ba      	ldr	r2, [r7, #24]
 8004d2a:	4313      	orrs	r3, r2
 8004d2c:	61bb      	str	r3, [r7, #24]
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	69ba      	ldr	r2, [r7, #24]
 8004d32:	601a      	str	r2, [r3, #0]
 8004d34:	683b      	ldr	r3, [r7, #0]
 8004d36:	685b      	ldr	r3, [r3, #4]
 8004d38:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	f000 80ae 	beq.w	8004e9e <HAL_GPIO_Init+0x2e2>
 8004d42:	2300      	movs	r3, #0
 8004d44:	60fb      	str	r3, [r7, #12]
 8004d46:	4b5d      	ldr	r3, [pc, #372]	@ (8004ebc <HAL_GPIO_Init+0x300>)
 8004d48:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004d4a:	4a5c      	ldr	r2, [pc, #368]	@ (8004ebc <HAL_GPIO_Init+0x300>)
 8004d4c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004d50:	6453      	str	r3, [r2, #68]	@ 0x44
 8004d52:	4b5a      	ldr	r3, [pc, #360]	@ (8004ebc <HAL_GPIO_Init+0x300>)
 8004d54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004d56:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004d5a:	60fb      	str	r3, [r7, #12]
 8004d5c:	68fb      	ldr	r3, [r7, #12]
 8004d5e:	4a58      	ldr	r2, [pc, #352]	@ (8004ec0 <HAL_GPIO_Init+0x304>)
 8004d60:	69fb      	ldr	r3, [r7, #28]
 8004d62:	089b      	lsrs	r3, r3, #2
 8004d64:	3302      	adds	r3, #2
 8004d66:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004d6a:	61bb      	str	r3, [r7, #24]
 8004d6c:	69fb      	ldr	r3, [r7, #28]
 8004d6e:	f003 0303 	and.w	r3, r3, #3
 8004d72:	009b      	lsls	r3, r3, #2
 8004d74:	220f      	movs	r2, #15
 8004d76:	fa02 f303 	lsl.w	r3, r2, r3
 8004d7a:	43db      	mvns	r3, r3
 8004d7c:	69ba      	ldr	r2, [r7, #24]
 8004d7e:	4013      	ands	r3, r2
 8004d80:	61bb      	str	r3, [r7, #24]
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	4a4f      	ldr	r2, [pc, #316]	@ (8004ec4 <HAL_GPIO_Init+0x308>)
 8004d86:	4293      	cmp	r3, r2
 8004d88:	d025      	beq.n	8004dd6 <HAL_GPIO_Init+0x21a>
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	4a4e      	ldr	r2, [pc, #312]	@ (8004ec8 <HAL_GPIO_Init+0x30c>)
 8004d8e:	4293      	cmp	r3, r2
 8004d90:	d01f      	beq.n	8004dd2 <HAL_GPIO_Init+0x216>
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	4a4d      	ldr	r2, [pc, #308]	@ (8004ecc <HAL_GPIO_Init+0x310>)
 8004d96:	4293      	cmp	r3, r2
 8004d98:	d019      	beq.n	8004dce <HAL_GPIO_Init+0x212>
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	4a4c      	ldr	r2, [pc, #304]	@ (8004ed0 <HAL_GPIO_Init+0x314>)
 8004d9e:	4293      	cmp	r3, r2
 8004da0:	d013      	beq.n	8004dca <HAL_GPIO_Init+0x20e>
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	4a4b      	ldr	r2, [pc, #300]	@ (8004ed4 <HAL_GPIO_Init+0x318>)
 8004da6:	4293      	cmp	r3, r2
 8004da8:	d00d      	beq.n	8004dc6 <HAL_GPIO_Init+0x20a>
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	4a4a      	ldr	r2, [pc, #296]	@ (8004ed8 <HAL_GPIO_Init+0x31c>)
 8004dae:	4293      	cmp	r3, r2
 8004db0:	d007      	beq.n	8004dc2 <HAL_GPIO_Init+0x206>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	4a49      	ldr	r2, [pc, #292]	@ (8004edc <HAL_GPIO_Init+0x320>)
 8004db6:	4293      	cmp	r3, r2
 8004db8:	d101      	bne.n	8004dbe <HAL_GPIO_Init+0x202>
 8004dba:	2306      	movs	r3, #6
 8004dbc:	e00c      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dbe:	2307      	movs	r3, #7
 8004dc0:	e00a      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dc2:	2305      	movs	r3, #5
 8004dc4:	e008      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dc6:	2304      	movs	r3, #4
 8004dc8:	e006      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dca:	2303      	movs	r3, #3
 8004dcc:	e004      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dce:	2302      	movs	r3, #2
 8004dd0:	e002      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dd2:	2301      	movs	r3, #1
 8004dd4:	e000      	b.n	8004dd8 <HAL_GPIO_Init+0x21c>
 8004dd6:	2300      	movs	r3, #0
 8004dd8:	69fa      	ldr	r2, [r7, #28]
 8004dda:	f002 0203 	and.w	r2, r2, #3
 8004dde:	0092      	lsls	r2, r2, #2
 8004de0:	4093      	lsls	r3, r2
 8004de2:	69ba      	ldr	r2, [r7, #24]
 8004de4:	4313      	orrs	r3, r2
 8004de6:	61bb      	str	r3, [r7, #24]
 8004de8:	4935      	ldr	r1, [pc, #212]	@ (8004ec0 <HAL_GPIO_Init+0x304>)
 8004dea:	69fb      	ldr	r3, [r7, #28]
 8004dec:	089b      	lsrs	r3, r3, #2
 8004dee:	3302      	adds	r3, #2
 8004df0:	69ba      	ldr	r2, [r7, #24]
 8004df2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004df6:	4b3a      	ldr	r3, [pc, #232]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004df8:	689b      	ldr	r3, [r3, #8]
 8004dfa:	61bb      	str	r3, [r7, #24]
 8004dfc:	693b      	ldr	r3, [r7, #16]
 8004dfe:	43db      	mvns	r3, r3
 8004e00:	69ba      	ldr	r2, [r7, #24]
 8004e02:	4013      	ands	r3, r2
 8004e04:	61bb      	str	r3, [r7, #24]
 8004e06:	683b      	ldr	r3, [r7, #0]
 8004e08:	685b      	ldr	r3, [r3, #4]
 8004e0a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004e0e:	2b00      	cmp	r3, #0
 8004e10:	d003      	beq.n	8004e1a <HAL_GPIO_Init+0x25e>
 8004e12:	69ba      	ldr	r2, [r7, #24]
 8004e14:	693b      	ldr	r3, [r7, #16]
 8004e16:	4313      	orrs	r3, r2
 8004e18:	61bb      	str	r3, [r7, #24]
 8004e1a:	4a31      	ldr	r2, [pc, #196]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e1c:	69bb      	ldr	r3, [r7, #24]
 8004e1e:	6093      	str	r3, [r2, #8]
 8004e20:	4b2f      	ldr	r3, [pc, #188]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e22:	68db      	ldr	r3, [r3, #12]
 8004e24:	61bb      	str	r3, [r7, #24]
 8004e26:	693b      	ldr	r3, [r7, #16]
 8004e28:	43db      	mvns	r3, r3
 8004e2a:	69ba      	ldr	r2, [r7, #24]
 8004e2c:	4013      	ands	r3, r2
 8004e2e:	61bb      	str	r3, [r7, #24]
 8004e30:	683b      	ldr	r3, [r7, #0]
 8004e32:	685b      	ldr	r3, [r3, #4]
 8004e34:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	d003      	beq.n	8004e44 <HAL_GPIO_Init+0x288>
 8004e3c:	69ba      	ldr	r2, [r7, #24]
 8004e3e:	693b      	ldr	r3, [r7, #16]
 8004e40:	4313      	orrs	r3, r2
 8004e42:	61bb      	str	r3, [r7, #24]
 8004e44:	4a26      	ldr	r2, [pc, #152]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e46:	69bb      	ldr	r3, [r7, #24]
 8004e48:	60d3      	str	r3, [r2, #12]
 8004e4a:	4b25      	ldr	r3, [pc, #148]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e4c:	685b      	ldr	r3, [r3, #4]
 8004e4e:	61bb      	str	r3, [r7, #24]
 8004e50:	693b      	ldr	r3, [r7, #16]
 8004e52:	43db      	mvns	r3, r3
 8004e54:	69ba      	ldr	r2, [r7, #24]
 8004e56:	4013      	ands	r3, r2
 8004e58:	61bb      	str	r3, [r7, #24]
 8004e5a:	683b      	ldr	r3, [r7, #0]
 8004e5c:	685b      	ldr	r3, [r3, #4]
 8004e5e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d003      	beq.n	8004e6e <HAL_GPIO_Init+0x2b2>
 8004e66:	69ba      	ldr	r2, [r7, #24]
 8004e68:	693b      	ldr	r3, [r7, #16]
 8004e6a:	4313      	orrs	r3, r2
 8004e6c:	61bb      	str	r3, [r7, #24]
 8004e6e:	4a1c      	ldr	r2, [pc, #112]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e70:	69bb      	ldr	r3, [r7, #24]
 8004e72:	6053      	str	r3, [r2, #4]
 8004e74:	4b1a      	ldr	r3, [pc, #104]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	61bb      	str	r3, [r7, #24]
 8004e7a:	693b      	ldr	r3, [r7, #16]
 8004e7c:	43db      	mvns	r3, r3
 8004e7e:	69ba      	ldr	r2, [r7, #24]
 8004e80:	4013      	ands	r3, r2
 8004e82:	61bb      	str	r3, [r7, #24]
 8004e84:	683b      	ldr	r3, [r7, #0]
 8004e86:	685b      	ldr	r3, [r3, #4]
 8004e88:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d003      	beq.n	8004e98 <HAL_GPIO_Init+0x2dc>
 8004e90:	69ba      	ldr	r2, [r7, #24]
 8004e92:	693b      	ldr	r3, [r7, #16]
 8004e94:	4313      	orrs	r3, r2
 8004e96:	61bb      	str	r3, [r7, #24]
 8004e98:	4a11      	ldr	r2, [pc, #68]	@ (8004ee0 <HAL_GPIO_Init+0x324>)
 8004e9a:	69bb      	ldr	r3, [r7, #24]
 8004e9c:	6013      	str	r3, [r2, #0]
 8004e9e:	69fb      	ldr	r3, [r7, #28]
 8004ea0:	3301      	adds	r3, #1
 8004ea2:	61fb      	str	r3, [r7, #28]
 8004ea4:	69fb      	ldr	r3, [r7, #28]
 8004ea6:	2b0f      	cmp	r3, #15
 8004ea8:	f67f ae96 	bls.w	8004bd8 <HAL_GPIO_Init+0x1c>
 8004eac:	bf00      	nop
 8004eae:	bf00      	nop
 8004eb0:	3724      	adds	r7, #36	@ 0x24
 8004eb2:	46bd      	mov	sp, r7
 8004eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eb8:	4770      	bx	lr
 8004eba:	bf00      	nop
 8004ebc:	40023800 	.word	0x40023800
 8004ec0:	40013800 	.word	0x40013800
 8004ec4:	40020000 	.word	0x40020000
 8004ec8:	40020400 	.word	0x40020400
 8004ecc:	40020800 	.word	0x40020800
 8004ed0:	40020c00 	.word	0x40020c00
 8004ed4:	40021000 	.word	0x40021000
 8004ed8:	40021400 	.word	0x40021400
 8004edc:	40021800 	.word	0x40021800
 8004ee0:	40013c00 	.word	0x40013c00

08004ee4 <HAL_GPIO_WritePin>:
 8004ee4:	b480      	push	{r7}
 8004ee6:	b083      	sub	sp, #12
 8004ee8:	af00      	add	r7, sp, #0
 8004eea:	6078      	str	r0, [r7, #4]
 8004eec:	460b      	mov	r3, r1
 8004eee:	807b      	strh	r3, [r7, #2]
 8004ef0:	4613      	mov	r3, r2
 8004ef2:	707b      	strb	r3, [r7, #1]
 8004ef4:	787b      	ldrb	r3, [r7, #1]
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d003      	beq.n	8004f02 <HAL_GPIO_WritePin+0x1e>
 8004efa:	887a      	ldrh	r2, [r7, #2]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	619a      	str	r2, [r3, #24]
 8004f00:	e003      	b.n	8004f0a <HAL_GPIO_WritePin+0x26>
 8004f02:	887b      	ldrh	r3, [r7, #2]
 8004f04:	041a      	lsls	r2, r3, #16
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	619a      	str	r2, [r3, #24]
 8004f0a:	bf00      	nop
 8004f0c:	370c      	adds	r7, #12
 8004f0e:	46bd      	mov	sp, r7
 8004f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f14:	4770      	bx	lr
	...

08004f18 <HAL_RCC_ClockConfig>:
 8004f18:	b580      	push	{r7, lr}
 8004f1a:	b084      	sub	sp, #16
 8004f1c:	af00      	add	r7, sp, #0
 8004f1e:	6078      	str	r0, [r7, #4]
 8004f20:	6039      	str	r1, [r7, #0]
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	d101      	bne.n	8004f2c <HAL_RCC_ClockConfig+0x14>
 8004f28:	2301      	movs	r3, #1
 8004f2a:	e0cc      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8004f2c:	4b68      	ldr	r3, [pc, #416]	@ (80050d0 <HAL_RCC_ClockConfig+0x1b8>)
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	f003 030f 	and.w	r3, r3, #15
 8004f34:	683a      	ldr	r2, [r7, #0]
 8004f36:	429a      	cmp	r2, r3
 8004f38:	d90c      	bls.n	8004f54 <HAL_RCC_ClockConfig+0x3c>
 8004f3a:	4b65      	ldr	r3, [pc, #404]	@ (80050d0 <HAL_RCC_ClockConfig+0x1b8>)
 8004f3c:	683a      	ldr	r2, [r7, #0]
 8004f3e:	b2d2      	uxtb	r2, r2
 8004f40:	701a      	strb	r2, [r3, #0]
 8004f42:	4b63      	ldr	r3, [pc, #396]	@ (80050d0 <HAL_RCC_ClockConfig+0x1b8>)
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	f003 030f 	and.w	r3, r3, #15
 8004f4a:	683a      	ldr	r2, [r7, #0]
 8004f4c:	429a      	cmp	r2, r3
 8004f4e:	d001      	beq.n	8004f54 <HAL_RCC_ClockConfig+0x3c>
 8004f50:	2301      	movs	r3, #1
 8004f52:	e0b8      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	f003 0302 	and.w	r3, r3, #2
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	d020      	beq.n	8004fa2 <HAL_RCC_ClockConfig+0x8a>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f003 0304 	and.w	r3, r3, #4
 8004f68:	2b00      	cmp	r3, #0
 8004f6a:	d005      	beq.n	8004f78 <HAL_RCC_ClockConfig+0x60>
 8004f6c:	4b59      	ldr	r3, [pc, #356]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004f6e:	689b      	ldr	r3, [r3, #8]
 8004f70:	4a58      	ldr	r2, [pc, #352]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004f72:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004f76:	6093      	str	r3, [r2, #8]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	681b      	ldr	r3, [r3, #0]
 8004f7c:	f003 0308 	and.w	r3, r3, #8
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	d005      	beq.n	8004f90 <HAL_RCC_ClockConfig+0x78>
 8004f84:	4b53      	ldr	r3, [pc, #332]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004f86:	689b      	ldr	r3, [r3, #8]
 8004f88:	4a52      	ldr	r2, [pc, #328]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004f8a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8004f8e:	6093      	str	r3, [r2, #8]
 8004f90:	4b50      	ldr	r3, [pc, #320]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004f92:	689b      	ldr	r3, [r3, #8]
 8004f94:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	689b      	ldr	r3, [r3, #8]
 8004f9c:	494d      	ldr	r1, [pc, #308]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004f9e:	4313      	orrs	r3, r2
 8004fa0:	608b      	str	r3, [r1, #8]
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	f003 0301 	and.w	r3, r3, #1
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d044      	beq.n	8005038 <HAL_RCC_ClockConfig+0x120>
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	685b      	ldr	r3, [r3, #4]
 8004fb2:	2b01      	cmp	r3, #1
 8004fb4:	d107      	bne.n	8004fc6 <HAL_RCC_ClockConfig+0xae>
 8004fb6:	4b47      	ldr	r3, [pc, #284]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	d119      	bne.n	8004ff6 <HAL_RCC_ClockConfig+0xde>
 8004fc2:	2301      	movs	r3, #1
 8004fc4:	e07f      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	685b      	ldr	r3, [r3, #4]
 8004fca:	2b02      	cmp	r3, #2
 8004fcc:	d003      	beq.n	8004fd6 <HAL_RCC_ClockConfig+0xbe>
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	685b      	ldr	r3, [r3, #4]
 8004fd2:	2b03      	cmp	r3, #3
 8004fd4:	d107      	bne.n	8004fe6 <HAL_RCC_ClockConfig+0xce>
 8004fd6:	4b3f      	ldr	r3, [pc, #252]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004fde:	2b00      	cmp	r3, #0
 8004fe0:	d109      	bne.n	8004ff6 <HAL_RCC_ClockConfig+0xde>
 8004fe2:	2301      	movs	r3, #1
 8004fe4:	e06f      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8004fe6:	4b3b      	ldr	r3, [pc, #236]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	f003 0302 	and.w	r3, r3, #2
 8004fee:	2b00      	cmp	r3, #0
 8004ff0:	d101      	bne.n	8004ff6 <HAL_RCC_ClockConfig+0xde>
 8004ff2:	2301      	movs	r3, #1
 8004ff4:	e067      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8004ff6:	4b37      	ldr	r3, [pc, #220]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8004ff8:	689b      	ldr	r3, [r3, #8]
 8004ffa:	f023 0203 	bic.w	r2, r3, #3
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	685b      	ldr	r3, [r3, #4]
 8005002:	4934      	ldr	r1, [pc, #208]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005004:	4313      	orrs	r3, r2
 8005006:	608b      	str	r3, [r1, #8]
 8005008:	f7ff f888 	bl	800411c <HAL_GetTick>
 800500c:	60f8      	str	r0, [r7, #12]
 800500e:	e00a      	b.n	8005026 <HAL_RCC_ClockConfig+0x10e>
 8005010:	f7ff f884 	bl	800411c <HAL_GetTick>
 8005014:	4602      	mov	r2, r0
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	1ad3      	subs	r3, r2, r3
 800501a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800501e:	4293      	cmp	r3, r2
 8005020:	d901      	bls.n	8005026 <HAL_RCC_ClockConfig+0x10e>
 8005022:	2303      	movs	r3, #3
 8005024:	e04f      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8005026:	4b2b      	ldr	r3, [pc, #172]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005028:	689b      	ldr	r3, [r3, #8]
 800502a:	f003 020c 	and.w	r2, r3, #12
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	685b      	ldr	r3, [r3, #4]
 8005032:	009b      	lsls	r3, r3, #2
 8005034:	429a      	cmp	r2, r3
 8005036:	d1eb      	bne.n	8005010 <HAL_RCC_ClockConfig+0xf8>
 8005038:	4b25      	ldr	r3, [pc, #148]	@ (80050d0 <HAL_RCC_ClockConfig+0x1b8>)
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	f003 030f 	and.w	r3, r3, #15
 8005040:	683a      	ldr	r2, [r7, #0]
 8005042:	429a      	cmp	r2, r3
 8005044:	d20c      	bcs.n	8005060 <HAL_RCC_ClockConfig+0x148>
 8005046:	4b22      	ldr	r3, [pc, #136]	@ (80050d0 <HAL_RCC_ClockConfig+0x1b8>)
 8005048:	683a      	ldr	r2, [r7, #0]
 800504a:	b2d2      	uxtb	r2, r2
 800504c:	701a      	strb	r2, [r3, #0]
 800504e:	4b20      	ldr	r3, [pc, #128]	@ (80050d0 <HAL_RCC_ClockConfig+0x1b8>)
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	f003 030f 	and.w	r3, r3, #15
 8005056:	683a      	ldr	r2, [r7, #0]
 8005058:	429a      	cmp	r2, r3
 800505a:	d001      	beq.n	8005060 <HAL_RCC_ClockConfig+0x148>
 800505c:	2301      	movs	r3, #1
 800505e:	e032      	b.n	80050c6 <HAL_RCC_ClockConfig+0x1ae>
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	f003 0304 	and.w	r3, r3, #4
 8005068:	2b00      	cmp	r3, #0
 800506a:	d008      	beq.n	800507e <HAL_RCC_ClockConfig+0x166>
 800506c:	4b19      	ldr	r3, [pc, #100]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 800506e:	689b      	ldr	r3, [r3, #8]
 8005070:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	68db      	ldr	r3, [r3, #12]
 8005078:	4916      	ldr	r1, [pc, #88]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 800507a:	4313      	orrs	r3, r2
 800507c:	608b      	str	r3, [r1, #8]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	f003 0308 	and.w	r3, r3, #8
 8005086:	2b00      	cmp	r3, #0
 8005088:	d009      	beq.n	800509e <HAL_RCC_ClockConfig+0x186>
 800508a:	4b12      	ldr	r3, [pc, #72]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 800508c:	689b      	ldr	r3, [r3, #8]
 800508e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	691b      	ldr	r3, [r3, #16]
 8005096:	00db      	lsls	r3, r3, #3
 8005098:	490e      	ldr	r1, [pc, #56]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 800509a:	4313      	orrs	r3, r2
 800509c:	608b      	str	r3, [r1, #8]
 800509e:	f000 f855 	bl	800514c <HAL_RCC_GetSysClockFreq>
 80050a2:	4602      	mov	r2, r0
 80050a4:	4b0b      	ldr	r3, [pc, #44]	@ (80050d4 <HAL_RCC_ClockConfig+0x1bc>)
 80050a6:	689b      	ldr	r3, [r3, #8]
 80050a8:	091b      	lsrs	r3, r3, #4
 80050aa:	f003 030f 	and.w	r3, r3, #15
 80050ae:	490a      	ldr	r1, [pc, #40]	@ (80050d8 <HAL_RCC_ClockConfig+0x1c0>)
 80050b0:	5ccb      	ldrb	r3, [r1, r3]
 80050b2:	fa22 f303 	lsr.w	r3, r2, r3
 80050b6:	4a09      	ldr	r2, [pc, #36]	@ (80050dc <HAL_RCC_ClockConfig+0x1c4>)
 80050b8:	6013      	str	r3, [r2, #0]
 80050ba:	4b09      	ldr	r3, [pc, #36]	@ (80050e0 <HAL_RCC_ClockConfig+0x1c8>)
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	4618      	mov	r0, r3
 80050c0:	f7fe ffe8 	bl	8004094 <HAL_InitTick>
 80050c4:	2300      	movs	r3, #0
 80050c6:	4618      	mov	r0, r3
 80050c8:	3710      	adds	r7, #16
 80050ca:	46bd      	mov	sp, r7
 80050cc:	bd80      	pop	{r7, pc}
 80050ce:	bf00      	nop
 80050d0:	40023c00 	.word	0x40023c00
 80050d4:	40023800 	.word	0x40023800
 80050d8:	080426e0 	.word	0x080426e0
 80050dc:	2000a6b0 	.word	0x2000a6b0
 80050e0:	2000a6b4 	.word	0x2000a6b4

080050e4 <HAL_RCC_GetHCLKFreq>:
 80050e4:	b480      	push	{r7}
 80050e6:	af00      	add	r7, sp, #0
 80050e8:	4b03      	ldr	r3, [pc, #12]	@ (80050f8 <HAL_RCC_GetHCLKFreq+0x14>)
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	4618      	mov	r0, r3
 80050ee:	46bd      	mov	sp, r7
 80050f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050f4:	4770      	bx	lr
 80050f6:	bf00      	nop
 80050f8:	2000a6b0 	.word	0x2000a6b0

080050fc <HAL_RCC_GetPCLK1Freq>:
 80050fc:	b580      	push	{r7, lr}
 80050fe:	af00      	add	r7, sp, #0
 8005100:	f7ff fff0 	bl	80050e4 <HAL_RCC_GetHCLKFreq>
 8005104:	4602      	mov	r2, r0
 8005106:	4b05      	ldr	r3, [pc, #20]	@ (800511c <HAL_RCC_GetPCLK1Freq+0x20>)
 8005108:	689b      	ldr	r3, [r3, #8]
 800510a:	0a9b      	lsrs	r3, r3, #10
 800510c:	f003 0307 	and.w	r3, r3, #7
 8005110:	4903      	ldr	r1, [pc, #12]	@ (8005120 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005112:	5ccb      	ldrb	r3, [r1, r3]
 8005114:	fa22 f303 	lsr.w	r3, r2, r3
 8005118:	4618      	mov	r0, r3
 800511a:	bd80      	pop	{r7, pc}
 800511c:	40023800 	.word	0x40023800
 8005120:	080426f0 	.word	0x080426f0

08005124 <HAL_RCC_GetPCLK2Freq>:
 8005124:	b580      	push	{r7, lr}
 8005126:	af00      	add	r7, sp, #0
 8005128:	f7ff ffdc 	bl	80050e4 <HAL_RCC_GetHCLKFreq>
 800512c:	4602      	mov	r2, r0
 800512e:	4b05      	ldr	r3, [pc, #20]	@ (8005144 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005130:	689b      	ldr	r3, [r3, #8]
 8005132:	0b5b      	lsrs	r3, r3, #13
 8005134:	f003 0307 	and.w	r3, r3, #7
 8005138:	4903      	ldr	r1, [pc, #12]	@ (8005148 <HAL_RCC_GetPCLK2Freq+0x24>)
 800513a:	5ccb      	ldrb	r3, [r1, r3]
 800513c:	fa22 f303 	lsr.w	r3, r2, r3
 8005140:	4618      	mov	r0, r3
 8005142:	bd80      	pop	{r7, pc}
 8005144:	40023800 	.word	0x40023800
 8005148:	080426f0 	.word	0x080426f0

0800514c <HAL_RCC_GetSysClockFreq>:
 800514c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005150:	b0a6      	sub	sp, #152	@ 0x98
 8005152:	af00      	add	r7, sp, #0
 8005154:	2300      	movs	r3, #0
 8005156:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800515a:	2300      	movs	r3, #0
 800515c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005160:	2300      	movs	r3, #0
 8005162:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005166:	2300      	movs	r3, #0
 8005168:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800516c:	2300      	movs	r3, #0
 800516e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005172:	4bc8      	ldr	r3, [pc, #800]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 8005174:	689b      	ldr	r3, [r3, #8]
 8005176:	f003 030c 	and.w	r3, r3, #12
 800517a:	2b0c      	cmp	r3, #12
 800517c:	f200 817e 	bhi.w	800547c <HAL_RCC_GetSysClockFreq+0x330>
 8005180:	a201      	add	r2, pc, #4	@ (adr r2, 8005188 <HAL_RCC_GetSysClockFreq+0x3c>)
 8005182:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005186:	bf00      	nop
 8005188:	080051bd 	.word	0x080051bd
 800518c:	0800547d 	.word	0x0800547d
 8005190:	0800547d 	.word	0x0800547d
 8005194:	0800547d 	.word	0x0800547d
 8005198:	080051c5 	.word	0x080051c5
 800519c:	0800547d 	.word	0x0800547d
 80051a0:	0800547d 	.word	0x0800547d
 80051a4:	0800547d 	.word	0x0800547d
 80051a8:	080051cd 	.word	0x080051cd
 80051ac:	0800547d 	.word	0x0800547d
 80051b0:	0800547d 	.word	0x0800547d
 80051b4:	0800547d 	.word	0x0800547d
 80051b8:	08005337 	.word	0x08005337
 80051bc:	4bb6      	ldr	r3, [pc, #728]	@ (8005498 <HAL_RCC_GetSysClockFreq+0x34c>)
 80051be:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80051c2:	e15f      	b.n	8005484 <HAL_RCC_GetSysClockFreq+0x338>
 80051c4:	4bb5      	ldr	r3, [pc, #724]	@ (800549c <HAL_RCC_GetSysClockFreq+0x350>)
 80051c6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80051ca:	e15b      	b.n	8005484 <HAL_RCC_GetSysClockFreq+0x338>
 80051cc:	4bb1      	ldr	r3, [pc, #708]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 80051ce:	685b      	ldr	r3, [r3, #4]
 80051d0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80051d4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80051d8:	4bae      	ldr	r3, [pc, #696]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 80051da:	685b      	ldr	r3, [r3, #4]
 80051dc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d031      	beq.n	8005248 <HAL_RCC_GetSysClockFreq+0xfc>
 80051e4:	4bab      	ldr	r3, [pc, #684]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 80051e6:	685b      	ldr	r3, [r3, #4]
 80051e8:	099b      	lsrs	r3, r3, #6
 80051ea:	2200      	movs	r2, #0
 80051ec:	66bb      	str	r3, [r7, #104]	@ 0x68
 80051ee:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80051f0:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80051f2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80051f6:	663b      	str	r3, [r7, #96]	@ 0x60
 80051f8:	2300      	movs	r3, #0
 80051fa:	667b      	str	r3, [r7, #100]	@ 0x64
 80051fc:	4ba7      	ldr	r3, [pc, #668]	@ (800549c <HAL_RCC_GetSysClockFreq+0x350>)
 80051fe:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8005202:	462a      	mov	r2, r5
 8005204:	fb03 f202 	mul.w	r2, r3, r2
 8005208:	2300      	movs	r3, #0
 800520a:	4621      	mov	r1, r4
 800520c:	fb01 f303 	mul.w	r3, r1, r3
 8005210:	4413      	add	r3, r2
 8005212:	4aa2      	ldr	r2, [pc, #648]	@ (800549c <HAL_RCC_GetSysClockFreq+0x350>)
 8005214:	4621      	mov	r1, r4
 8005216:	fba1 1202 	umull	r1, r2, r1, r2
 800521a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800521c:	460a      	mov	r2, r1
 800521e:	67ba      	str	r2, [r7, #120]	@ 0x78
 8005220:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8005222:	4413      	add	r3, r2
 8005224:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005226:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800522a:	2200      	movs	r2, #0
 800522c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800522e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005230:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005234:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8005238:	f7fb f842 	bl	80002c0 <__aeabi_uldivmod>
 800523c:	4602      	mov	r2, r0
 800523e:	460b      	mov	r3, r1
 8005240:	4613      	mov	r3, r2
 8005242:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005246:	e064      	b.n	8005312 <HAL_RCC_GetSysClockFreq+0x1c6>
 8005248:	4b92      	ldr	r3, [pc, #584]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 800524a:	685b      	ldr	r3, [r3, #4]
 800524c:	099b      	lsrs	r3, r3, #6
 800524e:	2200      	movs	r2, #0
 8005250:	653b      	str	r3, [r7, #80]	@ 0x50
 8005252:	657a      	str	r2, [r7, #84]	@ 0x54
 8005254:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005256:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800525a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800525c:	2300      	movs	r3, #0
 800525e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005260:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 8005264:	4622      	mov	r2, r4
 8005266:	462b      	mov	r3, r5
 8005268:	f04f 0000 	mov.w	r0, #0
 800526c:	f04f 0100 	mov.w	r1, #0
 8005270:	0159      	lsls	r1, r3, #5
 8005272:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005276:	0150      	lsls	r0, r2, #5
 8005278:	4602      	mov	r2, r0
 800527a:	460b      	mov	r3, r1
 800527c:	4621      	mov	r1, r4
 800527e:	1a51      	subs	r1, r2, r1
 8005280:	6139      	str	r1, [r7, #16]
 8005282:	4629      	mov	r1, r5
 8005284:	eb63 0301 	sbc.w	r3, r3, r1
 8005288:	617b      	str	r3, [r7, #20]
 800528a:	f04f 0200 	mov.w	r2, #0
 800528e:	f04f 0300 	mov.w	r3, #0
 8005292:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005296:	4659      	mov	r1, fp
 8005298:	018b      	lsls	r3, r1, #6
 800529a:	4651      	mov	r1, sl
 800529c:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80052a0:	4651      	mov	r1, sl
 80052a2:	018a      	lsls	r2, r1, #6
 80052a4:	4651      	mov	r1, sl
 80052a6:	ebb2 0801 	subs.w	r8, r2, r1
 80052aa:	4659      	mov	r1, fp
 80052ac:	eb63 0901 	sbc.w	r9, r3, r1
 80052b0:	f04f 0200 	mov.w	r2, #0
 80052b4:	f04f 0300 	mov.w	r3, #0
 80052b8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80052bc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80052c0:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80052c4:	4690      	mov	r8, r2
 80052c6:	4699      	mov	r9, r3
 80052c8:	4623      	mov	r3, r4
 80052ca:	eb18 0303 	adds.w	r3, r8, r3
 80052ce:	60bb      	str	r3, [r7, #8]
 80052d0:	462b      	mov	r3, r5
 80052d2:	eb49 0303 	adc.w	r3, r9, r3
 80052d6:	60fb      	str	r3, [r7, #12]
 80052d8:	f04f 0200 	mov.w	r2, #0
 80052dc:	f04f 0300 	mov.w	r3, #0
 80052e0:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80052e4:	4629      	mov	r1, r5
 80052e6:	028b      	lsls	r3, r1, #10
 80052e8:	4621      	mov	r1, r4
 80052ea:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80052ee:	4621      	mov	r1, r4
 80052f0:	028a      	lsls	r2, r1, #10
 80052f2:	4610      	mov	r0, r2
 80052f4:	4619      	mov	r1, r3
 80052f6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80052fa:	2200      	movs	r2, #0
 80052fc:	643b      	str	r3, [r7, #64]	@ 0x40
 80052fe:	647a      	str	r2, [r7, #68]	@ 0x44
 8005300:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8005304:	f7fa ffdc 	bl	80002c0 <__aeabi_uldivmod>
 8005308:	4602      	mov	r2, r0
 800530a:	460b      	mov	r3, r1
 800530c:	4613      	mov	r3, r2
 800530e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005312:	4b60      	ldr	r3, [pc, #384]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 8005314:	685b      	ldr	r3, [r3, #4]
 8005316:	0c1b      	lsrs	r3, r3, #16
 8005318:	f003 0303 	and.w	r3, r3, #3
 800531c:	3301      	adds	r3, #1
 800531e:	005b      	lsls	r3, r3, #1
 8005320:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005324:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8005328:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800532c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005330:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005334:	e0a6      	b.n	8005484 <HAL_RCC_GetSysClockFreq+0x338>
 8005336:	4b57      	ldr	r3, [pc, #348]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 8005338:	685b      	ldr	r3, [r3, #4]
 800533a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800533e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005342:	4b54      	ldr	r3, [pc, #336]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 8005344:	685b      	ldr	r3, [r3, #4]
 8005346:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800534a:	2b00      	cmp	r3, #0
 800534c:	d02a      	beq.n	80053a4 <HAL_RCC_GetSysClockFreq+0x258>
 800534e:	4b51      	ldr	r3, [pc, #324]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 8005350:	685b      	ldr	r3, [r3, #4]
 8005352:	099b      	lsrs	r3, r3, #6
 8005354:	2200      	movs	r2, #0
 8005356:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005358:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800535a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800535c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8005360:	2100      	movs	r1, #0
 8005362:	4b4e      	ldr	r3, [pc, #312]	@ (800549c <HAL_RCC_GetSysClockFreq+0x350>)
 8005364:	fb03 f201 	mul.w	r2, r3, r1
 8005368:	2300      	movs	r3, #0
 800536a:	fb00 f303 	mul.w	r3, r0, r3
 800536e:	4413      	add	r3, r2
 8005370:	4a4a      	ldr	r2, [pc, #296]	@ (800549c <HAL_RCC_GetSysClockFreq+0x350>)
 8005372:	fba0 1202 	umull	r1, r2, r0, r2
 8005376:	677a      	str	r2, [r7, #116]	@ 0x74
 8005378:	460a      	mov	r2, r1
 800537a:	673a      	str	r2, [r7, #112]	@ 0x70
 800537c:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 800537e:	4413      	add	r3, r2
 8005380:	677b      	str	r3, [r7, #116]	@ 0x74
 8005382:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005386:	2200      	movs	r2, #0
 8005388:	633b      	str	r3, [r7, #48]	@ 0x30
 800538a:	637a      	str	r2, [r7, #52]	@ 0x34
 800538c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8005390:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8005394:	f7fa ff94 	bl	80002c0 <__aeabi_uldivmod>
 8005398:	4602      	mov	r2, r0
 800539a:	460b      	mov	r3, r1
 800539c:	4613      	mov	r3, r2
 800539e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80053a2:	e05b      	b.n	800545c <HAL_RCC_GetSysClockFreq+0x310>
 80053a4:	4b3b      	ldr	r3, [pc, #236]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 80053a6:	685b      	ldr	r3, [r3, #4]
 80053a8:	099b      	lsrs	r3, r3, #6
 80053aa:	2200      	movs	r2, #0
 80053ac:	62bb      	str	r3, [r7, #40]	@ 0x28
 80053ae:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80053b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80053b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80053b6:	623b      	str	r3, [r7, #32]
 80053b8:	2300      	movs	r3, #0
 80053ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80053bc:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80053c0:	4642      	mov	r2, r8
 80053c2:	464b      	mov	r3, r9
 80053c4:	f04f 0000 	mov.w	r0, #0
 80053c8:	f04f 0100 	mov.w	r1, #0
 80053cc:	0159      	lsls	r1, r3, #5
 80053ce:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80053d2:	0150      	lsls	r0, r2, #5
 80053d4:	4602      	mov	r2, r0
 80053d6:	460b      	mov	r3, r1
 80053d8:	4641      	mov	r1, r8
 80053da:	ebb2 0a01 	subs.w	sl, r2, r1
 80053de:	4649      	mov	r1, r9
 80053e0:	eb63 0b01 	sbc.w	fp, r3, r1
 80053e4:	f04f 0200 	mov.w	r2, #0
 80053e8:	f04f 0300 	mov.w	r3, #0
 80053ec:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80053f0:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80053f4:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80053f8:	ebb2 040a 	subs.w	r4, r2, sl
 80053fc:	eb63 050b 	sbc.w	r5, r3, fp
 8005400:	f04f 0200 	mov.w	r2, #0
 8005404:	f04f 0300 	mov.w	r3, #0
 8005408:	00eb      	lsls	r3, r5, #3
 800540a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800540e:	00e2      	lsls	r2, r4, #3
 8005410:	4614      	mov	r4, r2
 8005412:	461d      	mov	r5, r3
 8005414:	4643      	mov	r3, r8
 8005416:	18e3      	adds	r3, r4, r3
 8005418:	603b      	str	r3, [r7, #0]
 800541a:	464b      	mov	r3, r9
 800541c:	eb45 0303 	adc.w	r3, r5, r3
 8005420:	607b      	str	r3, [r7, #4]
 8005422:	f04f 0200 	mov.w	r2, #0
 8005426:	f04f 0300 	mov.w	r3, #0
 800542a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800542e:	4629      	mov	r1, r5
 8005430:	028b      	lsls	r3, r1, #10
 8005432:	4621      	mov	r1, r4
 8005434:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005438:	4621      	mov	r1, r4
 800543a:	028a      	lsls	r2, r1, #10
 800543c:	4610      	mov	r0, r2
 800543e:	4619      	mov	r1, r3
 8005440:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005444:	2200      	movs	r2, #0
 8005446:	61bb      	str	r3, [r7, #24]
 8005448:	61fa      	str	r2, [r7, #28]
 800544a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800544e:	f7fa ff37 	bl	80002c0 <__aeabi_uldivmod>
 8005452:	4602      	mov	r2, r0
 8005454:	460b      	mov	r3, r1
 8005456:	4613      	mov	r3, r2
 8005458:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800545c:	4b0d      	ldr	r3, [pc, #52]	@ (8005494 <HAL_RCC_GetSysClockFreq+0x348>)
 800545e:	685b      	ldr	r3, [r3, #4]
 8005460:	0f1b      	lsrs	r3, r3, #28
 8005462:	f003 0307 	and.w	r3, r3, #7
 8005466:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800546a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800546e:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005472:	fbb2 f3f3 	udiv	r3, r2, r3
 8005476:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800547a:	e003      	b.n	8005484 <HAL_RCC_GetSysClockFreq+0x338>
 800547c:	4b06      	ldr	r3, [pc, #24]	@ (8005498 <HAL_RCC_GetSysClockFreq+0x34c>)
 800547e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005482:	bf00      	nop
 8005484:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8005488:	4618      	mov	r0, r3
 800548a:	3798      	adds	r7, #152	@ 0x98
 800548c:	46bd      	mov	sp, r7
 800548e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005492:	bf00      	nop
 8005494:	40023800 	.word	0x40023800
 8005498:	00f42400 	.word	0x00f42400
 800549c:	017d7840 	.word	0x017d7840

080054a0 <HAL_RCC_OscConfig>:
 80054a0:	b580      	push	{r7, lr}
 80054a2:	b086      	sub	sp, #24
 80054a4:	af00      	add	r7, sp, #0
 80054a6:	6078      	str	r0, [r7, #4]
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	2b00      	cmp	r3, #0
 80054ac:	d101      	bne.n	80054b2 <HAL_RCC_OscConfig+0x12>
 80054ae:	2301      	movs	r3, #1
 80054b0:	e28d      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	f003 0301 	and.w	r3, r3, #1
 80054ba:	2b00      	cmp	r3, #0
 80054bc:	f000 8083 	beq.w	80055c6 <HAL_RCC_OscConfig+0x126>
 80054c0:	4b94      	ldr	r3, [pc, #592]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80054c2:	689b      	ldr	r3, [r3, #8]
 80054c4:	f003 030c 	and.w	r3, r3, #12
 80054c8:	2b04      	cmp	r3, #4
 80054ca:	d019      	beq.n	8005500 <HAL_RCC_OscConfig+0x60>
 80054cc:	4b91      	ldr	r3, [pc, #580]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80054ce:	689b      	ldr	r3, [r3, #8]
 80054d0:	f003 030c 	and.w	r3, r3, #12
 80054d4:	2b08      	cmp	r3, #8
 80054d6:	d106      	bne.n	80054e6 <HAL_RCC_OscConfig+0x46>
 80054d8:	4b8e      	ldr	r3, [pc, #568]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80054da:	685b      	ldr	r3, [r3, #4]
 80054dc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80054e0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80054e4:	d00c      	beq.n	8005500 <HAL_RCC_OscConfig+0x60>
 80054e6:	4b8b      	ldr	r3, [pc, #556]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80054e8:	689b      	ldr	r3, [r3, #8]
 80054ea:	f003 030c 	and.w	r3, r3, #12
 80054ee:	2b0c      	cmp	r3, #12
 80054f0:	d112      	bne.n	8005518 <HAL_RCC_OscConfig+0x78>
 80054f2:	4b88      	ldr	r3, [pc, #544]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80054f4:	685b      	ldr	r3, [r3, #4]
 80054f6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80054fa:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80054fe:	d10b      	bne.n	8005518 <HAL_RCC_OscConfig+0x78>
 8005500:	4b84      	ldr	r3, [pc, #528]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005508:	2b00      	cmp	r3, #0
 800550a:	d05b      	beq.n	80055c4 <HAL_RCC_OscConfig+0x124>
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	685b      	ldr	r3, [r3, #4]
 8005510:	2b00      	cmp	r3, #0
 8005512:	d157      	bne.n	80055c4 <HAL_RCC_OscConfig+0x124>
 8005514:	2301      	movs	r3, #1
 8005516:	e25a      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	685b      	ldr	r3, [r3, #4]
 800551c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005520:	d106      	bne.n	8005530 <HAL_RCC_OscConfig+0x90>
 8005522:	4b7c      	ldr	r3, [pc, #496]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	4a7b      	ldr	r2, [pc, #492]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005528:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800552c:	6013      	str	r3, [r2, #0]
 800552e:	e01d      	b.n	800556c <HAL_RCC_OscConfig+0xcc>
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	685b      	ldr	r3, [r3, #4]
 8005534:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005538:	d10c      	bne.n	8005554 <HAL_RCC_OscConfig+0xb4>
 800553a:	4b76      	ldr	r3, [pc, #472]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	4a75      	ldr	r2, [pc, #468]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005540:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005544:	6013      	str	r3, [r2, #0]
 8005546:	4b73      	ldr	r3, [pc, #460]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	4a72      	ldr	r2, [pc, #456]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 800554c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005550:	6013      	str	r3, [r2, #0]
 8005552:	e00b      	b.n	800556c <HAL_RCC_OscConfig+0xcc>
 8005554:	4b6f      	ldr	r3, [pc, #444]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	4a6e      	ldr	r2, [pc, #440]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 800555a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800555e:	6013      	str	r3, [r2, #0]
 8005560:	4b6c      	ldr	r3, [pc, #432]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	4a6b      	ldr	r2, [pc, #428]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005566:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800556a:	6013      	str	r3, [r2, #0]
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	685b      	ldr	r3, [r3, #4]
 8005570:	2b00      	cmp	r3, #0
 8005572:	d013      	beq.n	800559c <HAL_RCC_OscConfig+0xfc>
 8005574:	f7fe fdd2 	bl	800411c <HAL_GetTick>
 8005578:	6138      	str	r0, [r7, #16]
 800557a:	e008      	b.n	800558e <HAL_RCC_OscConfig+0xee>
 800557c:	f7fe fdce 	bl	800411c <HAL_GetTick>
 8005580:	4602      	mov	r2, r0
 8005582:	693b      	ldr	r3, [r7, #16]
 8005584:	1ad3      	subs	r3, r2, r3
 8005586:	2b64      	cmp	r3, #100	@ 0x64
 8005588:	d901      	bls.n	800558e <HAL_RCC_OscConfig+0xee>
 800558a:	2303      	movs	r3, #3
 800558c:	e21f      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 800558e:	4b61      	ldr	r3, [pc, #388]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005596:	2b00      	cmp	r3, #0
 8005598:	d0f0      	beq.n	800557c <HAL_RCC_OscConfig+0xdc>
 800559a:	e014      	b.n	80055c6 <HAL_RCC_OscConfig+0x126>
 800559c:	f7fe fdbe 	bl	800411c <HAL_GetTick>
 80055a0:	6138      	str	r0, [r7, #16]
 80055a2:	e008      	b.n	80055b6 <HAL_RCC_OscConfig+0x116>
 80055a4:	f7fe fdba 	bl	800411c <HAL_GetTick>
 80055a8:	4602      	mov	r2, r0
 80055aa:	693b      	ldr	r3, [r7, #16]
 80055ac:	1ad3      	subs	r3, r2, r3
 80055ae:	2b64      	cmp	r3, #100	@ 0x64
 80055b0:	d901      	bls.n	80055b6 <HAL_RCC_OscConfig+0x116>
 80055b2:	2303      	movs	r3, #3
 80055b4:	e20b      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 80055b6:	4b57      	ldr	r3, [pc, #348]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80055be:	2b00      	cmp	r3, #0
 80055c0:	d1f0      	bne.n	80055a4 <HAL_RCC_OscConfig+0x104>
 80055c2:	e000      	b.n	80055c6 <HAL_RCC_OscConfig+0x126>
 80055c4:	bf00      	nop
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	f003 0302 	and.w	r3, r3, #2
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	d06f      	beq.n	80056b2 <HAL_RCC_OscConfig+0x212>
 80055d2:	4b50      	ldr	r3, [pc, #320]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80055d4:	689b      	ldr	r3, [r3, #8]
 80055d6:	f003 030c 	and.w	r3, r3, #12
 80055da:	2b00      	cmp	r3, #0
 80055dc:	d017      	beq.n	800560e <HAL_RCC_OscConfig+0x16e>
 80055de:	4b4d      	ldr	r3, [pc, #308]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80055e0:	689b      	ldr	r3, [r3, #8]
 80055e2:	f003 030c 	and.w	r3, r3, #12
 80055e6:	2b08      	cmp	r3, #8
 80055e8:	d105      	bne.n	80055f6 <HAL_RCC_OscConfig+0x156>
 80055ea:	4b4a      	ldr	r3, [pc, #296]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80055ec:	685b      	ldr	r3, [r3, #4]
 80055ee:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	d00b      	beq.n	800560e <HAL_RCC_OscConfig+0x16e>
 80055f6:	4b47      	ldr	r3, [pc, #284]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80055f8:	689b      	ldr	r3, [r3, #8]
 80055fa:	f003 030c 	and.w	r3, r3, #12
 80055fe:	2b0c      	cmp	r3, #12
 8005600:	d11c      	bne.n	800563c <HAL_RCC_OscConfig+0x19c>
 8005602:	4b44      	ldr	r3, [pc, #272]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005604:	685b      	ldr	r3, [r3, #4]
 8005606:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800560a:	2b00      	cmp	r3, #0
 800560c:	d116      	bne.n	800563c <HAL_RCC_OscConfig+0x19c>
 800560e:	4b41      	ldr	r3, [pc, #260]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	f003 0302 	and.w	r3, r3, #2
 8005616:	2b00      	cmp	r3, #0
 8005618:	d005      	beq.n	8005626 <HAL_RCC_OscConfig+0x186>
 800561a:	687b      	ldr	r3, [r7, #4]
 800561c:	68db      	ldr	r3, [r3, #12]
 800561e:	2b01      	cmp	r3, #1
 8005620:	d001      	beq.n	8005626 <HAL_RCC_OscConfig+0x186>
 8005622:	2301      	movs	r3, #1
 8005624:	e1d3      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 8005626:	4b3b      	ldr	r3, [pc, #236]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005628:	681b      	ldr	r3, [r3, #0]
 800562a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	691b      	ldr	r3, [r3, #16]
 8005632:	00db      	lsls	r3, r3, #3
 8005634:	4937      	ldr	r1, [pc, #220]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005636:	4313      	orrs	r3, r2
 8005638:	600b      	str	r3, [r1, #0]
 800563a:	e03a      	b.n	80056b2 <HAL_RCC_OscConfig+0x212>
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	68db      	ldr	r3, [r3, #12]
 8005640:	2b00      	cmp	r3, #0
 8005642:	d020      	beq.n	8005686 <HAL_RCC_OscConfig+0x1e6>
 8005644:	4b34      	ldr	r3, [pc, #208]	@ (8005718 <HAL_RCC_OscConfig+0x278>)
 8005646:	2201      	movs	r2, #1
 8005648:	601a      	str	r2, [r3, #0]
 800564a:	f7fe fd67 	bl	800411c <HAL_GetTick>
 800564e:	6138      	str	r0, [r7, #16]
 8005650:	e008      	b.n	8005664 <HAL_RCC_OscConfig+0x1c4>
 8005652:	f7fe fd63 	bl	800411c <HAL_GetTick>
 8005656:	4602      	mov	r2, r0
 8005658:	693b      	ldr	r3, [r7, #16]
 800565a:	1ad3      	subs	r3, r2, r3
 800565c:	2b02      	cmp	r3, #2
 800565e:	d901      	bls.n	8005664 <HAL_RCC_OscConfig+0x1c4>
 8005660:	2303      	movs	r3, #3
 8005662:	e1b4      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 8005664:	4b2b      	ldr	r3, [pc, #172]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	f003 0302 	and.w	r3, r3, #2
 800566c:	2b00      	cmp	r3, #0
 800566e:	d0f0      	beq.n	8005652 <HAL_RCC_OscConfig+0x1b2>
 8005670:	4b28      	ldr	r3, [pc, #160]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	691b      	ldr	r3, [r3, #16]
 800567c:	00db      	lsls	r3, r3, #3
 800567e:	4925      	ldr	r1, [pc, #148]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 8005680:	4313      	orrs	r3, r2
 8005682:	600b      	str	r3, [r1, #0]
 8005684:	e015      	b.n	80056b2 <HAL_RCC_OscConfig+0x212>
 8005686:	4b24      	ldr	r3, [pc, #144]	@ (8005718 <HAL_RCC_OscConfig+0x278>)
 8005688:	2200      	movs	r2, #0
 800568a:	601a      	str	r2, [r3, #0]
 800568c:	f7fe fd46 	bl	800411c <HAL_GetTick>
 8005690:	6138      	str	r0, [r7, #16]
 8005692:	e008      	b.n	80056a6 <HAL_RCC_OscConfig+0x206>
 8005694:	f7fe fd42 	bl	800411c <HAL_GetTick>
 8005698:	4602      	mov	r2, r0
 800569a:	693b      	ldr	r3, [r7, #16]
 800569c:	1ad3      	subs	r3, r2, r3
 800569e:	2b02      	cmp	r3, #2
 80056a0:	d901      	bls.n	80056a6 <HAL_RCC_OscConfig+0x206>
 80056a2:	2303      	movs	r3, #3
 80056a4:	e193      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 80056a6:	4b1b      	ldr	r3, [pc, #108]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	f003 0302 	and.w	r3, r3, #2
 80056ae:	2b00      	cmp	r3, #0
 80056b0:	d1f0      	bne.n	8005694 <HAL_RCC_OscConfig+0x1f4>
 80056b2:	687b      	ldr	r3, [r7, #4]
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	f003 0308 	and.w	r3, r3, #8
 80056ba:	2b00      	cmp	r3, #0
 80056bc:	d036      	beq.n	800572c <HAL_RCC_OscConfig+0x28c>
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	695b      	ldr	r3, [r3, #20]
 80056c2:	2b00      	cmp	r3, #0
 80056c4:	d016      	beq.n	80056f4 <HAL_RCC_OscConfig+0x254>
 80056c6:	4b15      	ldr	r3, [pc, #84]	@ (800571c <HAL_RCC_OscConfig+0x27c>)
 80056c8:	2201      	movs	r2, #1
 80056ca:	601a      	str	r2, [r3, #0]
 80056cc:	f7fe fd26 	bl	800411c <HAL_GetTick>
 80056d0:	6138      	str	r0, [r7, #16]
 80056d2:	e008      	b.n	80056e6 <HAL_RCC_OscConfig+0x246>
 80056d4:	f7fe fd22 	bl	800411c <HAL_GetTick>
 80056d8:	4602      	mov	r2, r0
 80056da:	693b      	ldr	r3, [r7, #16]
 80056dc:	1ad3      	subs	r3, r2, r3
 80056de:	2b02      	cmp	r3, #2
 80056e0:	d901      	bls.n	80056e6 <HAL_RCC_OscConfig+0x246>
 80056e2:	2303      	movs	r3, #3
 80056e4:	e173      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 80056e6:	4b0b      	ldr	r3, [pc, #44]	@ (8005714 <HAL_RCC_OscConfig+0x274>)
 80056e8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80056ea:	f003 0302 	and.w	r3, r3, #2
 80056ee:	2b00      	cmp	r3, #0
 80056f0:	d0f0      	beq.n	80056d4 <HAL_RCC_OscConfig+0x234>
 80056f2:	e01b      	b.n	800572c <HAL_RCC_OscConfig+0x28c>
 80056f4:	4b09      	ldr	r3, [pc, #36]	@ (800571c <HAL_RCC_OscConfig+0x27c>)
 80056f6:	2200      	movs	r2, #0
 80056f8:	601a      	str	r2, [r3, #0]
 80056fa:	f7fe fd0f 	bl	800411c <HAL_GetTick>
 80056fe:	6138      	str	r0, [r7, #16]
 8005700:	e00e      	b.n	8005720 <HAL_RCC_OscConfig+0x280>
 8005702:	f7fe fd0b 	bl	800411c <HAL_GetTick>
 8005706:	4602      	mov	r2, r0
 8005708:	693b      	ldr	r3, [r7, #16]
 800570a:	1ad3      	subs	r3, r2, r3
 800570c:	2b02      	cmp	r3, #2
 800570e:	d907      	bls.n	8005720 <HAL_RCC_OscConfig+0x280>
 8005710:	2303      	movs	r3, #3
 8005712:	e15c      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 8005714:	40023800 	.word	0x40023800
 8005718:	42470000 	.word	0x42470000
 800571c:	42470e80 	.word	0x42470e80
 8005720:	4b8a      	ldr	r3, [pc, #552]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005722:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005724:	f003 0302 	and.w	r3, r3, #2
 8005728:	2b00      	cmp	r3, #0
 800572a:	d1ea      	bne.n	8005702 <HAL_RCC_OscConfig+0x262>
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	f003 0304 	and.w	r3, r3, #4
 8005734:	2b00      	cmp	r3, #0
 8005736:	f000 8097 	beq.w	8005868 <HAL_RCC_OscConfig+0x3c8>
 800573a:	2300      	movs	r3, #0
 800573c:	75fb      	strb	r3, [r7, #23]
 800573e:	4b83      	ldr	r3, [pc, #524]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005740:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005742:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005746:	2b00      	cmp	r3, #0
 8005748:	d10f      	bne.n	800576a <HAL_RCC_OscConfig+0x2ca>
 800574a:	2300      	movs	r3, #0
 800574c:	60bb      	str	r3, [r7, #8]
 800574e:	4b7f      	ldr	r3, [pc, #508]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005750:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005752:	4a7e      	ldr	r2, [pc, #504]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005754:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005758:	6413      	str	r3, [r2, #64]	@ 0x40
 800575a:	4b7c      	ldr	r3, [pc, #496]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 800575c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800575e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005762:	60bb      	str	r3, [r7, #8]
 8005764:	68bb      	ldr	r3, [r7, #8]
 8005766:	2301      	movs	r3, #1
 8005768:	75fb      	strb	r3, [r7, #23]
 800576a:	4b79      	ldr	r3, [pc, #484]	@ (8005950 <HAL_RCC_OscConfig+0x4b0>)
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005772:	2b00      	cmp	r3, #0
 8005774:	d118      	bne.n	80057a8 <HAL_RCC_OscConfig+0x308>
 8005776:	4b76      	ldr	r3, [pc, #472]	@ (8005950 <HAL_RCC_OscConfig+0x4b0>)
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	4a75      	ldr	r2, [pc, #468]	@ (8005950 <HAL_RCC_OscConfig+0x4b0>)
 800577c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005780:	6013      	str	r3, [r2, #0]
 8005782:	f7fe fccb 	bl	800411c <HAL_GetTick>
 8005786:	6138      	str	r0, [r7, #16]
 8005788:	e008      	b.n	800579c <HAL_RCC_OscConfig+0x2fc>
 800578a:	f7fe fcc7 	bl	800411c <HAL_GetTick>
 800578e:	4602      	mov	r2, r0
 8005790:	693b      	ldr	r3, [r7, #16]
 8005792:	1ad3      	subs	r3, r2, r3
 8005794:	2b02      	cmp	r3, #2
 8005796:	d901      	bls.n	800579c <HAL_RCC_OscConfig+0x2fc>
 8005798:	2303      	movs	r3, #3
 800579a:	e118      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 800579c:	4b6c      	ldr	r3, [pc, #432]	@ (8005950 <HAL_RCC_OscConfig+0x4b0>)
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80057a4:	2b00      	cmp	r3, #0
 80057a6:	d0f0      	beq.n	800578a <HAL_RCC_OscConfig+0x2ea>
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	689b      	ldr	r3, [r3, #8]
 80057ac:	2b01      	cmp	r3, #1
 80057ae:	d106      	bne.n	80057be <HAL_RCC_OscConfig+0x31e>
 80057b0:	4b66      	ldr	r3, [pc, #408]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057b2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057b4:	4a65      	ldr	r2, [pc, #404]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057b6:	f043 0301 	orr.w	r3, r3, #1
 80057ba:	6713      	str	r3, [r2, #112]	@ 0x70
 80057bc:	e01c      	b.n	80057f8 <HAL_RCC_OscConfig+0x358>
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	689b      	ldr	r3, [r3, #8]
 80057c2:	2b05      	cmp	r3, #5
 80057c4:	d10c      	bne.n	80057e0 <HAL_RCC_OscConfig+0x340>
 80057c6:	4b61      	ldr	r3, [pc, #388]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057c8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057ca:	4a60      	ldr	r2, [pc, #384]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057cc:	f043 0304 	orr.w	r3, r3, #4
 80057d0:	6713      	str	r3, [r2, #112]	@ 0x70
 80057d2:	4b5e      	ldr	r3, [pc, #376]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057d4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057d6:	4a5d      	ldr	r2, [pc, #372]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057d8:	f043 0301 	orr.w	r3, r3, #1
 80057dc:	6713      	str	r3, [r2, #112]	@ 0x70
 80057de:	e00b      	b.n	80057f8 <HAL_RCC_OscConfig+0x358>
 80057e0:	4b5a      	ldr	r3, [pc, #360]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057e2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057e4:	4a59      	ldr	r2, [pc, #356]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057e6:	f023 0301 	bic.w	r3, r3, #1
 80057ea:	6713      	str	r3, [r2, #112]	@ 0x70
 80057ec:	4b57      	ldr	r3, [pc, #348]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057ee:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057f0:	4a56      	ldr	r2, [pc, #344]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80057f2:	f023 0304 	bic.w	r3, r3, #4
 80057f6:	6713      	str	r3, [r2, #112]	@ 0x70
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	689b      	ldr	r3, [r3, #8]
 80057fc:	2b00      	cmp	r3, #0
 80057fe:	d015      	beq.n	800582c <HAL_RCC_OscConfig+0x38c>
 8005800:	f7fe fc8c 	bl	800411c <HAL_GetTick>
 8005804:	6138      	str	r0, [r7, #16]
 8005806:	e00a      	b.n	800581e <HAL_RCC_OscConfig+0x37e>
 8005808:	f7fe fc88 	bl	800411c <HAL_GetTick>
 800580c:	4602      	mov	r2, r0
 800580e:	693b      	ldr	r3, [r7, #16]
 8005810:	1ad3      	subs	r3, r2, r3
 8005812:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005816:	4293      	cmp	r3, r2
 8005818:	d901      	bls.n	800581e <HAL_RCC_OscConfig+0x37e>
 800581a:	2303      	movs	r3, #3
 800581c:	e0d7      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 800581e:	4b4b      	ldr	r3, [pc, #300]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005820:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005822:	f003 0302 	and.w	r3, r3, #2
 8005826:	2b00      	cmp	r3, #0
 8005828:	d0ee      	beq.n	8005808 <HAL_RCC_OscConfig+0x368>
 800582a:	e014      	b.n	8005856 <HAL_RCC_OscConfig+0x3b6>
 800582c:	f7fe fc76 	bl	800411c <HAL_GetTick>
 8005830:	6138      	str	r0, [r7, #16]
 8005832:	e00a      	b.n	800584a <HAL_RCC_OscConfig+0x3aa>
 8005834:	f7fe fc72 	bl	800411c <HAL_GetTick>
 8005838:	4602      	mov	r2, r0
 800583a:	693b      	ldr	r3, [r7, #16]
 800583c:	1ad3      	subs	r3, r2, r3
 800583e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005842:	4293      	cmp	r3, r2
 8005844:	d901      	bls.n	800584a <HAL_RCC_OscConfig+0x3aa>
 8005846:	2303      	movs	r3, #3
 8005848:	e0c1      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 800584a:	4b40      	ldr	r3, [pc, #256]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 800584c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800584e:	f003 0302 	and.w	r3, r3, #2
 8005852:	2b00      	cmp	r3, #0
 8005854:	d1ee      	bne.n	8005834 <HAL_RCC_OscConfig+0x394>
 8005856:	7dfb      	ldrb	r3, [r7, #23]
 8005858:	2b01      	cmp	r3, #1
 800585a:	d105      	bne.n	8005868 <HAL_RCC_OscConfig+0x3c8>
 800585c:	4b3b      	ldr	r3, [pc, #236]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 800585e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005860:	4a3a      	ldr	r2, [pc, #232]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005862:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005866:	6413      	str	r3, [r2, #64]	@ 0x40
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	699b      	ldr	r3, [r3, #24]
 800586c:	2b00      	cmp	r3, #0
 800586e:	f000 80ad 	beq.w	80059cc <HAL_RCC_OscConfig+0x52c>
 8005872:	4b36      	ldr	r3, [pc, #216]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005874:	689b      	ldr	r3, [r3, #8]
 8005876:	f003 030c 	and.w	r3, r3, #12
 800587a:	2b08      	cmp	r3, #8
 800587c:	d060      	beq.n	8005940 <HAL_RCC_OscConfig+0x4a0>
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	699b      	ldr	r3, [r3, #24]
 8005882:	2b02      	cmp	r3, #2
 8005884:	d145      	bne.n	8005912 <HAL_RCC_OscConfig+0x472>
 8005886:	4b33      	ldr	r3, [pc, #204]	@ (8005954 <HAL_RCC_OscConfig+0x4b4>)
 8005888:	2200      	movs	r2, #0
 800588a:	601a      	str	r2, [r3, #0]
 800588c:	f7fe fc46 	bl	800411c <HAL_GetTick>
 8005890:	6138      	str	r0, [r7, #16]
 8005892:	e008      	b.n	80058a6 <HAL_RCC_OscConfig+0x406>
 8005894:	f7fe fc42 	bl	800411c <HAL_GetTick>
 8005898:	4602      	mov	r2, r0
 800589a:	693b      	ldr	r3, [r7, #16]
 800589c:	1ad3      	subs	r3, r2, r3
 800589e:	2b02      	cmp	r3, #2
 80058a0:	d901      	bls.n	80058a6 <HAL_RCC_OscConfig+0x406>
 80058a2:	2303      	movs	r3, #3
 80058a4:	e093      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 80058a6:	4b29      	ldr	r3, [pc, #164]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80058ae:	2b00      	cmp	r3, #0
 80058b0:	d1f0      	bne.n	8005894 <HAL_RCC_OscConfig+0x3f4>
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	69da      	ldr	r2, [r3, #28]
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	6a1b      	ldr	r3, [r3, #32]
 80058ba:	431a      	orrs	r2, r3
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058c0:	019b      	lsls	r3, r3, #6
 80058c2:	431a      	orrs	r2, r3
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80058c8:	085b      	lsrs	r3, r3, #1
 80058ca:	3b01      	subs	r3, #1
 80058cc:	041b      	lsls	r3, r3, #16
 80058ce:	431a      	orrs	r2, r3
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80058d4:	061b      	lsls	r3, r3, #24
 80058d6:	431a      	orrs	r2, r3
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058dc:	071b      	lsls	r3, r3, #28
 80058de:	491b      	ldr	r1, [pc, #108]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 80058e0:	4313      	orrs	r3, r2
 80058e2:	604b      	str	r3, [r1, #4]
 80058e4:	4b1b      	ldr	r3, [pc, #108]	@ (8005954 <HAL_RCC_OscConfig+0x4b4>)
 80058e6:	2201      	movs	r2, #1
 80058e8:	601a      	str	r2, [r3, #0]
 80058ea:	f7fe fc17 	bl	800411c <HAL_GetTick>
 80058ee:	6138      	str	r0, [r7, #16]
 80058f0:	e008      	b.n	8005904 <HAL_RCC_OscConfig+0x464>
 80058f2:	f7fe fc13 	bl	800411c <HAL_GetTick>
 80058f6:	4602      	mov	r2, r0
 80058f8:	693b      	ldr	r3, [r7, #16]
 80058fa:	1ad3      	subs	r3, r2, r3
 80058fc:	2b02      	cmp	r3, #2
 80058fe:	d901      	bls.n	8005904 <HAL_RCC_OscConfig+0x464>
 8005900:	2303      	movs	r3, #3
 8005902:	e064      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 8005904:	4b11      	ldr	r3, [pc, #68]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800590c:	2b00      	cmp	r3, #0
 800590e:	d0f0      	beq.n	80058f2 <HAL_RCC_OscConfig+0x452>
 8005910:	e05c      	b.n	80059cc <HAL_RCC_OscConfig+0x52c>
 8005912:	4b10      	ldr	r3, [pc, #64]	@ (8005954 <HAL_RCC_OscConfig+0x4b4>)
 8005914:	2200      	movs	r2, #0
 8005916:	601a      	str	r2, [r3, #0]
 8005918:	f7fe fc00 	bl	800411c <HAL_GetTick>
 800591c:	6138      	str	r0, [r7, #16]
 800591e:	e008      	b.n	8005932 <HAL_RCC_OscConfig+0x492>
 8005920:	f7fe fbfc 	bl	800411c <HAL_GetTick>
 8005924:	4602      	mov	r2, r0
 8005926:	693b      	ldr	r3, [r7, #16]
 8005928:	1ad3      	subs	r3, r2, r3
 800592a:	2b02      	cmp	r3, #2
 800592c:	d901      	bls.n	8005932 <HAL_RCC_OscConfig+0x492>
 800592e:	2303      	movs	r3, #3
 8005930:	e04d      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 8005932:	4b06      	ldr	r3, [pc, #24]	@ (800594c <HAL_RCC_OscConfig+0x4ac>)
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800593a:	2b00      	cmp	r3, #0
 800593c:	d1f0      	bne.n	8005920 <HAL_RCC_OscConfig+0x480>
 800593e:	e045      	b.n	80059cc <HAL_RCC_OscConfig+0x52c>
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	699b      	ldr	r3, [r3, #24]
 8005944:	2b01      	cmp	r3, #1
 8005946:	d107      	bne.n	8005958 <HAL_RCC_OscConfig+0x4b8>
 8005948:	2301      	movs	r3, #1
 800594a:	e040      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 800594c:	40023800 	.word	0x40023800
 8005950:	40007000 	.word	0x40007000
 8005954:	42470060 	.word	0x42470060
 8005958:	4b1f      	ldr	r3, [pc, #124]	@ (80059d8 <HAL_RCC_OscConfig+0x538>)
 800595a:	685b      	ldr	r3, [r3, #4]
 800595c:	60fb      	str	r3, [r7, #12]
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	699b      	ldr	r3, [r3, #24]
 8005962:	2b01      	cmp	r3, #1
 8005964:	d030      	beq.n	80059c8 <HAL_RCC_OscConfig+0x528>
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	69db      	ldr	r3, [r3, #28]
 8005970:	429a      	cmp	r2, r3
 8005972:	d129      	bne.n	80059c8 <HAL_RCC_OscConfig+0x528>
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	6a1b      	ldr	r3, [r3, #32]
 800597e:	429a      	cmp	r2, r3
 8005980:	d122      	bne.n	80059c8 <HAL_RCC_OscConfig+0x528>
 8005982:	68fa      	ldr	r2, [r7, #12]
 8005984:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005988:	4013      	ands	r3, r2
 800598a:	687a      	ldr	r2, [r7, #4]
 800598c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800598e:	0192      	lsls	r2, r2, #6
 8005990:	4293      	cmp	r3, r2
 8005992:	d119      	bne.n	80059c8 <HAL_RCC_OscConfig+0x528>
 8005994:	68fb      	ldr	r3, [r7, #12]
 8005996:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800599e:	085b      	lsrs	r3, r3, #1
 80059a0:	3b01      	subs	r3, #1
 80059a2:	041b      	lsls	r3, r3, #16
 80059a4:	429a      	cmp	r2, r3
 80059a6:	d10f      	bne.n	80059c8 <HAL_RCC_OscConfig+0x528>
 80059a8:	68fb      	ldr	r3, [r7, #12]
 80059aa:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80059ae:	687b      	ldr	r3, [r7, #4]
 80059b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059b2:	061b      	lsls	r3, r3, #24
 80059b4:	429a      	cmp	r2, r3
 80059b6:	d107      	bne.n	80059c8 <HAL_RCC_OscConfig+0x528>
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80059c2:	071b      	lsls	r3, r3, #28
 80059c4:	429a      	cmp	r2, r3
 80059c6:	d001      	beq.n	80059cc <HAL_RCC_OscConfig+0x52c>
 80059c8:	2301      	movs	r3, #1
 80059ca:	e000      	b.n	80059ce <HAL_RCC_OscConfig+0x52e>
 80059cc:	2300      	movs	r3, #0
 80059ce:	4618      	mov	r0, r3
 80059d0:	3718      	adds	r7, #24
 80059d2:	46bd      	mov	sp, r7
 80059d4:	bd80      	pop	{r7, pc}
 80059d6:	bf00      	nop
 80059d8:	40023800 	.word	0x40023800

080059dc <HAL_SPI_Init>:
 80059dc:	b580      	push	{r7, lr}
 80059de:	b082      	sub	sp, #8
 80059e0:	af00      	add	r7, sp, #0
 80059e2:	6078      	str	r0, [r7, #4]
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	2b00      	cmp	r3, #0
 80059e8:	d101      	bne.n	80059ee <HAL_SPI_Init+0x12>
 80059ea:	2301      	movs	r3, #1
 80059ec:	e07b      	b.n	8005ae6 <HAL_SPI_Init+0x10a>
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80059f2:	2b00      	cmp	r3, #0
 80059f4:	d108      	bne.n	8005a08 <HAL_SPI_Init+0x2c>
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	685b      	ldr	r3, [r3, #4]
 80059fa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80059fe:	d009      	beq.n	8005a14 <HAL_SPI_Init+0x38>
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	2200      	movs	r2, #0
 8005a04:	61da      	str	r2, [r3, #28]
 8005a06:	e005      	b.n	8005a14 <HAL_SPI_Init+0x38>
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	2200      	movs	r2, #0
 8005a0c:	611a      	str	r2, [r3, #16]
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	2200      	movs	r2, #0
 8005a12:	615a      	str	r2, [r3, #20]
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	2200      	movs	r2, #0
 8005a18:	629a      	str	r2, [r3, #40]	@ 0x28
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005a20:	b2db      	uxtb	r3, r3
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	d106      	bne.n	8005a34 <HAL_SPI_Init+0x58>
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	2200      	movs	r2, #0
 8005a2a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005a2e:	6878      	ldr	r0, [r7, #4]
 8005a30:	f7fe f8ac 	bl	8003b8c <HAL_SPI_MspInit>
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	2202      	movs	r2, #2
 8005a38:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	681a      	ldr	r2, [r3, #0]
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005a4a:	601a      	str	r2, [r3, #0]
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	685b      	ldr	r3, [r3, #4]
 8005a50:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	689b      	ldr	r3, [r3, #8]
 8005a58:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8005a5c:	431a      	orrs	r2, r3
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	68db      	ldr	r3, [r3, #12]
 8005a62:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005a66:	431a      	orrs	r2, r3
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	691b      	ldr	r3, [r3, #16]
 8005a6c:	f003 0302 	and.w	r3, r3, #2
 8005a70:	431a      	orrs	r2, r3
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	695b      	ldr	r3, [r3, #20]
 8005a76:	f003 0301 	and.w	r3, r3, #1
 8005a7a:	431a      	orrs	r2, r3
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	699b      	ldr	r3, [r3, #24]
 8005a80:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005a84:	431a      	orrs	r2, r3
 8005a86:	687b      	ldr	r3, [r7, #4]
 8005a88:	69db      	ldr	r3, [r3, #28]
 8005a8a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005a8e:	431a      	orrs	r2, r3
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	6a1b      	ldr	r3, [r3, #32]
 8005a94:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005a98:	ea42 0103 	orr.w	r1, r2, r3
 8005a9c:	687b      	ldr	r3, [r7, #4]
 8005a9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005aa0:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	681b      	ldr	r3, [r3, #0]
 8005aa8:	430a      	orrs	r2, r1
 8005aaa:	601a      	str	r2, [r3, #0]
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	699b      	ldr	r3, [r3, #24]
 8005ab0:	0c1b      	lsrs	r3, r3, #16
 8005ab2:	f003 0104 	and.w	r1, r3, #4
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005aba:	f003 0210 	and.w	r2, r3, #16
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	430a      	orrs	r2, r1
 8005ac4:	605a      	str	r2, [r3, #4]
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	69da      	ldr	r2, [r3, #28]
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005ad4:	61da      	str	r2, [r3, #28]
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	2200      	movs	r2, #0
 8005ada:	655a      	str	r2, [r3, #84]	@ 0x54
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	2201      	movs	r2, #1
 8005ae0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005ae4:	2300      	movs	r3, #0
 8005ae6:	4618      	mov	r0, r3
 8005ae8:	3708      	adds	r7, #8
 8005aea:	46bd      	mov	sp, r7
 8005aec:	bd80      	pop	{r7, pc}

08005aee <HAL_SPI_Transmit>:
 8005aee:	b580      	push	{r7, lr}
 8005af0:	b088      	sub	sp, #32
 8005af2:	af00      	add	r7, sp, #0
 8005af4:	60f8      	str	r0, [r7, #12]
 8005af6:	60b9      	str	r1, [r7, #8]
 8005af8:	603b      	str	r3, [r7, #0]
 8005afa:	4613      	mov	r3, r2
 8005afc:	80fb      	strh	r3, [r7, #6]
 8005afe:	f7fe fb0d 	bl	800411c <HAL_GetTick>
 8005b02:	61f8      	str	r0, [r7, #28]
 8005b04:	88fb      	ldrh	r3, [r7, #6]
 8005b06:	837b      	strh	r3, [r7, #26]
 8005b08:	68fb      	ldr	r3, [r7, #12]
 8005b0a:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005b0e:	b2db      	uxtb	r3, r3
 8005b10:	2b01      	cmp	r3, #1
 8005b12:	d001      	beq.n	8005b18 <HAL_SPI_Transmit+0x2a>
 8005b14:	2302      	movs	r3, #2
 8005b16:	e12a      	b.n	8005d6e <HAL_SPI_Transmit+0x280>
 8005b18:	68bb      	ldr	r3, [r7, #8]
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	d002      	beq.n	8005b24 <HAL_SPI_Transmit+0x36>
 8005b1e:	88fb      	ldrh	r3, [r7, #6]
 8005b20:	2b00      	cmp	r3, #0
 8005b22:	d101      	bne.n	8005b28 <HAL_SPI_Transmit+0x3a>
 8005b24:	2301      	movs	r3, #1
 8005b26:	e122      	b.n	8005d6e <HAL_SPI_Transmit+0x280>
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005b2e:	2b01      	cmp	r3, #1
 8005b30:	d101      	bne.n	8005b36 <HAL_SPI_Transmit+0x48>
 8005b32:	2302      	movs	r3, #2
 8005b34:	e11b      	b.n	8005d6e <HAL_SPI_Transmit+0x280>
 8005b36:	68fb      	ldr	r3, [r7, #12]
 8005b38:	2201      	movs	r2, #1
 8005b3a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005b3e:	68fb      	ldr	r3, [r7, #12]
 8005b40:	2203      	movs	r2, #3
 8005b42:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	2200      	movs	r2, #0
 8005b4a:	655a      	str	r2, [r3, #84]	@ 0x54
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	68ba      	ldr	r2, [r7, #8]
 8005b50:	631a      	str	r2, [r3, #48]	@ 0x30
 8005b52:	68fb      	ldr	r3, [r7, #12]
 8005b54:	88fa      	ldrh	r2, [r7, #6]
 8005b56:	869a      	strh	r2, [r3, #52]	@ 0x34
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	88fa      	ldrh	r2, [r7, #6]
 8005b5c:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005b5e:	68fb      	ldr	r3, [r7, #12]
 8005b60:	2200      	movs	r2, #0
 8005b62:	639a      	str	r2, [r3, #56]	@ 0x38
 8005b64:	68fb      	ldr	r3, [r7, #12]
 8005b66:	2200      	movs	r2, #0
 8005b68:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	2200      	movs	r2, #0
 8005b6e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	2200      	movs	r2, #0
 8005b74:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b76:	68fb      	ldr	r3, [r7, #12]
 8005b78:	2200      	movs	r2, #0
 8005b7a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b7c:	68fb      	ldr	r3, [r7, #12]
 8005b7e:	689b      	ldr	r3, [r3, #8]
 8005b80:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005b84:	d10f      	bne.n	8005ba6 <HAL_SPI_Transmit+0xb8>
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	681a      	ldr	r2, [r3, #0]
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005b94:	601a      	str	r2, [r3, #0]
 8005b96:	68fb      	ldr	r3, [r7, #12]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	681a      	ldr	r2, [r3, #0]
 8005b9c:	68fb      	ldr	r3, [r7, #12]
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005ba4:	601a      	str	r2, [r3, #0]
 8005ba6:	68fb      	ldr	r3, [r7, #12]
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005bb0:	2b40      	cmp	r3, #64	@ 0x40
 8005bb2:	d007      	beq.n	8005bc4 <HAL_SPI_Transmit+0xd6>
 8005bb4:	68fb      	ldr	r3, [r7, #12]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	681a      	ldr	r2, [r3, #0]
 8005bba:	68fb      	ldr	r3, [r7, #12]
 8005bbc:	681b      	ldr	r3, [r3, #0]
 8005bbe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005bc2:	601a      	str	r2, [r3, #0]
 8005bc4:	68fb      	ldr	r3, [r7, #12]
 8005bc6:	68db      	ldr	r3, [r3, #12]
 8005bc8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005bcc:	d152      	bne.n	8005c74 <HAL_SPI_Transmit+0x186>
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	685b      	ldr	r3, [r3, #4]
 8005bd2:	2b00      	cmp	r3, #0
 8005bd4:	d002      	beq.n	8005bdc <HAL_SPI_Transmit+0xee>
 8005bd6:	8b7b      	ldrh	r3, [r7, #26]
 8005bd8:	2b01      	cmp	r3, #1
 8005bda:	d145      	bne.n	8005c68 <HAL_SPI_Transmit+0x17a>
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005be0:	881a      	ldrh	r2, [r3, #0]
 8005be2:	68fb      	ldr	r3, [r7, #12]
 8005be4:	681b      	ldr	r3, [r3, #0]
 8005be6:	60da      	str	r2, [r3, #12]
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005bec:	1c9a      	adds	r2, r3, #2
 8005bee:	68fb      	ldr	r3, [r7, #12]
 8005bf0:	631a      	str	r2, [r3, #48]	@ 0x30
 8005bf2:	68fb      	ldr	r3, [r7, #12]
 8005bf4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005bf6:	b29b      	uxth	r3, r3
 8005bf8:	3b01      	subs	r3, #1
 8005bfa:	b29a      	uxth	r2, r3
 8005bfc:	68fb      	ldr	r3, [r7, #12]
 8005bfe:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005c00:	e032      	b.n	8005c68 <HAL_SPI_Transmit+0x17a>
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	681b      	ldr	r3, [r3, #0]
 8005c06:	689b      	ldr	r3, [r3, #8]
 8005c08:	f003 0302 	and.w	r3, r3, #2
 8005c0c:	2b02      	cmp	r3, #2
 8005c0e:	d112      	bne.n	8005c36 <HAL_SPI_Transmit+0x148>
 8005c10:	68fb      	ldr	r3, [r7, #12]
 8005c12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c14:	881a      	ldrh	r2, [r3, #0]
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	60da      	str	r2, [r3, #12]
 8005c1c:	68fb      	ldr	r3, [r7, #12]
 8005c1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c20:	1c9a      	adds	r2, r3, #2
 8005c22:	68fb      	ldr	r3, [r7, #12]
 8005c24:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c26:	68fb      	ldr	r3, [r7, #12]
 8005c28:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005c2a:	b29b      	uxth	r3, r3
 8005c2c:	3b01      	subs	r3, #1
 8005c2e:	b29a      	uxth	r2, r3
 8005c30:	68fb      	ldr	r3, [r7, #12]
 8005c32:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005c34:	e018      	b.n	8005c68 <HAL_SPI_Transmit+0x17a>
 8005c36:	f7fe fa71 	bl	800411c <HAL_GetTick>
 8005c3a:	4602      	mov	r2, r0
 8005c3c:	69fb      	ldr	r3, [r7, #28]
 8005c3e:	1ad3      	subs	r3, r2, r3
 8005c40:	683a      	ldr	r2, [r7, #0]
 8005c42:	429a      	cmp	r2, r3
 8005c44:	d803      	bhi.n	8005c4e <HAL_SPI_Transmit+0x160>
 8005c46:	683b      	ldr	r3, [r7, #0]
 8005c48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005c4c:	d102      	bne.n	8005c54 <HAL_SPI_Transmit+0x166>
 8005c4e:	683b      	ldr	r3, [r7, #0]
 8005c50:	2b00      	cmp	r3, #0
 8005c52:	d109      	bne.n	8005c68 <HAL_SPI_Transmit+0x17a>
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	2201      	movs	r2, #1
 8005c58:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005c5c:	68fb      	ldr	r3, [r7, #12]
 8005c5e:	2200      	movs	r2, #0
 8005c60:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005c64:	2303      	movs	r3, #3
 8005c66:	e082      	b.n	8005d6e <HAL_SPI_Transmit+0x280>
 8005c68:	68fb      	ldr	r3, [r7, #12]
 8005c6a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005c6c:	b29b      	uxth	r3, r3
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d1c7      	bne.n	8005c02 <HAL_SPI_Transmit+0x114>
 8005c72:	e053      	b.n	8005d1c <HAL_SPI_Transmit+0x22e>
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	685b      	ldr	r3, [r3, #4]
 8005c78:	2b00      	cmp	r3, #0
 8005c7a:	d002      	beq.n	8005c82 <HAL_SPI_Transmit+0x194>
 8005c7c:	8b7b      	ldrh	r3, [r7, #26]
 8005c7e:	2b01      	cmp	r3, #1
 8005c80:	d147      	bne.n	8005d12 <HAL_SPI_Transmit+0x224>
 8005c82:	68fb      	ldr	r3, [r7, #12]
 8005c84:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	330c      	adds	r3, #12
 8005c8c:	7812      	ldrb	r2, [r2, #0]
 8005c8e:	701a      	strb	r2, [r3, #0]
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c94:	1c5a      	adds	r2, r3, #1
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c9a:	68fb      	ldr	r3, [r7, #12]
 8005c9c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005c9e:	b29b      	uxth	r3, r3
 8005ca0:	3b01      	subs	r3, #1
 8005ca2:	b29a      	uxth	r2, r3
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005ca8:	e033      	b.n	8005d12 <HAL_SPI_Transmit+0x224>
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	689b      	ldr	r3, [r3, #8]
 8005cb0:	f003 0302 	and.w	r3, r3, #2
 8005cb4:	2b02      	cmp	r3, #2
 8005cb6:	d113      	bne.n	8005ce0 <HAL_SPI_Transmit+0x1f2>
 8005cb8:	68fb      	ldr	r3, [r7, #12]
 8005cba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005cbc:	68fb      	ldr	r3, [r7, #12]
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	330c      	adds	r3, #12
 8005cc2:	7812      	ldrb	r2, [r2, #0]
 8005cc4:	701a      	strb	r2, [r3, #0]
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005cca:	1c5a      	adds	r2, r3, #1
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	631a      	str	r2, [r3, #48]	@ 0x30
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005cd4:	b29b      	uxth	r3, r3
 8005cd6:	3b01      	subs	r3, #1
 8005cd8:	b29a      	uxth	r2, r3
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005cde:	e018      	b.n	8005d12 <HAL_SPI_Transmit+0x224>
 8005ce0:	f7fe fa1c 	bl	800411c <HAL_GetTick>
 8005ce4:	4602      	mov	r2, r0
 8005ce6:	69fb      	ldr	r3, [r7, #28]
 8005ce8:	1ad3      	subs	r3, r2, r3
 8005cea:	683a      	ldr	r2, [r7, #0]
 8005cec:	429a      	cmp	r2, r3
 8005cee:	d803      	bhi.n	8005cf8 <HAL_SPI_Transmit+0x20a>
 8005cf0:	683b      	ldr	r3, [r7, #0]
 8005cf2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005cf6:	d102      	bne.n	8005cfe <HAL_SPI_Transmit+0x210>
 8005cf8:	683b      	ldr	r3, [r7, #0]
 8005cfa:	2b00      	cmp	r3, #0
 8005cfc:	d109      	bne.n	8005d12 <HAL_SPI_Transmit+0x224>
 8005cfe:	68fb      	ldr	r3, [r7, #12]
 8005d00:	2201      	movs	r2, #1
 8005d02:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005d06:	68fb      	ldr	r3, [r7, #12]
 8005d08:	2200      	movs	r2, #0
 8005d0a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005d0e:	2303      	movs	r3, #3
 8005d10:	e02d      	b.n	8005d6e <HAL_SPI_Transmit+0x280>
 8005d12:	68fb      	ldr	r3, [r7, #12]
 8005d14:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005d16:	b29b      	uxth	r3, r3
 8005d18:	2b00      	cmp	r3, #0
 8005d1a:	d1c6      	bne.n	8005caa <HAL_SPI_Transmit+0x1bc>
 8005d1c:	69fa      	ldr	r2, [r7, #28]
 8005d1e:	6839      	ldr	r1, [r7, #0]
 8005d20:	68f8      	ldr	r0, [r7, #12]
 8005d22:	f000 fa59 	bl	80061d8 <SPI_EndRxTxTransaction>
 8005d26:	4603      	mov	r3, r0
 8005d28:	2b00      	cmp	r3, #0
 8005d2a:	d002      	beq.n	8005d32 <HAL_SPI_Transmit+0x244>
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	2220      	movs	r2, #32
 8005d30:	655a      	str	r2, [r3, #84]	@ 0x54
 8005d32:	68fb      	ldr	r3, [r7, #12]
 8005d34:	689b      	ldr	r3, [r3, #8]
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	d10a      	bne.n	8005d50 <HAL_SPI_Transmit+0x262>
 8005d3a:	2300      	movs	r3, #0
 8005d3c:	617b      	str	r3, [r7, #20]
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	68db      	ldr	r3, [r3, #12]
 8005d44:	617b      	str	r3, [r7, #20]
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	689b      	ldr	r3, [r3, #8]
 8005d4c:	617b      	str	r3, [r7, #20]
 8005d4e:	697b      	ldr	r3, [r7, #20]
 8005d50:	68fb      	ldr	r3, [r7, #12]
 8005d52:	2201      	movs	r2, #1
 8005d54:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005d58:	68fb      	ldr	r3, [r7, #12]
 8005d5a:	2200      	movs	r2, #0
 8005d5c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005d60:	68fb      	ldr	r3, [r7, #12]
 8005d62:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d001      	beq.n	8005d6c <HAL_SPI_Transmit+0x27e>
 8005d68:	2301      	movs	r3, #1
 8005d6a:	e000      	b.n	8005d6e <HAL_SPI_Transmit+0x280>
 8005d6c:	2300      	movs	r3, #0
 8005d6e:	4618      	mov	r0, r3
 8005d70:	3720      	adds	r7, #32
 8005d72:	46bd      	mov	sp, r7
 8005d74:	bd80      	pop	{r7, pc}

08005d76 <HAL_SPI_TransmitReceive>:
 8005d76:	b580      	push	{r7, lr}
 8005d78:	b08a      	sub	sp, #40	@ 0x28
 8005d7a:	af00      	add	r7, sp, #0
 8005d7c:	60f8      	str	r0, [r7, #12]
 8005d7e:	60b9      	str	r1, [r7, #8]
 8005d80:	607a      	str	r2, [r7, #4]
 8005d82:	807b      	strh	r3, [r7, #2]
 8005d84:	2301      	movs	r3, #1
 8005d86:	627b      	str	r3, [r7, #36]	@ 0x24
 8005d88:	f7fe f9c8 	bl	800411c <HAL_GetTick>
 8005d8c:	6238      	str	r0, [r7, #32]
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005d94:	77fb      	strb	r3, [r7, #31]
 8005d96:	68fb      	ldr	r3, [r7, #12]
 8005d98:	685b      	ldr	r3, [r3, #4]
 8005d9a:	61bb      	str	r3, [r7, #24]
 8005d9c:	887b      	ldrh	r3, [r7, #2]
 8005d9e:	82fb      	strh	r3, [r7, #22]
 8005da0:	7ffb      	ldrb	r3, [r7, #31]
 8005da2:	2b01      	cmp	r3, #1
 8005da4:	d00c      	beq.n	8005dc0 <HAL_SPI_TransmitReceive+0x4a>
 8005da6:	69bb      	ldr	r3, [r7, #24]
 8005da8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005dac:	d106      	bne.n	8005dbc <HAL_SPI_TransmitReceive+0x46>
 8005dae:	68fb      	ldr	r3, [r7, #12]
 8005db0:	689b      	ldr	r3, [r3, #8]
 8005db2:	2b00      	cmp	r3, #0
 8005db4:	d102      	bne.n	8005dbc <HAL_SPI_TransmitReceive+0x46>
 8005db6:	7ffb      	ldrb	r3, [r7, #31]
 8005db8:	2b04      	cmp	r3, #4
 8005dba:	d001      	beq.n	8005dc0 <HAL_SPI_TransmitReceive+0x4a>
 8005dbc:	2302      	movs	r3, #2
 8005dbe:	e17f      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 8005dc0:	68bb      	ldr	r3, [r7, #8]
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	d005      	beq.n	8005dd2 <HAL_SPI_TransmitReceive+0x5c>
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d002      	beq.n	8005dd2 <HAL_SPI_TransmitReceive+0x5c>
 8005dcc:	887b      	ldrh	r3, [r7, #2]
 8005dce:	2b00      	cmp	r3, #0
 8005dd0:	d101      	bne.n	8005dd6 <HAL_SPI_TransmitReceive+0x60>
 8005dd2:	2301      	movs	r3, #1
 8005dd4:	e174      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 8005dd6:	68fb      	ldr	r3, [r7, #12]
 8005dd8:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005ddc:	2b01      	cmp	r3, #1
 8005dde:	d101      	bne.n	8005de4 <HAL_SPI_TransmitReceive+0x6e>
 8005de0:	2302      	movs	r3, #2
 8005de2:	e16d      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	2201      	movs	r2, #1
 8005de8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005df2:	b2db      	uxtb	r3, r3
 8005df4:	2b04      	cmp	r3, #4
 8005df6:	d003      	beq.n	8005e00 <HAL_SPI_TransmitReceive+0x8a>
 8005df8:	68fb      	ldr	r3, [r7, #12]
 8005dfa:	2205      	movs	r2, #5
 8005dfc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005e00:	68fb      	ldr	r3, [r7, #12]
 8005e02:	2200      	movs	r2, #0
 8005e04:	655a      	str	r2, [r3, #84]	@ 0x54
 8005e06:	68fb      	ldr	r3, [r7, #12]
 8005e08:	687a      	ldr	r2, [r7, #4]
 8005e0a:	639a      	str	r2, [r3, #56]	@ 0x38
 8005e0c:	68fb      	ldr	r3, [r7, #12]
 8005e0e:	887a      	ldrh	r2, [r7, #2]
 8005e10:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005e12:	68fb      	ldr	r3, [r7, #12]
 8005e14:	887a      	ldrh	r2, [r7, #2]
 8005e16:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	68ba      	ldr	r2, [r7, #8]
 8005e1c:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	887a      	ldrh	r2, [r7, #2]
 8005e22:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005e24:	68fb      	ldr	r3, [r7, #12]
 8005e26:	887a      	ldrh	r2, [r7, #2]
 8005e28:	869a      	strh	r2, [r3, #52]	@ 0x34
 8005e2a:	68fb      	ldr	r3, [r7, #12]
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005e30:	68fb      	ldr	r3, [r7, #12]
 8005e32:	2200      	movs	r2, #0
 8005e34:	645a      	str	r2, [r3, #68]	@ 0x44
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005e40:	2b40      	cmp	r3, #64	@ 0x40
 8005e42:	d007      	beq.n	8005e54 <HAL_SPI_TransmitReceive+0xde>
 8005e44:	68fb      	ldr	r3, [r7, #12]
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	681a      	ldr	r2, [r3, #0]
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	681b      	ldr	r3, [r3, #0]
 8005e4e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005e52:	601a      	str	r2, [r3, #0]
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	68db      	ldr	r3, [r3, #12]
 8005e58:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005e5c:	d17e      	bne.n	8005f5c <HAL_SPI_TransmitReceive+0x1e6>
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	685b      	ldr	r3, [r3, #4]
 8005e62:	2b00      	cmp	r3, #0
 8005e64:	d002      	beq.n	8005e6c <HAL_SPI_TransmitReceive+0xf6>
 8005e66:	8afb      	ldrh	r3, [r7, #22]
 8005e68:	2b01      	cmp	r3, #1
 8005e6a:	d16c      	bne.n	8005f46 <HAL_SPI_TransmitReceive+0x1d0>
 8005e6c:	68fb      	ldr	r3, [r7, #12]
 8005e6e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005e70:	881a      	ldrh	r2, [r3, #0]
 8005e72:	68fb      	ldr	r3, [r7, #12]
 8005e74:	681b      	ldr	r3, [r3, #0]
 8005e76:	60da      	str	r2, [r3, #12]
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005e7c:	1c9a      	adds	r2, r3, #2
 8005e7e:	68fb      	ldr	r3, [r7, #12]
 8005e80:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e82:	68fb      	ldr	r3, [r7, #12]
 8005e84:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005e86:	b29b      	uxth	r3, r3
 8005e88:	3b01      	subs	r3, #1
 8005e8a:	b29a      	uxth	r2, r3
 8005e8c:	68fb      	ldr	r3, [r7, #12]
 8005e8e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005e90:	e059      	b.n	8005f46 <HAL_SPI_TransmitReceive+0x1d0>
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	681b      	ldr	r3, [r3, #0]
 8005e96:	689b      	ldr	r3, [r3, #8]
 8005e98:	f003 0302 	and.w	r3, r3, #2
 8005e9c:	2b02      	cmp	r3, #2
 8005e9e:	d11b      	bne.n	8005ed8 <HAL_SPI_TransmitReceive+0x162>
 8005ea0:	68fb      	ldr	r3, [r7, #12]
 8005ea2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005ea4:	b29b      	uxth	r3, r3
 8005ea6:	2b00      	cmp	r3, #0
 8005ea8:	d016      	beq.n	8005ed8 <HAL_SPI_TransmitReceive+0x162>
 8005eaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005eac:	2b01      	cmp	r3, #1
 8005eae:	d113      	bne.n	8005ed8 <HAL_SPI_TransmitReceive+0x162>
 8005eb0:	68fb      	ldr	r3, [r7, #12]
 8005eb2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005eb4:	881a      	ldrh	r2, [r3, #0]
 8005eb6:	68fb      	ldr	r3, [r7, #12]
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	60da      	str	r2, [r3, #12]
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ec0:	1c9a      	adds	r2, r3, #2
 8005ec2:	68fb      	ldr	r3, [r7, #12]
 8005ec4:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ec6:	68fb      	ldr	r3, [r7, #12]
 8005ec8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005eca:	b29b      	uxth	r3, r3
 8005ecc:	3b01      	subs	r3, #1
 8005ece:	b29a      	uxth	r2, r3
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005ed4:	2300      	movs	r3, #0
 8005ed6:	627b      	str	r3, [r7, #36]	@ 0x24
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	681b      	ldr	r3, [r3, #0]
 8005edc:	689b      	ldr	r3, [r3, #8]
 8005ede:	f003 0301 	and.w	r3, r3, #1
 8005ee2:	2b01      	cmp	r3, #1
 8005ee4:	d119      	bne.n	8005f1a <HAL_SPI_TransmitReceive+0x1a4>
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005eea:	b29b      	uxth	r3, r3
 8005eec:	2b00      	cmp	r3, #0
 8005eee:	d014      	beq.n	8005f1a <HAL_SPI_TransmitReceive+0x1a4>
 8005ef0:	68fb      	ldr	r3, [r7, #12]
 8005ef2:	681b      	ldr	r3, [r3, #0]
 8005ef4:	68da      	ldr	r2, [r3, #12]
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005efa:	b292      	uxth	r2, r2
 8005efc:	801a      	strh	r2, [r3, #0]
 8005efe:	68fb      	ldr	r3, [r7, #12]
 8005f00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005f02:	1c9a      	adds	r2, r3, #2
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	639a      	str	r2, [r3, #56]	@ 0x38
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005f0c:	b29b      	uxth	r3, r3
 8005f0e:	3b01      	subs	r3, #1
 8005f10:	b29a      	uxth	r2, r3
 8005f12:	68fb      	ldr	r3, [r7, #12]
 8005f14:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005f16:	2301      	movs	r3, #1
 8005f18:	627b      	str	r3, [r7, #36]	@ 0x24
 8005f1a:	f7fe f8ff 	bl	800411c <HAL_GetTick>
 8005f1e:	4602      	mov	r2, r0
 8005f20:	6a3b      	ldr	r3, [r7, #32]
 8005f22:	1ad3      	subs	r3, r2, r3
 8005f24:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005f26:	429a      	cmp	r2, r3
 8005f28:	d80d      	bhi.n	8005f46 <HAL_SPI_TransmitReceive+0x1d0>
 8005f2a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005f2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f30:	d009      	beq.n	8005f46 <HAL_SPI_TransmitReceive+0x1d0>
 8005f32:	68fb      	ldr	r3, [r7, #12]
 8005f34:	2201      	movs	r2, #1
 8005f36:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	2200      	movs	r2, #0
 8005f3e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005f42:	2303      	movs	r3, #3
 8005f44:	e0bc      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f4a:	b29b      	uxth	r3, r3
 8005f4c:	2b00      	cmp	r3, #0
 8005f4e:	d1a0      	bne.n	8005e92 <HAL_SPI_TransmitReceive+0x11c>
 8005f50:	68fb      	ldr	r3, [r7, #12]
 8005f52:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005f54:	b29b      	uxth	r3, r3
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d19b      	bne.n	8005e92 <HAL_SPI_TransmitReceive+0x11c>
 8005f5a:	e082      	b.n	8006062 <HAL_SPI_TransmitReceive+0x2ec>
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	685b      	ldr	r3, [r3, #4]
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d002      	beq.n	8005f6a <HAL_SPI_TransmitReceive+0x1f4>
 8005f64:	8afb      	ldrh	r3, [r7, #22]
 8005f66:	2b01      	cmp	r3, #1
 8005f68:	d171      	bne.n	800604e <HAL_SPI_TransmitReceive+0x2d8>
 8005f6a:	68fb      	ldr	r3, [r7, #12]
 8005f6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005f6e:	68fb      	ldr	r3, [r7, #12]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	330c      	adds	r3, #12
 8005f74:	7812      	ldrb	r2, [r2, #0]
 8005f76:	701a      	strb	r2, [r3, #0]
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f7c:	1c5a      	adds	r2, r3, #1
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	631a      	str	r2, [r3, #48]	@ 0x30
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f86:	b29b      	uxth	r3, r3
 8005f88:	3b01      	subs	r3, #1
 8005f8a:	b29a      	uxth	r2, r3
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005f90:	e05d      	b.n	800604e <HAL_SPI_TransmitReceive+0x2d8>
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	689b      	ldr	r3, [r3, #8]
 8005f98:	f003 0302 	and.w	r3, r3, #2
 8005f9c:	2b02      	cmp	r3, #2
 8005f9e:	d11c      	bne.n	8005fda <HAL_SPI_TransmitReceive+0x264>
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005fa4:	b29b      	uxth	r3, r3
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d017      	beq.n	8005fda <HAL_SPI_TransmitReceive+0x264>
 8005faa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005fac:	2b01      	cmp	r3, #1
 8005fae:	d114      	bne.n	8005fda <HAL_SPI_TransmitReceive+0x264>
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	681b      	ldr	r3, [r3, #0]
 8005fb8:	330c      	adds	r3, #12
 8005fba:	7812      	ldrb	r2, [r2, #0]
 8005fbc:	701a      	strb	r2, [r3, #0]
 8005fbe:	68fb      	ldr	r3, [r7, #12]
 8005fc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005fc2:	1c5a      	adds	r2, r3, #1
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	631a      	str	r2, [r3, #48]	@ 0x30
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005fcc:	b29b      	uxth	r3, r3
 8005fce:	3b01      	subs	r3, #1
 8005fd0:	b29a      	uxth	r2, r3
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005fd6:	2300      	movs	r3, #0
 8005fd8:	627b      	str	r3, [r7, #36]	@ 0x24
 8005fda:	68fb      	ldr	r3, [r7, #12]
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	689b      	ldr	r3, [r3, #8]
 8005fe0:	f003 0301 	and.w	r3, r3, #1
 8005fe4:	2b01      	cmp	r3, #1
 8005fe6:	d119      	bne.n	800601c <HAL_SPI_TransmitReceive+0x2a6>
 8005fe8:	68fb      	ldr	r3, [r7, #12]
 8005fea:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005fec:	b29b      	uxth	r3, r3
 8005fee:	2b00      	cmp	r3, #0
 8005ff0:	d014      	beq.n	800601c <HAL_SPI_TransmitReceive+0x2a6>
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	68da      	ldr	r2, [r3, #12]
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005ffc:	b2d2      	uxtb	r2, r2
 8005ffe:	701a      	strb	r2, [r3, #0]
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006004:	1c5a      	adds	r2, r3, #1
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	639a      	str	r2, [r3, #56]	@ 0x38
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800600e:	b29b      	uxth	r3, r3
 8006010:	3b01      	subs	r3, #1
 8006012:	b29a      	uxth	r2, r3
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006018:	2301      	movs	r3, #1
 800601a:	627b      	str	r3, [r7, #36]	@ 0x24
 800601c:	f7fe f87e 	bl	800411c <HAL_GetTick>
 8006020:	4602      	mov	r2, r0
 8006022:	6a3b      	ldr	r3, [r7, #32]
 8006024:	1ad3      	subs	r3, r2, r3
 8006026:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006028:	429a      	cmp	r2, r3
 800602a:	d803      	bhi.n	8006034 <HAL_SPI_TransmitReceive+0x2be>
 800602c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800602e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006032:	d102      	bne.n	800603a <HAL_SPI_TransmitReceive+0x2c4>
 8006034:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006036:	2b00      	cmp	r3, #0
 8006038:	d109      	bne.n	800604e <HAL_SPI_TransmitReceive+0x2d8>
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	2201      	movs	r2, #1
 800603e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8006042:	68fb      	ldr	r3, [r7, #12]
 8006044:	2200      	movs	r2, #0
 8006046:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800604a:	2303      	movs	r3, #3
 800604c:	e038      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006052:	b29b      	uxth	r3, r3
 8006054:	2b00      	cmp	r3, #0
 8006056:	d19c      	bne.n	8005f92 <HAL_SPI_TransmitReceive+0x21c>
 8006058:	68fb      	ldr	r3, [r7, #12]
 800605a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800605c:	b29b      	uxth	r3, r3
 800605e:	2b00      	cmp	r3, #0
 8006060:	d197      	bne.n	8005f92 <HAL_SPI_TransmitReceive+0x21c>
 8006062:	6a3a      	ldr	r2, [r7, #32]
 8006064:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006066:	68f8      	ldr	r0, [r7, #12]
 8006068:	f000 f8b6 	bl	80061d8 <SPI_EndRxTxTransaction>
 800606c:	4603      	mov	r3, r0
 800606e:	2b00      	cmp	r3, #0
 8006070:	d008      	beq.n	8006084 <HAL_SPI_TransmitReceive+0x30e>
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	2220      	movs	r2, #32
 8006076:	655a      	str	r2, [r3, #84]	@ 0x54
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	2200      	movs	r2, #0
 800607c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8006080:	2301      	movs	r3, #1
 8006082:	e01d      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	689b      	ldr	r3, [r3, #8]
 8006088:	2b00      	cmp	r3, #0
 800608a:	d10a      	bne.n	80060a2 <HAL_SPI_TransmitReceive+0x32c>
 800608c:	2300      	movs	r3, #0
 800608e:	613b      	str	r3, [r7, #16]
 8006090:	68fb      	ldr	r3, [r7, #12]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	68db      	ldr	r3, [r3, #12]
 8006096:	613b      	str	r3, [r7, #16]
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	689b      	ldr	r3, [r3, #8]
 800609e:	613b      	str	r3, [r7, #16]
 80060a0:	693b      	ldr	r3, [r7, #16]
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	2201      	movs	r2, #1
 80060a6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	2200      	movs	r2, #0
 80060ae:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80060b2:	68fb      	ldr	r3, [r7, #12]
 80060b4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	d001      	beq.n	80060be <HAL_SPI_TransmitReceive+0x348>
 80060ba:	2301      	movs	r3, #1
 80060bc:	e000      	b.n	80060c0 <HAL_SPI_TransmitReceive+0x34a>
 80060be:	2300      	movs	r3, #0
 80060c0:	4618      	mov	r0, r3
 80060c2:	3728      	adds	r7, #40	@ 0x28
 80060c4:	46bd      	mov	sp, r7
 80060c6:	bd80      	pop	{r7, pc}

080060c8 <SPI_WaitFlagStateUntilTimeout>:
 80060c8:	b580      	push	{r7, lr}
 80060ca:	b088      	sub	sp, #32
 80060cc:	af00      	add	r7, sp, #0
 80060ce:	60f8      	str	r0, [r7, #12]
 80060d0:	60b9      	str	r1, [r7, #8]
 80060d2:	603b      	str	r3, [r7, #0]
 80060d4:	4613      	mov	r3, r2
 80060d6:	71fb      	strb	r3, [r7, #7]
 80060d8:	f7fe f820 	bl	800411c <HAL_GetTick>
 80060dc:	4602      	mov	r2, r0
 80060de:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80060e0:	1a9b      	subs	r3, r3, r2
 80060e2:	683a      	ldr	r2, [r7, #0]
 80060e4:	4413      	add	r3, r2
 80060e6:	61fb      	str	r3, [r7, #28]
 80060e8:	f7fe f818 	bl	800411c <HAL_GetTick>
 80060ec:	61b8      	str	r0, [r7, #24]
 80060ee:	4b39      	ldr	r3, [pc, #228]	@ (80061d4 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	015b      	lsls	r3, r3, #5
 80060f4:	0d1b      	lsrs	r3, r3, #20
 80060f6:	69fa      	ldr	r2, [r7, #28]
 80060f8:	fb02 f303 	mul.w	r3, r2, r3
 80060fc:	617b      	str	r3, [r7, #20]
 80060fe:	e054      	b.n	80061aa <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006100:	683b      	ldr	r3, [r7, #0]
 8006102:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006106:	d050      	beq.n	80061aa <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006108:	f7fe f808 	bl	800411c <HAL_GetTick>
 800610c:	4602      	mov	r2, r0
 800610e:	69bb      	ldr	r3, [r7, #24]
 8006110:	1ad3      	subs	r3, r2, r3
 8006112:	69fa      	ldr	r2, [r7, #28]
 8006114:	429a      	cmp	r2, r3
 8006116:	d902      	bls.n	800611e <SPI_WaitFlagStateUntilTimeout+0x56>
 8006118:	69fb      	ldr	r3, [r7, #28]
 800611a:	2b00      	cmp	r3, #0
 800611c:	d13d      	bne.n	800619a <SPI_WaitFlagStateUntilTimeout+0xd2>
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	685a      	ldr	r2, [r3, #4]
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800612c:	605a      	str	r2, [r3, #4]
 800612e:	68fb      	ldr	r3, [r7, #12]
 8006130:	685b      	ldr	r3, [r3, #4]
 8006132:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006136:	d111      	bne.n	800615c <SPI_WaitFlagStateUntilTimeout+0x94>
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	689b      	ldr	r3, [r3, #8]
 800613c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006140:	d004      	beq.n	800614c <SPI_WaitFlagStateUntilTimeout+0x84>
 8006142:	68fb      	ldr	r3, [r7, #12]
 8006144:	689b      	ldr	r3, [r3, #8]
 8006146:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800614a:	d107      	bne.n	800615c <SPI_WaitFlagStateUntilTimeout+0x94>
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	681a      	ldr	r2, [r3, #0]
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	681b      	ldr	r3, [r3, #0]
 8006156:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800615a:	601a      	str	r2, [r3, #0]
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006160:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006164:	d10f      	bne.n	8006186 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	681a      	ldr	r2, [r3, #0]
 800616c:	68fb      	ldr	r3, [r7, #12]
 800616e:	681b      	ldr	r3, [r3, #0]
 8006170:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006174:	601a      	str	r2, [r3, #0]
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	681a      	ldr	r2, [r3, #0]
 800617c:	68fb      	ldr	r3, [r7, #12]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006184:	601a      	str	r2, [r3, #0]
 8006186:	68fb      	ldr	r3, [r7, #12]
 8006188:	2201      	movs	r2, #1
 800618a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	2200      	movs	r2, #0
 8006192:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8006196:	2303      	movs	r3, #3
 8006198:	e017      	b.n	80061ca <SPI_WaitFlagStateUntilTimeout+0x102>
 800619a:	697b      	ldr	r3, [r7, #20]
 800619c:	2b00      	cmp	r3, #0
 800619e:	d101      	bne.n	80061a4 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80061a0:	2300      	movs	r3, #0
 80061a2:	61fb      	str	r3, [r7, #28]
 80061a4:	697b      	ldr	r3, [r7, #20]
 80061a6:	3b01      	subs	r3, #1
 80061a8:	617b      	str	r3, [r7, #20]
 80061aa:	68fb      	ldr	r3, [r7, #12]
 80061ac:	681b      	ldr	r3, [r3, #0]
 80061ae:	689a      	ldr	r2, [r3, #8]
 80061b0:	68bb      	ldr	r3, [r7, #8]
 80061b2:	4013      	ands	r3, r2
 80061b4:	68ba      	ldr	r2, [r7, #8]
 80061b6:	429a      	cmp	r2, r3
 80061b8:	bf0c      	ite	eq
 80061ba:	2301      	moveq	r3, #1
 80061bc:	2300      	movne	r3, #0
 80061be:	b2db      	uxtb	r3, r3
 80061c0:	461a      	mov	r2, r3
 80061c2:	79fb      	ldrb	r3, [r7, #7]
 80061c4:	429a      	cmp	r2, r3
 80061c6:	d19b      	bne.n	8006100 <SPI_WaitFlagStateUntilTimeout+0x38>
 80061c8:	2300      	movs	r3, #0
 80061ca:	4618      	mov	r0, r3
 80061cc:	3720      	adds	r7, #32
 80061ce:	46bd      	mov	sp, r7
 80061d0:	bd80      	pop	{r7, pc}
 80061d2:	bf00      	nop
 80061d4:	2000a6b0 	.word	0x2000a6b0

080061d8 <SPI_EndRxTxTransaction>:
 80061d8:	b580      	push	{r7, lr}
 80061da:	b088      	sub	sp, #32
 80061dc:	af02      	add	r7, sp, #8
 80061de:	60f8      	str	r0, [r7, #12]
 80061e0:	60b9      	str	r1, [r7, #8]
 80061e2:	607a      	str	r2, [r7, #4]
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	9300      	str	r3, [sp, #0]
 80061e8:	68bb      	ldr	r3, [r7, #8]
 80061ea:	2201      	movs	r2, #1
 80061ec:	2102      	movs	r1, #2
 80061ee:	68f8      	ldr	r0, [r7, #12]
 80061f0:	f7ff ff6a 	bl	80060c8 <SPI_WaitFlagStateUntilTimeout>
 80061f4:	4603      	mov	r3, r0
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	d007      	beq.n	800620a <SPI_EndRxTxTransaction+0x32>
 80061fa:	68fb      	ldr	r3, [r7, #12]
 80061fc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80061fe:	f043 0220 	orr.w	r2, r3, #32
 8006202:	68fb      	ldr	r3, [r7, #12]
 8006204:	655a      	str	r2, [r3, #84]	@ 0x54
 8006206:	2303      	movs	r3, #3
 8006208:	e032      	b.n	8006270 <SPI_EndRxTxTransaction+0x98>
 800620a:	4b1b      	ldr	r3, [pc, #108]	@ (8006278 <SPI_EndRxTxTransaction+0xa0>)
 800620c:	681b      	ldr	r3, [r3, #0]
 800620e:	4a1b      	ldr	r2, [pc, #108]	@ (800627c <SPI_EndRxTxTransaction+0xa4>)
 8006210:	fba2 2303 	umull	r2, r3, r2, r3
 8006214:	0d5b      	lsrs	r3, r3, #21
 8006216:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800621a:	fb02 f303 	mul.w	r3, r2, r3
 800621e:	617b      	str	r3, [r7, #20]
 8006220:	68fb      	ldr	r3, [r7, #12]
 8006222:	685b      	ldr	r3, [r3, #4]
 8006224:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006228:	d112      	bne.n	8006250 <SPI_EndRxTxTransaction+0x78>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	9300      	str	r3, [sp, #0]
 800622e:	68bb      	ldr	r3, [r7, #8]
 8006230:	2200      	movs	r2, #0
 8006232:	2180      	movs	r1, #128	@ 0x80
 8006234:	68f8      	ldr	r0, [r7, #12]
 8006236:	f7ff ff47 	bl	80060c8 <SPI_WaitFlagStateUntilTimeout>
 800623a:	4603      	mov	r3, r0
 800623c:	2b00      	cmp	r3, #0
 800623e:	d016      	beq.n	800626e <SPI_EndRxTxTransaction+0x96>
 8006240:	68fb      	ldr	r3, [r7, #12]
 8006242:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006244:	f043 0220 	orr.w	r2, r3, #32
 8006248:	68fb      	ldr	r3, [r7, #12]
 800624a:	655a      	str	r2, [r3, #84]	@ 0x54
 800624c:	2303      	movs	r3, #3
 800624e:	e00f      	b.n	8006270 <SPI_EndRxTxTransaction+0x98>
 8006250:	697b      	ldr	r3, [r7, #20]
 8006252:	2b00      	cmp	r3, #0
 8006254:	d00a      	beq.n	800626c <SPI_EndRxTxTransaction+0x94>
 8006256:	697b      	ldr	r3, [r7, #20]
 8006258:	3b01      	subs	r3, #1
 800625a:	617b      	str	r3, [r7, #20]
 800625c:	68fb      	ldr	r3, [r7, #12]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	689b      	ldr	r3, [r3, #8]
 8006262:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006266:	2b80      	cmp	r3, #128	@ 0x80
 8006268:	d0f2      	beq.n	8006250 <SPI_EndRxTxTransaction+0x78>
 800626a:	e000      	b.n	800626e <SPI_EndRxTxTransaction+0x96>
 800626c:	bf00      	nop
 800626e:	2300      	movs	r3, #0
 8006270:	4618      	mov	r0, r3
 8006272:	3718      	adds	r7, #24
 8006274:	46bd      	mov	sp, r7
 8006276:	bd80      	pop	{r7, pc}
 8006278:	2000a6b0 	.word	0x2000a6b0
 800627c:	165e9f81 	.word	0x165e9f81

08006280 <HAL_UART_Init>:
 8006280:	b580      	push	{r7, lr}
 8006282:	b082      	sub	sp, #8
 8006284:	af00      	add	r7, sp, #0
 8006286:	6078      	str	r0, [r7, #4]
 8006288:	687b      	ldr	r3, [r7, #4]
 800628a:	2b00      	cmp	r3, #0
 800628c:	d101      	bne.n	8006292 <HAL_UART_Init+0x12>
 800628e:	2301      	movs	r3, #1
 8006290:	e042      	b.n	8006318 <HAL_UART_Init+0x98>
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006298:	b2db      	uxtb	r3, r3
 800629a:	2b00      	cmp	r3, #0
 800629c:	d106      	bne.n	80062ac <HAL_UART_Init+0x2c>
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	2200      	movs	r2, #0
 80062a2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80062a6:	6878      	ldr	r0, [r7, #4]
 80062a8:	f7fd fcb8 	bl	8003c1c <HAL_UART_MspInit>
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	2224      	movs	r2, #36	@ 0x24
 80062b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80062b4:	687b      	ldr	r3, [r7, #4]
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	68da      	ldr	r2, [r3, #12]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80062c2:	60da      	str	r2, [r3, #12]
 80062c4:	6878      	ldr	r0, [r7, #4]
 80062c6:	f000 ff4f 	bl	8007168 <UART_SetConfig>
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	691a      	ldr	r2, [r3, #16]
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80062d8:	611a      	str	r2, [r3, #16]
 80062da:	687b      	ldr	r3, [r7, #4]
 80062dc:	681b      	ldr	r3, [r3, #0]
 80062de:	695a      	ldr	r2, [r3, #20]
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80062e8:	615a      	str	r2, [r3, #20]
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	68da      	ldr	r2, [r3, #12]
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80062f8:	60da      	str	r2, [r3, #12]
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	2200      	movs	r2, #0
 80062fe:	645a      	str	r2, [r3, #68]	@ 0x44
 8006300:	687b      	ldr	r3, [r7, #4]
 8006302:	2220      	movs	r2, #32
 8006304:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	2220      	movs	r2, #32
 800630c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	2200      	movs	r2, #0
 8006314:	635a      	str	r2, [r3, #52]	@ 0x34
 8006316:	2300      	movs	r3, #0
 8006318:	4618      	mov	r0, r3
 800631a:	3708      	adds	r7, #8
 800631c:	46bd      	mov	sp, r7
 800631e:	bd80      	pop	{r7, pc}

08006320 <HAL_UART_Transmit>:
 8006320:	b580      	push	{r7, lr}
 8006322:	b08a      	sub	sp, #40	@ 0x28
 8006324:	af02      	add	r7, sp, #8
 8006326:	60f8      	str	r0, [r7, #12]
 8006328:	60b9      	str	r1, [r7, #8]
 800632a:	603b      	str	r3, [r7, #0]
 800632c:	4613      	mov	r3, r2
 800632e:	80fb      	strh	r3, [r7, #6]
 8006330:	2300      	movs	r3, #0
 8006332:	617b      	str	r3, [r7, #20]
 8006334:	68fb      	ldr	r3, [r7, #12]
 8006336:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800633a:	b2db      	uxtb	r3, r3
 800633c:	2b20      	cmp	r3, #32
 800633e:	d175      	bne.n	800642c <HAL_UART_Transmit+0x10c>
 8006340:	68bb      	ldr	r3, [r7, #8]
 8006342:	2b00      	cmp	r3, #0
 8006344:	d002      	beq.n	800634c <HAL_UART_Transmit+0x2c>
 8006346:	88fb      	ldrh	r3, [r7, #6]
 8006348:	2b00      	cmp	r3, #0
 800634a:	d101      	bne.n	8006350 <HAL_UART_Transmit+0x30>
 800634c:	2301      	movs	r3, #1
 800634e:	e06e      	b.n	800642e <HAL_UART_Transmit+0x10e>
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	2200      	movs	r2, #0
 8006354:	645a      	str	r2, [r3, #68]	@ 0x44
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	2221      	movs	r2, #33	@ 0x21
 800635a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800635e:	f7fd fedd 	bl	800411c <HAL_GetTick>
 8006362:	6178      	str	r0, [r7, #20]
 8006364:	68fb      	ldr	r3, [r7, #12]
 8006366:	88fa      	ldrh	r2, [r7, #6]
 8006368:	849a      	strh	r2, [r3, #36]	@ 0x24
 800636a:	68fb      	ldr	r3, [r7, #12]
 800636c:	88fa      	ldrh	r2, [r7, #6]
 800636e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006370:	68fb      	ldr	r3, [r7, #12]
 8006372:	689b      	ldr	r3, [r3, #8]
 8006374:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006378:	d108      	bne.n	800638c <HAL_UART_Transmit+0x6c>
 800637a:	68fb      	ldr	r3, [r7, #12]
 800637c:	691b      	ldr	r3, [r3, #16]
 800637e:	2b00      	cmp	r3, #0
 8006380:	d104      	bne.n	800638c <HAL_UART_Transmit+0x6c>
 8006382:	2300      	movs	r3, #0
 8006384:	61fb      	str	r3, [r7, #28]
 8006386:	68bb      	ldr	r3, [r7, #8]
 8006388:	61bb      	str	r3, [r7, #24]
 800638a:	e003      	b.n	8006394 <HAL_UART_Transmit+0x74>
 800638c:	68bb      	ldr	r3, [r7, #8]
 800638e:	61fb      	str	r3, [r7, #28]
 8006390:	2300      	movs	r3, #0
 8006392:	61bb      	str	r3, [r7, #24]
 8006394:	e02e      	b.n	80063f4 <HAL_UART_Transmit+0xd4>
 8006396:	683b      	ldr	r3, [r7, #0]
 8006398:	9300      	str	r3, [sp, #0]
 800639a:	697b      	ldr	r3, [r7, #20]
 800639c:	2200      	movs	r2, #0
 800639e:	2180      	movs	r1, #128	@ 0x80
 80063a0:	68f8      	ldr	r0, [r7, #12]
 80063a2:	f000 fc27 	bl	8006bf4 <UART_WaitOnFlagUntilTimeout>
 80063a6:	4603      	mov	r3, r0
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d005      	beq.n	80063b8 <HAL_UART_Transmit+0x98>
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	2220      	movs	r2, #32
 80063b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80063b4:	2303      	movs	r3, #3
 80063b6:	e03a      	b.n	800642e <HAL_UART_Transmit+0x10e>
 80063b8:	69fb      	ldr	r3, [r7, #28]
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d10b      	bne.n	80063d6 <HAL_UART_Transmit+0xb6>
 80063be:	69bb      	ldr	r3, [r7, #24]
 80063c0:	881b      	ldrh	r3, [r3, #0]
 80063c2:	461a      	mov	r2, r3
 80063c4:	68fb      	ldr	r3, [r7, #12]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80063cc:	605a      	str	r2, [r3, #4]
 80063ce:	69bb      	ldr	r3, [r7, #24]
 80063d0:	3302      	adds	r3, #2
 80063d2:	61bb      	str	r3, [r7, #24]
 80063d4:	e007      	b.n	80063e6 <HAL_UART_Transmit+0xc6>
 80063d6:	69fb      	ldr	r3, [r7, #28]
 80063d8:	781a      	ldrb	r2, [r3, #0]
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	605a      	str	r2, [r3, #4]
 80063e0:	69fb      	ldr	r3, [r7, #28]
 80063e2:	3301      	adds	r3, #1
 80063e4:	61fb      	str	r3, [r7, #28]
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80063ea:	b29b      	uxth	r3, r3
 80063ec:	3b01      	subs	r3, #1
 80063ee:	b29a      	uxth	r2, r3
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80063f8:	b29b      	uxth	r3, r3
 80063fa:	2b00      	cmp	r3, #0
 80063fc:	d1cb      	bne.n	8006396 <HAL_UART_Transmit+0x76>
 80063fe:	683b      	ldr	r3, [r7, #0]
 8006400:	9300      	str	r3, [sp, #0]
 8006402:	697b      	ldr	r3, [r7, #20]
 8006404:	2200      	movs	r2, #0
 8006406:	2140      	movs	r1, #64	@ 0x40
 8006408:	68f8      	ldr	r0, [r7, #12]
 800640a:	f000 fbf3 	bl	8006bf4 <UART_WaitOnFlagUntilTimeout>
 800640e:	4603      	mov	r3, r0
 8006410:	2b00      	cmp	r3, #0
 8006412:	d005      	beq.n	8006420 <HAL_UART_Transmit+0x100>
 8006414:	68fb      	ldr	r3, [r7, #12]
 8006416:	2220      	movs	r2, #32
 8006418:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800641c:	2303      	movs	r3, #3
 800641e:	e006      	b.n	800642e <HAL_UART_Transmit+0x10e>
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	2220      	movs	r2, #32
 8006424:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006428:	2300      	movs	r3, #0
 800642a:	e000      	b.n	800642e <HAL_UART_Transmit+0x10e>
 800642c:	2302      	movs	r3, #2
 800642e:	4618      	mov	r0, r3
 8006430:	3720      	adds	r7, #32
 8006432:	46bd      	mov	sp, r7
 8006434:	bd80      	pop	{r7, pc}

08006436 <HAL_UART_Receive_DMA>:
 8006436:	b580      	push	{r7, lr}
 8006438:	b084      	sub	sp, #16
 800643a:	af00      	add	r7, sp, #0
 800643c:	60f8      	str	r0, [r7, #12]
 800643e:	60b9      	str	r1, [r7, #8]
 8006440:	4613      	mov	r3, r2
 8006442:	80fb      	strh	r3, [r7, #6]
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800644a:	b2db      	uxtb	r3, r3
 800644c:	2b20      	cmp	r3, #32
 800644e:	d112      	bne.n	8006476 <HAL_UART_Receive_DMA+0x40>
 8006450:	68bb      	ldr	r3, [r7, #8]
 8006452:	2b00      	cmp	r3, #0
 8006454:	d002      	beq.n	800645c <HAL_UART_Receive_DMA+0x26>
 8006456:	88fb      	ldrh	r3, [r7, #6]
 8006458:	2b00      	cmp	r3, #0
 800645a:	d101      	bne.n	8006460 <HAL_UART_Receive_DMA+0x2a>
 800645c:	2301      	movs	r3, #1
 800645e:	e00b      	b.n	8006478 <HAL_UART_Receive_DMA+0x42>
 8006460:	68fb      	ldr	r3, [r7, #12]
 8006462:	2200      	movs	r2, #0
 8006464:	631a      	str	r2, [r3, #48]	@ 0x30
 8006466:	88fb      	ldrh	r3, [r7, #6]
 8006468:	461a      	mov	r2, r3
 800646a:	68b9      	ldr	r1, [r7, #8]
 800646c:	68f8      	ldr	r0, [r7, #12]
 800646e:	f000 fc1b 	bl	8006ca8 <UART_Start_Receive_DMA>
 8006472:	4603      	mov	r3, r0
 8006474:	e000      	b.n	8006478 <HAL_UART_Receive_DMA+0x42>
 8006476:	2302      	movs	r3, #2
 8006478:	4618      	mov	r0, r3
 800647a:	3710      	adds	r7, #16
 800647c:	46bd      	mov	sp, r7
 800647e:	bd80      	pop	{r7, pc}

08006480 <HAL_UART_IRQHandler>:
 8006480:	b580      	push	{r7, lr}
 8006482:	b0ba      	sub	sp, #232	@ 0xe8
 8006484:	af00      	add	r7, sp, #0
 8006486:	6078      	str	r0, [r7, #4]
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	681b      	ldr	r3, [r3, #0]
 800648e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	68db      	ldr	r3, [r3, #12]
 8006498:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	695b      	ldr	r3, [r3, #20]
 80064a2:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80064a6:	2300      	movs	r3, #0
 80064a8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80064ac:	2300      	movs	r3, #0
 80064ae:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80064b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80064b6:	f003 030f 	and.w	r3, r3, #15
 80064ba:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80064be:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80064c2:	2b00      	cmp	r3, #0
 80064c4:	d10f      	bne.n	80064e6 <HAL_UART_IRQHandler+0x66>
 80064c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80064ca:	f003 0320 	and.w	r3, r3, #32
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	d009      	beq.n	80064e6 <HAL_UART_IRQHandler+0x66>
 80064d2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80064d6:	f003 0320 	and.w	r3, r3, #32
 80064da:	2b00      	cmp	r3, #0
 80064dc:	d003      	beq.n	80064e6 <HAL_UART_IRQHandler+0x66>
 80064de:	6878      	ldr	r0, [r7, #4]
 80064e0:	f000 fd83 	bl	8006fea <UART_Receive_IT>
 80064e4:	e25b      	b.n	800699e <HAL_UART_IRQHandler+0x51e>
 80064e6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	f000 80de 	beq.w	80066ac <HAL_UART_IRQHandler+0x22c>
 80064f0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80064f4:	f003 0301 	and.w	r3, r3, #1
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	d106      	bne.n	800650a <HAL_UART_IRQHandler+0x8a>
 80064fc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006500:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8006504:	2b00      	cmp	r3, #0
 8006506:	f000 80d1 	beq.w	80066ac <HAL_UART_IRQHandler+0x22c>
 800650a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800650e:	f003 0301 	and.w	r3, r3, #1
 8006512:	2b00      	cmp	r3, #0
 8006514:	d00b      	beq.n	800652e <HAL_UART_IRQHandler+0xae>
 8006516:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800651a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800651e:	2b00      	cmp	r3, #0
 8006520:	d005      	beq.n	800652e <HAL_UART_IRQHandler+0xae>
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006526:	f043 0201 	orr.w	r2, r3, #1
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	645a      	str	r2, [r3, #68]	@ 0x44
 800652e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006532:	f003 0304 	and.w	r3, r3, #4
 8006536:	2b00      	cmp	r3, #0
 8006538:	d00b      	beq.n	8006552 <HAL_UART_IRQHandler+0xd2>
 800653a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800653e:	f003 0301 	and.w	r3, r3, #1
 8006542:	2b00      	cmp	r3, #0
 8006544:	d005      	beq.n	8006552 <HAL_UART_IRQHandler+0xd2>
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800654a:	f043 0202 	orr.w	r2, r3, #2
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	645a      	str	r2, [r3, #68]	@ 0x44
 8006552:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006556:	f003 0302 	and.w	r3, r3, #2
 800655a:	2b00      	cmp	r3, #0
 800655c:	d00b      	beq.n	8006576 <HAL_UART_IRQHandler+0xf6>
 800655e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006562:	f003 0301 	and.w	r3, r3, #1
 8006566:	2b00      	cmp	r3, #0
 8006568:	d005      	beq.n	8006576 <HAL_UART_IRQHandler+0xf6>
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800656e:	f043 0204 	orr.w	r2, r3, #4
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	645a      	str	r2, [r3, #68]	@ 0x44
 8006576:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800657a:	f003 0308 	and.w	r3, r3, #8
 800657e:	2b00      	cmp	r3, #0
 8006580:	d011      	beq.n	80065a6 <HAL_UART_IRQHandler+0x126>
 8006582:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006586:	f003 0320 	and.w	r3, r3, #32
 800658a:	2b00      	cmp	r3, #0
 800658c:	d105      	bne.n	800659a <HAL_UART_IRQHandler+0x11a>
 800658e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006592:	f003 0301 	and.w	r3, r3, #1
 8006596:	2b00      	cmp	r3, #0
 8006598:	d005      	beq.n	80065a6 <HAL_UART_IRQHandler+0x126>
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800659e:	f043 0208 	orr.w	r2, r3, #8
 80065a2:	687b      	ldr	r3, [r7, #4]
 80065a4:	645a      	str	r2, [r3, #68]	@ 0x44
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80065aa:	2b00      	cmp	r3, #0
 80065ac:	f000 81f2 	beq.w	8006994 <HAL_UART_IRQHandler+0x514>
 80065b0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80065b4:	f003 0320 	and.w	r3, r3, #32
 80065b8:	2b00      	cmp	r3, #0
 80065ba:	d008      	beq.n	80065ce <HAL_UART_IRQHandler+0x14e>
 80065bc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80065c0:	f003 0320 	and.w	r3, r3, #32
 80065c4:	2b00      	cmp	r3, #0
 80065c6:	d002      	beq.n	80065ce <HAL_UART_IRQHandler+0x14e>
 80065c8:	6878      	ldr	r0, [r7, #4]
 80065ca:	f000 fd0e 	bl	8006fea <UART_Receive_IT>
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	695b      	ldr	r3, [r3, #20]
 80065d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80065d8:	2b40      	cmp	r3, #64	@ 0x40
 80065da:	bf0c      	ite	eq
 80065dc:	2301      	moveq	r3, #1
 80065de:	2300      	movne	r3, #0
 80065e0:	b2db      	uxtb	r3, r3
 80065e2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80065ea:	f003 0308 	and.w	r3, r3, #8
 80065ee:	2b00      	cmp	r3, #0
 80065f0:	d103      	bne.n	80065fa <HAL_UART_IRQHandler+0x17a>
 80065f2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d04f      	beq.n	800669a <HAL_UART_IRQHandler+0x21a>
 80065fa:	6878      	ldr	r0, [r7, #4]
 80065fc:	f000 fc16 	bl	8006e2c <UART_EndRxTransfer>
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	681b      	ldr	r3, [r3, #0]
 8006604:	695b      	ldr	r3, [r3, #20]
 8006606:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800660a:	2b40      	cmp	r3, #64	@ 0x40
 800660c:	d141      	bne.n	8006692 <HAL_UART_IRQHandler+0x212>
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	3314      	adds	r3, #20
 8006614:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006618:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800661c:	e853 3f00 	ldrex	r3, [r3]
 8006620:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006624:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006628:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800662c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	681b      	ldr	r3, [r3, #0]
 8006634:	3314      	adds	r3, #20
 8006636:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800663a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800663e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8006642:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8006646:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800664a:	e841 2300 	strex	r3, r2, [r1]
 800664e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006652:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8006656:	2b00      	cmp	r3, #0
 8006658:	d1d9      	bne.n	800660e <HAL_UART_IRQHandler+0x18e>
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800665e:	2b00      	cmp	r3, #0
 8006660:	d013      	beq.n	800668a <HAL_UART_IRQHandler+0x20a>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006666:	4a7e      	ldr	r2, [pc, #504]	@ (8006860 <HAL_UART_IRQHandler+0x3e0>)
 8006668:	651a      	str	r2, [r3, #80]	@ 0x50
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800666e:	4618      	mov	r0, r3
 8006670:	f7fe f818 	bl	80046a4 <HAL_DMA_Abort_IT>
 8006674:	4603      	mov	r3, r0
 8006676:	2b00      	cmp	r3, #0
 8006678:	d016      	beq.n	80066a8 <HAL_UART_IRQHandler+0x228>
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800667e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006680:	687a      	ldr	r2, [r7, #4]
 8006682:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8006684:	4610      	mov	r0, r2
 8006686:	4798      	blx	r3
 8006688:	e00e      	b.n	80066a8 <HAL_UART_IRQHandler+0x228>
 800668a:	6878      	ldr	r0, [r7, #4]
 800668c:	f000 f99e 	bl	80069cc <HAL_UART_ErrorCallback>
 8006690:	e00a      	b.n	80066a8 <HAL_UART_IRQHandler+0x228>
 8006692:	6878      	ldr	r0, [r7, #4]
 8006694:	f000 f99a 	bl	80069cc <HAL_UART_ErrorCallback>
 8006698:	e006      	b.n	80066a8 <HAL_UART_IRQHandler+0x228>
 800669a:	6878      	ldr	r0, [r7, #4]
 800669c:	f000 f996 	bl	80069cc <HAL_UART_ErrorCallback>
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	2200      	movs	r2, #0
 80066a4:	645a      	str	r2, [r3, #68]	@ 0x44
 80066a6:	e175      	b.n	8006994 <HAL_UART_IRQHandler+0x514>
 80066a8:	bf00      	nop
 80066aa:	e173      	b.n	8006994 <HAL_UART_IRQHandler+0x514>
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066b0:	2b01      	cmp	r3, #1
 80066b2:	f040 814f 	bne.w	8006954 <HAL_UART_IRQHandler+0x4d4>
 80066b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80066ba:	f003 0310 	and.w	r3, r3, #16
 80066be:	2b00      	cmp	r3, #0
 80066c0:	f000 8148 	beq.w	8006954 <HAL_UART_IRQHandler+0x4d4>
 80066c4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80066c8:	f003 0310 	and.w	r3, r3, #16
 80066cc:	2b00      	cmp	r3, #0
 80066ce:	f000 8141 	beq.w	8006954 <HAL_UART_IRQHandler+0x4d4>
 80066d2:	2300      	movs	r3, #0
 80066d4:	60bb      	str	r3, [r7, #8]
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	681b      	ldr	r3, [r3, #0]
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	60bb      	str	r3, [r7, #8]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	685b      	ldr	r3, [r3, #4]
 80066e4:	60bb      	str	r3, [r7, #8]
 80066e6:	68bb      	ldr	r3, [r7, #8]
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	695b      	ldr	r3, [r3, #20]
 80066ee:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80066f2:	2b40      	cmp	r3, #64	@ 0x40
 80066f4:	f040 80b6 	bne.w	8006864 <HAL_UART_IRQHandler+0x3e4>
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	685b      	ldr	r3, [r3, #4]
 8006700:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006704:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006708:	2b00      	cmp	r3, #0
 800670a:	f000 8145 	beq.w	8006998 <HAL_UART_IRQHandler+0x518>
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006712:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006716:	429a      	cmp	r2, r3
 8006718:	f080 813e 	bcs.w	8006998 <HAL_UART_IRQHandler+0x518>
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006722:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006728:	69db      	ldr	r3, [r3, #28]
 800672a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800672e:	f000 8088 	beq.w	8006842 <HAL_UART_IRQHandler+0x3c2>
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	330c      	adds	r3, #12
 8006738:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800673c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006740:	e853 3f00 	ldrex	r3, [r3]
 8006744:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006748:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800674c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006750:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	330c      	adds	r3, #12
 800675a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800675e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006762:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006766:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800676a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800676e:	e841 2300 	strex	r3, r2, [r1]
 8006772:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006776:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800677a:	2b00      	cmp	r3, #0
 800677c:	d1d9      	bne.n	8006732 <HAL_UART_IRQHandler+0x2b2>
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	681b      	ldr	r3, [r3, #0]
 8006782:	3314      	adds	r3, #20
 8006784:	677b      	str	r3, [r7, #116]	@ 0x74
 8006786:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8006788:	e853 3f00 	ldrex	r3, [r3]
 800678c:	673b      	str	r3, [r7, #112]	@ 0x70
 800678e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006790:	f023 0301 	bic.w	r3, r3, #1
 8006794:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	3314      	adds	r3, #20
 800679e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80067a2:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80067a6:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80067a8:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80067aa:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80067ae:	e841 2300 	strex	r3, r2, [r1]
 80067b2:	67bb      	str	r3, [r7, #120]	@ 0x78
 80067b4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80067b6:	2b00      	cmp	r3, #0
 80067b8:	d1e1      	bne.n	800677e <HAL_UART_IRQHandler+0x2fe>
 80067ba:	687b      	ldr	r3, [r7, #4]
 80067bc:	681b      	ldr	r3, [r3, #0]
 80067be:	3314      	adds	r3, #20
 80067c0:	663b      	str	r3, [r7, #96]	@ 0x60
 80067c2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80067c4:	e853 3f00 	ldrex	r3, [r3]
 80067c8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80067ca:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80067cc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80067d0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	3314      	adds	r3, #20
 80067da:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80067de:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80067e0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80067e2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80067e4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80067e6:	e841 2300 	strex	r3, r2, [r1]
 80067ea:	667b      	str	r3, [r7, #100]	@ 0x64
 80067ec:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80067ee:	2b00      	cmp	r3, #0
 80067f0:	d1e3      	bne.n	80067ba <HAL_UART_IRQHandler+0x33a>
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	2220      	movs	r2, #32
 80067f6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80067fa:	687b      	ldr	r3, [r7, #4]
 80067fc:	2200      	movs	r2, #0
 80067fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	330c      	adds	r3, #12
 8006806:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006808:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800680a:	e853 3f00 	ldrex	r3, [r3]
 800680e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006810:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006812:	f023 0310 	bic.w	r3, r3, #16
 8006816:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	681b      	ldr	r3, [r3, #0]
 800681e:	330c      	adds	r3, #12
 8006820:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8006824:	65ba      	str	r2, [r7, #88]	@ 0x58
 8006826:	657b      	str	r3, [r7, #84]	@ 0x54
 8006828:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800682a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800682c:	e841 2300 	strex	r3, r2, [r1]
 8006830:	653b      	str	r3, [r7, #80]	@ 0x50
 8006832:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006834:	2b00      	cmp	r3, #0
 8006836:	d1e3      	bne.n	8006800 <HAL_UART_IRQHandler+0x380>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800683c:	4618      	mov	r0, r3
 800683e:	f7fd fec1 	bl	80045c4 <HAL_DMA_Abort>
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	2202      	movs	r2, #2
 8006846:	635a      	str	r2, [r3, #52]	@ 0x34
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006850:	b29b      	uxth	r3, r3
 8006852:	1ad3      	subs	r3, r2, r3
 8006854:	b29b      	uxth	r3, r3
 8006856:	4619      	mov	r1, r3
 8006858:	6878      	ldr	r0, [r7, #4]
 800685a:	f000 f8c1 	bl	80069e0 <HAL_UARTEx_RxEventCallback>
 800685e:	e09b      	b.n	8006998 <HAL_UART_IRQHandler+0x518>
 8006860:	08006ef3 	.word	0x08006ef3
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800686c:	b29b      	uxth	r3, r3
 800686e:	1ad3      	subs	r3, r2, r3
 8006870:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006878:	b29b      	uxth	r3, r3
 800687a:	2b00      	cmp	r3, #0
 800687c:	f000 808e 	beq.w	800699c <HAL_UART_IRQHandler+0x51c>
 8006880:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006884:	2b00      	cmp	r3, #0
 8006886:	f000 8089 	beq.w	800699c <HAL_UART_IRQHandler+0x51c>
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	330c      	adds	r3, #12
 8006890:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006892:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006894:	e853 3f00 	ldrex	r3, [r3]
 8006898:	637b      	str	r3, [r7, #52]	@ 0x34
 800689a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800689c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80068a0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	681b      	ldr	r3, [r3, #0]
 80068a8:	330c      	adds	r3, #12
 80068aa:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80068ae:	647a      	str	r2, [r7, #68]	@ 0x44
 80068b0:	643b      	str	r3, [r7, #64]	@ 0x40
 80068b2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80068b4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80068b6:	e841 2300 	strex	r3, r2, [r1]
 80068ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068bc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d1e3      	bne.n	800688a <HAL_UART_IRQHandler+0x40a>
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	3314      	adds	r3, #20
 80068c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80068ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80068cc:	e853 3f00 	ldrex	r3, [r3]
 80068d0:	623b      	str	r3, [r7, #32]
 80068d2:	6a3b      	ldr	r3, [r7, #32]
 80068d4:	f023 0301 	bic.w	r3, r3, #1
 80068d8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	681b      	ldr	r3, [r3, #0]
 80068e0:	3314      	adds	r3, #20
 80068e2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80068e6:	633a      	str	r2, [r7, #48]	@ 0x30
 80068e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80068ea:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80068ec:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80068ee:	e841 2300 	strex	r3, r2, [r1]
 80068f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80068f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80068f6:	2b00      	cmp	r3, #0
 80068f8:	d1e3      	bne.n	80068c2 <HAL_UART_IRQHandler+0x442>
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	2220      	movs	r2, #32
 80068fe:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	2200      	movs	r2, #0
 8006906:	631a      	str	r2, [r3, #48]	@ 0x30
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	330c      	adds	r3, #12
 800690e:	613b      	str	r3, [r7, #16]
 8006910:	693b      	ldr	r3, [r7, #16]
 8006912:	e853 3f00 	ldrex	r3, [r3]
 8006916:	60fb      	str	r3, [r7, #12]
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	f023 0310 	bic.w	r3, r3, #16
 800691e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	330c      	adds	r3, #12
 8006928:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 800692c:	61fa      	str	r2, [r7, #28]
 800692e:	61bb      	str	r3, [r7, #24]
 8006930:	69b9      	ldr	r1, [r7, #24]
 8006932:	69fa      	ldr	r2, [r7, #28]
 8006934:	e841 2300 	strex	r3, r2, [r1]
 8006938:	617b      	str	r3, [r7, #20]
 800693a:	697b      	ldr	r3, [r7, #20]
 800693c:	2b00      	cmp	r3, #0
 800693e:	d1e3      	bne.n	8006908 <HAL_UART_IRQHandler+0x488>
 8006940:	687b      	ldr	r3, [r7, #4]
 8006942:	2202      	movs	r2, #2
 8006944:	635a      	str	r2, [r3, #52]	@ 0x34
 8006946:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800694a:	4619      	mov	r1, r3
 800694c:	6878      	ldr	r0, [r7, #4]
 800694e:	f000 f847 	bl	80069e0 <HAL_UARTEx_RxEventCallback>
 8006952:	e023      	b.n	800699c <HAL_UART_IRQHandler+0x51c>
 8006954:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006958:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800695c:	2b00      	cmp	r3, #0
 800695e:	d009      	beq.n	8006974 <HAL_UART_IRQHandler+0x4f4>
 8006960:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006964:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006968:	2b00      	cmp	r3, #0
 800696a:	d003      	beq.n	8006974 <HAL_UART_IRQHandler+0x4f4>
 800696c:	6878      	ldr	r0, [r7, #4]
 800696e:	f000 fad4 	bl	8006f1a <UART_Transmit_IT>
 8006972:	e014      	b.n	800699e <HAL_UART_IRQHandler+0x51e>
 8006974:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006978:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800697c:	2b00      	cmp	r3, #0
 800697e:	d00e      	beq.n	800699e <HAL_UART_IRQHandler+0x51e>
 8006980:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006984:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006988:	2b00      	cmp	r3, #0
 800698a:	d008      	beq.n	800699e <HAL_UART_IRQHandler+0x51e>
 800698c:	6878      	ldr	r0, [r7, #4]
 800698e:	f000 fb14 	bl	8006fba <UART_EndTransmit_IT>
 8006992:	e004      	b.n	800699e <HAL_UART_IRQHandler+0x51e>
 8006994:	bf00      	nop
 8006996:	e002      	b.n	800699e <HAL_UART_IRQHandler+0x51e>
 8006998:	bf00      	nop
 800699a:	e000      	b.n	800699e <HAL_UART_IRQHandler+0x51e>
 800699c:	bf00      	nop
 800699e:	37e8      	adds	r7, #232	@ 0xe8
 80069a0:	46bd      	mov	sp, r7
 80069a2:	bd80      	pop	{r7, pc}

080069a4 <HAL_UART_TxCpltCallback>:
 80069a4:	b480      	push	{r7}
 80069a6:	b083      	sub	sp, #12
 80069a8:	af00      	add	r7, sp, #0
 80069aa:	6078      	str	r0, [r7, #4]
 80069ac:	bf00      	nop
 80069ae:	370c      	adds	r7, #12
 80069b0:	46bd      	mov	sp, r7
 80069b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069b6:	4770      	bx	lr

080069b8 <HAL_UART_RxHalfCpltCallback>:
 80069b8:	b480      	push	{r7}
 80069ba:	b083      	sub	sp, #12
 80069bc:	af00      	add	r7, sp, #0
 80069be:	6078      	str	r0, [r7, #4]
 80069c0:	bf00      	nop
 80069c2:	370c      	adds	r7, #12
 80069c4:	46bd      	mov	sp, r7
 80069c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ca:	4770      	bx	lr

080069cc <HAL_UART_ErrorCallback>:
 80069cc:	b480      	push	{r7}
 80069ce:	b083      	sub	sp, #12
 80069d0:	af00      	add	r7, sp, #0
 80069d2:	6078      	str	r0, [r7, #4]
 80069d4:	bf00      	nop
 80069d6:	370c      	adds	r7, #12
 80069d8:	46bd      	mov	sp, r7
 80069da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069de:	4770      	bx	lr

080069e0 <HAL_UARTEx_RxEventCallback>:
 80069e0:	b480      	push	{r7}
 80069e2:	b083      	sub	sp, #12
 80069e4:	af00      	add	r7, sp, #0
 80069e6:	6078      	str	r0, [r7, #4]
 80069e8:	460b      	mov	r3, r1
 80069ea:	807b      	strh	r3, [r7, #2]
 80069ec:	bf00      	nop
 80069ee:	370c      	adds	r7, #12
 80069f0:	46bd      	mov	sp, r7
 80069f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069f6:	4770      	bx	lr

080069f8 <UART_DMAReceiveCplt>:
 80069f8:	b580      	push	{r7, lr}
 80069fa:	b09c      	sub	sp, #112	@ 0x70
 80069fc:	af00      	add	r7, sp, #0
 80069fe:	6078      	str	r0, [r7, #4]
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a04:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a10:	2b00      	cmp	r3, #0
 8006a12:	d172      	bne.n	8006afa <UART_DMAReceiveCplt+0x102>
 8006a14:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a16:	2200      	movs	r2, #0
 8006a18:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006a1a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a1c:	681b      	ldr	r3, [r3, #0]
 8006a1e:	330c      	adds	r3, #12
 8006a20:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006a22:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006a24:	e853 3f00 	ldrex	r3, [r3]
 8006a28:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006a2a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006a2c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006a30:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006a32:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	330c      	adds	r3, #12
 8006a38:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 8006a3a:	65ba      	str	r2, [r7, #88]	@ 0x58
 8006a3c:	657b      	str	r3, [r7, #84]	@ 0x54
 8006a3e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006a40:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006a42:	e841 2300 	strex	r3, r2, [r1]
 8006a46:	653b      	str	r3, [r7, #80]	@ 0x50
 8006a48:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006a4a:	2b00      	cmp	r3, #0
 8006a4c:	d1e5      	bne.n	8006a1a <UART_DMAReceiveCplt+0x22>
 8006a4e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a50:	681b      	ldr	r3, [r3, #0]
 8006a52:	3314      	adds	r3, #20
 8006a54:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006a56:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006a58:	e853 3f00 	ldrex	r3, [r3]
 8006a5c:	637b      	str	r3, [r7, #52]	@ 0x34
 8006a5e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006a60:	f023 0301 	bic.w	r3, r3, #1
 8006a64:	667b      	str	r3, [r7, #100]	@ 0x64
 8006a66:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a68:	681b      	ldr	r3, [r3, #0]
 8006a6a:	3314      	adds	r3, #20
 8006a6c:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8006a6e:	647a      	str	r2, [r7, #68]	@ 0x44
 8006a70:	643b      	str	r3, [r7, #64]	@ 0x40
 8006a72:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006a74:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006a76:	e841 2300 	strex	r3, r2, [r1]
 8006a7a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a7c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d1e5      	bne.n	8006a4e <UART_DMAReceiveCplt+0x56>
 8006a82:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a84:	681b      	ldr	r3, [r3, #0]
 8006a86:	3314      	adds	r3, #20
 8006a88:	627b      	str	r3, [r7, #36]	@ 0x24
 8006a8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a8c:	e853 3f00 	ldrex	r3, [r3]
 8006a90:	623b      	str	r3, [r7, #32]
 8006a92:	6a3b      	ldr	r3, [r7, #32]
 8006a94:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006a98:	663b      	str	r3, [r7, #96]	@ 0x60
 8006a9a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	3314      	adds	r3, #20
 8006aa0:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8006aa2:	633a      	str	r2, [r7, #48]	@ 0x30
 8006aa4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006aa6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006aa8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006aaa:	e841 2300 	strex	r3, r2, [r1]
 8006aae:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006ab0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006ab2:	2b00      	cmp	r3, #0
 8006ab4:	d1e5      	bne.n	8006a82 <UART_DMAReceiveCplt+0x8a>
 8006ab6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006ab8:	2220      	movs	r2, #32
 8006aba:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006abe:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006ac0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006ac2:	2b01      	cmp	r3, #1
 8006ac4:	d119      	bne.n	8006afa <UART_DMAReceiveCplt+0x102>
 8006ac6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006ac8:	681b      	ldr	r3, [r3, #0]
 8006aca:	330c      	adds	r3, #12
 8006acc:	613b      	str	r3, [r7, #16]
 8006ace:	693b      	ldr	r3, [r7, #16]
 8006ad0:	e853 3f00 	ldrex	r3, [r3]
 8006ad4:	60fb      	str	r3, [r7, #12]
 8006ad6:	68fb      	ldr	r3, [r7, #12]
 8006ad8:	f023 0310 	bic.w	r3, r3, #16
 8006adc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006ade:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006ae0:	681b      	ldr	r3, [r3, #0]
 8006ae2:	330c      	adds	r3, #12
 8006ae4:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8006ae6:	61fa      	str	r2, [r7, #28]
 8006ae8:	61bb      	str	r3, [r7, #24]
 8006aea:	69b9      	ldr	r1, [r7, #24]
 8006aec:	69fa      	ldr	r2, [r7, #28]
 8006aee:	e841 2300 	strex	r3, r2, [r1]
 8006af2:	617b      	str	r3, [r7, #20]
 8006af4:	697b      	ldr	r3, [r7, #20]
 8006af6:	2b00      	cmp	r3, #0
 8006af8:	d1e5      	bne.n	8006ac6 <UART_DMAReceiveCplt+0xce>
 8006afa:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006afc:	2200      	movs	r2, #0
 8006afe:	635a      	str	r2, [r3, #52]	@ 0x34
 8006b00:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006b02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006b04:	2b01      	cmp	r3, #1
 8006b06:	d106      	bne.n	8006b16 <UART_DMAReceiveCplt+0x11e>
 8006b08:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006b0a:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006b0c:	4619      	mov	r1, r3
 8006b0e:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8006b10:	f7ff ff66 	bl	80069e0 <HAL_UARTEx_RxEventCallback>
 8006b14:	e002      	b.n	8006b1c <UART_DMAReceiveCplt+0x124>
 8006b16:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8006b18:	f7fc ffba 	bl	8003a90 <HAL_UART_RxCpltCallback>
 8006b1c:	bf00      	nop
 8006b1e:	3770      	adds	r7, #112	@ 0x70
 8006b20:	46bd      	mov	sp, r7
 8006b22:	bd80      	pop	{r7, pc}

08006b24 <UART_DMARxHalfCplt>:
 8006b24:	b580      	push	{r7, lr}
 8006b26:	b084      	sub	sp, #16
 8006b28:	af00      	add	r7, sp, #0
 8006b2a:	6078      	str	r0, [r7, #4]
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006b30:	60fb      	str	r3, [r7, #12]
 8006b32:	68fb      	ldr	r3, [r7, #12]
 8006b34:	2201      	movs	r2, #1
 8006b36:	635a      	str	r2, [r3, #52]	@ 0x34
 8006b38:	68fb      	ldr	r3, [r7, #12]
 8006b3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006b3c:	2b01      	cmp	r3, #1
 8006b3e:	d108      	bne.n	8006b52 <UART_DMARxHalfCplt+0x2e>
 8006b40:	68fb      	ldr	r3, [r7, #12]
 8006b42:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006b44:	085b      	lsrs	r3, r3, #1
 8006b46:	b29b      	uxth	r3, r3
 8006b48:	4619      	mov	r1, r3
 8006b4a:	68f8      	ldr	r0, [r7, #12]
 8006b4c:	f7ff ff48 	bl	80069e0 <HAL_UARTEx_RxEventCallback>
 8006b50:	e002      	b.n	8006b58 <UART_DMARxHalfCplt+0x34>
 8006b52:	68f8      	ldr	r0, [r7, #12]
 8006b54:	f7ff ff30 	bl	80069b8 <HAL_UART_RxHalfCpltCallback>
 8006b58:	bf00      	nop
 8006b5a:	3710      	adds	r7, #16
 8006b5c:	46bd      	mov	sp, r7
 8006b5e:	bd80      	pop	{r7, pc}

08006b60 <UART_DMAError>:
 8006b60:	b580      	push	{r7, lr}
 8006b62:	b084      	sub	sp, #16
 8006b64:	af00      	add	r7, sp, #0
 8006b66:	6078      	str	r0, [r7, #4]
 8006b68:	2300      	movs	r3, #0
 8006b6a:	60fb      	str	r3, [r7, #12]
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006b70:	60bb      	str	r3, [r7, #8]
 8006b72:	68bb      	ldr	r3, [r7, #8]
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	695b      	ldr	r3, [r3, #20]
 8006b78:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006b7c:	2b80      	cmp	r3, #128	@ 0x80
 8006b7e:	bf0c      	ite	eq
 8006b80:	2301      	moveq	r3, #1
 8006b82:	2300      	movne	r3, #0
 8006b84:	b2db      	uxtb	r3, r3
 8006b86:	60fb      	str	r3, [r7, #12]
 8006b88:	68bb      	ldr	r3, [r7, #8]
 8006b8a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006b8e:	b2db      	uxtb	r3, r3
 8006b90:	2b21      	cmp	r3, #33	@ 0x21
 8006b92:	d108      	bne.n	8006ba6 <UART_DMAError+0x46>
 8006b94:	68fb      	ldr	r3, [r7, #12]
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	d005      	beq.n	8006ba6 <UART_DMAError+0x46>
 8006b9a:	68bb      	ldr	r3, [r7, #8]
 8006b9c:	2200      	movs	r2, #0
 8006b9e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006ba0:	68b8      	ldr	r0, [r7, #8]
 8006ba2:	f000 f91b 	bl	8006ddc <UART_EndTxTransfer>
 8006ba6:	68bb      	ldr	r3, [r7, #8]
 8006ba8:	681b      	ldr	r3, [r3, #0]
 8006baa:	695b      	ldr	r3, [r3, #20]
 8006bac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006bb0:	2b40      	cmp	r3, #64	@ 0x40
 8006bb2:	bf0c      	ite	eq
 8006bb4:	2301      	moveq	r3, #1
 8006bb6:	2300      	movne	r3, #0
 8006bb8:	b2db      	uxtb	r3, r3
 8006bba:	60fb      	str	r3, [r7, #12]
 8006bbc:	68bb      	ldr	r3, [r7, #8]
 8006bbe:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006bc2:	b2db      	uxtb	r3, r3
 8006bc4:	2b22      	cmp	r3, #34	@ 0x22
 8006bc6:	d108      	bne.n	8006bda <UART_DMAError+0x7a>
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	2b00      	cmp	r3, #0
 8006bcc:	d005      	beq.n	8006bda <UART_DMAError+0x7a>
 8006bce:	68bb      	ldr	r3, [r7, #8]
 8006bd0:	2200      	movs	r2, #0
 8006bd2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006bd4:	68b8      	ldr	r0, [r7, #8]
 8006bd6:	f000 f929 	bl	8006e2c <UART_EndRxTransfer>
 8006bda:	68bb      	ldr	r3, [r7, #8]
 8006bdc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006bde:	f043 0210 	orr.w	r2, r3, #16
 8006be2:	68bb      	ldr	r3, [r7, #8]
 8006be4:	645a      	str	r2, [r3, #68]	@ 0x44
 8006be6:	68b8      	ldr	r0, [r7, #8]
 8006be8:	f7ff fef0 	bl	80069cc <HAL_UART_ErrorCallback>
 8006bec:	bf00      	nop
 8006bee:	3710      	adds	r7, #16
 8006bf0:	46bd      	mov	sp, r7
 8006bf2:	bd80      	pop	{r7, pc}

08006bf4 <UART_WaitOnFlagUntilTimeout>:
 8006bf4:	b580      	push	{r7, lr}
 8006bf6:	b086      	sub	sp, #24
 8006bf8:	af00      	add	r7, sp, #0
 8006bfa:	60f8      	str	r0, [r7, #12]
 8006bfc:	60b9      	str	r1, [r7, #8]
 8006bfe:	603b      	str	r3, [r7, #0]
 8006c00:	4613      	mov	r3, r2
 8006c02:	71fb      	strb	r3, [r7, #7]
 8006c04:	e03b      	b.n	8006c7e <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c06:	6a3b      	ldr	r3, [r7, #32]
 8006c08:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006c0c:	d037      	beq.n	8006c7e <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c0e:	f7fd fa85 	bl	800411c <HAL_GetTick>
 8006c12:	4602      	mov	r2, r0
 8006c14:	683b      	ldr	r3, [r7, #0]
 8006c16:	1ad3      	subs	r3, r2, r3
 8006c18:	6a3a      	ldr	r2, [r7, #32]
 8006c1a:	429a      	cmp	r2, r3
 8006c1c:	d302      	bcc.n	8006c24 <UART_WaitOnFlagUntilTimeout+0x30>
 8006c1e:	6a3b      	ldr	r3, [r7, #32]
 8006c20:	2b00      	cmp	r3, #0
 8006c22:	d101      	bne.n	8006c28 <UART_WaitOnFlagUntilTimeout+0x34>
 8006c24:	2303      	movs	r3, #3
 8006c26:	e03a      	b.n	8006c9e <UART_WaitOnFlagUntilTimeout+0xaa>
 8006c28:	68fb      	ldr	r3, [r7, #12]
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	68db      	ldr	r3, [r3, #12]
 8006c2e:	f003 0304 	and.w	r3, r3, #4
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d023      	beq.n	8006c7e <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c36:	68bb      	ldr	r3, [r7, #8]
 8006c38:	2b80      	cmp	r3, #128	@ 0x80
 8006c3a:	d020      	beq.n	8006c7e <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c3c:	68bb      	ldr	r3, [r7, #8]
 8006c3e:	2b40      	cmp	r3, #64	@ 0x40
 8006c40:	d01d      	beq.n	8006c7e <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c42:	68fb      	ldr	r3, [r7, #12]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	f003 0308 	and.w	r3, r3, #8
 8006c4c:	2b08      	cmp	r3, #8
 8006c4e:	d116      	bne.n	8006c7e <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c50:	2300      	movs	r3, #0
 8006c52:	617b      	str	r3, [r7, #20]
 8006c54:	68fb      	ldr	r3, [r7, #12]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	681b      	ldr	r3, [r3, #0]
 8006c5a:	617b      	str	r3, [r7, #20]
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	681b      	ldr	r3, [r3, #0]
 8006c60:	685b      	ldr	r3, [r3, #4]
 8006c62:	617b      	str	r3, [r7, #20]
 8006c64:	697b      	ldr	r3, [r7, #20]
 8006c66:	68f8      	ldr	r0, [r7, #12]
 8006c68:	f000 f8e0 	bl	8006e2c <UART_EndRxTransfer>
 8006c6c:	68fb      	ldr	r3, [r7, #12]
 8006c6e:	2208      	movs	r2, #8
 8006c70:	645a      	str	r2, [r3, #68]	@ 0x44
 8006c72:	68fb      	ldr	r3, [r7, #12]
 8006c74:	2200      	movs	r2, #0
 8006c76:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006c7a:	2301      	movs	r3, #1
 8006c7c:	e00f      	b.n	8006c9e <UART_WaitOnFlagUntilTimeout+0xaa>
 8006c7e:	68fb      	ldr	r3, [r7, #12]
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	681a      	ldr	r2, [r3, #0]
 8006c84:	68bb      	ldr	r3, [r7, #8]
 8006c86:	4013      	ands	r3, r2
 8006c88:	68ba      	ldr	r2, [r7, #8]
 8006c8a:	429a      	cmp	r2, r3
 8006c8c:	bf0c      	ite	eq
 8006c8e:	2301      	moveq	r3, #1
 8006c90:	2300      	movne	r3, #0
 8006c92:	b2db      	uxtb	r3, r3
 8006c94:	461a      	mov	r2, r3
 8006c96:	79fb      	ldrb	r3, [r7, #7]
 8006c98:	429a      	cmp	r2, r3
 8006c9a:	d0b4      	beq.n	8006c06 <UART_WaitOnFlagUntilTimeout+0x12>
 8006c9c:	2300      	movs	r3, #0
 8006c9e:	4618      	mov	r0, r3
 8006ca0:	3718      	adds	r7, #24
 8006ca2:	46bd      	mov	sp, r7
 8006ca4:	bd80      	pop	{r7, pc}
	...

08006ca8 <UART_Start_Receive_DMA>:
 8006ca8:	b580      	push	{r7, lr}
 8006caa:	b098      	sub	sp, #96	@ 0x60
 8006cac:	af00      	add	r7, sp, #0
 8006cae:	60f8      	str	r0, [r7, #12]
 8006cb0:	60b9      	str	r1, [r7, #8]
 8006cb2:	4613      	mov	r3, r2
 8006cb4:	80fb      	strh	r3, [r7, #6]
 8006cb6:	68ba      	ldr	r2, [r7, #8]
 8006cb8:	68fb      	ldr	r3, [r7, #12]
 8006cba:	629a      	str	r2, [r3, #40]	@ 0x28
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	88fa      	ldrh	r2, [r7, #6]
 8006cc0:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006cc2:	68fb      	ldr	r3, [r7, #12]
 8006cc4:	2200      	movs	r2, #0
 8006cc6:	645a      	str	r2, [r3, #68]	@ 0x44
 8006cc8:	68fb      	ldr	r3, [r7, #12]
 8006cca:	2222      	movs	r2, #34	@ 0x22
 8006ccc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006cd0:	68fb      	ldr	r3, [r7, #12]
 8006cd2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006cd4:	4a3e      	ldr	r2, [pc, #248]	@ (8006dd0 <UART_Start_Receive_DMA+0x128>)
 8006cd6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006cd8:	68fb      	ldr	r3, [r7, #12]
 8006cda:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006cdc:	4a3d      	ldr	r2, [pc, #244]	@ (8006dd4 <UART_Start_Receive_DMA+0x12c>)
 8006cde:	641a      	str	r2, [r3, #64]	@ 0x40
 8006ce0:	68fb      	ldr	r3, [r7, #12]
 8006ce2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006ce4:	4a3c      	ldr	r2, [pc, #240]	@ (8006dd8 <UART_Start_Receive_DMA+0x130>)
 8006ce6:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006ce8:	68fb      	ldr	r3, [r7, #12]
 8006cea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006cec:	2200      	movs	r2, #0
 8006cee:	651a      	str	r2, [r3, #80]	@ 0x50
 8006cf0:	f107 0308 	add.w	r3, r7, #8
 8006cf4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006cf6:	68fb      	ldr	r3, [r7, #12]
 8006cf8:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8006cfa:	68fb      	ldr	r3, [r7, #12]
 8006cfc:	681b      	ldr	r3, [r3, #0]
 8006cfe:	3304      	adds	r3, #4
 8006d00:	4619      	mov	r1, r3
 8006d02:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006d04:	681a      	ldr	r2, [r3, #0]
 8006d06:	88fb      	ldrh	r3, [r7, #6]
 8006d08:	f7fd fc04 	bl	8004514 <HAL_DMA_Start_IT>
 8006d0c:	2300      	movs	r3, #0
 8006d0e:	613b      	str	r3, [r7, #16]
 8006d10:	68fb      	ldr	r3, [r7, #12]
 8006d12:	681b      	ldr	r3, [r3, #0]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	613b      	str	r3, [r7, #16]
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	685b      	ldr	r3, [r3, #4]
 8006d1e:	613b      	str	r3, [r7, #16]
 8006d20:	693b      	ldr	r3, [r7, #16]
 8006d22:	68fb      	ldr	r3, [r7, #12]
 8006d24:	691b      	ldr	r3, [r3, #16]
 8006d26:	2b00      	cmp	r3, #0
 8006d28:	d019      	beq.n	8006d5e <UART_Start_Receive_DMA+0xb6>
 8006d2a:	68fb      	ldr	r3, [r7, #12]
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	330c      	adds	r3, #12
 8006d30:	643b      	str	r3, [r7, #64]	@ 0x40
 8006d32:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006d34:	e853 3f00 	ldrex	r3, [r3]
 8006d38:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006d3a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006d3c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d40:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006d42:	68fb      	ldr	r3, [r7, #12]
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	330c      	adds	r3, #12
 8006d48:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006d4a:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8006d4c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006d4e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8006d50:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8006d52:	e841 2300 	strex	r3, r2, [r1]
 8006d56:	647b      	str	r3, [r7, #68]	@ 0x44
 8006d58:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006d5a:	2b00      	cmp	r3, #0
 8006d5c:	d1e5      	bne.n	8006d2a <UART_Start_Receive_DMA+0x82>
 8006d5e:	68fb      	ldr	r3, [r7, #12]
 8006d60:	681b      	ldr	r3, [r3, #0]
 8006d62:	3314      	adds	r3, #20
 8006d64:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006d66:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006d68:	e853 3f00 	ldrex	r3, [r3]
 8006d6c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006d6e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d70:	f043 0301 	orr.w	r3, r3, #1
 8006d74:	657b      	str	r3, [r7, #84]	@ 0x54
 8006d76:	68fb      	ldr	r3, [r7, #12]
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	3314      	adds	r3, #20
 8006d7c:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8006d7e:	63ba      	str	r2, [r7, #56]	@ 0x38
 8006d80:	637b      	str	r3, [r7, #52]	@ 0x34
 8006d82:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8006d84:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8006d86:	e841 2300 	strex	r3, r2, [r1]
 8006d8a:	633b      	str	r3, [r7, #48]	@ 0x30
 8006d8c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006d8e:	2b00      	cmp	r3, #0
 8006d90:	d1e5      	bne.n	8006d5e <UART_Start_Receive_DMA+0xb6>
 8006d92:	68fb      	ldr	r3, [r7, #12]
 8006d94:	681b      	ldr	r3, [r3, #0]
 8006d96:	3314      	adds	r3, #20
 8006d98:	61bb      	str	r3, [r7, #24]
 8006d9a:	69bb      	ldr	r3, [r7, #24]
 8006d9c:	e853 3f00 	ldrex	r3, [r3]
 8006da0:	617b      	str	r3, [r7, #20]
 8006da2:	697b      	ldr	r3, [r7, #20]
 8006da4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006da8:	653b      	str	r3, [r7, #80]	@ 0x50
 8006daa:	68fb      	ldr	r3, [r7, #12]
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	3314      	adds	r3, #20
 8006db0:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8006db2:	627a      	str	r2, [r7, #36]	@ 0x24
 8006db4:	623b      	str	r3, [r7, #32]
 8006db6:	6a39      	ldr	r1, [r7, #32]
 8006db8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006dba:	e841 2300 	strex	r3, r2, [r1]
 8006dbe:	61fb      	str	r3, [r7, #28]
 8006dc0:	69fb      	ldr	r3, [r7, #28]
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d1e5      	bne.n	8006d92 <UART_Start_Receive_DMA+0xea>
 8006dc6:	2300      	movs	r3, #0
 8006dc8:	4618      	mov	r0, r3
 8006dca:	3760      	adds	r7, #96	@ 0x60
 8006dcc:	46bd      	mov	sp, r7
 8006dce:	bd80      	pop	{r7, pc}
 8006dd0:	080069f9 	.word	0x080069f9
 8006dd4:	08006b25 	.word	0x08006b25
 8006dd8:	08006b61 	.word	0x08006b61

08006ddc <UART_EndTxTransfer>:
 8006ddc:	b480      	push	{r7}
 8006dde:	b089      	sub	sp, #36	@ 0x24
 8006de0:	af00      	add	r7, sp, #0
 8006de2:	6078      	str	r0, [r7, #4]
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	681b      	ldr	r3, [r3, #0]
 8006de8:	330c      	adds	r3, #12
 8006dea:	60fb      	str	r3, [r7, #12]
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	e853 3f00 	ldrex	r3, [r3]
 8006df2:	60bb      	str	r3, [r7, #8]
 8006df4:	68bb      	ldr	r3, [r7, #8]
 8006df6:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8006dfa:	61fb      	str	r3, [r7, #28]
 8006dfc:	687b      	ldr	r3, [r7, #4]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	330c      	adds	r3, #12
 8006e02:	69fa      	ldr	r2, [r7, #28]
 8006e04:	61ba      	str	r2, [r7, #24]
 8006e06:	617b      	str	r3, [r7, #20]
 8006e08:	6979      	ldr	r1, [r7, #20]
 8006e0a:	69ba      	ldr	r2, [r7, #24]
 8006e0c:	e841 2300 	strex	r3, r2, [r1]
 8006e10:	613b      	str	r3, [r7, #16]
 8006e12:	693b      	ldr	r3, [r7, #16]
 8006e14:	2b00      	cmp	r3, #0
 8006e16:	d1e5      	bne.n	8006de4 <UART_EndTxTransfer+0x8>
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	2220      	movs	r2, #32
 8006e1c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006e20:	bf00      	nop
 8006e22:	3724      	adds	r7, #36	@ 0x24
 8006e24:	46bd      	mov	sp, r7
 8006e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e2a:	4770      	bx	lr

08006e2c <UART_EndRxTransfer>:
 8006e2c:	b480      	push	{r7}
 8006e2e:	b095      	sub	sp, #84	@ 0x54
 8006e30:	af00      	add	r7, sp, #0
 8006e32:	6078      	str	r0, [r7, #4]
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	330c      	adds	r3, #12
 8006e3a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006e3c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006e3e:	e853 3f00 	ldrex	r3, [r3]
 8006e42:	633b      	str	r3, [r7, #48]	@ 0x30
 8006e44:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006e46:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006e4a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	330c      	adds	r3, #12
 8006e52:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8006e54:	643a      	str	r2, [r7, #64]	@ 0x40
 8006e56:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e58:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8006e5a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006e5c:	e841 2300 	strex	r3, r2, [r1]
 8006e60:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006e62:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e64:	2b00      	cmp	r3, #0
 8006e66:	d1e5      	bne.n	8006e34 <UART_EndRxTransfer+0x8>
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	3314      	adds	r3, #20
 8006e6e:	623b      	str	r3, [r7, #32]
 8006e70:	6a3b      	ldr	r3, [r7, #32]
 8006e72:	e853 3f00 	ldrex	r3, [r3]
 8006e76:	61fb      	str	r3, [r7, #28]
 8006e78:	69fb      	ldr	r3, [r7, #28]
 8006e7a:	f023 0301 	bic.w	r3, r3, #1
 8006e7e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	3314      	adds	r3, #20
 8006e86:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006e88:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006e8a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006e8c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006e8e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006e90:	e841 2300 	strex	r3, r2, [r1]
 8006e94:	627b      	str	r3, [r7, #36]	@ 0x24
 8006e96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	d1e5      	bne.n	8006e68 <UART_EndRxTransfer+0x3c>
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006ea0:	2b01      	cmp	r3, #1
 8006ea2:	d119      	bne.n	8006ed8 <UART_EndRxTransfer+0xac>
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	681b      	ldr	r3, [r3, #0]
 8006ea8:	330c      	adds	r3, #12
 8006eaa:	60fb      	str	r3, [r7, #12]
 8006eac:	68fb      	ldr	r3, [r7, #12]
 8006eae:	e853 3f00 	ldrex	r3, [r3]
 8006eb2:	60bb      	str	r3, [r7, #8]
 8006eb4:	68bb      	ldr	r3, [r7, #8]
 8006eb6:	f023 0310 	bic.w	r3, r3, #16
 8006eba:	647b      	str	r3, [r7, #68]	@ 0x44
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	681b      	ldr	r3, [r3, #0]
 8006ec0:	330c      	adds	r3, #12
 8006ec2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006ec4:	61ba      	str	r2, [r7, #24]
 8006ec6:	617b      	str	r3, [r7, #20]
 8006ec8:	6979      	ldr	r1, [r7, #20]
 8006eca:	69ba      	ldr	r2, [r7, #24]
 8006ecc:	e841 2300 	strex	r3, r2, [r1]
 8006ed0:	613b      	str	r3, [r7, #16]
 8006ed2:	693b      	ldr	r3, [r7, #16]
 8006ed4:	2b00      	cmp	r3, #0
 8006ed6:	d1e5      	bne.n	8006ea4 <UART_EndRxTransfer+0x78>
 8006ed8:	687b      	ldr	r3, [r7, #4]
 8006eda:	2220      	movs	r2, #32
 8006edc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	2200      	movs	r2, #0
 8006ee4:	631a      	str	r2, [r3, #48]	@ 0x30
 8006ee6:	bf00      	nop
 8006ee8:	3754      	adds	r7, #84	@ 0x54
 8006eea:	46bd      	mov	sp, r7
 8006eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef0:	4770      	bx	lr

08006ef2 <UART_DMAAbortOnError>:
 8006ef2:	b580      	push	{r7, lr}
 8006ef4:	b084      	sub	sp, #16
 8006ef6:	af00      	add	r7, sp, #0
 8006ef8:	6078      	str	r0, [r7, #4]
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006efe:	60fb      	str	r3, [r7, #12]
 8006f00:	68fb      	ldr	r3, [r7, #12]
 8006f02:	2200      	movs	r2, #0
 8006f04:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006f06:	68fb      	ldr	r3, [r7, #12]
 8006f08:	2200      	movs	r2, #0
 8006f0a:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006f0c:	68f8      	ldr	r0, [r7, #12]
 8006f0e:	f7ff fd5d 	bl	80069cc <HAL_UART_ErrorCallback>
 8006f12:	bf00      	nop
 8006f14:	3710      	adds	r7, #16
 8006f16:	46bd      	mov	sp, r7
 8006f18:	bd80      	pop	{r7, pc}

08006f1a <UART_Transmit_IT>:
 8006f1a:	b480      	push	{r7}
 8006f1c:	b085      	sub	sp, #20
 8006f1e:	af00      	add	r7, sp, #0
 8006f20:	6078      	str	r0, [r7, #4]
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006f28:	b2db      	uxtb	r3, r3
 8006f2a:	2b21      	cmp	r3, #33	@ 0x21
 8006f2c:	d13e      	bne.n	8006fac <UART_Transmit_IT+0x92>
 8006f2e:	687b      	ldr	r3, [r7, #4]
 8006f30:	689b      	ldr	r3, [r3, #8]
 8006f32:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006f36:	d114      	bne.n	8006f62 <UART_Transmit_IT+0x48>
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	691b      	ldr	r3, [r3, #16]
 8006f3c:	2b00      	cmp	r3, #0
 8006f3e:	d110      	bne.n	8006f62 <UART_Transmit_IT+0x48>
 8006f40:	687b      	ldr	r3, [r7, #4]
 8006f42:	6a1b      	ldr	r3, [r3, #32]
 8006f44:	60fb      	str	r3, [r7, #12]
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	881b      	ldrh	r3, [r3, #0]
 8006f4a:	461a      	mov	r2, r3
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006f54:	605a      	str	r2, [r3, #4]
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	6a1b      	ldr	r3, [r3, #32]
 8006f5a:	1c9a      	adds	r2, r3, #2
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	621a      	str	r2, [r3, #32]
 8006f60:	e008      	b.n	8006f74 <UART_Transmit_IT+0x5a>
 8006f62:	687b      	ldr	r3, [r7, #4]
 8006f64:	6a1b      	ldr	r3, [r3, #32]
 8006f66:	1c59      	adds	r1, r3, #1
 8006f68:	687a      	ldr	r2, [r7, #4]
 8006f6a:	6211      	str	r1, [r2, #32]
 8006f6c:	781a      	ldrb	r2, [r3, #0]
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	605a      	str	r2, [r3, #4]
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006f78:	b29b      	uxth	r3, r3
 8006f7a:	3b01      	subs	r3, #1
 8006f7c:	b29b      	uxth	r3, r3
 8006f7e:	687a      	ldr	r2, [r7, #4]
 8006f80:	4619      	mov	r1, r3
 8006f82:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8006f84:	2b00      	cmp	r3, #0
 8006f86:	d10f      	bne.n	8006fa8 <UART_Transmit_IT+0x8e>
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	681b      	ldr	r3, [r3, #0]
 8006f8c:	68da      	ldr	r2, [r3, #12]
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8006f96:	60da      	str	r2, [r3, #12]
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	68da      	ldr	r2, [r3, #12]
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	681b      	ldr	r3, [r3, #0]
 8006fa2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006fa6:	60da      	str	r2, [r3, #12]
 8006fa8:	2300      	movs	r3, #0
 8006faa:	e000      	b.n	8006fae <UART_Transmit_IT+0x94>
 8006fac:	2302      	movs	r3, #2
 8006fae:	4618      	mov	r0, r3
 8006fb0:	3714      	adds	r7, #20
 8006fb2:	46bd      	mov	sp, r7
 8006fb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fb8:	4770      	bx	lr

08006fba <UART_EndTransmit_IT>:
 8006fba:	b580      	push	{r7, lr}
 8006fbc:	b082      	sub	sp, #8
 8006fbe:	af00      	add	r7, sp, #0
 8006fc0:	6078      	str	r0, [r7, #4]
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	68da      	ldr	r2, [r3, #12]
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006fd0:	60da      	str	r2, [r3, #12]
 8006fd2:	687b      	ldr	r3, [r7, #4]
 8006fd4:	2220      	movs	r2, #32
 8006fd6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006fda:	6878      	ldr	r0, [r7, #4]
 8006fdc:	f7ff fce2 	bl	80069a4 <HAL_UART_TxCpltCallback>
 8006fe0:	2300      	movs	r3, #0
 8006fe2:	4618      	mov	r0, r3
 8006fe4:	3708      	adds	r7, #8
 8006fe6:	46bd      	mov	sp, r7
 8006fe8:	bd80      	pop	{r7, pc}

08006fea <UART_Receive_IT>:
 8006fea:	b580      	push	{r7, lr}
 8006fec:	b08c      	sub	sp, #48	@ 0x30
 8006fee:	af00      	add	r7, sp, #0
 8006ff0:	6078      	str	r0, [r7, #4]
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006ff8:	b2db      	uxtb	r3, r3
 8006ffa:	2b22      	cmp	r3, #34	@ 0x22
 8006ffc:	f040 80ae 	bne.w	800715c <UART_Receive_IT+0x172>
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	689b      	ldr	r3, [r3, #8]
 8007004:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007008:	d117      	bne.n	800703a <UART_Receive_IT+0x50>
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	691b      	ldr	r3, [r3, #16]
 800700e:	2b00      	cmp	r3, #0
 8007010:	d113      	bne.n	800703a <UART_Receive_IT+0x50>
 8007012:	2300      	movs	r3, #0
 8007014:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800701a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	681b      	ldr	r3, [r3, #0]
 8007020:	685b      	ldr	r3, [r3, #4]
 8007022:	b29b      	uxth	r3, r3
 8007024:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007028:	b29a      	uxth	r2, r3
 800702a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800702c:	801a      	strh	r2, [r3, #0]
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007032:	1c9a      	adds	r2, r3, #2
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	629a      	str	r2, [r3, #40]	@ 0x28
 8007038:	e026      	b.n	8007088 <UART_Receive_IT+0x9e>
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800703e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007040:	2300      	movs	r3, #0
 8007042:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	689b      	ldr	r3, [r3, #8]
 8007048:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800704c:	d007      	beq.n	800705e <UART_Receive_IT+0x74>
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	689b      	ldr	r3, [r3, #8]
 8007052:	2b00      	cmp	r3, #0
 8007054:	d10a      	bne.n	800706c <UART_Receive_IT+0x82>
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	691b      	ldr	r3, [r3, #16]
 800705a:	2b00      	cmp	r3, #0
 800705c:	d106      	bne.n	800706c <UART_Receive_IT+0x82>
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	681b      	ldr	r3, [r3, #0]
 8007062:	685b      	ldr	r3, [r3, #4]
 8007064:	b2da      	uxtb	r2, r3
 8007066:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007068:	701a      	strb	r2, [r3, #0]
 800706a:	e008      	b.n	800707e <UART_Receive_IT+0x94>
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	681b      	ldr	r3, [r3, #0]
 8007070:	685b      	ldr	r3, [r3, #4]
 8007072:	b2db      	uxtb	r3, r3
 8007074:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007078:	b2da      	uxtb	r2, r3
 800707a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800707c:	701a      	strb	r2, [r3, #0]
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007082:	1c5a      	adds	r2, r3, #1
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	629a      	str	r2, [r3, #40]	@ 0x28
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800708c:	b29b      	uxth	r3, r3
 800708e:	3b01      	subs	r3, #1
 8007090:	b29b      	uxth	r3, r3
 8007092:	687a      	ldr	r2, [r7, #4]
 8007094:	4619      	mov	r1, r3
 8007096:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8007098:	2b00      	cmp	r3, #0
 800709a:	d15d      	bne.n	8007158 <UART_Receive_IT+0x16e>
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	68da      	ldr	r2, [r3, #12]
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	681b      	ldr	r3, [r3, #0]
 80070a6:	f022 0220 	bic.w	r2, r2, #32
 80070aa:	60da      	str	r2, [r3, #12]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	68da      	ldr	r2, [r3, #12]
 80070b2:	687b      	ldr	r3, [r7, #4]
 80070b4:	681b      	ldr	r3, [r3, #0]
 80070b6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80070ba:	60da      	str	r2, [r3, #12]
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	695a      	ldr	r2, [r3, #20]
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	681b      	ldr	r3, [r3, #0]
 80070c6:	f022 0201 	bic.w	r2, r2, #1
 80070ca:	615a      	str	r2, [r3, #20]
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	2220      	movs	r2, #32
 80070d0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	2200      	movs	r2, #0
 80070d8:	635a      	str	r2, [r3, #52]	@ 0x34
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80070de:	2b01      	cmp	r3, #1
 80070e0:	d135      	bne.n	800714e <UART_Receive_IT+0x164>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	2200      	movs	r2, #0
 80070e6:	631a      	str	r2, [r3, #48]	@ 0x30
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	330c      	adds	r3, #12
 80070ee:	617b      	str	r3, [r7, #20]
 80070f0:	697b      	ldr	r3, [r7, #20]
 80070f2:	e853 3f00 	ldrex	r3, [r3]
 80070f6:	613b      	str	r3, [r7, #16]
 80070f8:	693b      	ldr	r3, [r7, #16]
 80070fa:	f023 0310 	bic.w	r3, r3, #16
 80070fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	330c      	adds	r3, #12
 8007106:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007108:	623a      	str	r2, [r7, #32]
 800710a:	61fb      	str	r3, [r7, #28]
 800710c:	69f9      	ldr	r1, [r7, #28]
 800710e:	6a3a      	ldr	r2, [r7, #32]
 8007110:	e841 2300 	strex	r3, r2, [r1]
 8007114:	61bb      	str	r3, [r7, #24]
 8007116:	69bb      	ldr	r3, [r7, #24]
 8007118:	2b00      	cmp	r3, #0
 800711a:	d1e5      	bne.n	80070e8 <UART_Receive_IT+0xfe>
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	681b      	ldr	r3, [r3, #0]
 8007122:	f003 0310 	and.w	r3, r3, #16
 8007126:	2b10      	cmp	r3, #16
 8007128:	d10a      	bne.n	8007140 <UART_Receive_IT+0x156>
 800712a:	2300      	movs	r3, #0
 800712c:	60fb      	str	r3, [r7, #12]
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	60fb      	str	r3, [r7, #12]
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	681b      	ldr	r3, [r3, #0]
 800713a:	685b      	ldr	r3, [r3, #4]
 800713c:	60fb      	str	r3, [r7, #12]
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	687b      	ldr	r3, [r7, #4]
 8007142:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007144:	4619      	mov	r1, r3
 8007146:	6878      	ldr	r0, [r7, #4]
 8007148:	f7ff fc4a 	bl	80069e0 <HAL_UARTEx_RxEventCallback>
 800714c:	e002      	b.n	8007154 <UART_Receive_IT+0x16a>
 800714e:	6878      	ldr	r0, [r7, #4]
 8007150:	f7fc fc9e 	bl	8003a90 <HAL_UART_RxCpltCallback>
 8007154:	2300      	movs	r3, #0
 8007156:	e002      	b.n	800715e <UART_Receive_IT+0x174>
 8007158:	2300      	movs	r3, #0
 800715a:	e000      	b.n	800715e <UART_Receive_IT+0x174>
 800715c:	2302      	movs	r3, #2
 800715e:	4618      	mov	r0, r3
 8007160:	3730      	adds	r7, #48	@ 0x30
 8007162:	46bd      	mov	sp, r7
 8007164:	bd80      	pop	{r7, pc}
	...

08007168 <UART_SetConfig>:
 8007168:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800716c:	b0c0      	sub	sp, #256	@ 0x100
 800716e:	af00      	add	r7, sp, #0
 8007170:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8007174:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	691b      	ldr	r3, [r3, #16]
 800717c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8007180:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007184:	68d9      	ldr	r1, [r3, #12]
 8007186:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800718a:	681a      	ldr	r2, [r3, #0]
 800718c:	ea40 0301 	orr.w	r3, r0, r1
 8007190:	6113      	str	r3, [r2, #16]
 8007192:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007196:	689a      	ldr	r2, [r3, #8]
 8007198:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800719c:	691b      	ldr	r3, [r3, #16]
 800719e:	431a      	orrs	r2, r3
 80071a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071a4:	695b      	ldr	r3, [r3, #20]
 80071a6:	431a      	orrs	r2, r3
 80071a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071ac:	69db      	ldr	r3, [r3, #28]
 80071ae:	4313      	orrs	r3, r2
 80071b0:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80071b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	68db      	ldr	r3, [r3, #12]
 80071bc:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80071c0:	f021 010c 	bic.w	r1, r1, #12
 80071c4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071c8:	681a      	ldr	r2, [r3, #0]
 80071ca:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80071ce:	430b      	orrs	r3, r1
 80071d0:	60d3      	str	r3, [r2, #12]
 80071d2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071d6:	681b      	ldr	r3, [r3, #0]
 80071d8:	695b      	ldr	r3, [r3, #20]
 80071da:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80071de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071e2:	6999      	ldr	r1, [r3, #24]
 80071e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071e8:	681a      	ldr	r2, [r3, #0]
 80071ea:	ea40 0301 	orr.w	r3, r0, r1
 80071ee:	6153      	str	r3, [r2, #20]
 80071f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80071f4:	681a      	ldr	r2, [r3, #0]
 80071f6:	4b8f      	ldr	r3, [pc, #572]	@ (8007434 <UART_SetConfig+0x2cc>)
 80071f8:	429a      	cmp	r2, r3
 80071fa:	d005      	beq.n	8007208 <UART_SetConfig+0xa0>
 80071fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007200:	681a      	ldr	r2, [r3, #0]
 8007202:	4b8d      	ldr	r3, [pc, #564]	@ (8007438 <UART_SetConfig+0x2d0>)
 8007204:	429a      	cmp	r2, r3
 8007206:	d104      	bne.n	8007212 <UART_SetConfig+0xaa>
 8007208:	f7fd ff8c 	bl	8005124 <HAL_RCC_GetPCLK2Freq>
 800720c:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8007210:	e003      	b.n	800721a <UART_SetConfig+0xb2>
 8007212:	f7fd ff73 	bl	80050fc <HAL_RCC_GetPCLK1Freq>
 8007216:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800721a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800721e:	69db      	ldr	r3, [r3, #28]
 8007220:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007224:	f040 810c 	bne.w	8007440 <UART_SetConfig+0x2d8>
 8007228:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800722c:	2200      	movs	r2, #0
 800722e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8007232:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8007236:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 800723a:	4622      	mov	r2, r4
 800723c:	462b      	mov	r3, r5
 800723e:	1891      	adds	r1, r2, r2
 8007240:	65b9      	str	r1, [r7, #88]	@ 0x58
 8007242:	415b      	adcs	r3, r3
 8007244:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007246:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800724a:	4621      	mov	r1, r4
 800724c:	eb12 0801 	adds.w	r8, r2, r1
 8007250:	4629      	mov	r1, r5
 8007252:	eb43 0901 	adc.w	r9, r3, r1
 8007256:	f04f 0200 	mov.w	r2, #0
 800725a:	f04f 0300 	mov.w	r3, #0
 800725e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007262:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007266:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800726a:	4690      	mov	r8, r2
 800726c:	4699      	mov	r9, r3
 800726e:	4623      	mov	r3, r4
 8007270:	eb18 0303 	adds.w	r3, r8, r3
 8007274:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007278:	462b      	mov	r3, r5
 800727a:	eb49 0303 	adc.w	r3, r9, r3
 800727e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007282:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007286:	685b      	ldr	r3, [r3, #4]
 8007288:	2200      	movs	r2, #0
 800728a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800728e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8007292:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8007296:	460b      	mov	r3, r1
 8007298:	18db      	adds	r3, r3, r3
 800729a:	653b      	str	r3, [r7, #80]	@ 0x50
 800729c:	4613      	mov	r3, r2
 800729e:	eb42 0303 	adc.w	r3, r2, r3
 80072a2:	657b      	str	r3, [r7, #84]	@ 0x54
 80072a4:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80072a8:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80072ac:	f7f9 f808 	bl	80002c0 <__aeabi_uldivmod>
 80072b0:	4602      	mov	r2, r0
 80072b2:	460b      	mov	r3, r1
 80072b4:	4b61      	ldr	r3, [pc, #388]	@ (800743c <UART_SetConfig+0x2d4>)
 80072b6:	fba3 2302 	umull	r2, r3, r3, r2
 80072ba:	095b      	lsrs	r3, r3, #5
 80072bc:	011c      	lsls	r4, r3, #4
 80072be:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80072c2:	2200      	movs	r2, #0
 80072c4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80072c8:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80072cc:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80072d0:	4642      	mov	r2, r8
 80072d2:	464b      	mov	r3, r9
 80072d4:	1891      	adds	r1, r2, r2
 80072d6:	64b9      	str	r1, [r7, #72]	@ 0x48
 80072d8:	415b      	adcs	r3, r3
 80072da:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80072dc:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80072e0:	4641      	mov	r1, r8
 80072e2:	eb12 0a01 	adds.w	sl, r2, r1
 80072e6:	4649      	mov	r1, r9
 80072e8:	eb43 0b01 	adc.w	fp, r3, r1
 80072ec:	f04f 0200 	mov.w	r2, #0
 80072f0:	f04f 0300 	mov.w	r3, #0
 80072f4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80072f8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80072fc:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007300:	4692      	mov	sl, r2
 8007302:	469b      	mov	fp, r3
 8007304:	4643      	mov	r3, r8
 8007306:	eb1a 0303 	adds.w	r3, sl, r3
 800730a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800730e:	464b      	mov	r3, r9
 8007310:	eb4b 0303 	adc.w	r3, fp, r3
 8007314:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8007318:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800731c:	685b      	ldr	r3, [r3, #4]
 800731e:	2200      	movs	r2, #0
 8007320:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8007324:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8007328:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800732c:	460b      	mov	r3, r1
 800732e:	18db      	adds	r3, r3, r3
 8007330:	643b      	str	r3, [r7, #64]	@ 0x40
 8007332:	4613      	mov	r3, r2
 8007334:	eb42 0303 	adc.w	r3, r2, r3
 8007338:	647b      	str	r3, [r7, #68]	@ 0x44
 800733a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800733e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007342:	f7f8 ffbd 	bl	80002c0 <__aeabi_uldivmod>
 8007346:	4602      	mov	r2, r0
 8007348:	460b      	mov	r3, r1
 800734a:	4611      	mov	r1, r2
 800734c:	4b3b      	ldr	r3, [pc, #236]	@ (800743c <UART_SetConfig+0x2d4>)
 800734e:	fba3 2301 	umull	r2, r3, r3, r1
 8007352:	095b      	lsrs	r3, r3, #5
 8007354:	2264      	movs	r2, #100	@ 0x64
 8007356:	fb02 f303 	mul.w	r3, r2, r3
 800735a:	1acb      	subs	r3, r1, r3
 800735c:	00db      	lsls	r3, r3, #3
 800735e:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8007362:	4b36      	ldr	r3, [pc, #216]	@ (800743c <UART_SetConfig+0x2d4>)
 8007364:	fba3 2302 	umull	r2, r3, r3, r2
 8007368:	095b      	lsrs	r3, r3, #5
 800736a:	005b      	lsls	r3, r3, #1
 800736c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007370:	441c      	add	r4, r3
 8007372:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007376:	2200      	movs	r2, #0
 8007378:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800737c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8007380:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8007384:	4642      	mov	r2, r8
 8007386:	464b      	mov	r3, r9
 8007388:	1891      	adds	r1, r2, r2
 800738a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800738c:	415b      	adcs	r3, r3
 800738e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007390:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8007394:	4641      	mov	r1, r8
 8007396:	1851      	adds	r1, r2, r1
 8007398:	6339      	str	r1, [r7, #48]	@ 0x30
 800739a:	4649      	mov	r1, r9
 800739c:	414b      	adcs	r3, r1
 800739e:	637b      	str	r3, [r7, #52]	@ 0x34
 80073a0:	f04f 0200 	mov.w	r2, #0
 80073a4:	f04f 0300 	mov.w	r3, #0
 80073a8:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80073ac:	4659      	mov	r1, fp
 80073ae:	00cb      	lsls	r3, r1, #3
 80073b0:	4651      	mov	r1, sl
 80073b2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80073b6:	4651      	mov	r1, sl
 80073b8:	00ca      	lsls	r2, r1, #3
 80073ba:	4610      	mov	r0, r2
 80073bc:	4619      	mov	r1, r3
 80073be:	4603      	mov	r3, r0
 80073c0:	4642      	mov	r2, r8
 80073c2:	189b      	adds	r3, r3, r2
 80073c4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80073c8:	464b      	mov	r3, r9
 80073ca:	460a      	mov	r2, r1
 80073cc:	eb42 0303 	adc.w	r3, r2, r3
 80073d0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80073d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80073d8:	685b      	ldr	r3, [r3, #4]
 80073da:	2200      	movs	r2, #0
 80073dc:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80073e0:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80073e4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80073e8:	460b      	mov	r3, r1
 80073ea:	18db      	adds	r3, r3, r3
 80073ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80073ee:	4613      	mov	r3, r2
 80073f0:	eb42 0303 	adc.w	r3, r2, r3
 80073f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80073f6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80073fa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80073fe:	f7f8 ff5f 	bl	80002c0 <__aeabi_uldivmod>
 8007402:	4602      	mov	r2, r0
 8007404:	460b      	mov	r3, r1
 8007406:	4b0d      	ldr	r3, [pc, #52]	@ (800743c <UART_SetConfig+0x2d4>)
 8007408:	fba3 1302 	umull	r1, r3, r3, r2
 800740c:	095b      	lsrs	r3, r3, #5
 800740e:	2164      	movs	r1, #100	@ 0x64
 8007410:	fb01 f303 	mul.w	r3, r1, r3
 8007414:	1ad3      	subs	r3, r2, r3
 8007416:	00db      	lsls	r3, r3, #3
 8007418:	3332      	adds	r3, #50	@ 0x32
 800741a:	4a08      	ldr	r2, [pc, #32]	@ (800743c <UART_SetConfig+0x2d4>)
 800741c:	fba2 2303 	umull	r2, r3, r2, r3
 8007420:	095b      	lsrs	r3, r3, #5
 8007422:	f003 0207 	and.w	r2, r3, #7
 8007426:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800742a:	681b      	ldr	r3, [r3, #0]
 800742c:	4422      	add	r2, r4
 800742e:	609a      	str	r2, [r3, #8]
 8007430:	e106      	b.n	8007640 <UART_SetConfig+0x4d8>
 8007432:	bf00      	nop
 8007434:	40011000 	.word	0x40011000
 8007438:	40011400 	.word	0x40011400
 800743c:	51eb851f 	.word	0x51eb851f
 8007440:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007444:	2200      	movs	r2, #0
 8007446:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800744a:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800744e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8007452:	4642      	mov	r2, r8
 8007454:	464b      	mov	r3, r9
 8007456:	1891      	adds	r1, r2, r2
 8007458:	6239      	str	r1, [r7, #32]
 800745a:	415b      	adcs	r3, r3
 800745c:	627b      	str	r3, [r7, #36]	@ 0x24
 800745e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007462:	4641      	mov	r1, r8
 8007464:	1854      	adds	r4, r2, r1
 8007466:	4649      	mov	r1, r9
 8007468:	eb43 0501 	adc.w	r5, r3, r1
 800746c:	f04f 0200 	mov.w	r2, #0
 8007470:	f04f 0300 	mov.w	r3, #0
 8007474:	00eb      	lsls	r3, r5, #3
 8007476:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800747a:	00e2      	lsls	r2, r4, #3
 800747c:	4614      	mov	r4, r2
 800747e:	461d      	mov	r5, r3
 8007480:	4643      	mov	r3, r8
 8007482:	18e3      	adds	r3, r4, r3
 8007484:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007488:	464b      	mov	r3, r9
 800748a:	eb45 0303 	adc.w	r3, r5, r3
 800748e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007492:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007496:	685b      	ldr	r3, [r3, #4]
 8007498:	2200      	movs	r2, #0
 800749a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800749e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80074a2:	f04f 0200 	mov.w	r2, #0
 80074a6:	f04f 0300 	mov.w	r3, #0
 80074aa:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80074ae:	4629      	mov	r1, r5
 80074b0:	008b      	lsls	r3, r1, #2
 80074b2:	4621      	mov	r1, r4
 80074b4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80074b8:	4621      	mov	r1, r4
 80074ba:	008a      	lsls	r2, r1, #2
 80074bc:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80074c0:	f7f8 fefe 	bl	80002c0 <__aeabi_uldivmod>
 80074c4:	4602      	mov	r2, r0
 80074c6:	460b      	mov	r3, r1
 80074c8:	4b60      	ldr	r3, [pc, #384]	@ (800764c <UART_SetConfig+0x4e4>)
 80074ca:	fba3 2302 	umull	r2, r3, r3, r2
 80074ce:	095b      	lsrs	r3, r3, #5
 80074d0:	011c      	lsls	r4, r3, #4
 80074d2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80074d6:	2200      	movs	r2, #0
 80074d8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80074dc:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80074e0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80074e4:	4642      	mov	r2, r8
 80074e6:	464b      	mov	r3, r9
 80074e8:	1891      	adds	r1, r2, r2
 80074ea:	61b9      	str	r1, [r7, #24]
 80074ec:	415b      	adcs	r3, r3
 80074ee:	61fb      	str	r3, [r7, #28]
 80074f0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80074f4:	4641      	mov	r1, r8
 80074f6:	1851      	adds	r1, r2, r1
 80074f8:	6139      	str	r1, [r7, #16]
 80074fa:	4649      	mov	r1, r9
 80074fc:	414b      	adcs	r3, r1
 80074fe:	617b      	str	r3, [r7, #20]
 8007500:	f04f 0200 	mov.w	r2, #0
 8007504:	f04f 0300 	mov.w	r3, #0
 8007508:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800750c:	4659      	mov	r1, fp
 800750e:	00cb      	lsls	r3, r1, #3
 8007510:	4651      	mov	r1, sl
 8007512:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007516:	4651      	mov	r1, sl
 8007518:	00ca      	lsls	r2, r1, #3
 800751a:	4610      	mov	r0, r2
 800751c:	4619      	mov	r1, r3
 800751e:	4603      	mov	r3, r0
 8007520:	4642      	mov	r2, r8
 8007522:	189b      	adds	r3, r3, r2
 8007524:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8007528:	464b      	mov	r3, r9
 800752a:	460a      	mov	r2, r1
 800752c:	eb42 0303 	adc.w	r3, r2, r3
 8007530:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8007534:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007538:	685b      	ldr	r3, [r3, #4]
 800753a:	2200      	movs	r2, #0
 800753c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800753e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8007540:	f04f 0200 	mov.w	r2, #0
 8007544:	f04f 0300 	mov.w	r3, #0
 8007548:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 800754c:	4649      	mov	r1, r9
 800754e:	008b      	lsls	r3, r1, #2
 8007550:	4641      	mov	r1, r8
 8007552:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007556:	4641      	mov	r1, r8
 8007558:	008a      	lsls	r2, r1, #2
 800755a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800755e:	f7f8 feaf 	bl	80002c0 <__aeabi_uldivmod>
 8007562:	4602      	mov	r2, r0
 8007564:	460b      	mov	r3, r1
 8007566:	4611      	mov	r1, r2
 8007568:	4b38      	ldr	r3, [pc, #224]	@ (800764c <UART_SetConfig+0x4e4>)
 800756a:	fba3 2301 	umull	r2, r3, r3, r1
 800756e:	095b      	lsrs	r3, r3, #5
 8007570:	2264      	movs	r2, #100	@ 0x64
 8007572:	fb02 f303 	mul.w	r3, r2, r3
 8007576:	1acb      	subs	r3, r1, r3
 8007578:	011b      	lsls	r3, r3, #4
 800757a:	3332      	adds	r3, #50	@ 0x32
 800757c:	4a33      	ldr	r2, [pc, #204]	@ (800764c <UART_SetConfig+0x4e4>)
 800757e:	fba2 2303 	umull	r2, r3, r2, r3
 8007582:	095b      	lsrs	r3, r3, #5
 8007584:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007588:	441c      	add	r4, r3
 800758a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800758e:	2200      	movs	r2, #0
 8007590:	673b      	str	r3, [r7, #112]	@ 0x70
 8007592:	677a      	str	r2, [r7, #116]	@ 0x74
 8007594:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8007598:	4642      	mov	r2, r8
 800759a:	464b      	mov	r3, r9
 800759c:	1891      	adds	r1, r2, r2
 800759e:	60b9      	str	r1, [r7, #8]
 80075a0:	415b      	adcs	r3, r3
 80075a2:	60fb      	str	r3, [r7, #12]
 80075a4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80075a8:	4641      	mov	r1, r8
 80075aa:	1851      	adds	r1, r2, r1
 80075ac:	6039      	str	r1, [r7, #0]
 80075ae:	4649      	mov	r1, r9
 80075b0:	414b      	adcs	r3, r1
 80075b2:	607b      	str	r3, [r7, #4]
 80075b4:	f04f 0200 	mov.w	r2, #0
 80075b8:	f04f 0300 	mov.w	r3, #0
 80075bc:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80075c0:	4659      	mov	r1, fp
 80075c2:	00cb      	lsls	r3, r1, #3
 80075c4:	4651      	mov	r1, sl
 80075c6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80075ca:	4651      	mov	r1, sl
 80075cc:	00ca      	lsls	r2, r1, #3
 80075ce:	4610      	mov	r0, r2
 80075d0:	4619      	mov	r1, r3
 80075d2:	4603      	mov	r3, r0
 80075d4:	4642      	mov	r2, r8
 80075d6:	189b      	adds	r3, r3, r2
 80075d8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80075da:	464b      	mov	r3, r9
 80075dc:	460a      	mov	r2, r1
 80075de:	eb42 0303 	adc.w	r3, r2, r3
 80075e2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80075e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80075e8:	685b      	ldr	r3, [r3, #4]
 80075ea:	2200      	movs	r2, #0
 80075ec:	663b      	str	r3, [r7, #96]	@ 0x60
 80075ee:	667a      	str	r2, [r7, #100]	@ 0x64
 80075f0:	f04f 0200 	mov.w	r2, #0
 80075f4:	f04f 0300 	mov.w	r3, #0
 80075f8:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80075fc:	4649      	mov	r1, r9
 80075fe:	008b      	lsls	r3, r1, #2
 8007600:	4641      	mov	r1, r8
 8007602:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007606:	4641      	mov	r1, r8
 8007608:	008a      	lsls	r2, r1, #2
 800760a:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800760e:	f7f8 fe57 	bl	80002c0 <__aeabi_uldivmod>
 8007612:	4602      	mov	r2, r0
 8007614:	460b      	mov	r3, r1
 8007616:	4b0d      	ldr	r3, [pc, #52]	@ (800764c <UART_SetConfig+0x4e4>)
 8007618:	fba3 1302 	umull	r1, r3, r3, r2
 800761c:	095b      	lsrs	r3, r3, #5
 800761e:	2164      	movs	r1, #100	@ 0x64
 8007620:	fb01 f303 	mul.w	r3, r1, r3
 8007624:	1ad3      	subs	r3, r2, r3
 8007626:	011b      	lsls	r3, r3, #4
 8007628:	3332      	adds	r3, #50	@ 0x32
 800762a:	4a08      	ldr	r2, [pc, #32]	@ (800764c <UART_SetConfig+0x4e4>)
 800762c:	fba2 2303 	umull	r2, r3, r2, r3
 8007630:	095b      	lsrs	r3, r3, #5
 8007632:	f003 020f 	and.w	r2, r3, #15
 8007636:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800763a:	681b      	ldr	r3, [r3, #0]
 800763c:	4422      	add	r2, r4
 800763e:	609a      	str	r2, [r3, #8]
 8007640:	bf00      	nop
 8007642:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8007646:	46bd      	mov	sp, r7
 8007648:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800764c:	51eb851f 	.word	0x51eb851f

08007650 <MX_FATFS_Init>:
 8007650:	b580      	push	{r7, lr}
 8007652:	af00      	add	r7, sp, #0
 8007654:	4904      	ldr	r1, [pc, #16]	@ (8007668 <MX_FATFS_Init+0x18>)
 8007656:	4805      	ldr	r0, [pc, #20]	@ (800766c <MX_FATFS_Init+0x1c>)
 8007658:	f000 f8ae 	bl	80077b8 <FATFS_LinkDriver>
 800765c:	4603      	mov	r3, r0
 800765e:	461a      	mov	r2, r3
 8007660:	4b03      	ldr	r3, [pc, #12]	@ (8007670 <MX_FATFS_Init+0x20>)
 8007662:	701a      	strb	r2, [r3, #0]
 8007664:	bf00      	nop
 8007666:	bd80      	pop	{r7, pc}
 8007668:	2000a9ac 	.word	0x2000a9ac
 800766c:	2000a6bc 	.word	0x2000a6bc
 8007670:	2000a9a8 	.word	0x2000a9a8

08007674 <USER_initialize>:
 8007674:	b580      	push	{r7, lr}
 8007676:	b082      	sub	sp, #8
 8007678:	af00      	add	r7, sp, #0
 800767a:	4603      	mov	r3, r0
 800767c:	71fb      	strb	r3, [r7, #7]
 800767e:	79fb      	ldrb	r3, [r7, #7]
 8007680:	4618      	mov	r0, r3
 8007682:	f7f9 f949 	bl	8000918 <SD_disk_initialize>
 8007686:	bf00      	nop
 8007688:	4618      	mov	r0, r3
 800768a:	3708      	adds	r7, #8
 800768c:	46bd      	mov	sp, r7
 800768e:	bd80      	pop	{r7, pc}

08007690 <USER_status>:
 8007690:	b580      	push	{r7, lr}
 8007692:	b082      	sub	sp, #8
 8007694:	af00      	add	r7, sp, #0
 8007696:	4603      	mov	r3, r0
 8007698:	71fb      	strb	r3, [r7, #7]
 800769a:	79fb      	ldrb	r3, [r7, #7]
 800769c:	4618      	mov	r0, r3
 800769e:	f7f9 fa21 	bl	8000ae4 <SD_disk_status>
 80076a2:	bf00      	nop
 80076a4:	4618      	mov	r0, r3
 80076a6:	3708      	adds	r7, #8
 80076a8:	46bd      	mov	sp, r7
 80076aa:	bd80      	pop	{r7, pc}

080076ac <USER_read>:
 80076ac:	b580      	push	{r7, lr}
 80076ae:	b084      	sub	sp, #16
 80076b0:	af00      	add	r7, sp, #0
 80076b2:	60b9      	str	r1, [r7, #8]
 80076b4:	607a      	str	r2, [r7, #4]
 80076b6:	603b      	str	r3, [r7, #0]
 80076b8:	4603      	mov	r3, r0
 80076ba:	73fb      	strb	r3, [r7, #15]
 80076bc:	7bf8      	ldrb	r0, [r7, #15]
 80076be:	683b      	ldr	r3, [r7, #0]
 80076c0:	687a      	ldr	r2, [r7, #4]
 80076c2:	68b9      	ldr	r1, [r7, #8]
 80076c4:	f7f9 fa24 	bl	8000b10 <SD_disk_read>
 80076c8:	bf00      	nop
 80076ca:	4618      	mov	r0, r3
 80076cc:	3710      	adds	r7, #16
 80076ce:	46bd      	mov	sp, r7
 80076d0:	bd80      	pop	{r7, pc}

080076d2 <USER_write>:
 80076d2:	b580      	push	{r7, lr}
 80076d4:	b084      	sub	sp, #16
 80076d6:	af00      	add	r7, sp, #0
 80076d8:	60b9      	str	r1, [r7, #8]
 80076da:	607a      	str	r2, [r7, #4]
 80076dc:	603b      	str	r3, [r7, #0]
 80076de:	4603      	mov	r3, r0
 80076e0:	73fb      	strb	r3, [r7, #15]
 80076e2:	7bf8      	ldrb	r0, [r7, #15]
 80076e4:	683b      	ldr	r3, [r7, #0]
 80076e6:	687a      	ldr	r2, [r7, #4]
 80076e8:	68b9      	ldr	r1, [r7, #8]
 80076ea:	f7f9 fa7b 	bl	8000be4 <SD_disk_write>
 80076ee:	bf00      	nop
 80076f0:	4618      	mov	r0, r3
 80076f2:	3710      	adds	r7, #16
 80076f4:	46bd      	mov	sp, r7
 80076f6:	bd80      	pop	{r7, pc}

080076f8 <USER_ioctl>:
 80076f8:	b580      	push	{r7, lr}
 80076fa:	b082      	sub	sp, #8
 80076fc:	af00      	add	r7, sp, #0
 80076fe:	4603      	mov	r3, r0
 8007700:	603a      	str	r2, [r7, #0]
 8007702:	71fb      	strb	r3, [r7, #7]
 8007704:	460b      	mov	r3, r1
 8007706:	71bb      	strb	r3, [r7, #6]
 8007708:	79fb      	ldrb	r3, [r7, #7]
 800770a:	79b9      	ldrb	r1, [r7, #6]
 800770c:	683a      	ldr	r2, [r7, #0]
 800770e:	4618      	mov	r0, r3
 8007710:	f7f9 faec 	bl	8000cec <SD_disk_ioctl>
 8007714:	bf00      	nop
 8007716:	4618      	mov	r0, r3
 8007718:	3708      	adds	r7, #8
 800771a:	46bd      	mov	sp, r7
 800771c:	bd80      	pop	{r7, pc}
	...

08007720 <FATFS_LinkDriverEx>:
 8007720:	b480      	push	{r7}
 8007722:	b087      	sub	sp, #28
 8007724:	af00      	add	r7, sp, #0
 8007726:	60f8      	str	r0, [r7, #12]
 8007728:	60b9      	str	r1, [r7, #8]
 800772a:	4613      	mov	r3, r2
 800772c:	71fb      	strb	r3, [r7, #7]
 800772e:	2301      	movs	r3, #1
 8007730:	75fb      	strb	r3, [r7, #23]
 8007732:	2300      	movs	r3, #0
 8007734:	75bb      	strb	r3, [r7, #22]
 8007736:	4b1f      	ldr	r3, [pc, #124]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007738:	7a5b      	ldrb	r3, [r3, #9]
 800773a:	b2db      	uxtb	r3, r3
 800773c:	2b00      	cmp	r3, #0
 800773e:	d131      	bne.n	80077a4 <FATFS_LinkDriverEx+0x84>
 8007740:	4b1c      	ldr	r3, [pc, #112]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007742:	7a5b      	ldrb	r3, [r3, #9]
 8007744:	b2db      	uxtb	r3, r3
 8007746:	461a      	mov	r2, r3
 8007748:	4b1a      	ldr	r3, [pc, #104]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 800774a:	2100      	movs	r1, #0
 800774c:	5499      	strb	r1, [r3, r2]
 800774e:	4b19      	ldr	r3, [pc, #100]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007750:	7a5b      	ldrb	r3, [r3, #9]
 8007752:	b2db      	uxtb	r3, r3
 8007754:	4a17      	ldr	r2, [pc, #92]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007756:	009b      	lsls	r3, r3, #2
 8007758:	4413      	add	r3, r2
 800775a:	68fa      	ldr	r2, [r7, #12]
 800775c:	605a      	str	r2, [r3, #4]
 800775e:	4b15      	ldr	r3, [pc, #84]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007760:	7a5b      	ldrb	r3, [r3, #9]
 8007762:	b2db      	uxtb	r3, r3
 8007764:	461a      	mov	r2, r3
 8007766:	4b13      	ldr	r3, [pc, #76]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007768:	4413      	add	r3, r2
 800776a:	79fa      	ldrb	r2, [r7, #7]
 800776c:	721a      	strb	r2, [r3, #8]
 800776e:	4b11      	ldr	r3, [pc, #68]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 8007770:	7a5b      	ldrb	r3, [r3, #9]
 8007772:	b2db      	uxtb	r3, r3
 8007774:	1c5a      	adds	r2, r3, #1
 8007776:	b2d1      	uxtb	r1, r2
 8007778:	4a0e      	ldr	r2, [pc, #56]	@ (80077b4 <FATFS_LinkDriverEx+0x94>)
 800777a:	7251      	strb	r1, [r2, #9]
 800777c:	75bb      	strb	r3, [r7, #22]
 800777e:	7dbb      	ldrb	r3, [r7, #22]
 8007780:	3330      	adds	r3, #48	@ 0x30
 8007782:	b2da      	uxtb	r2, r3
 8007784:	68bb      	ldr	r3, [r7, #8]
 8007786:	701a      	strb	r2, [r3, #0]
 8007788:	68bb      	ldr	r3, [r7, #8]
 800778a:	3301      	adds	r3, #1
 800778c:	223a      	movs	r2, #58	@ 0x3a
 800778e:	701a      	strb	r2, [r3, #0]
 8007790:	68bb      	ldr	r3, [r7, #8]
 8007792:	3302      	adds	r3, #2
 8007794:	222f      	movs	r2, #47	@ 0x2f
 8007796:	701a      	strb	r2, [r3, #0]
 8007798:	68bb      	ldr	r3, [r7, #8]
 800779a:	3303      	adds	r3, #3
 800779c:	2200      	movs	r2, #0
 800779e:	701a      	strb	r2, [r3, #0]
 80077a0:	2300      	movs	r3, #0
 80077a2:	75fb      	strb	r3, [r7, #23]
 80077a4:	7dfb      	ldrb	r3, [r7, #23]
 80077a6:	4618      	mov	r0, r3
 80077a8:	371c      	adds	r7, #28
 80077aa:	46bd      	mov	sp, r7
 80077ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077b0:	4770      	bx	lr
 80077b2:	bf00      	nop
 80077b4:	2000a9b0 	.word	0x2000a9b0

080077b8 <FATFS_LinkDriver>:
 80077b8:	b580      	push	{r7, lr}
 80077ba:	b082      	sub	sp, #8
 80077bc:	af00      	add	r7, sp, #0
 80077be:	6078      	str	r0, [r7, #4]
 80077c0:	6039      	str	r1, [r7, #0]
 80077c2:	2200      	movs	r2, #0
 80077c4:	6839      	ldr	r1, [r7, #0]
 80077c6:	6878      	ldr	r0, [r7, #4]
 80077c8:	f7ff ffaa 	bl	8007720 <FATFS_LinkDriverEx>
 80077cc:	4603      	mov	r3, r0
 80077ce:	4618      	mov	r0, r3
 80077d0:	3708      	adds	r7, #8
 80077d2:	46bd      	mov	sp, r7
 80077d4:	bd80      	pop	{r7, pc}
	...

080077d8 <siprintf>:
 80077d8:	b40e      	push	{r1, r2, r3}
 80077da:	b500      	push	{lr}
 80077dc:	b09c      	sub	sp, #112	@ 0x70
 80077de:	ab1d      	add	r3, sp, #116	@ 0x74
 80077e0:	9002      	str	r0, [sp, #8]
 80077e2:	9006      	str	r0, [sp, #24]
 80077e4:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80077e8:	4809      	ldr	r0, [pc, #36]	@ (8007810 <siprintf+0x38>)
 80077ea:	9107      	str	r1, [sp, #28]
 80077ec:	9104      	str	r1, [sp, #16]
 80077ee:	4909      	ldr	r1, [pc, #36]	@ (8007814 <siprintf+0x3c>)
 80077f0:	f853 2b04 	ldr.w	r2, [r3], #4
 80077f4:	9105      	str	r1, [sp, #20]
 80077f6:	6800      	ldr	r0, [r0, #0]
 80077f8:	9301      	str	r3, [sp, #4]
 80077fa:	a902      	add	r1, sp, #8
 80077fc:	f000 f994 	bl	8007b28 <_svfiprintf_r>
 8007800:	9b02      	ldr	r3, [sp, #8]
 8007802:	2200      	movs	r2, #0
 8007804:	701a      	strb	r2, [r3, #0]
 8007806:	b01c      	add	sp, #112	@ 0x70
 8007808:	f85d eb04 	ldr.w	lr, [sp], #4
 800780c:	b003      	add	sp, #12
 800780e:	4770      	bx	lr
 8007810:	2000a6d0 	.word	0x2000a6d0
 8007814:	ffff0208 	.word	0xffff0208

08007818 <memset>:
 8007818:	4402      	add	r2, r0
 800781a:	4603      	mov	r3, r0
 800781c:	4293      	cmp	r3, r2
 800781e:	d100      	bne.n	8007822 <memset+0xa>
 8007820:	4770      	bx	lr
 8007822:	f803 1b01 	strb.w	r1, [r3], #1
 8007826:	e7f9      	b.n	800781c <memset+0x4>

08007828 <__errno>:
 8007828:	4b01      	ldr	r3, [pc, #4]	@ (8007830 <__errno+0x8>)
 800782a:	6818      	ldr	r0, [r3, #0]
 800782c:	4770      	bx	lr
 800782e:	bf00      	nop
 8007830:	2000a6d0 	.word	0x2000a6d0

08007834 <__libc_init_array>:
 8007834:	b570      	push	{r4, r5, r6, lr}
 8007836:	4d0d      	ldr	r5, [pc, #52]	@ (800786c <__libc_init_array+0x38>)
 8007838:	4c0d      	ldr	r4, [pc, #52]	@ (8007870 <__libc_init_array+0x3c>)
 800783a:	1b64      	subs	r4, r4, r5
 800783c:	10a4      	asrs	r4, r4, #2
 800783e:	2600      	movs	r6, #0
 8007840:	42a6      	cmp	r6, r4
 8007842:	d109      	bne.n	8007858 <__libc_init_array+0x24>
 8007844:	4d0b      	ldr	r5, [pc, #44]	@ (8007874 <__libc_init_array+0x40>)
 8007846:	4c0c      	ldr	r4, [pc, #48]	@ (8007878 <__libc_init_array+0x44>)
 8007848:	f000 fc66 	bl	8008118 <_init>
 800784c:	1b64      	subs	r4, r4, r5
 800784e:	10a4      	asrs	r4, r4, #2
 8007850:	2600      	movs	r6, #0
 8007852:	42a6      	cmp	r6, r4
 8007854:	d105      	bne.n	8007862 <__libc_init_array+0x2e>
 8007856:	bd70      	pop	{r4, r5, r6, pc}
 8007858:	f855 3b04 	ldr.w	r3, [r5], #4
 800785c:	4798      	blx	r3
 800785e:	3601      	adds	r6, #1
 8007860:	e7ee      	b.n	8007840 <__libc_init_array+0xc>
 8007862:	f855 3b04 	ldr.w	r3, [r5], #4
 8007866:	4798      	blx	r3
 8007868:	3601      	adds	r6, #1
 800786a:	e7f2      	b.n	8007852 <__libc_init_array+0x1e>
 800786c:	0804273c 	.word	0x0804273c
 8007870:	0804273c 	.word	0x0804273c
 8007874:	0804273c 	.word	0x0804273c
 8007878:	08042740 	.word	0x08042740

0800787c <__retarget_lock_acquire_recursive>:
 800787c:	4770      	bx	lr

0800787e <__retarget_lock_release_recursive>:
 800787e:	4770      	bx	lr

08007880 <_free_r>:
 8007880:	b538      	push	{r3, r4, r5, lr}
 8007882:	4605      	mov	r5, r0
 8007884:	2900      	cmp	r1, #0
 8007886:	d041      	beq.n	800790c <_free_r+0x8c>
 8007888:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800788c:	1f0c      	subs	r4, r1, #4
 800788e:	2b00      	cmp	r3, #0
 8007890:	bfb8      	it	lt
 8007892:	18e4      	addlt	r4, r4, r3
 8007894:	f000 f8e0 	bl	8007a58 <__malloc_lock>
 8007898:	4a1d      	ldr	r2, [pc, #116]	@ (8007910 <_free_r+0x90>)
 800789a:	6813      	ldr	r3, [r2, #0]
 800789c:	b933      	cbnz	r3, 80078ac <_free_r+0x2c>
 800789e:	6063      	str	r3, [r4, #4]
 80078a0:	6014      	str	r4, [r2, #0]
 80078a2:	4628      	mov	r0, r5
 80078a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80078a8:	f000 b8dc 	b.w	8007a64 <__malloc_unlock>
 80078ac:	42a3      	cmp	r3, r4
 80078ae:	d908      	bls.n	80078c2 <_free_r+0x42>
 80078b0:	6820      	ldr	r0, [r4, #0]
 80078b2:	1821      	adds	r1, r4, r0
 80078b4:	428b      	cmp	r3, r1
 80078b6:	bf01      	itttt	eq
 80078b8:	6819      	ldreq	r1, [r3, #0]
 80078ba:	685b      	ldreq	r3, [r3, #4]
 80078bc:	1809      	addeq	r1, r1, r0
 80078be:	6021      	streq	r1, [r4, #0]
 80078c0:	e7ed      	b.n	800789e <_free_r+0x1e>
 80078c2:	461a      	mov	r2, r3
 80078c4:	685b      	ldr	r3, [r3, #4]
 80078c6:	b10b      	cbz	r3, 80078cc <_free_r+0x4c>
 80078c8:	42a3      	cmp	r3, r4
 80078ca:	d9fa      	bls.n	80078c2 <_free_r+0x42>
 80078cc:	6811      	ldr	r1, [r2, #0]
 80078ce:	1850      	adds	r0, r2, r1
 80078d0:	42a0      	cmp	r0, r4
 80078d2:	d10b      	bne.n	80078ec <_free_r+0x6c>
 80078d4:	6820      	ldr	r0, [r4, #0]
 80078d6:	4401      	add	r1, r0
 80078d8:	1850      	adds	r0, r2, r1
 80078da:	4283      	cmp	r3, r0
 80078dc:	6011      	str	r1, [r2, #0]
 80078de:	d1e0      	bne.n	80078a2 <_free_r+0x22>
 80078e0:	6818      	ldr	r0, [r3, #0]
 80078e2:	685b      	ldr	r3, [r3, #4]
 80078e4:	6053      	str	r3, [r2, #4]
 80078e6:	4408      	add	r0, r1
 80078e8:	6010      	str	r0, [r2, #0]
 80078ea:	e7da      	b.n	80078a2 <_free_r+0x22>
 80078ec:	d902      	bls.n	80078f4 <_free_r+0x74>
 80078ee:	230c      	movs	r3, #12
 80078f0:	602b      	str	r3, [r5, #0]
 80078f2:	e7d6      	b.n	80078a2 <_free_r+0x22>
 80078f4:	6820      	ldr	r0, [r4, #0]
 80078f6:	1821      	adds	r1, r4, r0
 80078f8:	428b      	cmp	r3, r1
 80078fa:	bf04      	itt	eq
 80078fc:	6819      	ldreq	r1, [r3, #0]
 80078fe:	685b      	ldreq	r3, [r3, #4]
 8007900:	6063      	str	r3, [r4, #4]
 8007902:	bf04      	itt	eq
 8007904:	1809      	addeq	r1, r1, r0
 8007906:	6021      	streq	r1, [r4, #0]
 8007908:	6054      	str	r4, [r2, #4]
 800790a:	e7ca      	b.n	80078a2 <_free_r+0x22>
 800790c:	bd38      	pop	{r3, r4, r5, pc}
 800790e:	bf00      	nop
 8007910:	2000ab00 	.word	0x2000ab00

08007914 <sbrk_aligned>:
 8007914:	b570      	push	{r4, r5, r6, lr}
 8007916:	4e0f      	ldr	r6, [pc, #60]	@ (8007954 <sbrk_aligned+0x40>)
 8007918:	460c      	mov	r4, r1
 800791a:	6831      	ldr	r1, [r6, #0]
 800791c:	4605      	mov	r5, r0
 800791e:	b911      	cbnz	r1, 8007926 <sbrk_aligned+0x12>
 8007920:	f000 fba6 	bl	8008070 <_sbrk_r>
 8007924:	6030      	str	r0, [r6, #0]
 8007926:	4621      	mov	r1, r4
 8007928:	4628      	mov	r0, r5
 800792a:	f000 fba1 	bl	8008070 <_sbrk_r>
 800792e:	1c43      	adds	r3, r0, #1
 8007930:	d103      	bne.n	800793a <sbrk_aligned+0x26>
 8007932:	f04f 34ff 	mov.w	r4, #4294967295
 8007936:	4620      	mov	r0, r4
 8007938:	bd70      	pop	{r4, r5, r6, pc}
 800793a:	1cc4      	adds	r4, r0, #3
 800793c:	f024 0403 	bic.w	r4, r4, #3
 8007940:	42a0      	cmp	r0, r4
 8007942:	d0f8      	beq.n	8007936 <sbrk_aligned+0x22>
 8007944:	1a21      	subs	r1, r4, r0
 8007946:	4628      	mov	r0, r5
 8007948:	f000 fb92 	bl	8008070 <_sbrk_r>
 800794c:	3001      	adds	r0, #1
 800794e:	d1f2      	bne.n	8007936 <sbrk_aligned+0x22>
 8007950:	e7ef      	b.n	8007932 <sbrk_aligned+0x1e>
 8007952:	bf00      	nop
 8007954:	2000aafc 	.word	0x2000aafc

08007958 <_malloc_r>:
 8007958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800795c:	1ccd      	adds	r5, r1, #3
 800795e:	f025 0503 	bic.w	r5, r5, #3
 8007962:	3508      	adds	r5, #8
 8007964:	2d0c      	cmp	r5, #12
 8007966:	bf38      	it	cc
 8007968:	250c      	movcc	r5, #12
 800796a:	2d00      	cmp	r5, #0
 800796c:	4606      	mov	r6, r0
 800796e:	db01      	blt.n	8007974 <_malloc_r+0x1c>
 8007970:	42a9      	cmp	r1, r5
 8007972:	d904      	bls.n	800797e <_malloc_r+0x26>
 8007974:	230c      	movs	r3, #12
 8007976:	6033      	str	r3, [r6, #0]
 8007978:	2000      	movs	r0, #0
 800797a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800797e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8007a54 <_malloc_r+0xfc>
 8007982:	f000 f869 	bl	8007a58 <__malloc_lock>
 8007986:	f8d8 3000 	ldr.w	r3, [r8]
 800798a:	461c      	mov	r4, r3
 800798c:	bb44      	cbnz	r4, 80079e0 <_malloc_r+0x88>
 800798e:	4629      	mov	r1, r5
 8007990:	4630      	mov	r0, r6
 8007992:	f7ff ffbf 	bl	8007914 <sbrk_aligned>
 8007996:	1c43      	adds	r3, r0, #1
 8007998:	4604      	mov	r4, r0
 800799a:	d158      	bne.n	8007a4e <_malloc_r+0xf6>
 800799c:	f8d8 4000 	ldr.w	r4, [r8]
 80079a0:	4627      	mov	r7, r4
 80079a2:	2f00      	cmp	r7, #0
 80079a4:	d143      	bne.n	8007a2e <_malloc_r+0xd6>
 80079a6:	2c00      	cmp	r4, #0
 80079a8:	d04b      	beq.n	8007a42 <_malloc_r+0xea>
 80079aa:	6823      	ldr	r3, [r4, #0]
 80079ac:	4639      	mov	r1, r7
 80079ae:	4630      	mov	r0, r6
 80079b0:	eb04 0903 	add.w	r9, r4, r3
 80079b4:	f000 fb5c 	bl	8008070 <_sbrk_r>
 80079b8:	4581      	cmp	r9, r0
 80079ba:	d142      	bne.n	8007a42 <_malloc_r+0xea>
 80079bc:	6821      	ldr	r1, [r4, #0]
 80079be:	1a6d      	subs	r5, r5, r1
 80079c0:	4629      	mov	r1, r5
 80079c2:	4630      	mov	r0, r6
 80079c4:	f7ff ffa6 	bl	8007914 <sbrk_aligned>
 80079c8:	3001      	adds	r0, #1
 80079ca:	d03a      	beq.n	8007a42 <_malloc_r+0xea>
 80079cc:	6823      	ldr	r3, [r4, #0]
 80079ce:	442b      	add	r3, r5
 80079d0:	6023      	str	r3, [r4, #0]
 80079d2:	f8d8 3000 	ldr.w	r3, [r8]
 80079d6:	685a      	ldr	r2, [r3, #4]
 80079d8:	bb62      	cbnz	r2, 8007a34 <_malloc_r+0xdc>
 80079da:	f8c8 7000 	str.w	r7, [r8]
 80079de:	e00f      	b.n	8007a00 <_malloc_r+0xa8>
 80079e0:	6822      	ldr	r2, [r4, #0]
 80079e2:	1b52      	subs	r2, r2, r5
 80079e4:	d420      	bmi.n	8007a28 <_malloc_r+0xd0>
 80079e6:	2a0b      	cmp	r2, #11
 80079e8:	d917      	bls.n	8007a1a <_malloc_r+0xc2>
 80079ea:	1961      	adds	r1, r4, r5
 80079ec:	42a3      	cmp	r3, r4
 80079ee:	6025      	str	r5, [r4, #0]
 80079f0:	bf18      	it	ne
 80079f2:	6059      	strne	r1, [r3, #4]
 80079f4:	6863      	ldr	r3, [r4, #4]
 80079f6:	bf08      	it	eq
 80079f8:	f8c8 1000 	streq.w	r1, [r8]
 80079fc:	5162      	str	r2, [r4, r5]
 80079fe:	604b      	str	r3, [r1, #4]
 8007a00:	4630      	mov	r0, r6
 8007a02:	f000 f82f 	bl	8007a64 <__malloc_unlock>
 8007a06:	f104 000b 	add.w	r0, r4, #11
 8007a0a:	1d23      	adds	r3, r4, #4
 8007a0c:	f020 0007 	bic.w	r0, r0, #7
 8007a10:	1ac2      	subs	r2, r0, r3
 8007a12:	bf1c      	itt	ne
 8007a14:	1a1b      	subne	r3, r3, r0
 8007a16:	50a3      	strne	r3, [r4, r2]
 8007a18:	e7af      	b.n	800797a <_malloc_r+0x22>
 8007a1a:	6862      	ldr	r2, [r4, #4]
 8007a1c:	42a3      	cmp	r3, r4
 8007a1e:	bf0c      	ite	eq
 8007a20:	f8c8 2000 	streq.w	r2, [r8]
 8007a24:	605a      	strne	r2, [r3, #4]
 8007a26:	e7eb      	b.n	8007a00 <_malloc_r+0xa8>
 8007a28:	4623      	mov	r3, r4
 8007a2a:	6864      	ldr	r4, [r4, #4]
 8007a2c:	e7ae      	b.n	800798c <_malloc_r+0x34>
 8007a2e:	463c      	mov	r4, r7
 8007a30:	687f      	ldr	r7, [r7, #4]
 8007a32:	e7b6      	b.n	80079a2 <_malloc_r+0x4a>
 8007a34:	461a      	mov	r2, r3
 8007a36:	685b      	ldr	r3, [r3, #4]
 8007a38:	42a3      	cmp	r3, r4
 8007a3a:	d1fb      	bne.n	8007a34 <_malloc_r+0xdc>
 8007a3c:	2300      	movs	r3, #0
 8007a3e:	6053      	str	r3, [r2, #4]
 8007a40:	e7de      	b.n	8007a00 <_malloc_r+0xa8>
 8007a42:	230c      	movs	r3, #12
 8007a44:	6033      	str	r3, [r6, #0]
 8007a46:	4630      	mov	r0, r6
 8007a48:	f000 f80c 	bl	8007a64 <__malloc_unlock>
 8007a4c:	e794      	b.n	8007978 <_malloc_r+0x20>
 8007a4e:	6005      	str	r5, [r0, #0]
 8007a50:	e7d6      	b.n	8007a00 <_malloc_r+0xa8>
 8007a52:	bf00      	nop
 8007a54:	2000ab00 	.word	0x2000ab00

08007a58 <__malloc_lock>:
 8007a58:	4801      	ldr	r0, [pc, #4]	@ (8007a60 <__malloc_lock+0x8>)
 8007a5a:	f7ff bf0f 	b.w	800787c <__retarget_lock_acquire_recursive>
 8007a5e:	bf00      	nop
 8007a60:	2000aaf8 	.word	0x2000aaf8

08007a64 <__malloc_unlock>:
 8007a64:	4801      	ldr	r0, [pc, #4]	@ (8007a6c <__malloc_unlock+0x8>)
 8007a66:	f7ff bf0a 	b.w	800787e <__retarget_lock_release_recursive>
 8007a6a:	bf00      	nop
 8007a6c:	2000aaf8 	.word	0x2000aaf8

08007a70 <__ssputs_r>:
 8007a70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007a74:	688e      	ldr	r6, [r1, #8]
 8007a76:	461f      	mov	r7, r3
 8007a78:	42be      	cmp	r6, r7
 8007a7a:	680b      	ldr	r3, [r1, #0]
 8007a7c:	4682      	mov	sl, r0
 8007a7e:	460c      	mov	r4, r1
 8007a80:	4690      	mov	r8, r2
 8007a82:	d82d      	bhi.n	8007ae0 <__ssputs_r+0x70>
 8007a84:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007a88:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8007a8c:	d026      	beq.n	8007adc <__ssputs_r+0x6c>
 8007a8e:	6965      	ldr	r5, [r4, #20]
 8007a90:	6909      	ldr	r1, [r1, #16]
 8007a92:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007a96:	eba3 0901 	sub.w	r9, r3, r1
 8007a9a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007a9e:	1c7b      	adds	r3, r7, #1
 8007aa0:	444b      	add	r3, r9
 8007aa2:	106d      	asrs	r5, r5, #1
 8007aa4:	429d      	cmp	r5, r3
 8007aa6:	bf38      	it	cc
 8007aa8:	461d      	movcc	r5, r3
 8007aaa:	0553      	lsls	r3, r2, #21
 8007aac:	d527      	bpl.n	8007afe <__ssputs_r+0x8e>
 8007aae:	4629      	mov	r1, r5
 8007ab0:	f7ff ff52 	bl	8007958 <_malloc_r>
 8007ab4:	4606      	mov	r6, r0
 8007ab6:	b360      	cbz	r0, 8007b12 <__ssputs_r+0xa2>
 8007ab8:	6921      	ldr	r1, [r4, #16]
 8007aba:	464a      	mov	r2, r9
 8007abc:	f000 fae8 	bl	8008090 <memcpy>
 8007ac0:	89a3      	ldrh	r3, [r4, #12]
 8007ac2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8007ac6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007aca:	81a3      	strh	r3, [r4, #12]
 8007acc:	6126      	str	r6, [r4, #16]
 8007ace:	6165      	str	r5, [r4, #20]
 8007ad0:	444e      	add	r6, r9
 8007ad2:	eba5 0509 	sub.w	r5, r5, r9
 8007ad6:	6026      	str	r6, [r4, #0]
 8007ad8:	60a5      	str	r5, [r4, #8]
 8007ada:	463e      	mov	r6, r7
 8007adc:	42be      	cmp	r6, r7
 8007ade:	d900      	bls.n	8007ae2 <__ssputs_r+0x72>
 8007ae0:	463e      	mov	r6, r7
 8007ae2:	6820      	ldr	r0, [r4, #0]
 8007ae4:	4632      	mov	r2, r6
 8007ae6:	4641      	mov	r1, r8
 8007ae8:	f000 faa8 	bl	800803c <memmove>
 8007aec:	68a3      	ldr	r3, [r4, #8]
 8007aee:	1b9b      	subs	r3, r3, r6
 8007af0:	60a3      	str	r3, [r4, #8]
 8007af2:	6823      	ldr	r3, [r4, #0]
 8007af4:	4433      	add	r3, r6
 8007af6:	6023      	str	r3, [r4, #0]
 8007af8:	2000      	movs	r0, #0
 8007afa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007afe:	462a      	mov	r2, r5
 8007b00:	f000 fad4 	bl	80080ac <_realloc_r>
 8007b04:	4606      	mov	r6, r0
 8007b06:	2800      	cmp	r0, #0
 8007b08:	d1e0      	bne.n	8007acc <__ssputs_r+0x5c>
 8007b0a:	6921      	ldr	r1, [r4, #16]
 8007b0c:	4650      	mov	r0, sl
 8007b0e:	f7ff feb7 	bl	8007880 <_free_r>
 8007b12:	230c      	movs	r3, #12
 8007b14:	f8ca 3000 	str.w	r3, [sl]
 8007b18:	89a3      	ldrh	r3, [r4, #12]
 8007b1a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007b1e:	81a3      	strh	r3, [r4, #12]
 8007b20:	f04f 30ff 	mov.w	r0, #4294967295
 8007b24:	e7e9      	b.n	8007afa <__ssputs_r+0x8a>
	...

08007b28 <_svfiprintf_r>:
 8007b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b2c:	4698      	mov	r8, r3
 8007b2e:	898b      	ldrh	r3, [r1, #12]
 8007b30:	061b      	lsls	r3, r3, #24
 8007b32:	b09d      	sub	sp, #116	@ 0x74
 8007b34:	4607      	mov	r7, r0
 8007b36:	460d      	mov	r5, r1
 8007b38:	4614      	mov	r4, r2
 8007b3a:	d510      	bpl.n	8007b5e <_svfiprintf_r+0x36>
 8007b3c:	690b      	ldr	r3, [r1, #16]
 8007b3e:	b973      	cbnz	r3, 8007b5e <_svfiprintf_r+0x36>
 8007b40:	2140      	movs	r1, #64	@ 0x40
 8007b42:	f7ff ff09 	bl	8007958 <_malloc_r>
 8007b46:	6028      	str	r0, [r5, #0]
 8007b48:	6128      	str	r0, [r5, #16]
 8007b4a:	b930      	cbnz	r0, 8007b5a <_svfiprintf_r+0x32>
 8007b4c:	230c      	movs	r3, #12
 8007b4e:	603b      	str	r3, [r7, #0]
 8007b50:	f04f 30ff 	mov.w	r0, #4294967295
 8007b54:	b01d      	add	sp, #116	@ 0x74
 8007b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007b5a:	2340      	movs	r3, #64	@ 0x40
 8007b5c:	616b      	str	r3, [r5, #20]
 8007b5e:	2300      	movs	r3, #0
 8007b60:	9309      	str	r3, [sp, #36]	@ 0x24
 8007b62:	2320      	movs	r3, #32
 8007b64:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007b68:	f8cd 800c 	str.w	r8, [sp, #12]
 8007b6c:	2330      	movs	r3, #48	@ 0x30
 8007b6e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8007d0c <_svfiprintf_r+0x1e4>
 8007b72:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8007b76:	f04f 0901 	mov.w	r9, #1
 8007b7a:	4623      	mov	r3, r4
 8007b7c:	469a      	mov	sl, r3
 8007b7e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007b82:	b10a      	cbz	r2, 8007b88 <_svfiprintf_r+0x60>
 8007b84:	2a25      	cmp	r2, #37	@ 0x25
 8007b86:	d1f9      	bne.n	8007b7c <_svfiprintf_r+0x54>
 8007b88:	ebba 0b04 	subs.w	fp, sl, r4
 8007b8c:	d00b      	beq.n	8007ba6 <_svfiprintf_r+0x7e>
 8007b8e:	465b      	mov	r3, fp
 8007b90:	4622      	mov	r2, r4
 8007b92:	4629      	mov	r1, r5
 8007b94:	4638      	mov	r0, r7
 8007b96:	f7ff ff6b 	bl	8007a70 <__ssputs_r>
 8007b9a:	3001      	adds	r0, #1
 8007b9c:	f000 80a7 	beq.w	8007cee <_svfiprintf_r+0x1c6>
 8007ba0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007ba2:	445a      	add	r2, fp
 8007ba4:	9209      	str	r2, [sp, #36]	@ 0x24
 8007ba6:	f89a 3000 	ldrb.w	r3, [sl]
 8007baa:	2b00      	cmp	r3, #0
 8007bac:	f000 809f 	beq.w	8007cee <_svfiprintf_r+0x1c6>
 8007bb0:	2300      	movs	r3, #0
 8007bb2:	f04f 32ff 	mov.w	r2, #4294967295
 8007bb6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007bba:	f10a 0a01 	add.w	sl, sl, #1
 8007bbe:	9304      	str	r3, [sp, #16]
 8007bc0:	9307      	str	r3, [sp, #28]
 8007bc2:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007bc6:	931a      	str	r3, [sp, #104]	@ 0x68
 8007bc8:	4654      	mov	r4, sl
 8007bca:	2205      	movs	r2, #5
 8007bcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007bd0:	484e      	ldr	r0, [pc, #312]	@ (8007d0c <_svfiprintf_r+0x1e4>)
 8007bd2:	f7f8 fb25 	bl	8000220 <memchr>
 8007bd6:	9a04      	ldr	r2, [sp, #16]
 8007bd8:	b9d8      	cbnz	r0, 8007c12 <_svfiprintf_r+0xea>
 8007bda:	06d0      	lsls	r0, r2, #27
 8007bdc:	bf44      	itt	mi
 8007bde:	2320      	movmi	r3, #32
 8007be0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007be4:	0711      	lsls	r1, r2, #28
 8007be6:	bf44      	itt	mi
 8007be8:	232b      	movmi	r3, #43	@ 0x2b
 8007bea:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007bee:	f89a 3000 	ldrb.w	r3, [sl]
 8007bf2:	2b2a      	cmp	r3, #42	@ 0x2a
 8007bf4:	d015      	beq.n	8007c22 <_svfiprintf_r+0xfa>
 8007bf6:	9a07      	ldr	r2, [sp, #28]
 8007bf8:	4654      	mov	r4, sl
 8007bfa:	2000      	movs	r0, #0
 8007bfc:	f04f 0c0a 	mov.w	ip, #10
 8007c00:	4621      	mov	r1, r4
 8007c02:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007c06:	3b30      	subs	r3, #48	@ 0x30
 8007c08:	2b09      	cmp	r3, #9
 8007c0a:	d94b      	bls.n	8007ca4 <_svfiprintf_r+0x17c>
 8007c0c:	b1b0      	cbz	r0, 8007c3c <_svfiprintf_r+0x114>
 8007c0e:	9207      	str	r2, [sp, #28]
 8007c10:	e014      	b.n	8007c3c <_svfiprintf_r+0x114>
 8007c12:	eba0 0308 	sub.w	r3, r0, r8
 8007c16:	fa09 f303 	lsl.w	r3, r9, r3
 8007c1a:	4313      	orrs	r3, r2
 8007c1c:	9304      	str	r3, [sp, #16]
 8007c1e:	46a2      	mov	sl, r4
 8007c20:	e7d2      	b.n	8007bc8 <_svfiprintf_r+0xa0>
 8007c22:	9b03      	ldr	r3, [sp, #12]
 8007c24:	1d19      	adds	r1, r3, #4
 8007c26:	681b      	ldr	r3, [r3, #0]
 8007c28:	9103      	str	r1, [sp, #12]
 8007c2a:	2b00      	cmp	r3, #0
 8007c2c:	bfbb      	ittet	lt
 8007c2e:	425b      	neglt	r3, r3
 8007c30:	f042 0202 	orrlt.w	r2, r2, #2
 8007c34:	9307      	strge	r3, [sp, #28]
 8007c36:	9307      	strlt	r3, [sp, #28]
 8007c38:	bfb8      	it	lt
 8007c3a:	9204      	strlt	r2, [sp, #16]
 8007c3c:	7823      	ldrb	r3, [r4, #0]
 8007c3e:	2b2e      	cmp	r3, #46	@ 0x2e
 8007c40:	d10a      	bne.n	8007c58 <_svfiprintf_r+0x130>
 8007c42:	7863      	ldrb	r3, [r4, #1]
 8007c44:	2b2a      	cmp	r3, #42	@ 0x2a
 8007c46:	d132      	bne.n	8007cae <_svfiprintf_r+0x186>
 8007c48:	9b03      	ldr	r3, [sp, #12]
 8007c4a:	1d1a      	adds	r2, r3, #4
 8007c4c:	681b      	ldr	r3, [r3, #0]
 8007c4e:	9203      	str	r2, [sp, #12]
 8007c50:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8007c54:	3402      	adds	r4, #2
 8007c56:	9305      	str	r3, [sp, #20]
 8007c58:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8007d1c <_svfiprintf_r+0x1f4>
 8007c5c:	7821      	ldrb	r1, [r4, #0]
 8007c5e:	2203      	movs	r2, #3
 8007c60:	4650      	mov	r0, sl
 8007c62:	f7f8 fadd 	bl	8000220 <memchr>
 8007c66:	b138      	cbz	r0, 8007c78 <_svfiprintf_r+0x150>
 8007c68:	9b04      	ldr	r3, [sp, #16]
 8007c6a:	eba0 000a 	sub.w	r0, r0, sl
 8007c6e:	2240      	movs	r2, #64	@ 0x40
 8007c70:	4082      	lsls	r2, r0
 8007c72:	4313      	orrs	r3, r2
 8007c74:	3401      	adds	r4, #1
 8007c76:	9304      	str	r3, [sp, #16]
 8007c78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007c7c:	4824      	ldr	r0, [pc, #144]	@ (8007d10 <_svfiprintf_r+0x1e8>)
 8007c7e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8007c82:	2206      	movs	r2, #6
 8007c84:	f7f8 facc 	bl	8000220 <memchr>
 8007c88:	2800      	cmp	r0, #0
 8007c8a:	d036      	beq.n	8007cfa <_svfiprintf_r+0x1d2>
 8007c8c:	4b21      	ldr	r3, [pc, #132]	@ (8007d14 <_svfiprintf_r+0x1ec>)
 8007c8e:	bb1b      	cbnz	r3, 8007cd8 <_svfiprintf_r+0x1b0>
 8007c90:	9b03      	ldr	r3, [sp, #12]
 8007c92:	3307      	adds	r3, #7
 8007c94:	f023 0307 	bic.w	r3, r3, #7
 8007c98:	3308      	adds	r3, #8
 8007c9a:	9303      	str	r3, [sp, #12]
 8007c9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007c9e:	4433      	add	r3, r6
 8007ca0:	9309      	str	r3, [sp, #36]	@ 0x24
 8007ca2:	e76a      	b.n	8007b7a <_svfiprintf_r+0x52>
 8007ca4:	fb0c 3202 	mla	r2, ip, r2, r3
 8007ca8:	460c      	mov	r4, r1
 8007caa:	2001      	movs	r0, #1
 8007cac:	e7a8      	b.n	8007c00 <_svfiprintf_r+0xd8>
 8007cae:	2300      	movs	r3, #0
 8007cb0:	3401      	adds	r4, #1
 8007cb2:	9305      	str	r3, [sp, #20]
 8007cb4:	4619      	mov	r1, r3
 8007cb6:	f04f 0c0a 	mov.w	ip, #10
 8007cba:	4620      	mov	r0, r4
 8007cbc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007cc0:	3a30      	subs	r2, #48	@ 0x30
 8007cc2:	2a09      	cmp	r2, #9
 8007cc4:	d903      	bls.n	8007cce <_svfiprintf_r+0x1a6>
 8007cc6:	2b00      	cmp	r3, #0
 8007cc8:	d0c6      	beq.n	8007c58 <_svfiprintf_r+0x130>
 8007cca:	9105      	str	r1, [sp, #20]
 8007ccc:	e7c4      	b.n	8007c58 <_svfiprintf_r+0x130>
 8007cce:	fb0c 2101 	mla	r1, ip, r1, r2
 8007cd2:	4604      	mov	r4, r0
 8007cd4:	2301      	movs	r3, #1
 8007cd6:	e7f0      	b.n	8007cba <_svfiprintf_r+0x192>
 8007cd8:	ab03      	add	r3, sp, #12
 8007cda:	9300      	str	r3, [sp, #0]
 8007cdc:	462a      	mov	r2, r5
 8007cde:	4b0e      	ldr	r3, [pc, #56]	@ (8007d18 <_svfiprintf_r+0x1f0>)
 8007ce0:	a904      	add	r1, sp, #16
 8007ce2:	4638      	mov	r0, r7
 8007ce4:	f3af 8000 	nop.w
 8007ce8:	1c42      	adds	r2, r0, #1
 8007cea:	4606      	mov	r6, r0
 8007cec:	d1d6      	bne.n	8007c9c <_svfiprintf_r+0x174>
 8007cee:	89ab      	ldrh	r3, [r5, #12]
 8007cf0:	065b      	lsls	r3, r3, #25
 8007cf2:	f53f af2d 	bmi.w	8007b50 <_svfiprintf_r+0x28>
 8007cf6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007cf8:	e72c      	b.n	8007b54 <_svfiprintf_r+0x2c>
 8007cfa:	ab03      	add	r3, sp, #12
 8007cfc:	9300      	str	r3, [sp, #0]
 8007cfe:	462a      	mov	r2, r5
 8007d00:	4b05      	ldr	r3, [pc, #20]	@ (8007d18 <_svfiprintf_r+0x1f0>)
 8007d02:	a904      	add	r1, sp, #16
 8007d04:	4638      	mov	r0, r7
 8007d06:	f000 f879 	bl	8007dfc <_printf_i>
 8007d0a:	e7ed      	b.n	8007ce8 <_svfiprintf_r+0x1c0>
 8007d0c:	08042700 	.word	0x08042700
 8007d10:	0804270a 	.word	0x0804270a
 8007d14:	00000000 	.word	0x00000000
 8007d18:	08007a71 	.word	0x08007a71
 8007d1c:	08042706 	.word	0x08042706

08007d20 <_printf_common>:
 8007d20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d24:	4616      	mov	r6, r2
 8007d26:	4698      	mov	r8, r3
 8007d28:	688a      	ldr	r2, [r1, #8]
 8007d2a:	690b      	ldr	r3, [r1, #16]
 8007d2c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007d30:	4293      	cmp	r3, r2
 8007d32:	bfb8      	it	lt
 8007d34:	4613      	movlt	r3, r2
 8007d36:	6033      	str	r3, [r6, #0]
 8007d38:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007d3c:	4607      	mov	r7, r0
 8007d3e:	460c      	mov	r4, r1
 8007d40:	b10a      	cbz	r2, 8007d46 <_printf_common+0x26>
 8007d42:	3301      	adds	r3, #1
 8007d44:	6033      	str	r3, [r6, #0]
 8007d46:	6823      	ldr	r3, [r4, #0]
 8007d48:	0699      	lsls	r1, r3, #26
 8007d4a:	bf42      	ittt	mi
 8007d4c:	6833      	ldrmi	r3, [r6, #0]
 8007d4e:	3302      	addmi	r3, #2
 8007d50:	6033      	strmi	r3, [r6, #0]
 8007d52:	6825      	ldr	r5, [r4, #0]
 8007d54:	f015 0506 	ands.w	r5, r5, #6
 8007d58:	d106      	bne.n	8007d68 <_printf_common+0x48>
 8007d5a:	f104 0a19 	add.w	sl, r4, #25
 8007d5e:	68e3      	ldr	r3, [r4, #12]
 8007d60:	6832      	ldr	r2, [r6, #0]
 8007d62:	1a9b      	subs	r3, r3, r2
 8007d64:	42ab      	cmp	r3, r5
 8007d66:	dc26      	bgt.n	8007db6 <_printf_common+0x96>
 8007d68:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007d6c:	6822      	ldr	r2, [r4, #0]
 8007d6e:	3b00      	subs	r3, #0
 8007d70:	bf18      	it	ne
 8007d72:	2301      	movne	r3, #1
 8007d74:	0692      	lsls	r2, r2, #26
 8007d76:	d42b      	bmi.n	8007dd0 <_printf_common+0xb0>
 8007d78:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007d7c:	4641      	mov	r1, r8
 8007d7e:	4638      	mov	r0, r7
 8007d80:	47c8      	blx	r9
 8007d82:	3001      	adds	r0, #1
 8007d84:	d01e      	beq.n	8007dc4 <_printf_common+0xa4>
 8007d86:	6823      	ldr	r3, [r4, #0]
 8007d88:	6922      	ldr	r2, [r4, #16]
 8007d8a:	f003 0306 	and.w	r3, r3, #6
 8007d8e:	2b04      	cmp	r3, #4
 8007d90:	bf02      	ittt	eq
 8007d92:	68e5      	ldreq	r5, [r4, #12]
 8007d94:	6833      	ldreq	r3, [r6, #0]
 8007d96:	1aed      	subeq	r5, r5, r3
 8007d98:	68a3      	ldr	r3, [r4, #8]
 8007d9a:	bf0c      	ite	eq
 8007d9c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007da0:	2500      	movne	r5, #0
 8007da2:	4293      	cmp	r3, r2
 8007da4:	bfc4      	itt	gt
 8007da6:	1a9b      	subgt	r3, r3, r2
 8007da8:	18ed      	addgt	r5, r5, r3
 8007daa:	2600      	movs	r6, #0
 8007dac:	341a      	adds	r4, #26
 8007dae:	42b5      	cmp	r5, r6
 8007db0:	d11a      	bne.n	8007de8 <_printf_common+0xc8>
 8007db2:	2000      	movs	r0, #0
 8007db4:	e008      	b.n	8007dc8 <_printf_common+0xa8>
 8007db6:	2301      	movs	r3, #1
 8007db8:	4652      	mov	r2, sl
 8007dba:	4641      	mov	r1, r8
 8007dbc:	4638      	mov	r0, r7
 8007dbe:	47c8      	blx	r9
 8007dc0:	3001      	adds	r0, #1
 8007dc2:	d103      	bne.n	8007dcc <_printf_common+0xac>
 8007dc4:	f04f 30ff 	mov.w	r0, #4294967295
 8007dc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007dcc:	3501      	adds	r5, #1
 8007dce:	e7c6      	b.n	8007d5e <_printf_common+0x3e>
 8007dd0:	18e1      	adds	r1, r4, r3
 8007dd2:	1c5a      	adds	r2, r3, #1
 8007dd4:	2030      	movs	r0, #48	@ 0x30
 8007dd6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8007dda:	4422      	add	r2, r4
 8007ddc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8007de0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8007de4:	3302      	adds	r3, #2
 8007de6:	e7c7      	b.n	8007d78 <_printf_common+0x58>
 8007de8:	2301      	movs	r3, #1
 8007dea:	4622      	mov	r2, r4
 8007dec:	4641      	mov	r1, r8
 8007dee:	4638      	mov	r0, r7
 8007df0:	47c8      	blx	r9
 8007df2:	3001      	adds	r0, #1
 8007df4:	d0e6      	beq.n	8007dc4 <_printf_common+0xa4>
 8007df6:	3601      	adds	r6, #1
 8007df8:	e7d9      	b.n	8007dae <_printf_common+0x8e>
	...

08007dfc <_printf_i>:
 8007dfc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007e00:	7e0f      	ldrb	r7, [r1, #24]
 8007e02:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007e04:	2f78      	cmp	r7, #120	@ 0x78
 8007e06:	4691      	mov	r9, r2
 8007e08:	4680      	mov	r8, r0
 8007e0a:	460c      	mov	r4, r1
 8007e0c:	469a      	mov	sl, r3
 8007e0e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8007e12:	d807      	bhi.n	8007e24 <_printf_i+0x28>
 8007e14:	2f62      	cmp	r7, #98	@ 0x62
 8007e16:	d80a      	bhi.n	8007e2e <_printf_i+0x32>
 8007e18:	2f00      	cmp	r7, #0
 8007e1a:	f000 80d2 	beq.w	8007fc2 <_printf_i+0x1c6>
 8007e1e:	2f58      	cmp	r7, #88	@ 0x58
 8007e20:	f000 80b9 	beq.w	8007f96 <_printf_i+0x19a>
 8007e24:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007e28:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8007e2c:	e03a      	b.n	8007ea4 <_printf_i+0xa8>
 8007e2e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8007e32:	2b15      	cmp	r3, #21
 8007e34:	d8f6      	bhi.n	8007e24 <_printf_i+0x28>
 8007e36:	a101      	add	r1, pc, #4	@ (adr r1, 8007e3c <_printf_i+0x40>)
 8007e38:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007e3c:	08007e95 	.word	0x08007e95
 8007e40:	08007ea9 	.word	0x08007ea9
 8007e44:	08007e25 	.word	0x08007e25
 8007e48:	08007e25 	.word	0x08007e25
 8007e4c:	08007e25 	.word	0x08007e25
 8007e50:	08007e25 	.word	0x08007e25
 8007e54:	08007ea9 	.word	0x08007ea9
 8007e58:	08007e25 	.word	0x08007e25
 8007e5c:	08007e25 	.word	0x08007e25
 8007e60:	08007e25 	.word	0x08007e25
 8007e64:	08007e25 	.word	0x08007e25
 8007e68:	08007fa9 	.word	0x08007fa9
 8007e6c:	08007ed3 	.word	0x08007ed3
 8007e70:	08007f63 	.word	0x08007f63
 8007e74:	08007e25 	.word	0x08007e25
 8007e78:	08007e25 	.word	0x08007e25
 8007e7c:	08007fcb 	.word	0x08007fcb
 8007e80:	08007e25 	.word	0x08007e25
 8007e84:	08007ed3 	.word	0x08007ed3
 8007e88:	08007e25 	.word	0x08007e25
 8007e8c:	08007e25 	.word	0x08007e25
 8007e90:	08007f6b 	.word	0x08007f6b
 8007e94:	6833      	ldr	r3, [r6, #0]
 8007e96:	1d1a      	adds	r2, r3, #4
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	6032      	str	r2, [r6, #0]
 8007e9c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007ea0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007ea4:	2301      	movs	r3, #1
 8007ea6:	e09d      	b.n	8007fe4 <_printf_i+0x1e8>
 8007ea8:	6833      	ldr	r3, [r6, #0]
 8007eaa:	6820      	ldr	r0, [r4, #0]
 8007eac:	1d19      	adds	r1, r3, #4
 8007eae:	6031      	str	r1, [r6, #0]
 8007eb0:	0606      	lsls	r6, r0, #24
 8007eb2:	d501      	bpl.n	8007eb8 <_printf_i+0xbc>
 8007eb4:	681d      	ldr	r5, [r3, #0]
 8007eb6:	e003      	b.n	8007ec0 <_printf_i+0xc4>
 8007eb8:	0645      	lsls	r5, r0, #25
 8007eba:	d5fb      	bpl.n	8007eb4 <_printf_i+0xb8>
 8007ebc:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007ec0:	2d00      	cmp	r5, #0
 8007ec2:	da03      	bge.n	8007ecc <_printf_i+0xd0>
 8007ec4:	232d      	movs	r3, #45	@ 0x2d
 8007ec6:	426d      	negs	r5, r5
 8007ec8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007ecc:	4859      	ldr	r0, [pc, #356]	@ (8008034 <_printf_i+0x238>)
 8007ece:	230a      	movs	r3, #10
 8007ed0:	e011      	b.n	8007ef6 <_printf_i+0xfa>
 8007ed2:	6821      	ldr	r1, [r4, #0]
 8007ed4:	6833      	ldr	r3, [r6, #0]
 8007ed6:	0608      	lsls	r0, r1, #24
 8007ed8:	f853 5b04 	ldr.w	r5, [r3], #4
 8007edc:	d402      	bmi.n	8007ee4 <_printf_i+0xe8>
 8007ede:	0649      	lsls	r1, r1, #25
 8007ee0:	bf48      	it	mi
 8007ee2:	b2ad      	uxthmi	r5, r5
 8007ee4:	2f6f      	cmp	r7, #111	@ 0x6f
 8007ee6:	4853      	ldr	r0, [pc, #332]	@ (8008034 <_printf_i+0x238>)
 8007ee8:	6033      	str	r3, [r6, #0]
 8007eea:	bf14      	ite	ne
 8007eec:	230a      	movne	r3, #10
 8007eee:	2308      	moveq	r3, #8
 8007ef0:	2100      	movs	r1, #0
 8007ef2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007ef6:	6866      	ldr	r6, [r4, #4]
 8007ef8:	60a6      	str	r6, [r4, #8]
 8007efa:	2e00      	cmp	r6, #0
 8007efc:	bfa2      	ittt	ge
 8007efe:	6821      	ldrge	r1, [r4, #0]
 8007f00:	f021 0104 	bicge.w	r1, r1, #4
 8007f04:	6021      	strge	r1, [r4, #0]
 8007f06:	b90d      	cbnz	r5, 8007f0c <_printf_i+0x110>
 8007f08:	2e00      	cmp	r6, #0
 8007f0a:	d04b      	beq.n	8007fa4 <_printf_i+0x1a8>
 8007f0c:	4616      	mov	r6, r2
 8007f0e:	fbb5 f1f3 	udiv	r1, r5, r3
 8007f12:	fb03 5711 	mls	r7, r3, r1, r5
 8007f16:	5dc7      	ldrb	r7, [r0, r7]
 8007f18:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007f1c:	462f      	mov	r7, r5
 8007f1e:	42bb      	cmp	r3, r7
 8007f20:	460d      	mov	r5, r1
 8007f22:	d9f4      	bls.n	8007f0e <_printf_i+0x112>
 8007f24:	2b08      	cmp	r3, #8
 8007f26:	d10b      	bne.n	8007f40 <_printf_i+0x144>
 8007f28:	6823      	ldr	r3, [r4, #0]
 8007f2a:	07df      	lsls	r7, r3, #31
 8007f2c:	d508      	bpl.n	8007f40 <_printf_i+0x144>
 8007f2e:	6923      	ldr	r3, [r4, #16]
 8007f30:	6861      	ldr	r1, [r4, #4]
 8007f32:	4299      	cmp	r1, r3
 8007f34:	bfde      	ittt	le
 8007f36:	2330      	movle	r3, #48	@ 0x30
 8007f38:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007f3c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007f40:	1b92      	subs	r2, r2, r6
 8007f42:	6122      	str	r2, [r4, #16]
 8007f44:	f8cd a000 	str.w	sl, [sp]
 8007f48:	464b      	mov	r3, r9
 8007f4a:	aa03      	add	r2, sp, #12
 8007f4c:	4621      	mov	r1, r4
 8007f4e:	4640      	mov	r0, r8
 8007f50:	f7ff fee6 	bl	8007d20 <_printf_common>
 8007f54:	3001      	adds	r0, #1
 8007f56:	d14a      	bne.n	8007fee <_printf_i+0x1f2>
 8007f58:	f04f 30ff 	mov.w	r0, #4294967295
 8007f5c:	b004      	add	sp, #16
 8007f5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007f62:	6823      	ldr	r3, [r4, #0]
 8007f64:	f043 0320 	orr.w	r3, r3, #32
 8007f68:	6023      	str	r3, [r4, #0]
 8007f6a:	4833      	ldr	r0, [pc, #204]	@ (8008038 <_printf_i+0x23c>)
 8007f6c:	2778      	movs	r7, #120	@ 0x78
 8007f6e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007f72:	6823      	ldr	r3, [r4, #0]
 8007f74:	6831      	ldr	r1, [r6, #0]
 8007f76:	061f      	lsls	r7, r3, #24
 8007f78:	f851 5b04 	ldr.w	r5, [r1], #4
 8007f7c:	d402      	bmi.n	8007f84 <_printf_i+0x188>
 8007f7e:	065f      	lsls	r7, r3, #25
 8007f80:	bf48      	it	mi
 8007f82:	b2ad      	uxthmi	r5, r5
 8007f84:	6031      	str	r1, [r6, #0]
 8007f86:	07d9      	lsls	r1, r3, #31
 8007f88:	bf44      	itt	mi
 8007f8a:	f043 0320 	orrmi.w	r3, r3, #32
 8007f8e:	6023      	strmi	r3, [r4, #0]
 8007f90:	b11d      	cbz	r5, 8007f9a <_printf_i+0x19e>
 8007f92:	2310      	movs	r3, #16
 8007f94:	e7ac      	b.n	8007ef0 <_printf_i+0xf4>
 8007f96:	4827      	ldr	r0, [pc, #156]	@ (8008034 <_printf_i+0x238>)
 8007f98:	e7e9      	b.n	8007f6e <_printf_i+0x172>
 8007f9a:	6823      	ldr	r3, [r4, #0]
 8007f9c:	f023 0320 	bic.w	r3, r3, #32
 8007fa0:	6023      	str	r3, [r4, #0]
 8007fa2:	e7f6      	b.n	8007f92 <_printf_i+0x196>
 8007fa4:	4616      	mov	r6, r2
 8007fa6:	e7bd      	b.n	8007f24 <_printf_i+0x128>
 8007fa8:	6833      	ldr	r3, [r6, #0]
 8007faa:	6825      	ldr	r5, [r4, #0]
 8007fac:	6961      	ldr	r1, [r4, #20]
 8007fae:	1d18      	adds	r0, r3, #4
 8007fb0:	6030      	str	r0, [r6, #0]
 8007fb2:	062e      	lsls	r6, r5, #24
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	d501      	bpl.n	8007fbc <_printf_i+0x1c0>
 8007fb8:	6019      	str	r1, [r3, #0]
 8007fba:	e002      	b.n	8007fc2 <_printf_i+0x1c6>
 8007fbc:	0668      	lsls	r0, r5, #25
 8007fbe:	d5fb      	bpl.n	8007fb8 <_printf_i+0x1bc>
 8007fc0:	8019      	strh	r1, [r3, #0]
 8007fc2:	2300      	movs	r3, #0
 8007fc4:	6123      	str	r3, [r4, #16]
 8007fc6:	4616      	mov	r6, r2
 8007fc8:	e7bc      	b.n	8007f44 <_printf_i+0x148>
 8007fca:	6833      	ldr	r3, [r6, #0]
 8007fcc:	1d1a      	adds	r2, r3, #4
 8007fce:	6032      	str	r2, [r6, #0]
 8007fd0:	681e      	ldr	r6, [r3, #0]
 8007fd2:	6862      	ldr	r2, [r4, #4]
 8007fd4:	2100      	movs	r1, #0
 8007fd6:	4630      	mov	r0, r6
 8007fd8:	f7f8 f922 	bl	8000220 <memchr>
 8007fdc:	b108      	cbz	r0, 8007fe2 <_printf_i+0x1e6>
 8007fde:	1b80      	subs	r0, r0, r6
 8007fe0:	6060      	str	r0, [r4, #4]
 8007fe2:	6863      	ldr	r3, [r4, #4]
 8007fe4:	6123      	str	r3, [r4, #16]
 8007fe6:	2300      	movs	r3, #0
 8007fe8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007fec:	e7aa      	b.n	8007f44 <_printf_i+0x148>
 8007fee:	6923      	ldr	r3, [r4, #16]
 8007ff0:	4632      	mov	r2, r6
 8007ff2:	4649      	mov	r1, r9
 8007ff4:	4640      	mov	r0, r8
 8007ff6:	47d0      	blx	sl
 8007ff8:	3001      	adds	r0, #1
 8007ffa:	d0ad      	beq.n	8007f58 <_printf_i+0x15c>
 8007ffc:	6823      	ldr	r3, [r4, #0]
 8007ffe:	079b      	lsls	r3, r3, #30
 8008000:	d413      	bmi.n	800802a <_printf_i+0x22e>
 8008002:	68e0      	ldr	r0, [r4, #12]
 8008004:	9b03      	ldr	r3, [sp, #12]
 8008006:	4298      	cmp	r0, r3
 8008008:	bfb8      	it	lt
 800800a:	4618      	movlt	r0, r3
 800800c:	e7a6      	b.n	8007f5c <_printf_i+0x160>
 800800e:	2301      	movs	r3, #1
 8008010:	4632      	mov	r2, r6
 8008012:	4649      	mov	r1, r9
 8008014:	4640      	mov	r0, r8
 8008016:	47d0      	blx	sl
 8008018:	3001      	adds	r0, #1
 800801a:	d09d      	beq.n	8007f58 <_printf_i+0x15c>
 800801c:	3501      	adds	r5, #1
 800801e:	68e3      	ldr	r3, [r4, #12]
 8008020:	9903      	ldr	r1, [sp, #12]
 8008022:	1a5b      	subs	r3, r3, r1
 8008024:	42ab      	cmp	r3, r5
 8008026:	dcf2      	bgt.n	800800e <_printf_i+0x212>
 8008028:	e7eb      	b.n	8008002 <_printf_i+0x206>
 800802a:	2500      	movs	r5, #0
 800802c:	f104 0619 	add.w	r6, r4, #25
 8008030:	e7f5      	b.n	800801e <_printf_i+0x222>
 8008032:	bf00      	nop
 8008034:	08042711 	.word	0x08042711
 8008038:	08042722 	.word	0x08042722

0800803c <memmove>:
 800803c:	4288      	cmp	r0, r1
 800803e:	b510      	push	{r4, lr}
 8008040:	eb01 0402 	add.w	r4, r1, r2
 8008044:	d902      	bls.n	800804c <memmove+0x10>
 8008046:	4284      	cmp	r4, r0
 8008048:	4623      	mov	r3, r4
 800804a:	d807      	bhi.n	800805c <memmove+0x20>
 800804c:	1e43      	subs	r3, r0, #1
 800804e:	42a1      	cmp	r1, r4
 8008050:	d008      	beq.n	8008064 <memmove+0x28>
 8008052:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008056:	f803 2f01 	strb.w	r2, [r3, #1]!
 800805a:	e7f8      	b.n	800804e <memmove+0x12>
 800805c:	4402      	add	r2, r0
 800805e:	4601      	mov	r1, r0
 8008060:	428a      	cmp	r2, r1
 8008062:	d100      	bne.n	8008066 <memmove+0x2a>
 8008064:	bd10      	pop	{r4, pc}
 8008066:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800806a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800806e:	e7f7      	b.n	8008060 <memmove+0x24>

08008070 <_sbrk_r>:
 8008070:	b538      	push	{r3, r4, r5, lr}
 8008072:	4d06      	ldr	r5, [pc, #24]	@ (800808c <_sbrk_r+0x1c>)
 8008074:	2300      	movs	r3, #0
 8008076:	4604      	mov	r4, r0
 8008078:	4608      	mov	r0, r1
 800807a:	602b      	str	r3, [r5, #0]
 800807c:	f7fb ff76 	bl	8003f6c <_sbrk>
 8008080:	1c43      	adds	r3, r0, #1
 8008082:	d102      	bne.n	800808a <_sbrk_r+0x1a>
 8008084:	682b      	ldr	r3, [r5, #0]
 8008086:	b103      	cbz	r3, 800808a <_sbrk_r+0x1a>
 8008088:	6023      	str	r3, [r4, #0]
 800808a:	bd38      	pop	{r3, r4, r5, pc}
 800808c:	2000aaf4 	.word	0x2000aaf4

08008090 <memcpy>:
 8008090:	440a      	add	r2, r1
 8008092:	4291      	cmp	r1, r2
 8008094:	f100 33ff 	add.w	r3, r0, #4294967295
 8008098:	d100      	bne.n	800809c <memcpy+0xc>
 800809a:	4770      	bx	lr
 800809c:	b510      	push	{r4, lr}
 800809e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80080a2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80080a6:	4291      	cmp	r1, r2
 80080a8:	d1f9      	bne.n	800809e <memcpy+0xe>
 80080aa:	bd10      	pop	{r4, pc}

080080ac <_realloc_r>:
 80080ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080b0:	4680      	mov	r8, r0
 80080b2:	4615      	mov	r5, r2
 80080b4:	460c      	mov	r4, r1
 80080b6:	b921      	cbnz	r1, 80080c2 <_realloc_r+0x16>
 80080b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80080bc:	4611      	mov	r1, r2
 80080be:	f7ff bc4b 	b.w	8007958 <_malloc_r>
 80080c2:	b92a      	cbnz	r2, 80080d0 <_realloc_r+0x24>
 80080c4:	f7ff fbdc 	bl	8007880 <_free_r>
 80080c8:	2400      	movs	r4, #0
 80080ca:	4620      	mov	r0, r4
 80080cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80080d0:	f000 f81a 	bl	8008108 <_malloc_usable_size_r>
 80080d4:	4285      	cmp	r5, r0
 80080d6:	4606      	mov	r6, r0
 80080d8:	d802      	bhi.n	80080e0 <_realloc_r+0x34>
 80080da:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80080de:	d8f4      	bhi.n	80080ca <_realloc_r+0x1e>
 80080e0:	4629      	mov	r1, r5
 80080e2:	4640      	mov	r0, r8
 80080e4:	f7ff fc38 	bl	8007958 <_malloc_r>
 80080e8:	4607      	mov	r7, r0
 80080ea:	2800      	cmp	r0, #0
 80080ec:	d0ec      	beq.n	80080c8 <_realloc_r+0x1c>
 80080ee:	42b5      	cmp	r5, r6
 80080f0:	462a      	mov	r2, r5
 80080f2:	4621      	mov	r1, r4
 80080f4:	bf28      	it	cs
 80080f6:	4632      	movcs	r2, r6
 80080f8:	f7ff ffca 	bl	8008090 <memcpy>
 80080fc:	4621      	mov	r1, r4
 80080fe:	4640      	mov	r0, r8
 8008100:	f7ff fbbe 	bl	8007880 <_free_r>
 8008104:	463c      	mov	r4, r7
 8008106:	e7e0      	b.n	80080ca <_realloc_r+0x1e>

08008108 <_malloc_usable_size_r>:
 8008108:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800810c:	1f18      	subs	r0, r3, #4
 800810e:	2b00      	cmp	r3, #0
 8008110:	bfbc      	itt	lt
 8008112:	580b      	ldrlt	r3, [r1, r0]
 8008114:	18c0      	addlt	r0, r0, r3
 8008116:	4770      	bx	lr

08008118 <_init>:
 8008118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800811a:	bf00      	nop
 800811c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800811e:	bc08      	pop	{r3}
 8008120:	469e      	mov	lr, r3
 8008122:	4770      	bx	lr

08008124 <_fini>:
 8008124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008126:	bf00      	nop
 8008128:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800812a:	bc08      	pop	{r3}
 800812c:	469e      	mov	lr, r3
 800812e:	4770      	bx	lr
