
ILI9341.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000077b0  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000cbc0  08007980  08007980  00008980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08014540  08014540  000297b8  2**0
                  CONTENTS
  4 .ARM          00000008  08014540  08014540  00015540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08014548  08014548  000297b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08014548  08014548  00015548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0801454c  0801454c  0001554c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000137b8  20000000  08014550  00016000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000390  200137b8  08027d08  000297b8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20013b48  08027d08  00029b48  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000297b8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e4b3  00000000  00000000  000297e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002928  00000000  00000000  00037c9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000c58  00000000  00000000  0003a5c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000942  00000000  00000000  0003b220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000242e9  00000000  00000000  0003bb62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001143f  00000000  00000000  0005fe4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cf439  00000000  00000000  0007128a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001406c3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003bc4  00000000  00000000  00140708  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000057  00000000  00000000  001442cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200137b8 	.word	0x200137b8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08007968 	.word	0x08007968

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200137bc 	.word	0x200137bc
 800020c:	08007968 	.word	0x08007968

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b96a 	b.w	80005ac <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	460c      	mov	r4, r1
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	d14e      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fc:	4694      	mov	ip, r2
 80002fe:	458c      	cmp	ip, r1
 8000300:	4686      	mov	lr, r0
 8000302:	fab2 f282 	clz	r2, r2
 8000306:	d962      	bls.n	80003ce <__udivmoddi4+0xde>
 8000308:	b14a      	cbz	r2, 800031e <__udivmoddi4+0x2e>
 800030a:	f1c2 0320 	rsb	r3, r2, #32
 800030e:	4091      	lsls	r1, r2
 8000310:	fa20 f303 	lsr.w	r3, r0, r3
 8000314:	fa0c fc02 	lsl.w	ip, ip, r2
 8000318:	4319      	orrs	r1, r3
 800031a:	fa00 fe02 	lsl.w	lr, r0, r2
 800031e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000322:	fa1f f68c 	uxth.w	r6, ip
 8000326:	fbb1 f4f7 	udiv	r4, r1, r7
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb07 1114 	mls	r1, r7, r4, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb04 f106 	mul.w	r1, r4, r6
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f104 30ff 	add.w	r0, r4, #4294967295
 8000346:	f080 8112 	bcs.w	800056e <__udivmoddi4+0x27e>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 810f 	bls.w	800056e <__udivmoddi4+0x27e>
 8000350:	3c02      	subs	r4, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a59      	subs	r1, r3, r1
 8000356:	fa1f f38e 	uxth.w	r3, lr
 800035a:	fbb1 f0f7 	udiv	r0, r1, r7
 800035e:	fb07 1110 	mls	r1, r7, r0, r1
 8000362:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000366:	fb00 f606 	mul.w	r6, r0, r6
 800036a:	429e      	cmp	r6, r3
 800036c:	d90a      	bls.n	8000384 <__udivmoddi4+0x94>
 800036e:	eb1c 0303 	adds.w	r3, ip, r3
 8000372:	f100 31ff 	add.w	r1, r0, #4294967295
 8000376:	f080 80fc 	bcs.w	8000572 <__udivmoddi4+0x282>
 800037a:	429e      	cmp	r6, r3
 800037c:	f240 80f9 	bls.w	8000572 <__udivmoddi4+0x282>
 8000380:	4463      	add	r3, ip
 8000382:	3802      	subs	r0, #2
 8000384:	1b9b      	subs	r3, r3, r6
 8000386:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800038a:	2100      	movs	r1, #0
 800038c:	b11d      	cbz	r5, 8000396 <__udivmoddi4+0xa6>
 800038e:	40d3      	lsrs	r3, r2
 8000390:	2200      	movs	r2, #0
 8000392:	e9c5 3200 	strd	r3, r2, [r5]
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d905      	bls.n	80003aa <__udivmoddi4+0xba>
 800039e:	b10d      	cbz	r5, 80003a4 <__udivmoddi4+0xb4>
 80003a0:	e9c5 0100 	strd	r0, r1, [r5]
 80003a4:	2100      	movs	r1, #0
 80003a6:	4608      	mov	r0, r1
 80003a8:	e7f5      	b.n	8000396 <__udivmoddi4+0xa6>
 80003aa:	fab3 f183 	clz	r1, r3
 80003ae:	2900      	cmp	r1, #0
 80003b0:	d146      	bne.n	8000440 <__udivmoddi4+0x150>
 80003b2:	42a3      	cmp	r3, r4
 80003b4:	d302      	bcc.n	80003bc <__udivmoddi4+0xcc>
 80003b6:	4290      	cmp	r0, r2
 80003b8:	f0c0 80f0 	bcc.w	800059c <__udivmoddi4+0x2ac>
 80003bc:	1a86      	subs	r6, r0, r2
 80003be:	eb64 0303 	sbc.w	r3, r4, r3
 80003c2:	2001      	movs	r0, #1
 80003c4:	2d00      	cmp	r5, #0
 80003c6:	d0e6      	beq.n	8000396 <__udivmoddi4+0xa6>
 80003c8:	e9c5 6300 	strd	r6, r3, [r5]
 80003cc:	e7e3      	b.n	8000396 <__udivmoddi4+0xa6>
 80003ce:	2a00      	cmp	r2, #0
 80003d0:	f040 8090 	bne.w	80004f4 <__udivmoddi4+0x204>
 80003d4:	eba1 040c 	sub.w	r4, r1, ip
 80003d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003dc:	fa1f f78c 	uxth.w	r7, ip
 80003e0:	2101      	movs	r1, #1
 80003e2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003e6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ea:	fb08 4416 	mls	r4, r8, r6, r4
 80003ee:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003f2:	fb07 f006 	mul.w	r0, r7, r6
 80003f6:	4298      	cmp	r0, r3
 80003f8:	d908      	bls.n	800040c <__udivmoddi4+0x11c>
 80003fa:	eb1c 0303 	adds.w	r3, ip, r3
 80003fe:	f106 34ff 	add.w	r4, r6, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x11a>
 8000404:	4298      	cmp	r0, r3
 8000406:	f200 80cd 	bhi.w	80005a4 <__udivmoddi4+0x2b4>
 800040a:	4626      	mov	r6, r4
 800040c:	1a1c      	subs	r4, r3, r0
 800040e:	fa1f f38e 	uxth.w	r3, lr
 8000412:	fbb4 f0f8 	udiv	r0, r4, r8
 8000416:	fb08 4410 	mls	r4, r8, r0, r4
 800041a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800041e:	fb00 f707 	mul.w	r7, r0, r7
 8000422:	429f      	cmp	r7, r3
 8000424:	d908      	bls.n	8000438 <__udivmoddi4+0x148>
 8000426:	eb1c 0303 	adds.w	r3, ip, r3
 800042a:	f100 34ff 	add.w	r4, r0, #4294967295
 800042e:	d202      	bcs.n	8000436 <__udivmoddi4+0x146>
 8000430:	429f      	cmp	r7, r3
 8000432:	f200 80b0 	bhi.w	8000596 <__udivmoddi4+0x2a6>
 8000436:	4620      	mov	r0, r4
 8000438:	1bdb      	subs	r3, r3, r7
 800043a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800043e:	e7a5      	b.n	800038c <__udivmoddi4+0x9c>
 8000440:	f1c1 0620 	rsb	r6, r1, #32
 8000444:	408b      	lsls	r3, r1
 8000446:	fa22 f706 	lsr.w	r7, r2, r6
 800044a:	431f      	orrs	r7, r3
 800044c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000450:	fa04 f301 	lsl.w	r3, r4, r1
 8000454:	ea43 030c 	orr.w	r3, r3, ip
 8000458:	40f4      	lsrs	r4, r6
 800045a:	fa00 f801 	lsl.w	r8, r0, r1
 800045e:	0c38      	lsrs	r0, r7, #16
 8000460:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000464:	fbb4 fef0 	udiv	lr, r4, r0
 8000468:	fa1f fc87 	uxth.w	ip, r7
 800046c:	fb00 441e 	mls	r4, r0, lr, r4
 8000470:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000474:	fb0e f90c 	mul.w	r9, lr, ip
 8000478:	45a1      	cmp	r9, r4
 800047a:	fa02 f201 	lsl.w	r2, r2, r1
 800047e:	d90a      	bls.n	8000496 <__udivmoddi4+0x1a6>
 8000480:	193c      	adds	r4, r7, r4
 8000482:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000486:	f080 8084 	bcs.w	8000592 <__udivmoddi4+0x2a2>
 800048a:	45a1      	cmp	r9, r4
 800048c:	f240 8081 	bls.w	8000592 <__udivmoddi4+0x2a2>
 8000490:	f1ae 0e02 	sub.w	lr, lr, #2
 8000494:	443c      	add	r4, r7
 8000496:	eba4 0409 	sub.w	r4, r4, r9
 800049a:	fa1f f983 	uxth.w	r9, r3
 800049e:	fbb4 f3f0 	udiv	r3, r4, r0
 80004a2:	fb00 4413 	mls	r4, r0, r3, r4
 80004a6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80004aa:	fb03 fc0c 	mul.w	ip, r3, ip
 80004ae:	45a4      	cmp	ip, r4
 80004b0:	d907      	bls.n	80004c2 <__udivmoddi4+0x1d2>
 80004b2:	193c      	adds	r4, r7, r4
 80004b4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004b8:	d267      	bcs.n	800058a <__udivmoddi4+0x29a>
 80004ba:	45a4      	cmp	ip, r4
 80004bc:	d965      	bls.n	800058a <__udivmoddi4+0x29a>
 80004be:	3b02      	subs	r3, #2
 80004c0:	443c      	add	r4, r7
 80004c2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004c6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ca:	eba4 040c 	sub.w	r4, r4, ip
 80004ce:	429c      	cmp	r4, r3
 80004d0:	46ce      	mov	lr, r9
 80004d2:	469c      	mov	ip, r3
 80004d4:	d351      	bcc.n	800057a <__udivmoddi4+0x28a>
 80004d6:	d04e      	beq.n	8000576 <__udivmoddi4+0x286>
 80004d8:	b155      	cbz	r5, 80004f0 <__udivmoddi4+0x200>
 80004da:	ebb8 030e 	subs.w	r3, r8, lr
 80004de:	eb64 040c 	sbc.w	r4, r4, ip
 80004e2:	fa04 f606 	lsl.w	r6, r4, r6
 80004e6:	40cb      	lsrs	r3, r1
 80004e8:	431e      	orrs	r6, r3
 80004ea:	40cc      	lsrs	r4, r1
 80004ec:	e9c5 6400 	strd	r6, r4, [r5]
 80004f0:	2100      	movs	r1, #0
 80004f2:	e750      	b.n	8000396 <__udivmoddi4+0xa6>
 80004f4:	f1c2 0320 	rsb	r3, r2, #32
 80004f8:	fa20 f103 	lsr.w	r1, r0, r3
 80004fc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000500:	fa24 f303 	lsr.w	r3, r4, r3
 8000504:	4094      	lsls	r4, r2
 8000506:	430c      	orrs	r4, r1
 8000508:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800050c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000510:	fa1f f78c 	uxth.w	r7, ip
 8000514:	fbb3 f0f8 	udiv	r0, r3, r8
 8000518:	fb08 3110 	mls	r1, r8, r0, r3
 800051c:	0c23      	lsrs	r3, r4, #16
 800051e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000522:	fb00 f107 	mul.w	r1, r0, r7
 8000526:	4299      	cmp	r1, r3
 8000528:	d908      	bls.n	800053c <__udivmoddi4+0x24c>
 800052a:	eb1c 0303 	adds.w	r3, ip, r3
 800052e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000532:	d22c      	bcs.n	800058e <__udivmoddi4+0x29e>
 8000534:	4299      	cmp	r1, r3
 8000536:	d92a      	bls.n	800058e <__udivmoddi4+0x29e>
 8000538:	3802      	subs	r0, #2
 800053a:	4463      	add	r3, ip
 800053c:	1a5b      	subs	r3, r3, r1
 800053e:	b2a4      	uxth	r4, r4
 8000540:	fbb3 f1f8 	udiv	r1, r3, r8
 8000544:	fb08 3311 	mls	r3, r8, r1, r3
 8000548:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800054c:	fb01 f307 	mul.w	r3, r1, r7
 8000550:	42a3      	cmp	r3, r4
 8000552:	d908      	bls.n	8000566 <__udivmoddi4+0x276>
 8000554:	eb1c 0404 	adds.w	r4, ip, r4
 8000558:	f101 36ff 	add.w	r6, r1, #4294967295
 800055c:	d213      	bcs.n	8000586 <__udivmoddi4+0x296>
 800055e:	42a3      	cmp	r3, r4
 8000560:	d911      	bls.n	8000586 <__udivmoddi4+0x296>
 8000562:	3902      	subs	r1, #2
 8000564:	4464      	add	r4, ip
 8000566:	1ae4      	subs	r4, r4, r3
 8000568:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800056c:	e739      	b.n	80003e2 <__udivmoddi4+0xf2>
 800056e:	4604      	mov	r4, r0
 8000570:	e6f0      	b.n	8000354 <__udivmoddi4+0x64>
 8000572:	4608      	mov	r0, r1
 8000574:	e706      	b.n	8000384 <__udivmoddi4+0x94>
 8000576:	45c8      	cmp	r8, r9
 8000578:	d2ae      	bcs.n	80004d8 <__udivmoddi4+0x1e8>
 800057a:	ebb9 0e02 	subs.w	lr, r9, r2
 800057e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000582:	3801      	subs	r0, #1
 8000584:	e7a8      	b.n	80004d8 <__udivmoddi4+0x1e8>
 8000586:	4631      	mov	r1, r6
 8000588:	e7ed      	b.n	8000566 <__udivmoddi4+0x276>
 800058a:	4603      	mov	r3, r0
 800058c:	e799      	b.n	80004c2 <__udivmoddi4+0x1d2>
 800058e:	4630      	mov	r0, r6
 8000590:	e7d4      	b.n	800053c <__udivmoddi4+0x24c>
 8000592:	46d6      	mov	lr, sl
 8000594:	e77f      	b.n	8000496 <__udivmoddi4+0x1a6>
 8000596:	4463      	add	r3, ip
 8000598:	3802      	subs	r0, #2
 800059a:	e74d      	b.n	8000438 <__udivmoddi4+0x148>
 800059c:	4606      	mov	r6, r0
 800059e:	4623      	mov	r3, r4
 80005a0:	4608      	mov	r0, r1
 80005a2:	e70f      	b.n	80003c4 <__udivmoddi4+0xd4>
 80005a4:	3e02      	subs	r6, #2
 80005a6:	4463      	add	r3, ip
 80005a8:	e730      	b.n	800040c <__udivmoddi4+0x11c>
 80005aa:	bf00      	nop

080005ac <__aeabi_idiv0>:
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop

080005b0 <SELECT>:
 80005b0:	b580      	push	{r7, lr}
 80005b2:	af00      	add	r7, sp, #0
 80005b4:	2200      	movs	r2, #0
 80005b6:	2140      	movs	r1, #64	@ 0x40
 80005b8:	4803      	ldr	r0, [pc, #12]	@ (80005c8 <SELECT+0x18>)
 80005ba:	f003 fc27 	bl	8003e0c <HAL_GPIO_WritePin>
 80005be:	2001      	movs	r0, #1
 80005c0:	f002 fd4c 	bl	800305c <HAL_Delay>
 80005c4:	bf00      	nop
 80005c6:	bd80      	pop	{r7, pc}
 80005c8:	40020400 	.word	0x40020400

080005cc <DESELECT>:
 80005cc:	b580      	push	{r7, lr}
 80005ce:	af00      	add	r7, sp, #0
 80005d0:	2201      	movs	r2, #1
 80005d2:	2140      	movs	r1, #64	@ 0x40
 80005d4:	4803      	ldr	r0, [pc, #12]	@ (80005e4 <DESELECT+0x18>)
 80005d6:	f003 fc19 	bl	8003e0c <HAL_GPIO_WritePin>
 80005da:	2001      	movs	r0, #1
 80005dc:	f002 fd3e 	bl	800305c <HAL_Delay>
 80005e0:	bf00      	nop
 80005e2:	bd80      	pop	{r7, pc}
 80005e4:	40020400 	.word	0x40020400

080005e8 <SPI_TxByte>:
 80005e8:	b580      	push	{r7, lr}
 80005ea:	b082      	sub	sp, #8
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	4603      	mov	r3, r0
 80005f0:	71fb      	strb	r3, [r7, #7]
 80005f2:	bf00      	nop
 80005f4:	4b08      	ldr	r3, [pc, #32]	@ (8000618 <SPI_TxByte+0x30>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	689b      	ldr	r3, [r3, #8]
 80005fa:	f003 0302 	and.w	r3, r3, #2
 80005fe:	2b02      	cmp	r3, #2
 8000600:	d1f8      	bne.n	80005f4 <SPI_TxByte+0xc>
 8000602:	1df9      	adds	r1, r7, #7
 8000604:	2364      	movs	r3, #100	@ 0x64
 8000606:	2201      	movs	r2, #1
 8000608:	4803      	ldr	r0, [pc, #12]	@ (8000618 <SPI_TxByte+0x30>)
 800060a:	f004 fa04 	bl	8004a16 <HAL_SPI_Transmit>
 800060e:	bf00      	nop
 8000610:	3708      	adds	r7, #8
 8000612:	46bd      	mov	sp, r7
 8000614:	bd80      	pop	{r7, pc}
 8000616:	bf00      	nop
 8000618:	200137dc 	.word	0x200137dc

0800061c <SPI_TxBuffer>:
 800061c:	b580      	push	{r7, lr}
 800061e:	b082      	sub	sp, #8
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	807b      	strh	r3, [r7, #2]
 8000628:	bf00      	nop
 800062a:	4b08      	ldr	r3, [pc, #32]	@ (800064c <SPI_TxBuffer+0x30>)
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	689b      	ldr	r3, [r3, #8]
 8000630:	f003 0302 	and.w	r3, r3, #2
 8000634:	2b02      	cmp	r3, #2
 8000636:	d1f8      	bne.n	800062a <SPI_TxBuffer+0xe>
 8000638:	887a      	ldrh	r2, [r7, #2]
 800063a:	2364      	movs	r3, #100	@ 0x64
 800063c:	6879      	ldr	r1, [r7, #4]
 800063e:	4803      	ldr	r0, [pc, #12]	@ (800064c <SPI_TxBuffer+0x30>)
 8000640:	f004 f9e9 	bl	8004a16 <HAL_SPI_Transmit>
 8000644:	bf00      	nop
 8000646:	3708      	adds	r7, #8
 8000648:	46bd      	mov	sp, r7
 800064a:	bd80      	pop	{r7, pc}
 800064c:	200137dc 	.word	0x200137dc

08000650 <SPI_RxByte>:
 8000650:	b580      	push	{r7, lr}
 8000652:	b084      	sub	sp, #16
 8000654:	af02      	add	r7, sp, #8
 8000656:	23ff      	movs	r3, #255	@ 0xff
 8000658:	71fb      	strb	r3, [r7, #7]
 800065a:	bf00      	nop
 800065c:	4b09      	ldr	r3, [pc, #36]	@ (8000684 <SPI_RxByte+0x34>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	689b      	ldr	r3, [r3, #8]
 8000662:	f003 0302 	and.w	r3, r3, #2
 8000666:	2b02      	cmp	r3, #2
 8000668:	d1f8      	bne.n	800065c <SPI_RxByte+0xc>
 800066a:	1dba      	adds	r2, r7, #6
 800066c:	1df9      	adds	r1, r7, #7
 800066e:	2364      	movs	r3, #100	@ 0x64
 8000670:	9300      	str	r3, [sp, #0]
 8000672:	2301      	movs	r3, #1
 8000674:	4803      	ldr	r0, [pc, #12]	@ (8000684 <SPI_RxByte+0x34>)
 8000676:	f004 fb12 	bl	8004c9e <HAL_SPI_TransmitReceive>
 800067a:	79bb      	ldrb	r3, [r7, #6]
 800067c:	4618      	mov	r0, r3
 800067e:	3708      	adds	r7, #8
 8000680:	46bd      	mov	sp, r7
 8000682:	bd80      	pop	{r7, pc}
 8000684:	200137dc 	.word	0x200137dc

08000688 <SPI_RxBytePtr>:
 8000688:	b580      	push	{r7, lr}
 800068a:	b082      	sub	sp, #8
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	f7ff ffde 	bl	8000650 <SPI_RxByte>
 8000694:	4603      	mov	r3, r0
 8000696:	461a      	mov	r2, r3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	701a      	strb	r2, [r3, #0]
 800069c:	bf00      	nop
 800069e:	3708      	adds	r7, #8
 80006a0:	46bd      	mov	sp, r7
 80006a2:	bd80      	pop	{r7, pc}

080006a4 <SD_ReadyWait>:
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b082      	sub	sp, #8
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	4b0a      	ldr	r3, [pc, #40]	@ (80006d4 <SD_ReadyWait+0x30>)
 80006ac:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 80006b0:	801a      	strh	r2, [r3, #0]
 80006b2:	f7ff ffcd 	bl	8000650 <SPI_RxByte>
 80006b6:	4603      	mov	r3, r0
 80006b8:	71fb      	strb	r3, [r7, #7]
 80006ba:	79fb      	ldrb	r3, [r7, #7]
 80006bc:	2bff      	cmp	r3, #255	@ 0xff
 80006be:	d003      	beq.n	80006c8 <SD_ReadyWait+0x24>
 80006c0:	4b04      	ldr	r3, [pc, #16]	@ (80006d4 <SD_ReadyWait+0x30>)
 80006c2:	881b      	ldrh	r3, [r3, #0]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d1f4      	bne.n	80006b2 <SD_ReadyWait+0xe>
 80006c8:	79fb      	ldrb	r3, [r7, #7]
 80006ca:	4618      	mov	r0, r3
 80006cc:	3708      	adds	r7, #8
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bd80      	pop	{r7, pc}
 80006d2:	bf00      	nop
 80006d4:	200137d6 	.word	0x200137d6

080006d8 <SD_PowerOn>:
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
 80006de:	f641 73ff 	movw	r3, #8191	@ 0x1fff
 80006e2:	60fb      	str	r3, [r7, #12]
 80006e4:	f7ff ff72 	bl	80005cc <DESELECT>
 80006e8:	2300      	movs	r3, #0
 80006ea:	60bb      	str	r3, [r7, #8]
 80006ec:	e005      	b.n	80006fa <SD_PowerOn+0x22>
 80006ee:	20ff      	movs	r0, #255	@ 0xff
 80006f0:	f7ff ff7a 	bl	80005e8 <SPI_TxByte>
 80006f4:	68bb      	ldr	r3, [r7, #8]
 80006f6:	3301      	adds	r3, #1
 80006f8:	60bb      	str	r3, [r7, #8]
 80006fa:	68bb      	ldr	r3, [r7, #8]
 80006fc:	2b09      	cmp	r3, #9
 80006fe:	ddf6      	ble.n	80006ee <SD_PowerOn+0x16>
 8000700:	f7ff ff56 	bl	80005b0 <SELECT>
 8000704:	2340      	movs	r3, #64	@ 0x40
 8000706:	703b      	strb	r3, [r7, #0]
 8000708:	2300      	movs	r3, #0
 800070a:	707b      	strb	r3, [r7, #1]
 800070c:	2300      	movs	r3, #0
 800070e:	70bb      	strb	r3, [r7, #2]
 8000710:	2300      	movs	r3, #0
 8000712:	70fb      	strb	r3, [r7, #3]
 8000714:	2300      	movs	r3, #0
 8000716:	713b      	strb	r3, [r7, #4]
 8000718:	2395      	movs	r3, #149	@ 0x95
 800071a:	717b      	strb	r3, [r7, #5]
 800071c:	463b      	mov	r3, r7
 800071e:	2106      	movs	r1, #6
 8000720:	4618      	mov	r0, r3
 8000722:	f7ff ff7b 	bl	800061c <SPI_TxBuffer>
 8000726:	e002      	b.n	800072e <SD_PowerOn+0x56>
 8000728:	68fb      	ldr	r3, [r7, #12]
 800072a:	3b01      	subs	r3, #1
 800072c:	60fb      	str	r3, [r7, #12]
 800072e:	f7ff ff8f 	bl	8000650 <SPI_RxByte>
 8000732:	4603      	mov	r3, r0
 8000734:	2b01      	cmp	r3, #1
 8000736:	d002      	beq.n	800073e <SD_PowerOn+0x66>
 8000738:	68fb      	ldr	r3, [r7, #12]
 800073a:	2b00      	cmp	r3, #0
 800073c:	d1f4      	bne.n	8000728 <SD_PowerOn+0x50>
 800073e:	f7ff ff45 	bl	80005cc <DESELECT>
 8000742:	20ff      	movs	r0, #255	@ 0xff
 8000744:	f7ff ff50 	bl	80005e8 <SPI_TxByte>
 8000748:	4b03      	ldr	r3, [pc, #12]	@ (8000758 <SD_PowerOn+0x80>)
 800074a:	2201      	movs	r2, #1
 800074c:	701a      	strb	r2, [r3, #0]
 800074e:	bf00      	nop
 8000750:	3710      	adds	r7, #16
 8000752:	46bd      	mov	sp, r7
 8000754:	bd80      	pop	{r7, pc}
 8000756:	bf00      	nop
 8000758:	200137d9 	.word	0x200137d9

0800075c <SD_PowerOff>:
 800075c:	b480      	push	{r7}
 800075e:	af00      	add	r7, sp, #0
 8000760:	4b03      	ldr	r3, [pc, #12]	@ (8000770 <SD_PowerOff+0x14>)
 8000762:	2200      	movs	r2, #0
 8000764:	701a      	strb	r2, [r3, #0]
 8000766:	bf00      	nop
 8000768:	46bd      	mov	sp, r7
 800076a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076e:	4770      	bx	lr
 8000770:	200137d9 	.word	0x200137d9

08000774 <SD_CheckPower>:
 8000774:	b480      	push	{r7}
 8000776:	af00      	add	r7, sp, #0
 8000778:	4b03      	ldr	r3, [pc, #12]	@ (8000788 <SD_CheckPower+0x14>)
 800077a:	781b      	ldrb	r3, [r3, #0]
 800077c:	4618      	mov	r0, r3
 800077e:	46bd      	mov	sp, r7
 8000780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000784:	4770      	bx	lr
 8000786:	bf00      	nop
 8000788:	200137d9 	.word	0x200137d9

0800078c <SD_RxDataBlock>:
 800078c:	b580      	push	{r7, lr}
 800078e:	b084      	sub	sp, #16
 8000790:	af00      	add	r7, sp, #0
 8000792:	6078      	str	r0, [r7, #4]
 8000794:	6039      	str	r1, [r7, #0]
 8000796:	4b13      	ldr	r3, [pc, #76]	@ (80007e4 <SD_RxDataBlock+0x58>)
 8000798:	22c8      	movs	r2, #200	@ 0xc8
 800079a:	801a      	strh	r2, [r3, #0]
 800079c:	f7ff ff58 	bl	8000650 <SPI_RxByte>
 80007a0:	4603      	mov	r3, r0
 80007a2:	73fb      	strb	r3, [r7, #15]
 80007a4:	7bfb      	ldrb	r3, [r7, #15]
 80007a6:	2bff      	cmp	r3, #255	@ 0xff
 80007a8:	d103      	bne.n	80007b2 <SD_RxDataBlock+0x26>
 80007aa:	4b0e      	ldr	r3, [pc, #56]	@ (80007e4 <SD_RxDataBlock+0x58>)
 80007ac:	881b      	ldrh	r3, [r3, #0]
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	d1f4      	bne.n	800079c <SD_RxDataBlock+0x10>
 80007b2:	7bfb      	ldrb	r3, [r7, #15]
 80007b4:	2bfe      	cmp	r3, #254	@ 0xfe
 80007b6:	d001      	beq.n	80007bc <SD_RxDataBlock+0x30>
 80007b8:	2300      	movs	r3, #0
 80007ba:	e00f      	b.n	80007dc <SD_RxDataBlock+0x50>
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	1c5a      	adds	r2, r3, #1
 80007c0:	607a      	str	r2, [r7, #4]
 80007c2:	4618      	mov	r0, r3
 80007c4:	f7ff ff60 	bl	8000688 <SPI_RxBytePtr>
 80007c8:	683b      	ldr	r3, [r7, #0]
 80007ca:	1e5a      	subs	r2, r3, #1
 80007cc:	603a      	str	r2, [r7, #0]
 80007ce:	2b00      	cmp	r3, #0
 80007d0:	d1f4      	bne.n	80007bc <SD_RxDataBlock+0x30>
 80007d2:	f7ff ff3d 	bl	8000650 <SPI_RxByte>
 80007d6:	f7ff ff3b 	bl	8000650 <SPI_RxByte>
 80007da:	2301      	movs	r3, #1
 80007dc:	4618      	mov	r0, r3
 80007de:	3710      	adds	r7, #16
 80007e0:	46bd      	mov	sp, r7
 80007e2:	bd80      	pop	{r7, pc}
 80007e4:	200137d4 	.word	0x200137d4

080007e8 <SD_TxDataBlock>:
 80007e8:	b580      	push	{r7, lr}
 80007ea:	b084      	sub	sp, #16
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
 80007f0:	460b      	mov	r3, r1
 80007f2:	70fb      	strb	r3, [r7, #3]
 80007f4:	2300      	movs	r3, #0
 80007f6:	73bb      	strb	r3, [r7, #14]
 80007f8:	f7ff ff54 	bl	80006a4 <SD_ReadyWait>
 80007fc:	4603      	mov	r3, r0
 80007fe:	2bff      	cmp	r3, #255	@ 0xff
 8000800:	d001      	beq.n	8000806 <SD_TxDataBlock+0x1e>
 8000802:	2300      	movs	r3, #0
 8000804:	e02f      	b.n	8000866 <SD_TxDataBlock+0x7e>
 8000806:	78fb      	ldrb	r3, [r7, #3]
 8000808:	4618      	mov	r0, r3
 800080a:	f7ff feed 	bl	80005e8 <SPI_TxByte>
 800080e:	78fb      	ldrb	r3, [r7, #3]
 8000810:	2bfd      	cmp	r3, #253	@ 0xfd
 8000812:	d020      	beq.n	8000856 <SD_TxDataBlock+0x6e>
 8000814:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000818:	6878      	ldr	r0, [r7, #4]
 800081a:	f7ff feff 	bl	800061c <SPI_TxBuffer>
 800081e:	f7ff ff17 	bl	8000650 <SPI_RxByte>
 8000822:	f7ff ff15 	bl	8000650 <SPI_RxByte>
 8000826:	e00b      	b.n	8000840 <SD_TxDataBlock+0x58>
 8000828:	f7ff ff12 	bl	8000650 <SPI_RxByte>
 800082c:	4603      	mov	r3, r0
 800082e:	73fb      	strb	r3, [r7, #15]
 8000830:	7bfb      	ldrb	r3, [r7, #15]
 8000832:	f003 031f 	and.w	r3, r3, #31
 8000836:	2b05      	cmp	r3, #5
 8000838:	d006      	beq.n	8000848 <SD_TxDataBlock+0x60>
 800083a:	7bbb      	ldrb	r3, [r7, #14]
 800083c:	3301      	adds	r3, #1
 800083e:	73bb      	strb	r3, [r7, #14]
 8000840:	7bbb      	ldrb	r3, [r7, #14]
 8000842:	2b40      	cmp	r3, #64	@ 0x40
 8000844:	d9f0      	bls.n	8000828 <SD_TxDataBlock+0x40>
 8000846:	e000      	b.n	800084a <SD_TxDataBlock+0x62>
 8000848:	bf00      	nop
 800084a:	bf00      	nop
 800084c:	f7ff ff00 	bl	8000650 <SPI_RxByte>
 8000850:	4603      	mov	r3, r0
 8000852:	2b00      	cmp	r3, #0
 8000854:	d0fa      	beq.n	800084c <SD_TxDataBlock+0x64>
 8000856:	7bfb      	ldrb	r3, [r7, #15]
 8000858:	f003 031f 	and.w	r3, r3, #31
 800085c:	2b05      	cmp	r3, #5
 800085e:	d101      	bne.n	8000864 <SD_TxDataBlock+0x7c>
 8000860:	2301      	movs	r3, #1
 8000862:	e000      	b.n	8000866 <SD_TxDataBlock+0x7e>
 8000864:	2300      	movs	r3, #0
 8000866:	4618      	mov	r0, r3
 8000868:	3710      	adds	r7, #16
 800086a:	46bd      	mov	sp, r7
 800086c:	bd80      	pop	{r7, pc}

0800086e <SD_SendCmd>:
 800086e:	b580      	push	{r7, lr}
 8000870:	b084      	sub	sp, #16
 8000872:	af00      	add	r7, sp, #0
 8000874:	4603      	mov	r3, r0
 8000876:	6039      	str	r1, [r7, #0]
 8000878:	71fb      	strb	r3, [r7, #7]
 800087a:	f7ff ff13 	bl	80006a4 <SD_ReadyWait>
 800087e:	4603      	mov	r3, r0
 8000880:	2bff      	cmp	r3, #255	@ 0xff
 8000882:	d001      	beq.n	8000888 <SD_SendCmd+0x1a>
 8000884:	23ff      	movs	r3, #255	@ 0xff
 8000886:	e042      	b.n	800090e <SD_SendCmd+0xa0>
 8000888:	79fb      	ldrb	r3, [r7, #7]
 800088a:	4618      	mov	r0, r3
 800088c:	f7ff feac 	bl	80005e8 <SPI_TxByte>
 8000890:	683b      	ldr	r3, [r7, #0]
 8000892:	0e1b      	lsrs	r3, r3, #24
 8000894:	b2db      	uxtb	r3, r3
 8000896:	4618      	mov	r0, r3
 8000898:	f7ff fea6 	bl	80005e8 <SPI_TxByte>
 800089c:	683b      	ldr	r3, [r7, #0]
 800089e:	0c1b      	lsrs	r3, r3, #16
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	4618      	mov	r0, r3
 80008a4:	f7ff fea0 	bl	80005e8 <SPI_TxByte>
 80008a8:	683b      	ldr	r3, [r7, #0]
 80008aa:	0a1b      	lsrs	r3, r3, #8
 80008ac:	b2db      	uxtb	r3, r3
 80008ae:	4618      	mov	r0, r3
 80008b0:	f7ff fe9a 	bl	80005e8 <SPI_TxByte>
 80008b4:	683b      	ldr	r3, [r7, #0]
 80008b6:	b2db      	uxtb	r3, r3
 80008b8:	4618      	mov	r0, r3
 80008ba:	f7ff fe95 	bl	80005e8 <SPI_TxByte>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b40      	cmp	r3, #64	@ 0x40
 80008c2:	d102      	bne.n	80008ca <SD_SendCmd+0x5c>
 80008c4:	2395      	movs	r3, #149	@ 0x95
 80008c6:	73fb      	strb	r3, [r7, #15]
 80008c8:	e007      	b.n	80008da <SD_SendCmd+0x6c>
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b48      	cmp	r3, #72	@ 0x48
 80008ce:	d102      	bne.n	80008d6 <SD_SendCmd+0x68>
 80008d0:	2387      	movs	r3, #135	@ 0x87
 80008d2:	73fb      	strb	r3, [r7, #15]
 80008d4:	e001      	b.n	80008da <SD_SendCmd+0x6c>
 80008d6:	2301      	movs	r3, #1
 80008d8:	73fb      	strb	r3, [r7, #15]
 80008da:	7bfb      	ldrb	r3, [r7, #15]
 80008dc:	4618      	mov	r0, r3
 80008de:	f7ff fe83 	bl	80005e8 <SPI_TxByte>
 80008e2:	79fb      	ldrb	r3, [r7, #7]
 80008e4:	2b4c      	cmp	r3, #76	@ 0x4c
 80008e6:	d101      	bne.n	80008ec <SD_SendCmd+0x7e>
 80008e8:	f7ff feb2 	bl	8000650 <SPI_RxByte>
 80008ec:	230a      	movs	r3, #10
 80008ee:	73bb      	strb	r3, [r7, #14]
 80008f0:	f7ff feae 	bl	8000650 <SPI_RxByte>
 80008f4:	4603      	mov	r3, r0
 80008f6:	737b      	strb	r3, [r7, #13]
 80008f8:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80008fc:	2b00      	cmp	r3, #0
 80008fe:	da05      	bge.n	800090c <SD_SendCmd+0x9e>
 8000900:	7bbb      	ldrb	r3, [r7, #14]
 8000902:	3b01      	subs	r3, #1
 8000904:	73bb      	strb	r3, [r7, #14]
 8000906:	7bbb      	ldrb	r3, [r7, #14]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d1f1      	bne.n	80008f0 <SD_SendCmd+0x82>
 800090c:	7b7b      	ldrb	r3, [r7, #13]
 800090e:	4618      	mov	r0, r3
 8000910:	3710      	adds	r7, #16
 8000912:	46bd      	mov	sp, r7
 8000914:	bd80      	pop	{r7, pc}
	...

08000918 <SD_disk_initialize>:
 8000918:	b590      	push	{r4, r7, lr}
 800091a:	b085      	sub	sp, #20
 800091c:	af00      	add	r7, sp, #0
 800091e:	4603      	mov	r3, r0
 8000920:	71fb      	strb	r3, [r7, #7]
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	2b00      	cmp	r3, #0
 8000926:	d001      	beq.n	800092c <SD_disk_initialize+0x14>
 8000928:	2301      	movs	r3, #1
 800092a:	e0d1      	b.n	8000ad0 <SD_disk_initialize+0x1b8>
 800092c:	4b6a      	ldr	r3, [pc, #424]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 800092e:	781b      	ldrb	r3, [r3, #0]
 8000930:	b2db      	uxtb	r3, r3
 8000932:	f003 0302 	and.w	r3, r3, #2
 8000936:	2b00      	cmp	r3, #0
 8000938:	d003      	beq.n	8000942 <SD_disk_initialize+0x2a>
 800093a:	4b67      	ldr	r3, [pc, #412]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 800093c:	781b      	ldrb	r3, [r3, #0]
 800093e:	b2db      	uxtb	r3, r3
 8000940:	e0c6      	b.n	8000ad0 <SD_disk_initialize+0x1b8>
 8000942:	f7ff fec9 	bl	80006d8 <SD_PowerOn>
 8000946:	f7ff fe33 	bl	80005b0 <SELECT>
 800094a:	2300      	movs	r3, #0
 800094c:	73bb      	strb	r3, [r7, #14]
 800094e:	2100      	movs	r1, #0
 8000950:	2040      	movs	r0, #64	@ 0x40
 8000952:	f7ff ff8c 	bl	800086e <SD_SendCmd>
 8000956:	4603      	mov	r3, r0
 8000958:	2b01      	cmp	r3, #1
 800095a:	f040 80a1 	bne.w	8000aa0 <SD_disk_initialize+0x188>
 800095e:	4b5f      	ldr	r3, [pc, #380]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000960:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000964:	801a      	strh	r2, [r3, #0]
 8000966:	f44f 71d5 	mov.w	r1, #426	@ 0x1aa
 800096a:	2048      	movs	r0, #72	@ 0x48
 800096c:	f7ff ff7f 	bl	800086e <SD_SendCmd>
 8000970:	4603      	mov	r3, r0
 8000972:	2b01      	cmp	r3, #1
 8000974:	d155      	bne.n	8000a22 <SD_disk_initialize+0x10a>
 8000976:	2300      	movs	r3, #0
 8000978:	73fb      	strb	r3, [r7, #15]
 800097a:	e00c      	b.n	8000996 <SD_disk_initialize+0x7e>
 800097c:	7bfc      	ldrb	r4, [r7, #15]
 800097e:	f7ff fe67 	bl	8000650 <SPI_RxByte>
 8000982:	4603      	mov	r3, r0
 8000984:	461a      	mov	r2, r3
 8000986:	f104 0310 	add.w	r3, r4, #16
 800098a:	443b      	add	r3, r7
 800098c:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000990:	7bfb      	ldrb	r3, [r7, #15]
 8000992:	3301      	adds	r3, #1
 8000994:	73fb      	strb	r3, [r7, #15]
 8000996:	7bfb      	ldrb	r3, [r7, #15]
 8000998:	2b03      	cmp	r3, #3
 800099a:	d9ef      	bls.n	800097c <SD_disk_initialize+0x64>
 800099c:	7abb      	ldrb	r3, [r7, #10]
 800099e:	2b01      	cmp	r3, #1
 80009a0:	d17e      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009a2:	7afb      	ldrb	r3, [r7, #11]
 80009a4:	2baa      	cmp	r3, #170	@ 0xaa
 80009a6:	d17b      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009a8:	2100      	movs	r1, #0
 80009aa:	2077      	movs	r0, #119	@ 0x77
 80009ac:	f7ff ff5f 	bl	800086e <SD_SendCmd>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b01      	cmp	r3, #1
 80009b4:	d807      	bhi.n	80009c6 <SD_disk_initialize+0xae>
 80009b6:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 80009ba:	2069      	movs	r0, #105	@ 0x69
 80009bc:	f7ff ff57 	bl	800086e <SD_SendCmd>
 80009c0:	4603      	mov	r3, r0
 80009c2:	2b00      	cmp	r3, #0
 80009c4:	d004      	beq.n	80009d0 <SD_disk_initialize+0xb8>
 80009c6:	4b45      	ldr	r3, [pc, #276]	@ (8000adc <SD_disk_initialize+0x1c4>)
 80009c8:	881b      	ldrh	r3, [r3, #0]
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d1ec      	bne.n	80009a8 <SD_disk_initialize+0x90>
 80009ce:	e000      	b.n	80009d2 <SD_disk_initialize+0xba>
 80009d0:	bf00      	nop
 80009d2:	4b42      	ldr	r3, [pc, #264]	@ (8000adc <SD_disk_initialize+0x1c4>)
 80009d4:	881b      	ldrh	r3, [r3, #0]
 80009d6:	2b00      	cmp	r3, #0
 80009d8:	d062      	beq.n	8000aa0 <SD_disk_initialize+0x188>
 80009da:	2100      	movs	r1, #0
 80009dc:	207a      	movs	r0, #122	@ 0x7a
 80009de:	f7ff ff46 	bl	800086e <SD_SendCmd>
 80009e2:	4603      	mov	r3, r0
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d15b      	bne.n	8000aa0 <SD_disk_initialize+0x188>
 80009e8:	2300      	movs	r3, #0
 80009ea:	73fb      	strb	r3, [r7, #15]
 80009ec:	e00c      	b.n	8000a08 <SD_disk_initialize+0xf0>
 80009ee:	7bfc      	ldrb	r4, [r7, #15]
 80009f0:	f7ff fe2e 	bl	8000650 <SPI_RxByte>
 80009f4:	4603      	mov	r3, r0
 80009f6:	461a      	mov	r2, r3
 80009f8:	f104 0310 	add.w	r3, r4, #16
 80009fc:	443b      	add	r3, r7
 80009fe:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000a02:	7bfb      	ldrb	r3, [r7, #15]
 8000a04:	3301      	adds	r3, #1
 8000a06:	73fb      	strb	r3, [r7, #15]
 8000a08:	7bfb      	ldrb	r3, [r7, #15]
 8000a0a:	2b03      	cmp	r3, #3
 8000a0c:	d9ef      	bls.n	80009ee <SD_disk_initialize+0xd6>
 8000a0e:	7a3b      	ldrb	r3, [r7, #8]
 8000a10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d001      	beq.n	8000a1c <SD_disk_initialize+0x104>
 8000a18:	230c      	movs	r3, #12
 8000a1a:	e000      	b.n	8000a1e <SD_disk_initialize+0x106>
 8000a1c:	2304      	movs	r3, #4
 8000a1e:	73bb      	strb	r3, [r7, #14]
 8000a20:	e03e      	b.n	8000aa0 <SD_disk_initialize+0x188>
 8000a22:	2100      	movs	r1, #0
 8000a24:	2077      	movs	r0, #119	@ 0x77
 8000a26:	f7ff ff22 	bl	800086e <SD_SendCmd>
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	2b01      	cmp	r3, #1
 8000a2e:	d808      	bhi.n	8000a42 <SD_disk_initialize+0x12a>
 8000a30:	2100      	movs	r1, #0
 8000a32:	2069      	movs	r0, #105	@ 0x69
 8000a34:	f7ff ff1b 	bl	800086e <SD_SendCmd>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	2b01      	cmp	r3, #1
 8000a3c:	d801      	bhi.n	8000a42 <SD_disk_initialize+0x12a>
 8000a3e:	2302      	movs	r3, #2
 8000a40:	e000      	b.n	8000a44 <SD_disk_initialize+0x12c>
 8000a42:	2301      	movs	r3, #1
 8000a44:	73bb      	strb	r3, [r7, #14]
 8000a46:	7bbb      	ldrb	r3, [r7, #14]
 8000a48:	2b02      	cmp	r3, #2
 8000a4a:	d10e      	bne.n	8000a6a <SD_disk_initialize+0x152>
 8000a4c:	2100      	movs	r1, #0
 8000a4e:	2077      	movs	r0, #119	@ 0x77
 8000a50:	f7ff ff0d 	bl	800086e <SD_SendCmd>
 8000a54:	4603      	mov	r3, r0
 8000a56:	2b01      	cmp	r3, #1
 8000a58:	d80e      	bhi.n	8000a78 <SD_disk_initialize+0x160>
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	2069      	movs	r0, #105	@ 0x69
 8000a5e:	f7ff ff06 	bl	800086e <SD_SendCmd>
 8000a62:	4603      	mov	r3, r0
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d107      	bne.n	8000a78 <SD_disk_initialize+0x160>
 8000a68:	e00c      	b.n	8000a84 <SD_disk_initialize+0x16c>
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	2041      	movs	r0, #65	@ 0x41
 8000a6e:	f7ff fefe 	bl	800086e <SD_SendCmd>
 8000a72:	4603      	mov	r3, r0
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d004      	beq.n	8000a82 <SD_disk_initialize+0x16a>
 8000a78:	4b18      	ldr	r3, [pc, #96]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000a7a:	881b      	ldrh	r3, [r3, #0]
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d1e2      	bne.n	8000a46 <SD_disk_initialize+0x12e>
 8000a80:	e000      	b.n	8000a84 <SD_disk_initialize+0x16c>
 8000a82:	bf00      	nop
 8000a84:	4b15      	ldr	r3, [pc, #84]	@ (8000adc <SD_disk_initialize+0x1c4>)
 8000a86:	881b      	ldrh	r3, [r3, #0]
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d007      	beq.n	8000a9c <SD_disk_initialize+0x184>
 8000a8c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000a90:	2050      	movs	r0, #80	@ 0x50
 8000a92:	f7ff feec 	bl	800086e <SD_SendCmd>
 8000a96:	4603      	mov	r3, r0
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d001      	beq.n	8000aa0 <SD_disk_initialize+0x188>
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	73bb      	strb	r3, [r7, #14]
 8000aa0:	4a0f      	ldr	r2, [pc, #60]	@ (8000ae0 <SD_disk_initialize+0x1c8>)
 8000aa2:	7bbb      	ldrb	r3, [r7, #14]
 8000aa4:	7013      	strb	r3, [r2, #0]
 8000aa6:	f7ff fd91 	bl	80005cc <DESELECT>
 8000aaa:	f7ff fdd1 	bl	8000650 <SPI_RxByte>
 8000aae:	7bbb      	ldrb	r3, [r7, #14]
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	d008      	beq.n	8000ac6 <SD_disk_initialize+0x1ae>
 8000ab4:	4b08      	ldr	r3, [pc, #32]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000ab6:	781b      	ldrb	r3, [r3, #0]
 8000ab8:	b2db      	uxtb	r3, r3
 8000aba:	f023 0301 	bic.w	r3, r3, #1
 8000abe:	b2da      	uxtb	r2, r3
 8000ac0:	4b05      	ldr	r3, [pc, #20]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000ac2:	701a      	strb	r2, [r3, #0]
 8000ac4:	e001      	b.n	8000aca <SD_disk_initialize+0x1b2>
 8000ac6:	f7ff fe49 	bl	800075c <SD_PowerOff>
 8000aca:	4b03      	ldr	r3, [pc, #12]	@ (8000ad8 <SD_disk_initialize+0x1c0>)
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	b2db      	uxtb	r3, r3
 8000ad0:	4618      	mov	r0, r3
 8000ad2:	3714      	adds	r7, #20
 8000ad4:	46bd      	mov	sp, r7
 8000ad6:	bd90      	pop	{r4, r7, pc}
 8000ad8:	20000000 	.word	0x20000000
 8000adc:	200137d4 	.word	0x200137d4
 8000ae0:	200137d8 	.word	0x200137d8

08000ae4 <SD_disk_status>:
 8000ae4:	b480      	push	{r7}
 8000ae6:	b083      	sub	sp, #12
 8000ae8:	af00      	add	r7, sp, #0
 8000aea:	4603      	mov	r3, r0
 8000aec:	71fb      	strb	r3, [r7, #7]
 8000aee:	79fb      	ldrb	r3, [r7, #7]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d001      	beq.n	8000af8 <SD_disk_status+0x14>
 8000af4:	2301      	movs	r3, #1
 8000af6:	e002      	b.n	8000afe <SD_disk_status+0x1a>
 8000af8:	4b04      	ldr	r3, [pc, #16]	@ (8000b0c <SD_disk_status+0x28>)
 8000afa:	781b      	ldrb	r3, [r3, #0]
 8000afc:	b2db      	uxtb	r3, r3
 8000afe:	4618      	mov	r0, r3
 8000b00:	370c      	adds	r7, #12
 8000b02:	46bd      	mov	sp, r7
 8000b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b08:	4770      	bx	lr
 8000b0a:	bf00      	nop
 8000b0c:	20000000 	.word	0x20000000

08000b10 <SD_disk_read>:
 8000b10:	b580      	push	{r7, lr}
 8000b12:	b084      	sub	sp, #16
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	60b9      	str	r1, [r7, #8]
 8000b18:	607a      	str	r2, [r7, #4]
 8000b1a:	603b      	str	r3, [r7, #0]
 8000b1c:	4603      	mov	r3, r0
 8000b1e:	73fb      	strb	r3, [r7, #15]
 8000b20:	7bfb      	ldrb	r3, [r7, #15]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d102      	bne.n	8000b2c <SD_disk_read+0x1c>
 8000b26:	683b      	ldr	r3, [r7, #0]
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d101      	bne.n	8000b30 <SD_disk_read+0x20>
 8000b2c:	2304      	movs	r3, #4
 8000b2e:	e051      	b.n	8000bd4 <SD_disk_read+0xc4>
 8000b30:	4b2a      	ldr	r3, [pc, #168]	@ (8000bdc <SD_disk_read+0xcc>)
 8000b32:	781b      	ldrb	r3, [r3, #0]
 8000b34:	b2db      	uxtb	r3, r3
 8000b36:	f003 0301 	and.w	r3, r3, #1
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d001      	beq.n	8000b42 <SD_disk_read+0x32>
 8000b3e:	2303      	movs	r3, #3
 8000b40:	e048      	b.n	8000bd4 <SD_disk_read+0xc4>
 8000b42:	4b27      	ldr	r3, [pc, #156]	@ (8000be0 <SD_disk_read+0xd0>)
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	f003 0304 	and.w	r3, r3, #4
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d102      	bne.n	8000b54 <SD_disk_read+0x44>
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	025b      	lsls	r3, r3, #9
 8000b52:	607b      	str	r3, [r7, #4]
 8000b54:	f7ff fd2c 	bl	80005b0 <SELECT>
 8000b58:	683b      	ldr	r3, [r7, #0]
 8000b5a:	2b01      	cmp	r3, #1
 8000b5c:	d111      	bne.n	8000b82 <SD_disk_read+0x72>
 8000b5e:	6879      	ldr	r1, [r7, #4]
 8000b60:	2051      	movs	r0, #81	@ 0x51
 8000b62:	f7ff fe84 	bl	800086e <SD_SendCmd>
 8000b66:	4603      	mov	r3, r0
 8000b68:	2b00      	cmp	r3, #0
 8000b6a:	d129      	bne.n	8000bc0 <SD_disk_read+0xb0>
 8000b6c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b70:	68b8      	ldr	r0, [r7, #8]
 8000b72:	f7ff fe0b 	bl	800078c <SD_RxDataBlock>
 8000b76:	4603      	mov	r3, r0
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	d021      	beq.n	8000bc0 <SD_disk_read+0xb0>
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	603b      	str	r3, [r7, #0]
 8000b80:	e01e      	b.n	8000bc0 <SD_disk_read+0xb0>
 8000b82:	6879      	ldr	r1, [r7, #4]
 8000b84:	2052      	movs	r0, #82	@ 0x52
 8000b86:	f7ff fe72 	bl	800086e <SD_SendCmd>
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d117      	bne.n	8000bc0 <SD_disk_read+0xb0>
 8000b90:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b94:	68b8      	ldr	r0, [r7, #8]
 8000b96:	f7ff fdf9 	bl	800078c <SD_RxDataBlock>
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	d00a      	beq.n	8000bb6 <SD_disk_read+0xa6>
 8000ba0:	68bb      	ldr	r3, [r7, #8]
 8000ba2:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000ba6:	60bb      	str	r3, [r7, #8]
 8000ba8:	683b      	ldr	r3, [r7, #0]
 8000baa:	3b01      	subs	r3, #1
 8000bac:	603b      	str	r3, [r7, #0]
 8000bae:	683b      	ldr	r3, [r7, #0]
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	d1ed      	bne.n	8000b90 <SD_disk_read+0x80>
 8000bb4:	e000      	b.n	8000bb8 <SD_disk_read+0xa8>
 8000bb6:	bf00      	nop
 8000bb8:	2100      	movs	r1, #0
 8000bba:	204c      	movs	r0, #76	@ 0x4c
 8000bbc:	f7ff fe57 	bl	800086e <SD_SendCmd>
 8000bc0:	f7ff fd04 	bl	80005cc <DESELECT>
 8000bc4:	f7ff fd44 	bl	8000650 <SPI_RxByte>
 8000bc8:	683b      	ldr	r3, [r7, #0]
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	bf14      	ite	ne
 8000bce:	2301      	movne	r3, #1
 8000bd0:	2300      	moveq	r3, #0
 8000bd2:	b2db      	uxtb	r3, r3
 8000bd4:	4618      	mov	r0, r3
 8000bd6:	3710      	adds	r7, #16
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	bd80      	pop	{r7, pc}
 8000bdc:	20000000 	.word	0x20000000
 8000be0:	200137d8 	.word	0x200137d8

08000be4 <SD_disk_write>:
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b084      	sub	sp, #16
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	60b9      	str	r1, [r7, #8]
 8000bec:	607a      	str	r2, [r7, #4]
 8000bee:	603b      	str	r3, [r7, #0]
 8000bf0:	4603      	mov	r3, r0
 8000bf2:	73fb      	strb	r3, [r7, #15]
 8000bf4:	7bfb      	ldrb	r3, [r7, #15]
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d102      	bne.n	8000c00 <SD_disk_write+0x1c>
 8000bfa:	683b      	ldr	r3, [r7, #0]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d101      	bne.n	8000c04 <SD_disk_write+0x20>
 8000c00:	2304      	movs	r3, #4
 8000c02:	e06b      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c04:	4b37      	ldr	r3, [pc, #220]	@ (8000ce4 <SD_disk_write+0x100>)
 8000c06:	781b      	ldrb	r3, [r3, #0]
 8000c08:	b2db      	uxtb	r3, r3
 8000c0a:	f003 0301 	and.w	r3, r3, #1
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d001      	beq.n	8000c16 <SD_disk_write+0x32>
 8000c12:	2303      	movs	r3, #3
 8000c14:	e062      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c16:	4b33      	ldr	r3, [pc, #204]	@ (8000ce4 <SD_disk_write+0x100>)
 8000c18:	781b      	ldrb	r3, [r3, #0]
 8000c1a:	b2db      	uxtb	r3, r3
 8000c1c:	f003 0304 	and.w	r3, r3, #4
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d001      	beq.n	8000c28 <SD_disk_write+0x44>
 8000c24:	2302      	movs	r3, #2
 8000c26:	e059      	b.n	8000cdc <SD_disk_write+0xf8>
 8000c28:	4b2f      	ldr	r3, [pc, #188]	@ (8000ce8 <SD_disk_write+0x104>)
 8000c2a:	781b      	ldrb	r3, [r3, #0]
 8000c2c:	f003 0304 	and.w	r3, r3, #4
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d102      	bne.n	8000c3a <SD_disk_write+0x56>
 8000c34:	687b      	ldr	r3, [r7, #4]
 8000c36:	025b      	lsls	r3, r3, #9
 8000c38:	607b      	str	r3, [r7, #4]
 8000c3a:	f7ff fcb9 	bl	80005b0 <SELECT>
 8000c3e:	683b      	ldr	r3, [r7, #0]
 8000c40:	2b01      	cmp	r3, #1
 8000c42:	d110      	bne.n	8000c66 <SD_disk_write+0x82>
 8000c44:	6879      	ldr	r1, [r7, #4]
 8000c46:	2058      	movs	r0, #88	@ 0x58
 8000c48:	f7ff fe11 	bl	800086e <SD_SendCmd>
 8000c4c:	4603      	mov	r3, r0
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d13a      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000c52:	21fe      	movs	r1, #254	@ 0xfe
 8000c54:	68b8      	ldr	r0, [r7, #8]
 8000c56:	f7ff fdc7 	bl	80007e8 <SD_TxDataBlock>
 8000c5a:	4603      	mov	r3, r0
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d033      	beq.n	8000cc8 <SD_disk_write+0xe4>
 8000c60:	2300      	movs	r3, #0
 8000c62:	603b      	str	r3, [r7, #0]
 8000c64:	e030      	b.n	8000cc8 <SD_disk_write+0xe4>
 8000c66:	4b20      	ldr	r3, [pc, #128]	@ (8000ce8 <SD_disk_write+0x104>)
 8000c68:	781b      	ldrb	r3, [r3, #0]
 8000c6a:	f003 0302 	and.w	r3, r3, #2
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d007      	beq.n	8000c82 <SD_disk_write+0x9e>
 8000c72:	2100      	movs	r1, #0
 8000c74:	2077      	movs	r0, #119	@ 0x77
 8000c76:	f7ff fdfa 	bl	800086e <SD_SendCmd>
 8000c7a:	6839      	ldr	r1, [r7, #0]
 8000c7c:	2057      	movs	r0, #87	@ 0x57
 8000c7e:	f7ff fdf6 	bl	800086e <SD_SendCmd>
 8000c82:	6879      	ldr	r1, [r7, #4]
 8000c84:	2059      	movs	r0, #89	@ 0x59
 8000c86:	f7ff fdf2 	bl	800086e <SD_SendCmd>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d11b      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000c90:	21fc      	movs	r1, #252	@ 0xfc
 8000c92:	68b8      	ldr	r0, [r7, #8]
 8000c94:	f7ff fda8 	bl	80007e8 <SD_TxDataBlock>
 8000c98:	4603      	mov	r3, r0
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	d00a      	beq.n	8000cb4 <SD_disk_write+0xd0>
 8000c9e:	68bb      	ldr	r3, [r7, #8]
 8000ca0:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000ca4:	60bb      	str	r3, [r7, #8]
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	3b01      	subs	r3, #1
 8000caa:	603b      	str	r3, [r7, #0]
 8000cac:	683b      	ldr	r3, [r7, #0]
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d1ee      	bne.n	8000c90 <SD_disk_write+0xac>
 8000cb2:	e000      	b.n	8000cb6 <SD_disk_write+0xd2>
 8000cb4:	bf00      	nop
 8000cb6:	21fd      	movs	r1, #253	@ 0xfd
 8000cb8:	2000      	movs	r0, #0
 8000cba:	f7ff fd95 	bl	80007e8 <SD_TxDataBlock>
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d101      	bne.n	8000cc8 <SD_disk_write+0xe4>
 8000cc4:	2301      	movs	r3, #1
 8000cc6:	603b      	str	r3, [r7, #0]
 8000cc8:	f7ff fc80 	bl	80005cc <DESELECT>
 8000ccc:	f7ff fcc0 	bl	8000650 <SPI_RxByte>
 8000cd0:	683b      	ldr	r3, [r7, #0]
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	bf14      	ite	ne
 8000cd6:	2301      	movne	r3, #1
 8000cd8:	2300      	moveq	r3, #0
 8000cda:	b2db      	uxtb	r3, r3
 8000cdc:	4618      	mov	r0, r3
 8000cde:	3710      	adds	r7, #16
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	bd80      	pop	{r7, pc}
 8000ce4:	20000000 	.word	0x20000000
 8000ce8:	200137d8 	.word	0x200137d8

08000cec <SD_disk_ioctl>:
 8000cec:	b590      	push	{r4, r7, lr}
 8000cee:	b08b      	sub	sp, #44	@ 0x2c
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	603a      	str	r2, [r7, #0]
 8000cf6:	71fb      	strb	r3, [r7, #7]
 8000cf8:	460b      	mov	r3, r1
 8000cfa:	71bb      	strb	r3, [r7, #6]
 8000cfc:	683b      	ldr	r3, [r7, #0]
 8000cfe:	623b      	str	r3, [r7, #32]
 8000d00:	79fb      	ldrb	r3, [r7, #7]
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d001      	beq.n	8000d0a <SD_disk_ioctl+0x1e>
 8000d06:	2304      	movs	r3, #4
 8000d08:	e113      	b.n	8000f32 <SD_disk_ioctl+0x246>
 8000d0a:	2301      	movs	r3, #1
 8000d0c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d10:	79bb      	ldrb	r3, [r7, #6]
 8000d12:	2b05      	cmp	r3, #5
 8000d14:	d124      	bne.n	8000d60 <SD_disk_ioctl+0x74>
 8000d16:	6a3b      	ldr	r3, [r7, #32]
 8000d18:	781b      	ldrb	r3, [r3, #0]
 8000d1a:	2b02      	cmp	r3, #2
 8000d1c:	d012      	beq.n	8000d44 <SD_disk_ioctl+0x58>
 8000d1e:	2b02      	cmp	r3, #2
 8000d20:	dc1a      	bgt.n	8000d58 <SD_disk_ioctl+0x6c>
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d002      	beq.n	8000d2c <SD_disk_ioctl+0x40>
 8000d26:	2b01      	cmp	r3, #1
 8000d28:	d006      	beq.n	8000d38 <SD_disk_ioctl+0x4c>
 8000d2a:	e015      	b.n	8000d58 <SD_disk_ioctl+0x6c>
 8000d2c:	f7ff fd16 	bl	800075c <SD_PowerOff>
 8000d30:	2300      	movs	r3, #0
 8000d32:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d36:	e0fa      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d38:	f7ff fcce 	bl	80006d8 <SD_PowerOn>
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d42:	e0f4      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d44:	6a3b      	ldr	r3, [r7, #32]
 8000d46:	1c5c      	adds	r4, r3, #1
 8000d48:	f7ff fd14 	bl	8000774 <SD_CheckPower>
 8000d4c:	4603      	mov	r3, r0
 8000d4e:	7023      	strb	r3, [r4, #0]
 8000d50:	2300      	movs	r3, #0
 8000d52:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d56:	e0ea      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d58:	2304      	movs	r3, #4
 8000d5a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000d5e:	e0e6      	b.n	8000f2e <SD_disk_ioctl+0x242>
 8000d60:	4b76      	ldr	r3, [pc, #472]	@ (8000f3c <SD_disk_ioctl+0x250>)
 8000d62:	781b      	ldrb	r3, [r3, #0]
 8000d64:	b2db      	uxtb	r3, r3
 8000d66:	f003 0301 	and.w	r3, r3, #1
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	d001      	beq.n	8000d72 <SD_disk_ioctl+0x86>
 8000d6e:	2303      	movs	r3, #3
 8000d70:	e0df      	b.n	8000f32 <SD_disk_ioctl+0x246>
 8000d72:	f7ff fc1d 	bl	80005b0 <SELECT>
 8000d76:	79bb      	ldrb	r3, [r7, #6]
 8000d78:	2b0d      	cmp	r3, #13
 8000d7a:	f200 80c9 	bhi.w	8000f10 <SD_disk_ioctl+0x224>
 8000d7e:	a201      	add	r2, pc, #4	@ (adr r2, 8000d84 <SD_disk_ioctl+0x98>)
 8000d80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d84:	08000e7b 	.word	0x08000e7b
 8000d88:	08000dbd 	.word	0x08000dbd
 8000d8c:	08000e6b 	.word	0x08000e6b
 8000d90:	08000f11 	.word	0x08000f11
 8000d94:	08000f11 	.word	0x08000f11
 8000d98:	08000f11 	.word	0x08000f11
 8000d9c:	08000f11 	.word	0x08000f11
 8000da0:	08000f11 	.word	0x08000f11
 8000da4:	08000f11 	.word	0x08000f11
 8000da8:	08000f11 	.word	0x08000f11
 8000dac:	08000f11 	.word	0x08000f11
 8000db0:	08000e8d 	.word	0x08000e8d
 8000db4:	08000eb1 	.word	0x08000eb1
 8000db8:	08000ed5 	.word	0x08000ed5
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	2049      	movs	r0, #73	@ 0x49
 8000dc0:	f7ff fd55 	bl	800086e <SD_SendCmd>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	f040 80a6 	bne.w	8000f18 <SD_disk_ioctl+0x22c>
 8000dcc:	f107 030c 	add.w	r3, r7, #12
 8000dd0:	2110      	movs	r1, #16
 8000dd2:	4618      	mov	r0, r3
 8000dd4:	f7ff fcda 	bl	800078c <SD_RxDataBlock>
 8000dd8:	4603      	mov	r3, r0
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	f000 809c 	beq.w	8000f18 <SD_disk_ioctl+0x22c>
 8000de0:	7b3b      	ldrb	r3, [r7, #12]
 8000de2:	099b      	lsrs	r3, r3, #6
 8000de4:	b2db      	uxtb	r3, r3
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d10d      	bne.n	8000e06 <SD_disk_ioctl+0x11a>
 8000dea:	7d7b      	ldrb	r3, [r7, #21]
 8000dec:	461a      	mov	r2, r3
 8000dee:	7d3b      	ldrb	r3, [r7, #20]
 8000df0:	021b      	lsls	r3, r3, #8
 8000df2:	b29b      	uxth	r3, r3
 8000df4:	4413      	add	r3, r2
 8000df6:	b29b      	uxth	r3, r3
 8000df8:	3301      	adds	r3, #1
 8000dfa:	83fb      	strh	r3, [r7, #30]
 8000dfc:	8bfb      	ldrh	r3, [r7, #30]
 8000dfe:	029a      	lsls	r2, r3, #10
 8000e00:	683b      	ldr	r3, [r7, #0]
 8000e02:	601a      	str	r2, [r3, #0]
 8000e04:	e02d      	b.n	8000e62 <SD_disk_ioctl+0x176>
 8000e06:	7c7b      	ldrb	r3, [r7, #17]
 8000e08:	f003 030f 	and.w	r3, r3, #15
 8000e0c:	b2da      	uxtb	r2, r3
 8000e0e:	7dbb      	ldrb	r3, [r7, #22]
 8000e10:	09db      	lsrs	r3, r3, #7
 8000e12:	b2db      	uxtb	r3, r3
 8000e14:	4413      	add	r3, r2
 8000e16:	b2da      	uxtb	r2, r3
 8000e18:	7d7b      	ldrb	r3, [r7, #21]
 8000e1a:	005b      	lsls	r3, r3, #1
 8000e1c:	b2db      	uxtb	r3, r3
 8000e1e:	f003 0306 	and.w	r3, r3, #6
 8000e22:	b2db      	uxtb	r3, r3
 8000e24:	4413      	add	r3, r2
 8000e26:	b2db      	uxtb	r3, r3
 8000e28:	3302      	adds	r3, #2
 8000e2a:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000e2e:	7d3b      	ldrb	r3, [r7, #20]
 8000e30:	099b      	lsrs	r3, r3, #6
 8000e32:	b2db      	uxtb	r3, r3
 8000e34:	461a      	mov	r2, r3
 8000e36:	7cfb      	ldrb	r3, [r7, #19]
 8000e38:	009b      	lsls	r3, r3, #2
 8000e3a:	b29b      	uxth	r3, r3
 8000e3c:	4413      	add	r3, r2
 8000e3e:	b29a      	uxth	r2, r3
 8000e40:	7cbb      	ldrb	r3, [r7, #18]
 8000e42:	029b      	lsls	r3, r3, #10
 8000e44:	b29b      	uxth	r3, r3
 8000e46:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8000e4a:	b29b      	uxth	r3, r3
 8000e4c:	4413      	add	r3, r2
 8000e4e:	b29b      	uxth	r3, r3
 8000e50:	3301      	adds	r3, #1
 8000e52:	83fb      	strh	r3, [r7, #30]
 8000e54:	8bfa      	ldrh	r2, [r7, #30]
 8000e56:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000e5a:	3b09      	subs	r3, #9
 8000e5c:	409a      	lsls	r2, r3
 8000e5e:	683b      	ldr	r3, [r7, #0]
 8000e60:	601a      	str	r2, [r3, #0]
 8000e62:	2300      	movs	r3, #0
 8000e64:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e68:	e056      	b.n	8000f18 <SD_disk_ioctl+0x22c>
 8000e6a:	683b      	ldr	r3, [r7, #0]
 8000e6c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000e70:	801a      	strh	r2, [r3, #0]
 8000e72:	2300      	movs	r3, #0
 8000e74:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e78:	e055      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000e7a:	f7ff fc13 	bl	80006a4 <SD_ReadyWait>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2bff      	cmp	r3, #255	@ 0xff
 8000e82:	d14b      	bne.n	8000f1c <SD_disk_ioctl+0x230>
 8000e84:	2300      	movs	r3, #0
 8000e86:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000e8a:	e047      	b.n	8000f1c <SD_disk_ioctl+0x230>
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	2049      	movs	r0, #73	@ 0x49
 8000e90:	f7ff fced 	bl	800086e <SD_SendCmd>
 8000e94:	4603      	mov	r3, r0
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d142      	bne.n	8000f20 <SD_disk_ioctl+0x234>
 8000e9a:	2110      	movs	r1, #16
 8000e9c:	6a38      	ldr	r0, [r7, #32]
 8000e9e:	f7ff fc75 	bl	800078c <SD_RxDataBlock>
 8000ea2:	4603      	mov	r3, r0
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	d03b      	beq.n	8000f20 <SD_disk_ioctl+0x234>
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000eae:	e037      	b.n	8000f20 <SD_disk_ioctl+0x234>
 8000eb0:	2100      	movs	r1, #0
 8000eb2:	204a      	movs	r0, #74	@ 0x4a
 8000eb4:	f7ff fcdb 	bl	800086e <SD_SendCmd>
 8000eb8:	4603      	mov	r3, r0
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d132      	bne.n	8000f24 <SD_disk_ioctl+0x238>
 8000ebe:	2110      	movs	r1, #16
 8000ec0:	6a38      	ldr	r0, [r7, #32]
 8000ec2:	f7ff fc63 	bl	800078c <SD_RxDataBlock>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d02b      	beq.n	8000f24 <SD_disk_ioctl+0x238>
 8000ecc:	2300      	movs	r3, #0
 8000ece:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000ed2:	e027      	b.n	8000f24 <SD_disk_ioctl+0x238>
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	207a      	movs	r0, #122	@ 0x7a
 8000ed8:	f7ff fcc9 	bl	800086e <SD_SendCmd>
 8000edc:	4603      	mov	r3, r0
 8000ede:	2b00      	cmp	r3, #0
 8000ee0:	d116      	bne.n	8000f10 <SD_disk_ioctl+0x224>
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000ee8:	e00b      	b.n	8000f02 <SD_disk_ioctl+0x216>
 8000eea:	6a3c      	ldr	r4, [r7, #32]
 8000eec:	1c63      	adds	r3, r4, #1
 8000eee:	623b      	str	r3, [r7, #32]
 8000ef0:	f7ff fbae 	bl	8000650 <SPI_RxByte>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	7023      	strb	r3, [r4, #0]
 8000ef8:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000efc:	3301      	adds	r3, #1
 8000efe:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000f02:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8000f06:	2b03      	cmp	r3, #3
 8000f08:	d9ef      	bls.n	8000eea <SD_disk_ioctl+0x1fe>
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f10:	2304      	movs	r3, #4
 8000f12:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f16:	e006      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f18:	bf00      	nop
 8000f1a:	e004      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f1c:	bf00      	nop
 8000f1e:	e002      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f20:	bf00      	nop
 8000f22:	e000      	b.n	8000f26 <SD_disk_ioctl+0x23a>
 8000f24:	bf00      	nop
 8000f26:	f7ff fb51 	bl	80005cc <DESELECT>
 8000f2a:	f7ff fb91 	bl	8000650 <SPI_RxByte>
 8000f2e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f32:	4618      	mov	r0, r3
 8000f34:	372c      	adds	r7, #44	@ 0x2c
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bd90      	pop	{r4, r7, pc}
 8000f3a:	bf00      	nop
 8000f3c:	20000000 	.word	0x20000000

08000f40 <LCD_Init>:
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	2201      	movs	r2, #1
 8000f46:	2101      	movs	r1, #1
 8000f48:	4878      	ldr	r0, [pc, #480]	@ (800112c <LCD_Init+0x1ec>)
 8000f4a:	f002 ff5f 	bl	8003e0c <HAL_GPIO_WritePin>
 8000f4e:	2201      	movs	r2, #1
 8000f50:	2113      	movs	r1, #19
 8000f52:	4877      	ldr	r0, [pc, #476]	@ (8001130 <LCD_Init+0x1f0>)
 8000f54:	f002 ff5a 	bl	8003e0c <HAL_GPIO_WritePin>
 8000f58:	2201      	movs	r2, #1
 8000f5a:	2102      	movs	r1, #2
 8000f5c:	4875      	ldr	r0, [pc, #468]	@ (8001134 <LCD_Init+0x1f4>)
 8000f5e:	f002 ff55 	bl	8003e0c <HAL_GPIO_WritePin>
 8000f62:	2005      	movs	r0, #5
 8000f64:	f002 f87a 	bl	800305c <HAL_Delay>
 8000f68:	2200      	movs	r2, #0
 8000f6a:	2102      	movs	r1, #2
 8000f6c:	4871      	ldr	r0, [pc, #452]	@ (8001134 <LCD_Init+0x1f4>)
 8000f6e:	f002 ff4d 	bl	8003e0c <HAL_GPIO_WritePin>
 8000f72:	2014      	movs	r0, #20
 8000f74:	f002 f872 	bl	800305c <HAL_Delay>
 8000f78:	2201      	movs	r2, #1
 8000f7a:	2102      	movs	r1, #2
 8000f7c:	486d      	ldr	r0, [pc, #436]	@ (8001134 <LCD_Init+0x1f4>)
 8000f7e:	f002 ff45 	bl	8003e0c <HAL_GPIO_WritePin>
 8000f82:	2096      	movs	r0, #150	@ 0x96
 8000f84:	f002 f86a 	bl	800305c <HAL_Delay>
 8000f88:	2200      	movs	r2, #0
 8000f8a:	2101      	movs	r1, #1
 8000f8c:	4867      	ldr	r0, [pc, #412]	@ (800112c <LCD_Init+0x1ec>)
 8000f8e:	f002 ff3d 	bl	8003e0c <HAL_GPIO_WritePin>
 8000f92:	20e9      	movs	r0, #233	@ 0xe9
 8000f94:	f000 f8d0 	bl	8001138 <LCD_CMD>
 8000f98:	2020      	movs	r0, #32
 8000f9a:	f000 f973 	bl	8001284 <LCD_DATA>
 8000f9e:	2011      	movs	r0, #17
 8000fa0:	f000 f8ca 	bl	8001138 <LCD_CMD>
 8000fa4:	2064      	movs	r0, #100	@ 0x64
 8000fa6:	f002 f859 	bl	800305c <HAL_Delay>
 8000faa:	20d1      	movs	r0, #209	@ 0xd1
 8000fac:	f000 f8c4 	bl	8001138 <LCD_CMD>
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	f000 f967 	bl	8001284 <LCD_DATA>
 8000fb6:	2071      	movs	r0, #113	@ 0x71
 8000fb8:	f000 f964 	bl	8001284 <LCD_DATA>
 8000fbc:	2019      	movs	r0, #25
 8000fbe:	f000 f961 	bl	8001284 <LCD_DATA>
 8000fc2:	20d0      	movs	r0, #208	@ 0xd0
 8000fc4:	f000 f8b8 	bl	8001138 <LCD_CMD>
 8000fc8:	2007      	movs	r0, #7
 8000fca:	f000 f95b 	bl	8001284 <LCD_DATA>
 8000fce:	2001      	movs	r0, #1
 8000fd0:	f000 f958 	bl	8001284 <LCD_DATA>
 8000fd4:	2008      	movs	r0, #8
 8000fd6:	f000 f955 	bl	8001284 <LCD_DATA>
 8000fda:	2036      	movs	r0, #54	@ 0x36
 8000fdc:	f000 f8ac 	bl	8001138 <LCD_CMD>
 8000fe0:	20e8      	movs	r0, #232	@ 0xe8
 8000fe2:	f000 f94f 	bl	8001284 <LCD_DATA>
 8000fe6:	203a      	movs	r0, #58	@ 0x3a
 8000fe8:	f000 f8a6 	bl	8001138 <LCD_CMD>
 8000fec:	2005      	movs	r0, #5
 8000fee:	f000 f949 	bl	8001284 <LCD_DATA>
 8000ff2:	20c1      	movs	r0, #193	@ 0xc1
 8000ff4:	f000 f8a0 	bl	8001138 <LCD_CMD>
 8000ff8:	2010      	movs	r0, #16
 8000ffa:	f000 f943 	bl	8001284 <LCD_DATA>
 8000ffe:	2010      	movs	r0, #16
 8001000:	f000 f940 	bl	8001284 <LCD_DATA>
 8001004:	2002      	movs	r0, #2
 8001006:	f000 f93d 	bl	8001284 <LCD_DATA>
 800100a:	2002      	movs	r0, #2
 800100c:	f000 f93a 	bl	8001284 <LCD_DATA>
 8001010:	20c0      	movs	r0, #192	@ 0xc0
 8001012:	f000 f891 	bl	8001138 <LCD_CMD>
 8001016:	2000      	movs	r0, #0
 8001018:	f000 f934 	bl	8001284 <LCD_DATA>
 800101c:	2035      	movs	r0, #53	@ 0x35
 800101e:	f000 f931 	bl	8001284 <LCD_DATA>
 8001022:	2000      	movs	r0, #0
 8001024:	f000 f92e 	bl	8001284 <LCD_DATA>
 8001028:	2000      	movs	r0, #0
 800102a:	f000 f92b 	bl	8001284 <LCD_DATA>
 800102e:	2001      	movs	r0, #1
 8001030:	f000 f928 	bl	8001284 <LCD_DATA>
 8001034:	2002      	movs	r0, #2
 8001036:	f000 f925 	bl	8001284 <LCD_DATA>
 800103a:	20c5      	movs	r0, #197	@ 0xc5
 800103c:	f000 f87c 	bl	8001138 <LCD_CMD>
 8001040:	2004      	movs	r0, #4
 8001042:	f000 f91f 	bl	8001284 <LCD_DATA>
 8001046:	20d2      	movs	r0, #210	@ 0xd2
 8001048:	f000 f876 	bl	8001138 <LCD_CMD>
 800104c:	2001      	movs	r0, #1
 800104e:	f000 f919 	bl	8001284 <LCD_DATA>
 8001052:	2044      	movs	r0, #68	@ 0x44
 8001054:	f000 f916 	bl	8001284 <LCD_DATA>
 8001058:	20c8      	movs	r0, #200	@ 0xc8
 800105a:	f000 f86d 	bl	8001138 <LCD_CMD>
 800105e:	2004      	movs	r0, #4
 8001060:	f000 f910 	bl	8001284 <LCD_DATA>
 8001064:	2067      	movs	r0, #103	@ 0x67
 8001066:	f000 f90d 	bl	8001284 <LCD_DATA>
 800106a:	2035      	movs	r0, #53	@ 0x35
 800106c:	f000 f90a 	bl	8001284 <LCD_DATA>
 8001070:	2004      	movs	r0, #4
 8001072:	f000 f907 	bl	8001284 <LCD_DATA>
 8001076:	2008      	movs	r0, #8
 8001078:	f000 f904 	bl	8001284 <LCD_DATA>
 800107c:	2006      	movs	r0, #6
 800107e:	f000 f901 	bl	8001284 <LCD_DATA>
 8001082:	2024      	movs	r0, #36	@ 0x24
 8001084:	f000 f8fe 	bl	8001284 <LCD_DATA>
 8001088:	2001      	movs	r0, #1
 800108a:	f000 f8fb 	bl	8001284 <LCD_DATA>
 800108e:	2037      	movs	r0, #55	@ 0x37
 8001090:	f000 f8f8 	bl	8001284 <LCD_DATA>
 8001094:	2040      	movs	r0, #64	@ 0x40
 8001096:	f000 f8f5 	bl	8001284 <LCD_DATA>
 800109a:	2003      	movs	r0, #3
 800109c:	f000 f8f2 	bl	8001284 <LCD_DATA>
 80010a0:	2010      	movs	r0, #16
 80010a2:	f000 f8ef 	bl	8001284 <LCD_DATA>
 80010a6:	2008      	movs	r0, #8
 80010a8:	f000 f8ec 	bl	8001284 <LCD_DATA>
 80010ac:	2080      	movs	r0, #128	@ 0x80
 80010ae:	f000 f8e9 	bl	8001284 <LCD_DATA>
 80010b2:	2000      	movs	r0, #0
 80010b4:	f000 f8e6 	bl	8001284 <LCD_DATA>
 80010b8:	202a      	movs	r0, #42	@ 0x2a
 80010ba:	f000 f83d 	bl	8001138 <LCD_CMD>
 80010be:	2000      	movs	r0, #0
 80010c0:	f000 f8e0 	bl	8001284 <LCD_DATA>
 80010c4:	2000      	movs	r0, #0
 80010c6:	f000 f8dd 	bl	8001284 <LCD_DATA>
 80010ca:	2001      	movs	r0, #1
 80010cc:	f000 f8da 	bl	8001284 <LCD_DATA>
 80010d0:	203f      	movs	r0, #63	@ 0x3f
 80010d2:	f000 f8d7 	bl	8001284 <LCD_DATA>
 80010d6:	202b      	movs	r0, #43	@ 0x2b
 80010d8:	f000 f82e 	bl	8001138 <LCD_CMD>
 80010dc:	2000      	movs	r0, #0
 80010de:	f000 f8d1 	bl	8001284 <LCD_DATA>
 80010e2:	2000      	movs	r0, #0
 80010e4:	f000 f8ce 	bl	8001284 <LCD_DATA>
 80010e8:	2001      	movs	r0, #1
 80010ea:	f000 f8cb 	bl	8001284 <LCD_DATA>
 80010ee:	20e0      	movs	r0, #224	@ 0xe0
 80010f0:	f000 f8c8 	bl	8001284 <LCD_DATA>
 80010f4:	2029      	movs	r0, #41	@ 0x29
 80010f6:	f000 f81f 	bl	8001138 <LCD_CMD>
 80010fa:	202c      	movs	r0, #44	@ 0x2c
 80010fc:	f000 f81c 	bl	8001138 <LCD_CMD>
 8001100:	2020      	movs	r0, #32
 8001102:	f000 f819 	bl	8001138 <LCD_CMD>
 8001106:	2078      	movs	r0, #120	@ 0x78
 8001108:	f001 ffa8 	bl	800305c <HAL_Delay>
 800110c:	2011      	movs	r0, #17
 800110e:	f000 f813 	bl	8001138 <LCD_CMD>
 8001112:	2078      	movs	r0, #120	@ 0x78
 8001114:	f001 ffa2 	bl	800305c <HAL_Delay>
 8001118:	2029      	movs	r0, #41	@ 0x29
 800111a:	f000 f80d 	bl	8001138 <LCD_CMD>
 800111e:	2201      	movs	r2, #1
 8001120:	2101      	movs	r1, #1
 8001122:	4802      	ldr	r0, [pc, #8]	@ (800112c <LCD_Init+0x1ec>)
 8001124:	f002 fe72 	bl	8003e0c <HAL_GPIO_WritePin>
 8001128:	bf00      	nop
 800112a:	bd80      	pop	{r7, pc}
 800112c:	40020400 	.word	0x40020400
 8001130:	40020000 	.word	0x40020000
 8001134:	40020800 	.word	0x40020800

08001138 <LCD_CMD>:
 8001138:	b580      	push	{r7, lr}
 800113a:	b082      	sub	sp, #8
 800113c:	af00      	add	r7, sp, #0
 800113e:	4603      	mov	r3, r0
 8001140:	71fb      	strb	r3, [r7, #7]
 8001142:	2200      	movs	r2, #0
 8001144:	2110      	movs	r1, #16
 8001146:	484c      	ldr	r0, [pc, #304]	@ (8001278 <LCD_CMD+0x140>)
 8001148:	f002 fe60 	bl	8003e0c <HAL_GPIO_WritePin>
 800114c:	2200      	movs	r2, #0
 800114e:	2102      	movs	r1, #2
 8001150:	4849      	ldr	r0, [pc, #292]	@ (8001278 <LCD_CMD+0x140>)
 8001152:	f002 fe5b 	bl	8003e0c <HAL_GPIO_WritePin>
 8001156:	79fb      	ldrb	r3, [r7, #7]
 8001158:	f003 0301 	and.w	r3, r3, #1
 800115c:	2b00      	cmp	r3, #0
 800115e:	d006      	beq.n	800116e <LCD_CMD+0x36>
 8001160:	2201      	movs	r2, #1
 8001162:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001166:	4844      	ldr	r0, [pc, #272]	@ (8001278 <LCD_CMD+0x140>)
 8001168:	f002 fe50 	bl	8003e0c <HAL_GPIO_WritePin>
 800116c:	e005      	b.n	800117a <LCD_CMD+0x42>
 800116e:	2200      	movs	r2, #0
 8001170:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001174:	4840      	ldr	r0, [pc, #256]	@ (8001278 <LCD_CMD+0x140>)
 8001176:	f002 fe49 	bl	8003e0c <HAL_GPIO_WritePin>
 800117a:	79fb      	ldrb	r3, [r7, #7]
 800117c:	f003 0302 	and.w	r3, r3, #2
 8001180:	2b00      	cmp	r3, #0
 8001182:	d005      	beq.n	8001190 <LCD_CMD+0x58>
 8001184:	2201      	movs	r2, #1
 8001186:	2180      	movs	r1, #128	@ 0x80
 8001188:	483c      	ldr	r0, [pc, #240]	@ (800127c <LCD_CMD+0x144>)
 800118a:	f002 fe3f 	bl	8003e0c <HAL_GPIO_WritePin>
 800118e:	e004      	b.n	800119a <LCD_CMD+0x62>
 8001190:	2200      	movs	r2, #0
 8001192:	2180      	movs	r1, #128	@ 0x80
 8001194:	4839      	ldr	r0, [pc, #228]	@ (800127c <LCD_CMD+0x144>)
 8001196:	f002 fe39 	bl	8003e0c <HAL_GPIO_WritePin>
 800119a:	79fb      	ldrb	r3, [r7, #7]
 800119c:	f003 0304 	and.w	r3, r3, #4
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d006      	beq.n	80011b2 <LCD_CMD+0x7a>
 80011a4:	2201      	movs	r2, #1
 80011a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011aa:	4833      	ldr	r0, [pc, #204]	@ (8001278 <LCD_CMD+0x140>)
 80011ac:	f002 fe2e 	bl	8003e0c <HAL_GPIO_WritePin>
 80011b0:	e005      	b.n	80011be <LCD_CMD+0x86>
 80011b2:	2200      	movs	r2, #0
 80011b4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011b8:	482f      	ldr	r0, [pc, #188]	@ (8001278 <LCD_CMD+0x140>)
 80011ba:	f002 fe27 	bl	8003e0c <HAL_GPIO_WritePin>
 80011be:	79fb      	ldrb	r3, [r7, #7]
 80011c0:	f003 0308 	and.w	r3, r3, #8
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d005      	beq.n	80011d4 <LCD_CMD+0x9c>
 80011c8:	2201      	movs	r2, #1
 80011ca:	2108      	movs	r1, #8
 80011cc:	482c      	ldr	r0, [pc, #176]	@ (8001280 <LCD_CMD+0x148>)
 80011ce:	f002 fe1d 	bl	8003e0c <HAL_GPIO_WritePin>
 80011d2:	e004      	b.n	80011de <LCD_CMD+0xa6>
 80011d4:	2200      	movs	r2, #0
 80011d6:	2108      	movs	r1, #8
 80011d8:	4829      	ldr	r0, [pc, #164]	@ (8001280 <LCD_CMD+0x148>)
 80011da:	f002 fe17 	bl	8003e0c <HAL_GPIO_WritePin>
 80011de:	79fb      	ldrb	r3, [r7, #7]
 80011e0:	f003 0310 	and.w	r3, r3, #16
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d005      	beq.n	80011f4 <LCD_CMD+0xbc>
 80011e8:	2201      	movs	r2, #1
 80011ea:	2120      	movs	r1, #32
 80011ec:	4824      	ldr	r0, [pc, #144]	@ (8001280 <LCD_CMD+0x148>)
 80011ee:	f002 fe0d 	bl	8003e0c <HAL_GPIO_WritePin>
 80011f2:	e004      	b.n	80011fe <LCD_CMD+0xc6>
 80011f4:	2200      	movs	r2, #0
 80011f6:	2120      	movs	r1, #32
 80011f8:	4821      	ldr	r0, [pc, #132]	@ (8001280 <LCD_CMD+0x148>)
 80011fa:	f002 fe07 	bl	8003e0c <HAL_GPIO_WritePin>
 80011fe:	79fb      	ldrb	r3, [r7, #7]
 8001200:	f003 0320 	and.w	r3, r3, #32
 8001204:	2b00      	cmp	r3, #0
 8001206:	d005      	beq.n	8001214 <LCD_CMD+0xdc>
 8001208:	2201      	movs	r2, #1
 800120a:	2110      	movs	r1, #16
 800120c:	481c      	ldr	r0, [pc, #112]	@ (8001280 <LCD_CMD+0x148>)
 800120e:	f002 fdfd 	bl	8003e0c <HAL_GPIO_WritePin>
 8001212:	e004      	b.n	800121e <LCD_CMD+0xe6>
 8001214:	2200      	movs	r2, #0
 8001216:	2110      	movs	r1, #16
 8001218:	4819      	ldr	r0, [pc, #100]	@ (8001280 <LCD_CMD+0x148>)
 800121a:	f002 fdf7 	bl	8003e0c <HAL_GPIO_WritePin>
 800121e:	79fb      	ldrb	r3, [r7, #7]
 8001220:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001224:	2b00      	cmp	r3, #0
 8001226:	d006      	beq.n	8001236 <LCD_CMD+0xfe>
 8001228:	2201      	movs	r2, #1
 800122a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800122e:	4814      	ldr	r0, [pc, #80]	@ (8001280 <LCD_CMD+0x148>)
 8001230:	f002 fdec 	bl	8003e0c <HAL_GPIO_WritePin>
 8001234:	e005      	b.n	8001242 <LCD_CMD+0x10a>
 8001236:	2200      	movs	r2, #0
 8001238:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800123c:	4810      	ldr	r0, [pc, #64]	@ (8001280 <LCD_CMD+0x148>)
 800123e:	f002 fde5 	bl	8003e0c <HAL_GPIO_WritePin>
 8001242:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001246:	2b00      	cmp	r3, #0
 8001248:	da06      	bge.n	8001258 <LCD_CMD+0x120>
 800124a:	2201      	movs	r2, #1
 800124c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001250:	4809      	ldr	r0, [pc, #36]	@ (8001278 <LCD_CMD+0x140>)
 8001252:	f002 fddb 	bl	8003e0c <HAL_GPIO_WritePin>
 8001256:	e005      	b.n	8001264 <LCD_CMD+0x12c>
 8001258:	2200      	movs	r2, #0
 800125a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800125e:	4806      	ldr	r0, [pc, #24]	@ (8001278 <LCD_CMD+0x140>)
 8001260:	f002 fdd4 	bl	8003e0c <HAL_GPIO_WritePin>
 8001264:	2201      	movs	r2, #1
 8001266:	2102      	movs	r1, #2
 8001268:	4803      	ldr	r0, [pc, #12]	@ (8001278 <LCD_CMD+0x140>)
 800126a:	f002 fdcf 	bl	8003e0c <HAL_GPIO_WritePin>
 800126e:	bf00      	nop
 8001270:	3708      	adds	r7, #8
 8001272:	46bd      	mov	sp, r7
 8001274:	bd80      	pop	{r7, pc}
 8001276:	bf00      	nop
 8001278:	40020000 	.word	0x40020000
 800127c:	40020800 	.word	0x40020800
 8001280:	40020400 	.word	0x40020400

08001284 <LCD_DATA>:
 8001284:	b580      	push	{r7, lr}
 8001286:	b082      	sub	sp, #8
 8001288:	af00      	add	r7, sp, #0
 800128a:	4603      	mov	r3, r0
 800128c:	71fb      	strb	r3, [r7, #7]
 800128e:	2201      	movs	r2, #1
 8001290:	2110      	movs	r1, #16
 8001292:	484c      	ldr	r0, [pc, #304]	@ (80013c4 <LCD_DATA+0x140>)
 8001294:	f002 fdba 	bl	8003e0c <HAL_GPIO_WritePin>
 8001298:	2200      	movs	r2, #0
 800129a:	2102      	movs	r1, #2
 800129c:	4849      	ldr	r0, [pc, #292]	@ (80013c4 <LCD_DATA+0x140>)
 800129e:	f002 fdb5 	bl	8003e0c <HAL_GPIO_WritePin>
 80012a2:	79fb      	ldrb	r3, [r7, #7]
 80012a4:	f003 0301 	and.w	r3, r3, #1
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d006      	beq.n	80012ba <LCD_DATA+0x36>
 80012ac:	2201      	movs	r2, #1
 80012ae:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80012b2:	4844      	ldr	r0, [pc, #272]	@ (80013c4 <LCD_DATA+0x140>)
 80012b4:	f002 fdaa 	bl	8003e0c <HAL_GPIO_WritePin>
 80012b8:	e005      	b.n	80012c6 <LCD_DATA+0x42>
 80012ba:	2200      	movs	r2, #0
 80012bc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80012c0:	4840      	ldr	r0, [pc, #256]	@ (80013c4 <LCD_DATA+0x140>)
 80012c2:	f002 fda3 	bl	8003e0c <HAL_GPIO_WritePin>
 80012c6:	79fb      	ldrb	r3, [r7, #7]
 80012c8:	f003 0302 	and.w	r3, r3, #2
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d005      	beq.n	80012dc <LCD_DATA+0x58>
 80012d0:	2201      	movs	r2, #1
 80012d2:	2180      	movs	r1, #128	@ 0x80
 80012d4:	483c      	ldr	r0, [pc, #240]	@ (80013c8 <LCD_DATA+0x144>)
 80012d6:	f002 fd99 	bl	8003e0c <HAL_GPIO_WritePin>
 80012da:	e004      	b.n	80012e6 <LCD_DATA+0x62>
 80012dc:	2200      	movs	r2, #0
 80012de:	2180      	movs	r1, #128	@ 0x80
 80012e0:	4839      	ldr	r0, [pc, #228]	@ (80013c8 <LCD_DATA+0x144>)
 80012e2:	f002 fd93 	bl	8003e0c <HAL_GPIO_WritePin>
 80012e6:	79fb      	ldrb	r3, [r7, #7]
 80012e8:	f003 0304 	and.w	r3, r3, #4
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d006      	beq.n	80012fe <LCD_DATA+0x7a>
 80012f0:	2201      	movs	r2, #1
 80012f2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80012f6:	4833      	ldr	r0, [pc, #204]	@ (80013c4 <LCD_DATA+0x140>)
 80012f8:	f002 fd88 	bl	8003e0c <HAL_GPIO_WritePin>
 80012fc:	e005      	b.n	800130a <LCD_DATA+0x86>
 80012fe:	2200      	movs	r2, #0
 8001300:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001304:	482f      	ldr	r0, [pc, #188]	@ (80013c4 <LCD_DATA+0x140>)
 8001306:	f002 fd81 	bl	8003e0c <HAL_GPIO_WritePin>
 800130a:	79fb      	ldrb	r3, [r7, #7]
 800130c:	f003 0308 	and.w	r3, r3, #8
 8001310:	2b00      	cmp	r3, #0
 8001312:	d005      	beq.n	8001320 <LCD_DATA+0x9c>
 8001314:	2201      	movs	r2, #1
 8001316:	2108      	movs	r1, #8
 8001318:	482c      	ldr	r0, [pc, #176]	@ (80013cc <LCD_DATA+0x148>)
 800131a:	f002 fd77 	bl	8003e0c <HAL_GPIO_WritePin>
 800131e:	e004      	b.n	800132a <LCD_DATA+0xa6>
 8001320:	2200      	movs	r2, #0
 8001322:	2108      	movs	r1, #8
 8001324:	4829      	ldr	r0, [pc, #164]	@ (80013cc <LCD_DATA+0x148>)
 8001326:	f002 fd71 	bl	8003e0c <HAL_GPIO_WritePin>
 800132a:	79fb      	ldrb	r3, [r7, #7]
 800132c:	f003 0310 	and.w	r3, r3, #16
 8001330:	2b00      	cmp	r3, #0
 8001332:	d005      	beq.n	8001340 <LCD_DATA+0xbc>
 8001334:	2201      	movs	r2, #1
 8001336:	2120      	movs	r1, #32
 8001338:	4824      	ldr	r0, [pc, #144]	@ (80013cc <LCD_DATA+0x148>)
 800133a:	f002 fd67 	bl	8003e0c <HAL_GPIO_WritePin>
 800133e:	e004      	b.n	800134a <LCD_DATA+0xc6>
 8001340:	2200      	movs	r2, #0
 8001342:	2120      	movs	r1, #32
 8001344:	4821      	ldr	r0, [pc, #132]	@ (80013cc <LCD_DATA+0x148>)
 8001346:	f002 fd61 	bl	8003e0c <HAL_GPIO_WritePin>
 800134a:	79fb      	ldrb	r3, [r7, #7]
 800134c:	f003 0320 	and.w	r3, r3, #32
 8001350:	2b00      	cmp	r3, #0
 8001352:	d005      	beq.n	8001360 <LCD_DATA+0xdc>
 8001354:	2201      	movs	r2, #1
 8001356:	2110      	movs	r1, #16
 8001358:	481c      	ldr	r0, [pc, #112]	@ (80013cc <LCD_DATA+0x148>)
 800135a:	f002 fd57 	bl	8003e0c <HAL_GPIO_WritePin>
 800135e:	e004      	b.n	800136a <LCD_DATA+0xe6>
 8001360:	2200      	movs	r2, #0
 8001362:	2110      	movs	r1, #16
 8001364:	4819      	ldr	r0, [pc, #100]	@ (80013cc <LCD_DATA+0x148>)
 8001366:	f002 fd51 	bl	8003e0c <HAL_GPIO_WritePin>
 800136a:	79fb      	ldrb	r3, [r7, #7]
 800136c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001370:	2b00      	cmp	r3, #0
 8001372:	d006      	beq.n	8001382 <LCD_DATA+0xfe>
 8001374:	2201      	movs	r2, #1
 8001376:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800137a:	4814      	ldr	r0, [pc, #80]	@ (80013cc <LCD_DATA+0x148>)
 800137c:	f002 fd46 	bl	8003e0c <HAL_GPIO_WritePin>
 8001380:	e005      	b.n	800138e <LCD_DATA+0x10a>
 8001382:	2200      	movs	r2, #0
 8001384:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001388:	4810      	ldr	r0, [pc, #64]	@ (80013cc <LCD_DATA+0x148>)
 800138a:	f002 fd3f 	bl	8003e0c <HAL_GPIO_WritePin>
 800138e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001392:	2b00      	cmp	r3, #0
 8001394:	da06      	bge.n	80013a4 <LCD_DATA+0x120>
 8001396:	2201      	movs	r2, #1
 8001398:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800139c:	4809      	ldr	r0, [pc, #36]	@ (80013c4 <LCD_DATA+0x140>)
 800139e:	f002 fd35 	bl	8003e0c <HAL_GPIO_WritePin>
 80013a2:	e005      	b.n	80013b0 <LCD_DATA+0x12c>
 80013a4:	2200      	movs	r2, #0
 80013a6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013aa:	4806      	ldr	r0, [pc, #24]	@ (80013c4 <LCD_DATA+0x140>)
 80013ac:	f002 fd2e 	bl	8003e0c <HAL_GPIO_WritePin>
 80013b0:	2201      	movs	r2, #1
 80013b2:	2102      	movs	r1, #2
 80013b4:	4803      	ldr	r0, [pc, #12]	@ (80013c4 <LCD_DATA+0x140>)
 80013b6:	f002 fd29 	bl	8003e0c <HAL_GPIO_WritePin>
 80013ba:	bf00      	nop
 80013bc:	3708      	adds	r7, #8
 80013be:	46bd      	mov	sp, r7
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	40020000 	.word	0x40020000
 80013c8:	40020800 	.word	0x40020800
 80013cc:	40020400 	.word	0x40020400

080013d0 <SetWindows>:
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b084      	sub	sp, #16
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	60f8      	str	r0, [r7, #12]
 80013d8:	60b9      	str	r1, [r7, #8]
 80013da:	607a      	str	r2, [r7, #4]
 80013dc:	603b      	str	r3, [r7, #0]
 80013de:	202a      	movs	r0, #42	@ 0x2a
 80013e0:	f7ff feaa 	bl	8001138 <LCD_CMD>
 80013e4:	68fb      	ldr	r3, [r7, #12]
 80013e6:	0a1b      	lsrs	r3, r3, #8
 80013e8:	b2db      	uxtb	r3, r3
 80013ea:	4618      	mov	r0, r3
 80013ec:	f7ff ff4a 	bl	8001284 <LCD_DATA>
 80013f0:	68fb      	ldr	r3, [r7, #12]
 80013f2:	b2db      	uxtb	r3, r3
 80013f4:	4618      	mov	r0, r3
 80013f6:	f7ff ff45 	bl	8001284 <LCD_DATA>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	0a1b      	lsrs	r3, r3, #8
 80013fe:	b2db      	uxtb	r3, r3
 8001400:	4618      	mov	r0, r3
 8001402:	f7ff ff3f 	bl	8001284 <LCD_DATA>
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	b2db      	uxtb	r3, r3
 800140a:	4618      	mov	r0, r3
 800140c:	f7ff ff3a 	bl	8001284 <LCD_DATA>
 8001410:	202b      	movs	r0, #43	@ 0x2b
 8001412:	f7ff fe91 	bl	8001138 <LCD_CMD>
 8001416:	68bb      	ldr	r3, [r7, #8]
 8001418:	0a1b      	lsrs	r3, r3, #8
 800141a:	b2db      	uxtb	r3, r3
 800141c:	4618      	mov	r0, r3
 800141e:	f7ff ff31 	bl	8001284 <LCD_DATA>
 8001422:	68bb      	ldr	r3, [r7, #8]
 8001424:	b2db      	uxtb	r3, r3
 8001426:	4618      	mov	r0, r3
 8001428:	f7ff ff2c 	bl	8001284 <LCD_DATA>
 800142c:	683b      	ldr	r3, [r7, #0]
 800142e:	0a1b      	lsrs	r3, r3, #8
 8001430:	b2db      	uxtb	r3, r3
 8001432:	4618      	mov	r0, r3
 8001434:	f7ff ff26 	bl	8001284 <LCD_DATA>
 8001438:	683b      	ldr	r3, [r7, #0]
 800143a:	b2db      	uxtb	r3, r3
 800143c:	4618      	mov	r0, r3
 800143e:	f7ff ff21 	bl	8001284 <LCD_DATA>
 8001442:	202c      	movs	r0, #44	@ 0x2c
 8001444:	f7ff fe78 	bl	8001138 <LCD_CMD>
 8001448:	bf00      	nop
 800144a:	3710      	adds	r7, #16
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}

08001450 <LCD_Clear>:
 8001450:	b580      	push	{r7, lr}
 8001452:	b084      	sub	sp, #16
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	202c      	movs	r0, #44	@ 0x2c
 800145a:	f7ff fe6d 	bl	8001138 <LCD_CMD>
 800145e:	2201      	movs	r2, #1
 8001460:	2110      	movs	r1, #16
 8001462:	481b      	ldr	r0, [pc, #108]	@ (80014d0 <LCD_Clear+0x80>)
 8001464:	f002 fcd2 	bl	8003e0c <HAL_GPIO_WritePin>
 8001468:	2200      	movs	r2, #0
 800146a:	2101      	movs	r1, #1
 800146c:	4819      	ldr	r0, [pc, #100]	@ (80014d4 <LCD_Clear+0x84>)
 800146e:	f002 fccd 	bl	8003e0c <HAL_GPIO_WritePin>
 8001472:	23ef      	movs	r3, #239	@ 0xef
 8001474:	f240 123f 	movw	r2, #319	@ 0x13f
 8001478:	2100      	movs	r1, #0
 800147a:	2000      	movs	r0, #0
 800147c:	f7ff ffa8 	bl	80013d0 <SetWindows>
 8001480:	2300      	movs	r3, #0
 8001482:	60fb      	str	r3, [r7, #12]
 8001484:	e016      	b.n	80014b4 <LCD_Clear+0x64>
 8001486:	2300      	movs	r3, #0
 8001488:	60bb      	str	r3, [r7, #8]
 800148a:	e00d      	b.n	80014a8 <LCD_Clear+0x58>
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	0a1b      	lsrs	r3, r3, #8
 8001490:	b2db      	uxtb	r3, r3
 8001492:	4618      	mov	r0, r3
 8001494:	f7ff fef6 	bl	8001284 <LCD_DATA>
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	b2db      	uxtb	r3, r3
 800149c:	4618      	mov	r0, r3
 800149e:	f7ff fef1 	bl	8001284 <LCD_DATA>
 80014a2:	68bb      	ldr	r3, [r7, #8]
 80014a4:	3301      	adds	r3, #1
 80014a6:	60bb      	str	r3, [r7, #8]
 80014a8:	68bb      	ldr	r3, [r7, #8]
 80014aa:	2bef      	cmp	r3, #239	@ 0xef
 80014ac:	d9ee      	bls.n	800148c <LCD_Clear+0x3c>
 80014ae:	68fb      	ldr	r3, [r7, #12]
 80014b0:	3301      	adds	r3, #1
 80014b2:	60fb      	str	r3, [r7, #12]
 80014b4:	68fb      	ldr	r3, [r7, #12]
 80014b6:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80014ba:	d3e4      	bcc.n	8001486 <LCD_Clear+0x36>
 80014bc:	2201      	movs	r2, #1
 80014be:	2101      	movs	r1, #1
 80014c0:	4804      	ldr	r0, [pc, #16]	@ (80014d4 <LCD_Clear+0x84>)
 80014c2:	f002 fca3 	bl	8003e0c <HAL_GPIO_WritePin>
 80014c6:	bf00      	nop
 80014c8:	3710      	adds	r7, #16
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}
 80014ce:	bf00      	nop
 80014d0:	40020000 	.word	0x40020000
 80014d4:	40020400 	.word	0x40020400

080014d8 <FillRect>:
 80014d8:	b580      	push	{r7, lr}
 80014da:	b08a      	sub	sp, #40	@ 0x28
 80014dc:	af00      	add	r7, sp, #0
 80014de:	60f8      	str	r0, [r7, #12]
 80014e0:	60b9      	str	r1, [r7, #8]
 80014e2:	607a      	str	r2, [r7, #4]
 80014e4:	603b      	str	r3, [r7, #0]
 80014e6:	202c      	movs	r0, #44	@ 0x2c
 80014e8:	f7ff fe26 	bl	8001138 <LCD_CMD>
 80014ec:	2201      	movs	r2, #1
 80014ee:	2110      	movs	r1, #16
 80014f0:	4824      	ldr	r0, [pc, #144]	@ (8001584 <FillRect+0xac>)
 80014f2:	f002 fc8b 	bl	8003e0c <HAL_GPIO_WritePin>
 80014f6:	2200      	movs	r2, #0
 80014f8:	2101      	movs	r1, #1
 80014fa:	4823      	ldr	r0, [pc, #140]	@ (8001588 <FillRect+0xb0>)
 80014fc:	f002 fc86 	bl	8003e0c <HAL_GPIO_WritePin>
 8001500:	68fa      	ldr	r2, [r7, #12]
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	4413      	add	r3, r2
 8001506:	61bb      	str	r3, [r7, #24]
 8001508:	68ba      	ldr	r2, [r7, #8]
 800150a:	683b      	ldr	r3, [r7, #0]
 800150c:	4413      	add	r3, r2
 800150e:	617b      	str	r3, [r7, #20]
 8001510:	69bb      	ldr	r3, [r7, #24]
 8001512:	1e5a      	subs	r2, r3, #1
 8001514:	697b      	ldr	r3, [r7, #20]
 8001516:	3b01      	subs	r3, #1
 8001518:	68b9      	ldr	r1, [r7, #8]
 800151a:	68f8      	ldr	r0, [r7, #12]
 800151c:	f7ff ff58 	bl	80013d0 <SetWindows>
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	683a      	ldr	r2, [r7, #0]
 8001524:	fb02 f303 	mul.w	r3, r2, r3
 8001528:	005b      	lsls	r3, r3, #1
 800152a:	3b01      	subs	r3, #1
 800152c:	627b      	str	r3, [r7, #36]	@ 0x24
 800152e:	2300      	movs	r3, #0
 8001530:	623b      	str	r3, [r7, #32]
 8001532:	e01a      	b.n	800156a <FillRect+0x92>
 8001534:	2300      	movs	r3, #0
 8001536:	61fb      	str	r3, [r7, #28]
 8001538:	e010      	b.n	800155c <FillRect+0x84>
 800153a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800153c:	0a1b      	lsrs	r3, r3, #8
 800153e:	b2db      	uxtb	r3, r3
 8001540:	4618      	mov	r0, r3
 8001542:	f7ff fe9f 	bl	8001284 <LCD_DATA>
 8001546:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001548:	b2db      	uxtb	r3, r3
 800154a:	4618      	mov	r0, r3
 800154c:	f7ff fe9a 	bl	8001284 <LCD_DATA>
 8001550:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001552:	3b02      	subs	r3, #2
 8001554:	627b      	str	r3, [r7, #36]	@ 0x24
 8001556:	69fb      	ldr	r3, [r7, #28]
 8001558:	3301      	adds	r3, #1
 800155a:	61fb      	str	r3, [r7, #28]
 800155c:	69fb      	ldr	r3, [r7, #28]
 800155e:	683a      	ldr	r2, [r7, #0]
 8001560:	429a      	cmp	r2, r3
 8001562:	d8ea      	bhi.n	800153a <FillRect+0x62>
 8001564:	6a3b      	ldr	r3, [r7, #32]
 8001566:	3301      	adds	r3, #1
 8001568:	623b      	str	r3, [r7, #32]
 800156a:	6a3b      	ldr	r3, [r7, #32]
 800156c:	687a      	ldr	r2, [r7, #4]
 800156e:	429a      	cmp	r2, r3
 8001570:	d8e0      	bhi.n	8001534 <FillRect+0x5c>
 8001572:	2201      	movs	r2, #1
 8001574:	2101      	movs	r1, #1
 8001576:	4804      	ldr	r0, [pc, #16]	@ (8001588 <FillRect+0xb0>)
 8001578:	f002 fc48 	bl	8003e0c <HAL_GPIO_WritePin>
 800157c:	bf00      	nop
 800157e:	3728      	adds	r7, #40	@ 0x28
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}
 8001584:	40020000 	.word	0x40020000
 8001588:	40020400 	.word	0x40020400

0800158c <LCD_Print>:
 800158c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001590:	b093      	sub	sp, #76	@ 0x4c
 8001592:	af00      	add	r7, sp, #0
 8001594:	60f8      	str	r0, [r7, #12]
 8001596:	60b9      	str	r1, [r7, #8]
 8001598:	607a      	str	r2, [r7, #4]
 800159a:	603b      	str	r3, [r7, #0]
 800159c:	466b      	mov	r3, sp
 800159e:	461e      	mov	r6, r3
 80015a0:	683b      	ldr	r3, [r7, #0]
 80015a2:	2b01      	cmp	r3, #1
 80015a4:	d103      	bne.n	80015ae <LCD_Print+0x22>
 80015a6:	2308      	movs	r3, #8
 80015a8:	647b      	str	r3, [r7, #68]	@ 0x44
 80015aa:	230c      	movs	r3, #12
 80015ac:	643b      	str	r3, [r7, #64]	@ 0x40
 80015ae:	683b      	ldr	r3, [r7, #0]
 80015b0:	2b02      	cmp	r3, #2
 80015b2:	d103      	bne.n	80015bc <LCD_Print+0x30>
 80015b4:	2310      	movs	r3, #16
 80015b6:	647b      	str	r3, [r7, #68]	@ 0x44
 80015b8:	2310      	movs	r3, #16
 80015ba:	643b      	str	r3, [r7, #64]	@ 0x40
 80015bc:	683b      	ldr	r3, [r7, #0]
 80015be:	2b03      	cmp	r3, #3
 80015c0:	d103      	bne.n	80015ca <LCD_Print+0x3e>
 80015c2:	2320      	movs	r3, #32
 80015c4:	647b      	str	r3, [r7, #68]	@ 0x44
 80015c6:	2332      	movs	r3, #50	@ 0x32
 80015c8:	643b      	str	r3, [r7, #64]	@ 0x40
 80015ca:	68f8      	ldr	r0, [r7, #12]
 80015cc:	f7fe fe20 	bl	8000210 <strlen>
 80015d0:	4603      	mov	r3, r0
 80015d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015d6:	1c59      	adds	r1, r3, #1
 80015d8:	1e4b      	subs	r3, r1, #1
 80015da:	623b      	str	r3, [r7, #32]
 80015dc:	460a      	mov	r2, r1
 80015de:	2300      	movs	r3, #0
 80015e0:	4690      	mov	r8, r2
 80015e2:	4699      	mov	r9, r3
 80015e4:	f04f 0200 	mov.w	r2, #0
 80015e8:	f04f 0300 	mov.w	r3, #0
 80015ec:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80015f0:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80015f4:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80015f8:	460a      	mov	r2, r1
 80015fa:	2300      	movs	r3, #0
 80015fc:	4614      	mov	r4, r2
 80015fe:	461d      	mov	r5, r3
 8001600:	f04f 0200 	mov.w	r2, #0
 8001604:	f04f 0300 	mov.w	r3, #0
 8001608:	00eb      	lsls	r3, r5, #3
 800160a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800160e:	00e2      	lsls	r2, r4, #3
 8001610:	460b      	mov	r3, r1
 8001612:	3307      	adds	r3, #7
 8001614:	08db      	lsrs	r3, r3, #3
 8001616:	00db      	lsls	r3, r3, #3
 8001618:	ebad 0d03 	sub.w	sp, sp, r3
 800161c:	466b      	mov	r3, sp
 800161e:	3300      	adds	r3, #0
 8001620:	61fb      	str	r3, [r7, #28]
 8001622:	2300      	movs	r3, #0
 8001624:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001626:	e00b      	b.n	8001640 <LCD_Print+0xb4>
 8001628:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800162a:	68fa      	ldr	r2, [r7, #12]
 800162c:	4413      	add	r3, r2
 800162e:	7819      	ldrb	r1, [r3, #0]
 8001630:	69fa      	ldr	r2, [r7, #28]
 8001632:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001634:	4413      	add	r3, r2
 8001636:	460a      	mov	r2, r1
 8001638:	701a      	strb	r2, [r3, #0]
 800163a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800163c:	3301      	adds	r3, #1
 800163e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001640:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001642:	68fa      	ldr	r2, [r7, #12]
 8001644:	4413      	add	r3, r2
 8001646:	781b      	ldrb	r3, [r3, #0]
 8001648:	2b00      	cmp	r3, #0
 800164a:	d1ed      	bne.n	8001628 <LCD_Print+0x9c>
 800164c:	2300      	movs	r3, #0
 800164e:	637b      	str	r3, [r7, #52]	@ 0x34
 8001650:	e077      	b.n	8001742 <LCD_Print+0x1b6>
 8001652:	69fa      	ldr	r2, [r7, #28]
 8001654:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001656:	4413      	add	r3, r2
 8001658:	781b      	ldrb	r3, [r3, #0]
 800165a:	76fb      	strb	r3, [r7, #27]
 800165c:	7efb      	ldrb	r3, [r7, #27]
 800165e:	617b      	str	r3, [r7, #20]
 8001660:	2200      	movs	r2, #0
 8001662:	2101      	movs	r1, #1
 8001664:	483c      	ldr	r0, [pc, #240]	@ (8001758 <LCD_Print+0x1cc>)
 8001666:	f002 fbd1 	bl	8003e0c <HAL_GPIO_WritePin>
 800166a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800166c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800166e:	fb03 f202 	mul.w	r2, r3, r2
 8001672:	68bb      	ldr	r3, [r7, #8]
 8001674:	4413      	add	r3, r2
 8001676:	4618      	mov	r0, r3
 8001678:	6879      	ldr	r1, [r7, #4]
 800167a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800167c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800167e:	fb03 f202 	mul.w	r2, r3, r2
 8001682:	68bb      	ldr	r3, [r7, #8]
 8001684:	441a      	add	r2, r3
 8001686:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001688:	4413      	add	r3, r2
 800168a:	3b01      	subs	r3, #1
 800168c:	461c      	mov	r4, r3
 800168e:	687a      	ldr	r2, [r7, #4]
 8001690:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001692:	4413      	add	r3, r2
 8001694:	4622      	mov	r2, r4
 8001696:	f7ff fe9b 	bl	80013d0 <SetWindows>
 800169a:	2300      	movs	r3, #0
 800169c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800169e:	e044      	b.n	800172a <LCD_Print+0x19e>
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	2b01      	cmp	r3, #1
 80016a4:	d10b      	bne.n	80016be <LCD_Print+0x132>
 80016a6:	697b      	ldr	r3, [r7, #20]
 80016a8:	3b20      	subs	r3, #32
 80016aa:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80016ac:	fb02 f303 	mul.w	r3, r2, r3
 80016b0:	461a      	mov	r2, r3
 80016b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016b4:	4413      	add	r3, r2
 80016b6:	4a29      	ldr	r2, [pc, #164]	@ (800175c <LCD_Print+0x1d0>)
 80016b8:	4413      	add	r3, r2
 80016ba:	881b      	ldrh	r3, [r3, #0]
 80016bc:	633b      	str	r3, [r7, #48]	@ 0x30
 80016be:	683b      	ldr	r3, [r7, #0]
 80016c0:	2b02      	cmp	r3, #2
 80016c2:	d10c      	bne.n	80016de <LCD_Print+0x152>
 80016c4:	697b      	ldr	r3, [r7, #20]
 80016c6:	3b20      	subs	r3, #32
 80016c8:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80016ca:	fb02 f303 	mul.w	r3, r2, r3
 80016ce:	461a      	mov	r2, r3
 80016d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016d2:	4413      	add	r3, r2
 80016d4:	005b      	lsls	r3, r3, #1
 80016d6:	4a22      	ldr	r2, [pc, #136]	@ (8001760 <LCD_Print+0x1d4>)
 80016d8:	4413      	add	r3, r2
 80016da:	881b      	ldrh	r3, [r3, #0]
 80016dc:	633b      	str	r3, [r7, #48]	@ 0x30
 80016de:	2301      	movs	r3, #1
 80016e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80016e2:	e01b      	b.n	800171c <LCD_Print+0x190>
 80016e4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80016e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80016e8:	1ad3      	subs	r3, r2, r3
 80016ea:	2201      	movs	r2, #1
 80016ec:	409a      	lsls	r2, r3
 80016ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80016f0:	4013      	ands	r3, r2
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	dd02      	ble.n	80016fc <LCD_Print+0x170>
 80016f6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80016f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80016fa:	e001      	b.n	8001700 <LCD_Print+0x174>
 80016fc:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80016fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001700:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001702:	121b      	asrs	r3, r3, #8
 8001704:	b2db      	uxtb	r3, r3
 8001706:	4618      	mov	r0, r3
 8001708:	f7ff fdbc 	bl	8001284 <LCD_DATA>
 800170c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800170e:	b2db      	uxtb	r3, r3
 8001710:	4618      	mov	r0, r3
 8001712:	f7ff fdb7 	bl	8001284 <LCD_DATA>
 8001716:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001718:	3301      	adds	r3, #1
 800171a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800171c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800171e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001720:	429a      	cmp	r2, r3
 8001722:	dadf      	bge.n	80016e4 <LCD_Print+0x158>
 8001724:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001726:	3301      	adds	r3, #1
 8001728:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800172a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800172c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800172e:	429a      	cmp	r2, r3
 8001730:	dbb6      	blt.n	80016a0 <LCD_Print+0x114>
 8001732:	2201      	movs	r2, #1
 8001734:	2101      	movs	r1, #1
 8001736:	4808      	ldr	r0, [pc, #32]	@ (8001758 <LCD_Print+0x1cc>)
 8001738:	f002 fb68 	bl	8003e0c <HAL_GPIO_WritePin>
 800173c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800173e:	3301      	adds	r3, #1
 8001740:	637b      	str	r3, [r7, #52]	@ 0x34
 8001742:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8001744:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001746:	429a      	cmp	r2, r3
 8001748:	db83      	blt.n	8001652 <LCD_Print+0xc6>
 800174a:	46b5      	mov	sp, r6
 800174c:	bf00      	nop
 800174e:	374c      	adds	r7, #76	@ 0x4c
 8001750:	46bd      	mov	sp, r7
 8001752:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001756:	bf00      	nop
 8001758:	40020400 	.word	0x40020400
 800175c:	080079c4 	.word	0x080079c4
 8001760:	08007e38 	.word	0x08007e38

08001764 <LCD_Bitmap>:
 8001764:	b580      	push	{r7, lr}
 8001766:	b08a      	sub	sp, #40	@ 0x28
 8001768:	af00      	add	r7, sp, #0
 800176a:	60f8      	str	r0, [r7, #12]
 800176c:	60b9      	str	r1, [r7, #8]
 800176e:	607a      	str	r2, [r7, #4]
 8001770:	603b      	str	r3, [r7, #0]
 8001772:	202c      	movs	r0, #44	@ 0x2c
 8001774:	f7ff fce0 	bl	8001138 <LCD_CMD>
 8001778:	2201      	movs	r2, #1
 800177a:	2110      	movs	r1, #16
 800177c:	4824      	ldr	r0, [pc, #144]	@ (8001810 <LCD_Bitmap+0xac>)
 800177e:	f002 fb45 	bl	8003e0c <HAL_GPIO_WritePin>
 8001782:	2200      	movs	r2, #0
 8001784:	2101      	movs	r1, #1
 8001786:	4823      	ldr	r0, [pc, #140]	@ (8001814 <LCD_Bitmap+0xb0>)
 8001788:	f002 fb40 	bl	8003e0c <HAL_GPIO_WritePin>
 800178c:	68fa      	ldr	r2, [r7, #12]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	4413      	add	r3, r2
 8001792:	61bb      	str	r3, [r7, #24]
 8001794:	68ba      	ldr	r2, [r7, #8]
 8001796:	683b      	ldr	r3, [r7, #0]
 8001798:	4413      	add	r3, r2
 800179a:	617b      	str	r3, [r7, #20]
 800179c:	69bb      	ldr	r3, [r7, #24]
 800179e:	1e5a      	subs	r2, r3, #1
 80017a0:	697b      	ldr	r3, [r7, #20]
 80017a2:	3b01      	subs	r3, #1
 80017a4:	68b9      	ldr	r1, [r7, #8]
 80017a6:	68f8      	ldr	r0, [r7, #12]
 80017a8:	f7ff fe12 	bl	80013d0 <SetWindows>
 80017ac:	2300      	movs	r3, #0
 80017ae:	627b      	str	r3, [r7, #36]	@ 0x24
 80017b0:	2300      	movs	r3, #0
 80017b2:	623b      	str	r3, [r7, #32]
 80017b4:	e01e      	b.n	80017f4 <LCD_Bitmap+0x90>
 80017b6:	2300      	movs	r3, #0
 80017b8:	61fb      	str	r3, [r7, #28]
 80017ba:	e014      	b.n	80017e6 <LCD_Bitmap+0x82>
 80017bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80017be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017c0:	4413      	add	r3, r2
 80017c2:	781b      	ldrb	r3, [r3, #0]
 80017c4:	4618      	mov	r0, r3
 80017c6:	f7ff fd5d 	bl	8001284 <LCD_DATA>
 80017ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017cc:	3301      	adds	r3, #1
 80017ce:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80017d0:	4413      	add	r3, r2
 80017d2:	781b      	ldrb	r3, [r3, #0]
 80017d4:	4618      	mov	r0, r3
 80017d6:	f7ff fd55 	bl	8001284 <LCD_DATA>
 80017da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017dc:	3302      	adds	r3, #2
 80017de:	627b      	str	r3, [r7, #36]	@ 0x24
 80017e0:	69fb      	ldr	r3, [r7, #28]
 80017e2:	3301      	adds	r3, #1
 80017e4:	61fb      	str	r3, [r7, #28]
 80017e6:	69fb      	ldr	r3, [r7, #28]
 80017e8:	683a      	ldr	r2, [r7, #0]
 80017ea:	429a      	cmp	r2, r3
 80017ec:	d8e6      	bhi.n	80017bc <LCD_Bitmap+0x58>
 80017ee:	6a3b      	ldr	r3, [r7, #32]
 80017f0:	3301      	adds	r3, #1
 80017f2:	623b      	str	r3, [r7, #32]
 80017f4:	6a3b      	ldr	r3, [r7, #32]
 80017f6:	687a      	ldr	r2, [r7, #4]
 80017f8:	429a      	cmp	r2, r3
 80017fa:	d8dc      	bhi.n	80017b6 <LCD_Bitmap+0x52>
 80017fc:	2201      	movs	r2, #1
 80017fe:	2101      	movs	r1, #1
 8001800:	4804      	ldr	r0, [pc, #16]	@ (8001814 <LCD_Bitmap+0xb0>)
 8001802:	f002 fb03 	bl	8003e0c <HAL_GPIO_WritePin>
 8001806:	bf00      	nop
 8001808:	3728      	adds	r7, #40	@ 0x28
 800180a:	46bd      	mov	sp, r7
 800180c:	bd80      	pop	{r7, pc}
 800180e:	bf00      	nop
 8001810:	40020000 	.word	0x40020000
 8001814:	40020400 	.word	0x40020400

08001818 <LCD_Sprite>:
 8001818:	b580      	push	{r7, lr}
 800181a:	b08c      	sub	sp, #48	@ 0x30
 800181c:	af00      	add	r7, sp, #0
 800181e:	60f8      	str	r0, [r7, #12]
 8001820:	60b9      	str	r1, [r7, #8]
 8001822:	607a      	str	r2, [r7, #4]
 8001824:	603b      	str	r3, [r7, #0]
 8001826:	202c      	movs	r0, #44	@ 0x2c
 8001828:	f7ff fc86 	bl	8001138 <LCD_CMD>
 800182c:	2201      	movs	r2, #1
 800182e:	2110      	movs	r1, #16
 8001830:	484d      	ldr	r0, [pc, #308]	@ (8001968 <LCD_Sprite+0x150>)
 8001832:	f002 faeb 	bl	8003e0c <HAL_GPIO_WritePin>
 8001836:	2200      	movs	r2, #0
 8001838:	2101      	movs	r1, #1
 800183a:	484c      	ldr	r0, [pc, #304]	@ (800196c <LCD_Sprite+0x154>)
 800183c:	f002 fae6 	bl	8003e0c <HAL_GPIO_WritePin>
 8001840:	68fa      	ldr	r2, [r7, #12]
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	4413      	add	r3, r2
 8001846:	61bb      	str	r3, [r7, #24]
 8001848:	68ba      	ldr	r2, [r7, #8]
 800184a:	683b      	ldr	r3, [r7, #0]
 800184c:	4413      	add	r3, r2
 800184e:	617b      	str	r3, [r7, #20]
 8001850:	68f8      	ldr	r0, [r7, #12]
 8001852:	68b9      	ldr	r1, [r7, #8]
 8001854:	69bb      	ldr	r3, [r7, #24]
 8001856:	1e5a      	subs	r2, r3, #1
 8001858:	697b      	ldr	r3, [r7, #20]
 800185a:	3b01      	subs	r3, #1
 800185c:	f7ff fdb8 	bl	80013d0 <SetWindows>
 8001860:	2300      	movs	r3, #0
 8001862:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001868:	fb02 f303 	mul.w	r3, r2, r3
 800186c:	613b      	str	r3, [r7, #16]
 800186e:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8001872:	2b00      	cmp	r3, #0
 8001874:	d03a      	beq.n	80018ec <LCD_Sprite+0xd4>
 8001876:	2300      	movs	r3, #0
 8001878:	62bb      	str	r3, [r7, #40]	@ 0x28
 800187a:	e032      	b.n	80018e2 <LCD_Sprite+0xca>
 800187c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800187e:	693a      	ldr	r2, [r7, #16]
 8001880:	fb03 f202 	mul.w	r2, r3, r2
 8001884:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001886:	6879      	ldr	r1, [r7, #4]
 8001888:	fb01 f303 	mul.w	r3, r1, r3
 800188c:	4413      	add	r3, r2
 800188e:	1e5a      	subs	r2, r3, #1
 8001890:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8001894:	1ad3      	subs	r3, r2, r3
 8001896:	005b      	lsls	r3, r3, #1
 8001898:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	005b      	lsls	r3, r3, #1
 800189e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80018a0:	4413      	add	r3, r2
 80018a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80018a4:	2300      	movs	r3, #0
 80018a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80018a8:	e014      	b.n	80018d4 <LCD_Sprite+0xbc>
 80018aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80018ac:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80018ae:	4413      	add	r3, r2
 80018b0:	781b      	ldrb	r3, [r3, #0]
 80018b2:	4618      	mov	r0, r3
 80018b4:	f7ff fce6 	bl	8001284 <LCD_DATA>
 80018b8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80018ba:	3301      	adds	r3, #1
 80018bc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80018be:	4413      	add	r3, r2
 80018c0:	781b      	ldrb	r3, [r3, #0]
 80018c2:	4618      	mov	r0, r3
 80018c4:	f7ff fcde 	bl	8001284 <LCD_DATA>
 80018c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80018ca:	3b02      	subs	r3, #2
 80018cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80018ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018d0:	3301      	adds	r3, #1
 80018d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80018d4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	429a      	cmp	r2, r3
 80018da:	dbe6      	blt.n	80018aa <LCD_Sprite+0x92>
 80018dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80018de:	3301      	adds	r3, #1
 80018e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80018e2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80018e4:	683b      	ldr	r3, [r7, #0]
 80018e6:	429a      	cmp	r2, r3
 80018e8:	dbc8      	blt.n	800187c <LCD_Sprite+0x64>
 80018ea:	e034      	b.n	8001956 <LCD_Sprite+0x13e>
 80018ec:	2300      	movs	r3, #0
 80018ee:	623b      	str	r3, [r7, #32]
 80018f0:	e02d      	b.n	800194e <LCD_Sprite+0x136>
 80018f2:	6a3b      	ldr	r3, [r7, #32]
 80018f4:	693a      	ldr	r2, [r7, #16]
 80018f6:	fb03 f202 	mul.w	r2, r3, r2
 80018fa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80018fc:	6879      	ldr	r1, [r7, #4]
 80018fe:	fb01 f303 	mul.w	r3, r1, r3
 8001902:	4413      	add	r3, r2
 8001904:	1c5a      	adds	r2, r3, #1
 8001906:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 800190a:	4413      	add	r3, r2
 800190c:	005b      	lsls	r3, r3, #1
 800190e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001910:	2300      	movs	r3, #0
 8001912:	61fb      	str	r3, [r7, #28]
 8001914:	e014      	b.n	8001940 <LCD_Sprite+0x128>
 8001916:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001918:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800191a:	4413      	add	r3, r2
 800191c:	781b      	ldrb	r3, [r3, #0]
 800191e:	4618      	mov	r0, r3
 8001920:	f7ff fcb0 	bl	8001284 <LCD_DATA>
 8001924:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001926:	3301      	adds	r3, #1
 8001928:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800192a:	4413      	add	r3, r2
 800192c:	781b      	ldrb	r3, [r3, #0]
 800192e:	4618      	mov	r0, r3
 8001930:	f7ff fca8 	bl	8001284 <LCD_DATA>
 8001934:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001936:	3302      	adds	r3, #2
 8001938:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800193a:	69fb      	ldr	r3, [r7, #28]
 800193c:	3301      	adds	r3, #1
 800193e:	61fb      	str	r3, [r7, #28]
 8001940:	69fa      	ldr	r2, [r7, #28]
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	429a      	cmp	r2, r3
 8001946:	dbe6      	blt.n	8001916 <LCD_Sprite+0xfe>
 8001948:	6a3b      	ldr	r3, [r7, #32]
 800194a:	3301      	adds	r3, #1
 800194c:	623b      	str	r3, [r7, #32]
 800194e:	6a3a      	ldr	r2, [r7, #32]
 8001950:	683b      	ldr	r3, [r7, #0]
 8001952:	429a      	cmp	r2, r3
 8001954:	dbcd      	blt.n	80018f2 <LCD_Sprite+0xda>
 8001956:	2201      	movs	r2, #1
 8001958:	2101      	movs	r1, #1
 800195a:	4804      	ldr	r0, [pc, #16]	@ (800196c <LCD_Sprite+0x154>)
 800195c:	f002 fa56 	bl	8003e0c <HAL_GPIO_WritePin>
 8001960:	bf00      	nop
 8001962:	3730      	adds	r7, #48	@ 0x30
 8001964:	46bd      	mov	sp, r7
 8001966:	bd80      	pop	{r7, pc}
 8001968:	40020000 	.word	0x40020000
 800196c:	40020400 	.word	0x40020400

08001970 <dibujar_puntero>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void dibujar_puntero(uint8_t y_coord) {
 8001970:	b580      	push	{r7, lr}
 8001972:	b084      	sub	sp, #16
 8001974:	af02      	add	r7, sp, #8
 8001976:	4603      	mov	r3, r0
 8001978:	71fb      	strb	r3, [r7, #7]
    // Esta función dibuja el puntero en la posición `y_coord` en la pantalla.
    LCD_Bitmap(80, y_coord, 14, 15, PUNTERO);  // Dibuja el puntero en la nueva coordenada Y
 800197a:	79f9      	ldrb	r1, [r7, #7]
 800197c:	4b05      	ldr	r3, [pc, #20]	@ (8001994 <dibujar_puntero+0x24>)
 800197e:	9300      	str	r3, [sp, #0]
 8001980:	230f      	movs	r3, #15
 8001982:	220e      	movs	r2, #14
 8001984:	2050      	movs	r0, #80	@ 0x50
 8001986:	f7ff feed 	bl	8001764 <LCD_Bitmap>
}
 800198a:	bf00      	nop
 800198c:	3708      	adds	r7, #8
 800198e:	46bd      	mov	sp, r7
 8001990:	bd80      	pop	{r7, pc}
 8001992:	bf00      	nop
 8001994:	20008984 	.word	0x20008984

08001998 <borrar_puntero>:

void borrar_puntero(uint8_t y_coord) {
 8001998:	b580      	push	{r7, lr}
 800199a:	b084      	sub	sp, #16
 800199c:	af02      	add	r7, sp, #8
 800199e:	4603      	mov	r3, r0
 80019a0:	71fb      	strb	r3, [r7, #7]
    // Esta función borra el puntero en la posición `y_coord` de la pantalla.
    // Aquí deberías usar un bitmap vacío o redibujar la parte de la pantalla sin el puntero.
    FillRect(80, y_coord, 14, 15, 0x2817);  // Borra el puntero en la coordenada Y
 80019a2:	79f9      	ldrb	r1, [r7, #7]
 80019a4:	f642 0317 	movw	r3, #10263	@ 0x2817
 80019a8:	9300      	str	r3, [sp, #0]
 80019aa:	230f      	movs	r3, #15
 80019ac:	220e      	movs	r2, #14
 80019ae:	2050      	movs	r0, #80	@ 0x50
 80019b0:	f7ff fd92 	bl	80014d8 <FillRect>
}
 80019b4:	bf00      	nop
 80019b6:	3708      	adds	r7, #8
 80019b8:	46bd      	mov	sp, r7
 80019ba:	bd80      	pop	{r7, pc}

080019bc <mover_puntero_arriba>:

// Función para mover el puntero hacia arriba
void mover_puntero_arriba(void) {
 80019bc:	b580      	push	{r7, lr}
 80019be:	af00      	add	r7, sp, #0
    if (seleccion_actual > 1) {
 80019c0:	4b13      	ldr	r3, [pc, #76]	@ (8001a10 <mover_puntero_arriba+0x54>)
 80019c2:	781b      	ldrb	r3, [r3, #0]
 80019c4:	2b01      	cmp	r3, #1
 80019c6:	d921      	bls.n	8001a0c <mover_puntero_arriba+0x50>
        // Borrar puntero en la posición actual
        borrar_puntero(seleccion_actual == 2 ? OPCION2_Y : OPCION3_Y);
 80019c8:	4b11      	ldr	r3, [pc, #68]	@ (8001a10 <mover_puntero_arriba+0x54>)
 80019ca:	781b      	ldrb	r3, [r3, #0]
 80019cc:	2b02      	cmp	r3, #2
 80019ce:	d103      	bne.n	80019d8 <mover_puntero_arriba+0x1c>
 80019d0:	4b10      	ldr	r3, [pc, #64]	@ (8001a14 <mover_puntero_arriba+0x58>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	b2db      	uxtb	r3, r3
 80019d6:	e002      	b.n	80019de <mover_puntero_arriba+0x22>
 80019d8:	4b0f      	ldr	r3, [pc, #60]	@ (8001a18 <mover_puntero_arriba+0x5c>)
 80019da:	681b      	ldr	r3, [r3, #0]
 80019dc:	b2db      	uxtb	r3, r3
 80019de:	4618      	mov	r0, r3
 80019e0:	f7ff ffda 	bl	8001998 <borrar_puntero>

        // Cambiar a la opción anterior
        seleccion_actual--;
 80019e4:	4b0a      	ldr	r3, [pc, #40]	@ (8001a10 <mover_puntero_arriba+0x54>)
 80019e6:	781b      	ldrb	r3, [r3, #0]
 80019e8:	3b01      	subs	r3, #1
 80019ea:	b2da      	uxtb	r2, r3
 80019ec:	4b08      	ldr	r3, [pc, #32]	@ (8001a10 <mover_puntero_arriba+0x54>)
 80019ee:	701a      	strb	r2, [r3, #0]

        // Dibujar el puntero en la nueva posición
        dibujar_puntero(seleccion_actual == 1 ? OPCION1_Y : OPCION2_Y);
 80019f0:	4b07      	ldr	r3, [pc, #28]	@ (8001a10 <mover_puntero_arriba+0x54>)
 80019f2:	781b      	ldrb	r3, [r3, #0]
 80019f4:	2b01      	cmp	r3, #1
 80019f6:	d103      	bne.n	8001a00 <mover_puntero_arriba+0x44>
 80019f8:	4b08      	ldr	r3, [pc, #32]	@ (8001a1c <mover_puntero_arriba+0x60>)
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	b2db      	uxtb	r3, r3
 80019fe:	e002      	b.n	8001a06 <mover_puntero_arriba+0x4a>
 8001a00:	4b04      	ldr	r3, [pc, #16]	@ (8001a14 <mover_puntero_arriba+0x58>)
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	b2db      	uxtb	r3, r3
 8001a06:	4618      	mov	r0, r3
 8001a08:	f7ff ffb2 	bl	8001970 <dibujar_puntero>
    }
}
 8001a0c:	bf00      	nop
 8001a0e:	bd80      	pop	{r7, pc}
 8001a10:	20013738 	.word	0x20013738
 8001a14:	20013730 	.word	0x20013730
 8001a18:	20013734 	.word	0x20013734
 8001a1c:	2001372c 	.word	0x2001372c

08001a20 <mover_puntero_abajo>:

// Función para mover el puntero hacia abajo
void mover_puntero_abajo(void) {
 8001a20:	b580      	push	{r7, lr}
 8001a22:	af00      	add	r7, sp, #0
    if (seleccion_actual < 3) {
 8001a24:	4b13      	ldr	r3, [pc, #76]	@ (8001a74 <mover_puntero_abajo+0x54>)
 8001a26:	781b      	ldrb	r3, [r3, #0]
 8001a28:	2b02      	cmp	r3, #2
 8001a2a:	d821      	bhi.n	8001a70 <mover_puntero_abajo+0x50>
        // Borrar puntero en la posición actual
        borrar_puntero(seleccion_actual == 1 ? OPCION1_Y : OPCION2_Y);
 8001a2c:	4b11      	ldr	r3, [pc, #68]	@ (8001a74 <mover_puntero_abajo+0x54>)
 8001a2e:	781b      	ldrb	r3, [r3, #0]
 8001a30:	2b01      	cmp	r3, #1
 8001a32:	d103      	bne.n	8001a3c <mover_puntero_abajo+0x1c>
 8001a34:	4b10      	ldr	r3, [pc, #64]	@ (8001a78 <mover_puntero_abajo+0x58>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	b2db      	uxtb	r3, r3
 8001a3a:	e002      	b.n	8001a42 <mover_puntero_abajo+0x22>
 8001a3c:	4b0f      	ldr	r3, [pc, #60]	@ (8001a7c <mover_puntero_abajo+0x5c>)
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	b2db      	uxtb	r3, r3
 8001a42:	4618      	mov	r0, r3
 8001a44:	f7ff ffa8 	bl	8001998 <borrar_puntero>

        // Cambiar a la siguiente opción
        seleccion_actual++;
 8001a48:	4b0a      	ldr	r3, [pc, #40]	@ (8001a74 <mover_puntero_abajo+0x54>)
 8001a4a:	781b      	ldrb	r3, [r3, #0]
 8001a4c:	3301      	adds	r3, #1
 8001a4e:	b2da      	uxtb	r2, r3
 8001a50:	4b08      	ldr	r3, [pc, #32]	@ (8001a74 <mover_puntero_abajo+0x54>)
 8001a52:	701a      	strb	r2, [r3, #0]

        // Dibujar el puntero en la nueva posición
        dibujar_puntero(seleccion_actual == 2 ? OPCION2_Y : OPCION3_Y);
 8001a54:	4b07      	ldr	r3, [pc, #28]	@ (8001a74 <mover_puntero_abajo+0x54>)
 8001a56:	781b      	ldrb	r3, [r3, #0]
 8001a58:	2b02      	cmp	r3, #2
 8001a5a:	d103      	bne.n	8001a64 <mover_puntero_abajo+0x44>
 8001a5c:	4b07      	ldr	r3, [pc, #28]	@ (8001a7c <mover_puntero_abajo+0x5c>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	b2db      	uxtb	r3, r3
 8001a62:	e002      	b.n	8001a6a <mover_puntero_abajo+0x4a>
 8001a64:	4b06      	ldr	r3, [pc, #24]	@ (8001a80 <mover_puntero_abajo+0x60>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	b2db      	uxtb	r3, r3
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f7ff ff80 	bl	8001970 <dibujar_puntero>
    }
}
 8001a70:	bf00      	nop
 8001a72:	bd80      	pop	{r7, pc}
 8001a74:	20013738 	.word	0x20013738
 8001a78:	2001372c 	.word	0x2001372c
 8001a7c:	20013730 	.word	0x20013730
 8001a80:	20013734 	.word	0x20013734

08001a84 <check_collision>:


int check_collision(int jug_x, int jug_y, int green_x, int green_y) {
 8001a84:	b480      	push	{r7}
 8001a86:	b085      	sub	sp, #20
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	60f8      	str	r0, [r7, #12]
 8001a8c:	60b9      	str	r1, [r7, #8]
 8001a8e:	607a      	str	r2, [r7, #4]
 8001a90:	603b      	str	r3, [r7, #0]
    return (jug_x < green_x + green_rect_width &&
 8001a92:	4b12      	ldr	r3, [pc, #72]	@ (8001adc <check_collision+0x58>)
 8001a94:	681a      	ldr	r2, [r3, #0]
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	4413      	add	r3, r2
            jug_x + jug_width > green_x &&
            jug_y < green_y + green_rect_height &&
 8001a9a:	68fa      	ldr	r2, [r7, #12]
 8001a9c:	429a      	cmp	r2, r3
 8001a9e:	da16      	bge.n	8001ace <check_collision+0x4a>
            jug_x + jug_width > green_x &&
 8001aa0:	4b0f      	ldr	r3, [pc, #60]	@ (8001ae0 <check_collision+0x5c>)
 8001aa2:	681a      	ldr	r2, [r3, #0]
 8001aa4:	68fb      	ldr	r3, [r7, #12]
 8001aa6:	4413      	add	r3, r2
    return (jug_x < green_x + green_rect_width &&
 8001aa8:	687a      	ldr	r2, [r7, #4]
 8001aaa:	429a      	cmp	r2, r3
 8001aac:	da0f      	bge.n	8001ace <check_collision+0x4a>
            jug_y < green_y + green_rect_height &&
 8001aae:	4b0d      	ldr	r3, [pc, #52]	@ (8001ae4 <check_collision+0x60>)
 8001ab0:	681a      	ldr	r2, [r3, #0]
 8001ab2:	683b      	ldr	r3, [r7, #0]
 8001ab4:	4413      	add	r3, r2
            jug_x + jug_width > green_x &&
 8001ab6:	68ba      	ldr	r2, [r7, #8]
 8001ab8:	429a      	cmp	r2, r3
 8001aba:	da08      	bge.n	8001ace <check_collision+0x4a>
            jug_y + jug_height > green_y);
 8001abc:	4b0a      	ldr	r3, [pc, #40]	@ (8001ae8 <check_collision+0x64>)
 8001abe:	681a      	ldr	r2, [r3, #0]
 8001ac0:	68bb      	ldr	r3, [r7, #8]
 8001ac2:	4413      	add	r3, r2
            jug_y < green_y + green_rect_height &&
 8001ac4:	683a      	ldr	r2, [r7, #0]
 8001ac6:	429a      	cmp	r2, r3
 8001ac8:	da01      	bge.n	8001ace <check_collision+0x4a>
 8001aca:	2301      	movs	r3, #1
 8001acc:	e000      	b.n	8001ad0 <check_collision+0x4c>
 8001ace:	2300      	movs	r3, #0
}
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	3714      	adds	r7, #20
 8001ad4:	46bd      	mov	sp, r7
 8001ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ada:	4770      	bx	lr
 8001adc:	20013718 	.word	0x20013718
 8001ae0:	20013708 	.word	0x20013708
 8001ae4:	2001371c 	.word	0x2001371c
 8001ae8:	2001370c 	.word	0x2001370c

08001aec <clear_previous_sprite>:

    // Dibujar el cubo verde en la nueva posición
    FillRect(green_rect_x, green_rect_y, green_rect_width, green_rect_height, 0x07E0);  // Verde
}

void clear_previous_sprite(int x, int y, int width, int height) {
 8001aec:	b590      	push	{r4, r7, lr}
 8001aee:	b087      	sub	sp, #28
 8001af0:	af02      	add	r7, sp, #8
 8001af2:	60f8      	str	r0, [r7, #12]
 8001af4:	60b9      	str	r1, [r7, #8]
 8001af6:	607a      	str	r2, [r7, #4]
 8001af8:	603b      	str	r3, [r7, #0]
    // Limpia la posición anterior del sprite dibujando un rectángulo blanco
    FillRect(x, y, width, height, 0xEDCC);  // Color blanco (0xFFFF) para limpiar
 8001afa:	68f8      	ldr	r0, [r7, #12]
 8001afc:	68b9      	ldr	r1, [r7, #8]
 8001afe:	687a      	ldr	r2, [r7, #4]
 8001b00:	683b      	ldr	r3, [r7, #0]
 8001b02:	f64e 54cc 	movw	r4, #60876	@ 0xedcc
 8001b06:	9400      	str	r4, [sp, #0]
 8001b08:	f7ff fce6 	bl	80014d8 <FillRect>
}
 8001b0c:	bf00      	nop
 8001b0e:	3714      	adds	r7, #20
 8001b10:	46bd      	mov	sp, r7
 8001b12:	bd90      	pop	{r4, r7, pc}

08001b14 <move_sprite_up>:

void move_sprite_up() {
 8001b14:	b5b0      	push	{r4, r5, r7, lr}
 8001b16:	b086      	sub	sp, #24
 8001b18:	af06      	add	r7, sp, #24
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x, sprite_y, sprite_width, sprite_height);
 8001b1a:	4b20      	ldr	r3, [pc, #128]	@ (8001b9c <move_sprite_up+0x88>)
 8001b1c:	6818      	ldr	r0, [r3, #0]
 8001b1e:	4b20      	ldr	r3, [pc, #128]	@ (8001ba0 <move_sprite_up+0x8c>)
 8001b20:	6819      	ldr	r1, [r3, #0]
 8001b22:	221e      	movs	r2, #30
 8001b24:	231d      	movs	r3, #29
 8001b26:	f7ff ffe1 	bl	8001aec <clear_previous_sprite>

    // Verificar si no se sale del límite superior antes de mover
    if (sprite_y - move_step >= y_limit_min) {
 8001b2a:	4b1d      	ldr	r3, [pc, #116]	@ (8001ba0 <move_sprite_up+0x8c>)
 8001b2c:	681a      	ldr	r2, [r3, #0]
 8001b2e:	4b1d      	ldr	r3, [pc, #116]	@ (8001ba4 <move_sprite_up+0x90>)
 8001b30:	681b      	ldr	r3, [r3, #0]
 8001b32:	1ad2      	subs	r2, r2, r3
 8001b34:	4b1c      	ldr	r3, [pc, #112]	@ (8001ba8 <move_sprite_up+0x94>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	429a      	cmp	r2, r3
 8001b3a:	db06      	blt.n	8001b4a <move_sprite_up+0x36>
        sprite_y -= move_step;  // Mover hacia arriba
 8001b3c:	4b18      	ldr	r3, [pc, #96]	@ (8001ba0 <move_sprite_up+0x8c>)
 8001b3e:	681a      	ldr	r2, [r3, #0]
 8001b40:	4b18      	ldr	r3, [pc, #96]	@ (8001ba4 <move_sprite_up+0x90>)
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	1ad3      	subs	r3, r2, r3
 8001b46:	4a16      	ldr	r2, [pc, #88]	@ (8001ba0 <move_sprite_up+0x8c>)
 8001b48:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, movjug1, 2, anima1, 0, 1);  // Dibuja el sprite en su nueva posición
 8001b4a:	4b14      	ldr	r3, [pc, #80]	@ (8001b9c <move_sprite_up+0x88>)
 8001b4c:	6818      	ldr	r0, [r3, #0]
 8001b4e:	4b14      	ldr	r3, [pc, #80]	@ (8001ba0 <move_sprite_up+0x8c>)
 8001b50:	6819      	ldr	r1, [r3, #0]
 8001b52:	241e      	movs	r4, #30
 8001b54:	251d      	movs	r5, #29
 8001b56:	4b15      	ldr	r3, [pc, #84]	@ (8001bac <move_sprite_up+0x98>)
 8001b58:	681b      	ldr	r3, [r3, #0]
 8001b5a:	2201      	movs	r2, #1
 8001b5c:	9204      	str	r2, [sp, #16]
 8001b5e:	2200      	movs	r2, #0
 8001b60:	9203      	str	r2, [sp, #12]
 8001b62:	9302      	str	r3, [sp, #8]
 8001b64:	2302      	movs	r3, #2
 8001b66:	9301      	str	r3, [sp, #4]
 8001b68:	4b11      	ldr	r3, [pc, #68]	@ (8001bb0 <move_sprite_up+0x9c>)
 8001b6a:	9300      	str	r3, [sp, #0]
 8001b6c:	462b      	mov	r3, r5
 8001b6e:	4622      	mov	r2, r4
 8001b70:	f7ff fe52 	bl	8001818 <LCD_Sprite>
    //LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
    if (check_collision(sprite_x, sprite_y, z, 150)) { //check_collision(sprite_x, sprite_y, green_rect_x, green_rect_y
 8001b74:	4b09      	ldr	r3, [pc, #36]	@ (8001b9c <move_sprite_up+0x88>)
 8001b76:	6818      	ldr	r0, [r3, #0]
 8001b78:	4b09      	ldr	r3, [pc, #36]	@ (8001ba0 <move_sprite_up+0x8c>)
 8001b7a:	6819      	ldr	r1, [r3, #0]
 8001b7c:	4b0d      	ldr	r3, [pc, #52]	@ (8001bb4 <move_sprite_up+0xa0>)
 8001b7e:	681a      	ldr	r2, [r3, #0]
 8001b80:	2396      	movs	r3, #150	@ 0x96
 8001b82:	f7ff ff7f 	bl	8001a84 <check_collision>
 8001b86:	4603      	mov	r3, r0
 8001b88:	2b00      	cmp	r3, #0
 8001b8a:	d004      	beq.n	8001b96 <move_sprite_up+0x82>
        	colision++;
 8001b8c:	4b0a      	ldr	r3, [pc, #40]	@ (8001bb8 <move_sprite_up+0xa4>)
 8001b8e:	681b      	ldr	r3, [r3, #0]
 8001b90:	3301      	adds	r3, #1
 8001b92:	4a09      	ldr	r2, [pc, #36]	@ (8001bb8 <move_sprite_up+0xa4>)
 8001b94:	6013      	str	r3, [r2, #0]

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);*/  // Imprimir colisiones en la pantalla

}
 8001b96:	bf00      	nop
 8001b98:	46bd      	mov	sp, r7
 8001b9a:	bdb0      	pop	{r4, r5, r7, pc}
 8001b9c:	20013724 	.word	0x20013724
 8001ba0:	20013728 	.word	0x20013728
 8001ba4:	20013704 	.word	0x20013704
 8001ba8:	20013710 	.word	0x20013710
 8001bac:	200139bc 	.word	0x200139bc
 8001bb0:	08009918 	.word	0x08009918
 8001bb4:	20013720 	.word	0x20013720
 8001bb8:	200139b4 	.word	0x200139b4

08001bbc <move_sprite_down>:

void move_sprite_down() {
 8001bbc:	b5b0      	push	{r4, r5, r7, lr}
 8001bbe:	b086      	sub	sp, #24
 8001bc0:	af06      	add	r7, sp, #24
    // Limpiar la posición actual del sprite antes de moverlo
    clear_previous_sprite(sprite_x, sprite_y, sprite_width, sprite_height);
 8001bc2:	4b21      	ldr	r3, [pc, #132]	@ (8001c48 <move_sprite_down+0x8c>)
 8001bc4:	6818      	ldr	r0, [r3, #0]
 8001bc6:	4b21      	ldr	r3, [pc, #132]	@ (8001c4c <move_sprite_down+0x90>)
 8001bc8:	6819      	ldr	r1, [r3, #0]
 8001bca:	221e      	movs	r2, #30
 8001bcc:	231d      	movs	r3, #29
 8001bce:	f7ff ff8d 	bl	8001aec <clear_previous_sprite>

    // Verificar si no se sale del límite inferior antes de mover
    if (sprite_y + move_step + sprite_height <= y_limit_max) {
 8001bd2:	4b1e      	ldr	r3, [pc, #120]	@ (8001c4c <move_sprite_down+0x90>)
 8001bd4:	681a      	ldr	r2, [r3, #0]
 8001bd6:	4b1e      	ldr	r3, [pc, #120]	@ (8001c50 <move_sprite_down+0x94>)
 8001bd8:	681b      	ldr	r3, [r3, #0]
 8001bda:	4413      	add	r3, r2
 8001bdc:	221d      	movs	r2, #29
 8001bde:	441a      	add	r2, r3
 8001be0:	4b1c      	ldr	r3, [pc, #112]	@ (8001c54 <move_sprite_down+0x98>)
 8001be2:	681b      	ldr	r3, [r3, #0]
 8001be4:	429a      	cmp	r2, r3
 8001be6:	dc06      	bgt.n	8001bf6 <move_sprite_down+0x3a>
        sprite_y += move_step;  // Mover hacia abajo
 8001be8:	4b18      	ldr	r3, [pc, #96]	@ (8001c4c <move_sprite_down+0x90>)
 8001bea:	681a      	ldr	r2, [r3, #0]
 8001bec:	4b18      	ldr	r3, [pc, #96]	@ (8001c50 <move_sprite_down+0x94>)
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	4413      	add	r3, r2
 8001bf2:	4a16      	ldr	r2, [pc, #88]	@ (8001c4c <move_sprite_down+0x90>)
 8001bf4:	6013      	str	r3, [r2, #0]
    }

    // Redibujar el sprite en la nueva posición
    LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, movjug1, 2, anima1, 0, 1);  // Dibuja el sprite en su nueva posición
 8001bf6:	4b14      	ldr	r3, [pc, #80]	@ (8001c48 <move_sprite_down+0x8c>)
 8001bf8:	6818      	ldr	r0, [r3, #0]
 8001bfa:	4b14      	ldr	r3, [pc, #80]	@ (8001c4c <move_sprite_down+0x90>)
 8001bfc:	6819      	ldr	r1, [r3, #0]
 8001bfe:	241e      	movs	r4, #30
 8001c00:	251d      	movs	r5, #29
 8001c02:	4b15      	ldr	r3, [pc, #84]	@ (8001c58 <move_sprite_down+0x9c>)
 8001c04:	681b      	ldr	r3, [r3, #0]
 8001c06:	2201      	movs	r2, #1
 8001c08:	9204      	str	r2, [sp, #16]
 8001c0a:	2200      	movs	r2, #0
 8001c0c:	9203      	str	r2, [sp, #12]
 8001c0e:	9302      	str	r3, [sp, #8]
 8001c10:	2302      	movs	r3, #2
 8001c12:	9301      	str	r3, [sp, #4]
 8001c14:	4b11      	ldr	r3, [pc, #68]	@ (8001c5c <move_sprite_down+0xa0>)
 8001c16:	9300      	str	r3, [sp, #0]
 8001c18:	462b      	mov	r3, r5
 8001c1a:	4622      	mov	r2, r4
 8001c1c:	f7ff fdfc 	bl	8001818 <LCD_Sprite>

    //LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
    if (check_collision(sprite_x, sprite_y, z, 200)) {
 8001c20:	4b09      	ldr	r3, [pc, #36]	@ (8001c48 <move_sprite_down+0x8c>)
 8001c22:	6818      	ldr	r0, [r3, #0]
 8001c24:	4b09      	ldr	r3, [pc, #36]	@ (8001c4c <move_sprite_down+0x90>)
 8001c26:	6819      	ldr	r1, [r3, #0]
 8001c28:	4b0d      	ldr	r3, [pc, #52]	@ (8001c60 <move_sprite_down+0xa4>)
 8001c2a:	681a      	ldr	r2, [r3, #0]
 8001c2c:	23c8      	movs	r3, #200	@ 0xc8
 8001c2e:	f7ff ff29 	bl	8001a84 <check_collision>
 8001c32:	4603      	mov	r3, r0
 8001c34:	2b00      	cmp	r3, #0
 8001c36:	d004      	beq.n	8001c42 <move_sprite_down+0x86>
    	colision++;
 8001c38:	4b0a      	ldr	r3, [pc, #40]	@ (8001c64 <move_sprite_down+0xa8>)
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	3301      	adds	r3, #1
 8001c3e:	4a09      	ldr	r2, [pc, #36]	@ (8001c64 <move_sprite_down+0xa8>)
 8001c40:	6013      	str	r3, [r2, #0]
    }

    // Mostrar el contador de colisiones en pantalla
    /*sprintf(Pant, "Colisiones: %d", colision);
    LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);  // Imprimir colisiones en la pantalla*/
}
 8001c42:	bf00      	nop
 8001c44:	46bd      	mov	sp, r7
 8001c46:	bdb0      	pop	{r4, r5, r7, pc}
 8001c48:	20013724 	.word	0x20013724
 8001c4c:	20013728 	.word	0x20013728
 8001c50:	20013704 	.word	0x20013704
 8001c54:	20013714 	.word	0x20013714
 8001c58:	200139bc 	.word	0x200139bc
 8001c5c:	08009918 	.word	0x08009918
 8001c60:	20013720 	.word	0x20013720
 8001c64:	200139b4 	.word	0x200139b4

08001c68 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001c68:	b5b0      	push	{r4, r5, r7, lr}
 8001c6a:	b092      	sub	sp, #72	@ 0x48
 8001c6c:	af06      	add	r7, sp, #24

  /* USER CODE BEGIN 1 */
	srand(time(NULL));
 8001c6e:	2000      	movs	r0, #0
 8001c70:	f004 fdfc 	bl	800686c <time>
 8001c74:	4602      	mov	r2, r0
 8001c76:	460b      	mov	r3, r1
 8001c78:	4613      	mov	r3, r2
 8001c7a:	4618      	mov	r0, r3
 8001c7c:	f004 fc5c 	bl	8006538 <srand>
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001c80:	f001 f97a 	bl	8002f78 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001c84:	f000 fcde 	bl	8002644 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001c88:	f000 fde6 	bl	8002858 <MX_GPIO_Init>
  MX_DMA_Init();
 8001c8c:	f000 fda6 	bl	80027dc <MX_DMA_Init>
  MX_SPI1_Init();
 8001c90:	f000 fd44 	bl	800271c <MX_SPI1_Init>
  MX_USART3_UART_Init();
 8001c94:	f000 fd78 	bl	8002788 <MX_USART3_UART_Init>
  MX_FATFS_Init();
 8001c98:	f004 fb8a 	bl	80063b0 <MX_FATFS_Init>
  /* USER CODE BEGIN 2 */
  	//HAL_UART_Transmit_DMA(&huart3, musica, sizeof(musica)); //Envia los datos del buffer musica via RX en DMA
    HAL_UART_Receive_DMA(&huart3, data, 1); //Recibir comandos via uart en DMA
 8001c9c:	2201      	movs	r2, #1
 8001c9e:	495e      	ldr	r1, [pc, #376]	@ (8001e18 <main+0x1b0>)
 8001ca0:	485e      	ldr	r0, [pc, #376]	@ (8001e1c <main+0x1b4>)
 8001ca2:	f003 fad1 	bl	8005248 <HAL_UART_Receive_DMA>

  	//HAL_UART_Receive_IT(&huart3, data, 1);
	LCD_Init();
 8001ca6:	f7ff f94b 	bl	8000f40 <LCD_Init>

	LCD_Clear(0x00);
 8001caa:	2000      	movs	r0, #0
 8001cac:	f7ff fbd0 	bl	8001450 <LCD_Clear>
	LCD_Print("Presión Start para comenzar", 20, 100, 1, 0x001F, 0xCAB9);
 8001cb0:	f64c 23b9 	movw	r3, #51897	@ 0xcab9
 8001cb4:	9301      	str	r3, [sp, #4]
 8001cb6:	231f      	movs	r3, #31
 8001cb8:	9300      	str	r3, [sp, #0]
 8001cba:	2301      	movs	r3, #1
 8001cbc:	2264      	movs	r2, #100	@ 0x64
 8001cbe:	2114      	movs	r1, #20
 8001cc0:	4857      	ldr	r0, [pc, #348]	@ (8001e20 <main+0x1b8>)
 8001cc2:	f7ff fc63 	bl	800158c <LCD_Print>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
		if(received_char == 'i' && unico == 1){
 8001cc6:	4b57      	ldr	r3, [pc, #348]	@ (8001e24 <main+0x1bc>)
 8001cc8:	781b      	ldrb	r3, [r3, #0]
 8001cca:	b2db      	uxtb	r3, r3
 8001ccc:	2b69      	cmp	r3, #105	@ 0x69
 8001cce:	d109      	bne.n	8001ce4 <main+0x7c>
 8001cd0:	4b55      	ldr	r3, [pc, #340]	@ (8001e28 <main+0x1c0>)
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	2b01      	cmp	r3, #1
 8001cd6:	d105      	bne.n	8001ce4 <main+0x7c>
			start = 1;
 8001cd8:	4b54      	ldr	r3, [pc, #336]	@ (8001e2c <main+0x1c4>)
 8001cda:	2201      	movs	r2, #1
 8001cdc:	601a      	str	r2, [r3, #0]
			unico = 0;
 8001cde:	4b52      	ldr	r3, [pc, #328]	@ (8001e28 <main+0x1c0>)
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	601a      	str	r2, [r3, #0]
		}
		if(start == 1){
 8001ce4:	4b51      	ldr	r3, [pc, #324]	@ (8001e2c <main+0x1c4>)
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	2b01      	cmp	r3, #1
 8001cea:	d131      	bne.n	8001d50 <main+0xe8>
			LCD_Clear(0x2817);
 8001cec:	f642 0017 	movw	r0, #10263	@ 0x2817
 8001cf0:	f7ff fbae 	bl	8001450 <LCD_Clear>
			LCD_Bitmap(53, 25, 214, 85, LOGOEX);
 8001cf4:	4b4e      	ldr	r3, [pc, #312]	@ (8001e30 <main+0x1c8>)
 8001cf6:	9300      	str	r3, [sp, #0]
 8001cf8:	2355      	movs	r3, #85	@ 0x55
 8001cfa:	22d6      	movs	r2, #214	@ 0xd6
 8001cfc:	2119      	movs	r1, #25
 8001cfe:	2035      	movs	r0, #53	@ 0x35
 8001d00:	f7ff fd30 	bl	8001764 <LCD_Bitmap>
			LCD_Bitmap(110, 130, 98, 12, OPCION1);
 8001d04:	4b4b      	ldr	r3, [pc, #300]	@ (8001e34 <main+0x1cc>)
 8001d06:	9300      	str	r3, [sp, #0]
 8001d08:	230c      	movs	r3, #12
 8001d0a:	2262      	movs	r2, #98	@ 0x62
 8001d0c:	2182      	movs	r1, #130	@ 0x82
 8001d0e:	206e      	movs	r0, #110	@ 0x6e
 8001d10:	f7ff fd28 	bl	8001764 <LCD_Bitmap>
			LCD_Bitmap(110, 162, 142, 13, OPCION2);
 8001d14:	4b48      	ldr	r3, [pc, #288]	@ (8001e38 <main+0x1d0>)
 8001d16:	9300      	str	r3, [sp, #0]
 8001d18:	230d      	movs	r3, #13
 8001d1a:	228e      	movs	r2, #142	@ 0x8e
 8001d1c:	21a2      	movs	r1, #162	@ 0xa2
 8001d1e:	206e      	movs	r0, #110	@ 0x6e
 8001d20:	f7ff fd20 	bl	8001764 <LCD_Bitmap>
			LCD_Bitmap(110, 195, 84, 11, OPCION3);
 8001d24:	4b45      	ldr	r3, [pc, #276]	@ (8001e3c <main+0x1d4>)
 8001d26:	9300      	str	r3, [sp, #0]
 8001d28:	230b      	movs	r3, #11
 8001d2a:	2254      	movs	r2, #84	@ 0x54
 8001d2c:	21c3      	movs	r1, #195	@ 0xc3
 8001d2e:	206e      	movs	r0, #110	@ 0x6e
 8001d30:	f7ff fd18 	bl	8001764 <LCD_Bitmap>
			LCD_Bitmap(80, 130, 14, 15, PUNTERO);
 8001d34:	4b42      	ldr	r3, [pc, #264]	@ (8001e40 <main+0x1d8>)
 8001d36:	9300      	str	r3, [sp, #0]
 8001d38:	230f      	movs	r3, #15
 8001d3a:	220e      	movs	r2, #14
 8001d3c:	2182      	movs	r1, #130	@ 0x82
 8001d3e:	2050      	movs	r0, #80	@ 0x50
 8001d40:	f7ff fd10 	bl	8001764 <LCD_Bitmap>
			start = 0;
 8001d44:	4b39      	ldr	r3, [pc, #228]	@ (8001e2c <main+0x1c4>)
 8001d46:	2200      	movs	r2, #0
 8001d48:	601a      	str	r2, [r3, #0]
			inicio = 3;
 8001d4a:	4b3e      	ldr	r3, [pc, #248]	@ (8001e44 <main+0x1dc>)
 8001d4c:	2203      	movs	r2, #3
 8001d4e:	601a      	str	r2, [r3, #0]
		}
		if(inicio == 3 && received_char != new_command){ //
 8001d50:	4b3c      	ldr	r3, [pc, #240]	@ (8001e44 <main+0x1dc>)
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	2b03      	cmp	r3, #3
 8001d56:	d11a      	bne.n	8001d8e <main+0x126>
 8001d58:	4b32      	ldr	r3, [pc, #200]	@ (8001e24 <main+0x1bc>)
 8001d5a:	781b      	ldrb	r3, [r3, #0]
 8001d5c:	b2da      	uxtb	r2, r3
 8001d5e:	4b3a      	ldr	r3, [pc, #232]	@ (8001e48 <main+0x1e0>)
 8001d60:	781b      	ldrb	r3, [r3, #0]
 8001d62:	b2db      	uxtb	r3, r3
 8001d64:	429a      	cmp	r2, r3
 8001d66:	d012      	beq.n	8001d8e <main+0x126>
			//HAL_Delay(200);
			if(received_char == 'd'){
 8001d68:	4b2e      	ldr	r3, [pc, #184]	@ (8001e24 <main+0x1bc>)
 8001d6a:	781b      	ldrb	r3, [r3, #0]
 8001d6c:	b2db      	uxtb	r3, r3
 8001d6e:	2b64      	cmp	r3, #100	@ 0x64
 8001d70:	d102      	bne.n	8001d78 <main+0x110>
				mover_puntero_arriba();
 8001d72:	f7ff fe23 	bl	80019bc <mover_puntero_arriba>
 8001d76:	e006      	b.n	8001d86 <main+0x11e>
			}
			else if(received_char == 'c'){
 8001d78:	4b2a      	ldr	r3, [pc, #168]	@ (8001e24 <main+0x1bc>)
 8001d7a:	781b      	ldrb	r3, [r3, #0]
 8001d7c:	b2db      	uxtb	r3, r3
 8001d7e:	2b63      	cmp	r3, #99	@ 0x63
 8001d80:	d101      	bne.n	8001d86 <main+0x11e>
				mover_puntero_abajo();
 8001d82:	f7ff fe4d 	bl	8001a20 <mover_puntero_abajo>
			}

			new_command == received_char;
 8001d86:	4b30      	ldr	r3, [pc, #192]	@ (8001e48 <main+0x1e0>)
 8001d88:	781b      	ldrb	r3, [r3, #0]
 8001d8a:	4b26      	ldr	r3, [pc, #152]	@ (8001e24 <main+0x1bc>)
 8001d8c:	781b      	ldrb	r3, [r3, #0]
		}

		if(received_char == 'a' && seleccion_actual == 1){
 8001d8e:	4b25      	ldr	r3, [pc, #148]	@ (8001e24 <main+0x1bc>)
 8001d90:	781b      	ldrb	r3, [r3, #0]
 8001d92:	b2db      	uxtb	r3, r3
 8001d94:	2b61      	cmp	r3, #97	@ 0x61
 8001d96:	d10c      	bne.n	8001db2 <main+0x14a>
 8001d98:	4b2c      	ldr	r3, [pc, #176]	@ (8001e4c <main+0x1e4>)
 8001d9a:	781b      	ldrb	r3, [r3, #0]
 8001d9c:	2b01      	cmp	r3, #1
 8001d9e:	d108      	bne.n	8001db2 <main+0x14a>
			inicio = 0;
 8001da0:	4b28      	ldr	r3, [pc, #160]	@ (8001e44 <main+0x1dc>)
 8001da2:	2200      	movs	r2, #0
 8001da4:	601a      	str	r2, [r3, #0]
			seleccion_actual = 0;
 8001da6:	4b29      	ldr	r3, [pc, #164]	@ (8001e4c <main+0x1e4>)
 8001da8:	2200      	movs	r2, #0
 8001daa:	701a      	strb	r2, [r3, #0]
			pintjueg = 1;
 8001dac:	4b28      	ldr	r3, [pc, #160]	@ (8001e50 <main+0x1e8>)
 8001dae:	2201      	movs	r2, #1
 8001db0:	601a      	str	r2, [r3, #0]
		}
		if(received_char == 'a' && seleccion_actual == 2){
 8001db2:	4b1c      	ldr	r3, [pc, #112]	@ (8001e24 <main+0x1bc>)
 8001db4:	781b      	ldrb	r3, [r3, #0]
 8001db6:	b2db      	uxtb	r3, r3
 8001db8:	2b61      	cmp	r3, #97	@ 0x61
 8001dba:	d10c      	bne.n	8001dd6 <main+0x16e>
 8001dbc:	4b23      	ldr	r3, [pc, #140]	@ (8001e4c <main+0x1e4>)
 8001dbe:	781b      	ldrb	r3, [r3, #0]
 8001dc0:	2b02      	cmp	r3, #2
 8001dc2:	d108      	bne.n	8001dd6 <main+0x16e>
			inicio = 1;
 8001dc4:	4b1f      	ldr	r3, [pc, #124]	@ (8001e44 <main+0x1dc>)
 8001dc6:	2201      	movs	r2, #1
 8001dc8:	601a      	str	r2, [r3, #0]
			seleccion_actual = 0;
 8001dca:	4b20      	ldr	r3, [pc, #128]	@ (8001e4c <main+0x1e4>)
 8001dcc:	2200      	movs	r2, #0
 8001dce:	701a      	strb	r2, [r3, #0]
			pintjueg = 1;
 8001dd0:	4b1f      	ldr	r3, [pc, #124]	@ (8001e50 <main+0x1e8>)
 8001dd2:	2201      	movs	r2, #1
 8001dd4:	601a      	str	r2, [r3, #0]
		}
		if(received_char == 'a' && seleccion_actual == 3){
 8001dd6:	4b13      	ldr	r3, [pc, #76]	@ (8001e24 <main+0x1bc>)
 8001dd8:	781b      	ldrb	r3, [r3, #0]
 8001dda:	b2db      	uxtb	r3, r3
 8001ddc:	2b61      	cmp	r3, #97	@ 0x61
 8001dde:	d10c      	bne.n	8001dfa <main+0x192>
 8001de0:	4b1a      	ldr	r3, [pc, #104]	@ (8001e4c <main+0x1e4>)
 8001de2:	781b      	ldrb	r3, [r3, #0]
 8001de4:	2b03      	cmp	r3, #3
 8001de6:	d108      	bne.n	8001dfa <main+0x192>
			inicio = 2;
 8001de8:	4b16      	ldr	r3, [pc, #88]	@ (8001e44 <main+0x1dc>)
 8001dea:	2202      	movs	r2, #2
 8001dec:	601a      	str	r2, [r3, #0]
			seleccion_actual = 0;
 8001dee:	4b17      	ldr	r3, [pc, #92]	@ (8001e4c <main+0x1e4>)
 8001df0:	2200      	movs	r2, #0
 8001df2:	701a      	strb	r2, [r3, #0]
			pintjueg = 1;
 8001df4:	4b16      	ldr	r3, [pc, #88]	@ (8001e50 <main+0x1e8>)
 8001df6:	2201      	movs	r2, #1
 8001df8:	601a      	str	r2, [r3, #0]
		}

		switch (inicio){
 8001dfa:	4b12      	ldr	r3, [pc, #72]	@ (8001e44 <main+0x1dc>)
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	2b02      	cmp	r3, #2
 8001e00:	f000 83c3 	beq.w	800258a <main+0x922>
 8001e04:	2b02      	cmp	r3, #2
 8001e06:	f73f af5e 	bgt.w	8001cc6 <main+0x5e>
 8001e0a:	2b00      	cmp	r3, #0
 8001e0c:	d022      	beq.n	8001e54 <main+0x1ec>
 8001e0e:	2b01      	cmp	r3, #1
 8001e10:	f000 8337 	beq.w	8002482 <main+0x81a>
 8001e14:	e3de      	b.n	80025d4 <main+0x96c>
 8001e16:	bf00      	nop
 8001e18:	2001399c 	.word	0x2001399c
 8001e1c:	20013894 	.word	0x20013894
 8001e20:	08007980 	.word	0x08007980
 8001e24:	200139b0 	.word	0x200139b0
 8001e28:	20013700 	.word	0x20013700
 8001e2c:	200139a0 	.word	0x200139a0
 8001e30:	20008b28 	.word	0x20008b28
 8001e34:	20011944 	.word	0x20011944
 8001e38:	20012274 	.word	0x20012274
 8001e3c:	20012fc4 	.word	0x20012fc4
 8001e40:	20008984 	.word	0x20008984
 8001e44:	200136fc 	.word	0x200136fc
 8001e48:	200139b1 	.word	0x200139b1
 8001e4c:	20013738 	.word	0x20013738
 8001e50:	200139a8 	.word	0x200139a8
			case 0:

				if(pintjueg == 1){
 8001e54:	4bb7      	ldr	r3, [pc, #732]	@ (8002134 <main+0x4cc>)
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	2b01      	cmp	r3, #1
 8001e5a:	f040 809c 	bne.w	8001f96 <main+0x32e>
					LCD_Clear(0xEDCC);
 8001e5e:	f64e 50cc 	movw	r0, #60876	@ 0xedcc
 8001e62:	f7ff faf5 	bl	8001450 <LCD_Clear>
					LCD_Bitmap(125, 120, 120,19, buffer);
					LCD_Bitmap(200, 120, 120,19, buffer);
					memset(buffer, '\0', 4500); //Limpia el buffer*/

					//División de carriles
					LCD_Bitmap(0, 120, 120,19, DIVISION);
 8001e66:	4bb4      	ldr	r3, [pc, #720]	@ (8002138 <main+0x4d0>)
 8001e68:	9300      	str	r3, [sp, #0]
 8001e6a:	2313      	movs	r3, #19
 8001e6c:	2278      	movs	r2, #120	@ 0x78
 8001e6e:	2178      	movs	r1, #120	@ 0x78
 8001e70:	2000      	movs	r0, #0
 8001e72:	f7ff fc77 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(125, 120, 120,19, DIVISION);
 8001e76:	4bb0      	ldr	r3, [pc, #704]	@ (8002138 <main+0x4d0>)
 8001e78:	9300      	str	r3, [sp, #0]
 8001e7a:	2313      	movs	r3, #19
 8001e7c:	2278      	movs	r2, #120	@ 0x78
 8001e7e:	2178      	movs	r1, #120	@ 0x78
 8001e80:	207d      	movs	r0, #125	@ 0x7d
 8001e82:	f7ff fc6f 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(200, 120, 120,19, DIVISION);
 8001e86:	4bac      	ldr	r3, [pc, #688]	@ (8002138 <main+0x4d0>)
 8001e88:	9300      	str	r3, [sp, #0]
 8001e8a:	2313      	movs	r3, #19
 8001e8c:	2278      	movs	r2, #120	@ 0x78
 8001e8e:	2178      	movs	r1, #120	@ 0x78
 8001e90:	20c8      	movs	r0, #200	@ 0xc8
 8001e92:	f7ff fc67 	bl	8001764 <LCD_Bitmap>


					LCD_Bitmap(0, 220, 80,18, DIVISIONBAJA);
 8001e96:	4ba9      	ldr	r3, [pc, #676]	@ (800213c <main+0x4d4>)
 8001e98:	9300      	str	r3, [sp, #0]
 8001e9a:	2312      	movs	r3, #18
 8001e9c:	2250      	movs	r2, #80	@ 0x50
 8001e9e:	21dc      	movs	r1, #220	@ 0xdc
 8001ea0:	2000      	movs	r0, #0
 8001ea2:	f7ff fc5f 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(80, 220, 80,18, DIVISIONBAJA);
 8001ea6:	4ba5      	ldr	r3, [pc, #660]	@ (800213c <main+0x4d4>)
 8001ea8:	9300      	str	r3, [sp, #0]
 8001eaa:	2312      	movs	r3, #18
 8001eac:	2250      	movs	r2, #80	@ 0x50
 8001eae:	21dc      	movs	r1, #220	@ 0xdc
 8001eb0:	2050      	movs	r0, #80	@ 0x50
 8001eb2:	f7ff fc57 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(160, 220, 80,18, DIVISIONBAJA);
 8001eb6:	4ba1      	ldr	r3, [pc, #644]	@ (800213c <main+0x4d4>)
 8001eb8:	9300      	str	r3, [sp, #0]
 8001eba:	2312      	movs	r3, #18
 8001ebc:	2250      	movs	r2, #80	@ 0x50
 8001ebe:	21dc      	movs	r1, #220	@ 0xdc
 8001ec0:	20a0      	movs	r0, #160	@ 0xa0
 8001ec2:	f7ff fc4f 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(240, 220, 80,18, DIVISIONBAJA);
 8001ec6:	4b9d      	ldr	r3, [pc, #628]	@ (800213c <main+0x4d4>)
 8001ec8:	9300      	str	r3, [sp, #0]
 8001eca:	2312      	movs	r3, #18
 8001ecc:	2250      	movs	r2, #80	@ 0x50
 8001ece:	21dc      	movs	r1, #220	@ 0xdc
 8001ed0:	20f0      	movs	r0, #240	@ 0xf0
 8001ed2:	f7ff fc47 	bl	8001764 <LCD_Bitmap>
					//Público
					LCD_Bitmap(0, 0,320, 45 , TRACK);
 8001ed6:	4b9a      	ldr	r3, [pc, #616]	@ (8002140 <main+0x4d8>)
 8001ed8:	9300      	str	r3, [sp, #0]
 8001eda:	232d      	movs	r3, #45	@ 0x2d
 8001edc:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001ee0:	2100      	movs	r1, #0
 8001ee2:	2000      	movs	r0, #0
 8001ee4:	f7ff fc3e 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(0, 0, 32, 31, Jug1);
 8001ee8:	4b96      	ldr	r3, [pc, #600]	@ (8002144 <main+0x4dc>)
 8001eea:	9300      	str	r3, [sp, #0]
 8001eec:	231f      	movs	r3, #31
 8001eee:	2220      	movs	r2, #32
 8001ef0:	2100      	movs	r1, #0
 8001ef2:	2000      	movs	r0, #0
 8001ef4:	f7ff fc36 	bl	8001764 <LCD_Bitmap>
					FillRect(33, 0, 20, 20, 0xF800); //Vidas Jug1
 8001ef8:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001efc:	9300      	str	r3, [sp, #0]
 8001efe:	2314      	movs	r3, #20
 8001f00:	2214      	movs	r2, #20
 8001f02:	2100      	movs	r1, #0
 8001f04:	2021      	movs	r0, #33	@ 0x21
 8001f06:	f7ff fae7 	bl	80014d8 <FillRect>
					FillRect(53, 0, 20, 20, 0xF800);
 8001f0a:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001f0e:	9300      	str	r3, [sp, #0]
 8001f10:	2314      	movs	r3, #20
 8001f12:	2214      	movs	r2, #20
 8001f14:	2100      	movs	r1, #0
 8001f16:	2035      	movs	r0, #53	@ 0x35
 8001f18:	f7ff fade 	bl	80014d8 <FillRect>
					FillRect(73, 0, 20, 20, 0xF800);
 8001f1c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001f20:	9300      	str	r3, [sp, #0]
 8001f22:	2314      	movs	r3, #20
 8001f24:	2214      	movs	r2, #20
 8001f26:	2100      	movs	r1, #0
 8001f28:	2049      	movs	r0, #73	@ 0x49
 8001f2a:	f7ff fad5 	bl	80014d8 <FillRect>
					FillRect(93, 0, 20, 20, 0xF800);
 8001f2e:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001f32:	9300      	str	r3, [sp, #0]
 8001f34:	2314      	movs	r3, #20
 8001f36:	2214      	movs	r2, #20
 8001f38:	2100      	movs	r1, #0
 8001f3a:	205d      	movs	r0, #93	@ 0x5d
 8001f3c:	f7ff facc 	bl	80014d8 <FillRect>

					LCD_Bitmap(0, 210, 32, 31, Jug2);
 8001f40:	4b81      	ldr	r3, [pc, #516]	@ (8002148 <main+0x4e0>)
 8001f42:	9300      	str	r3, [sp, #0]
 8001f44:	231f      	movs	r3, #31
 8001f46:	2220      	movs	r2, #32
 8001f48:	21d2      	movs	r1, #210	@ 0xd2
 8001f4a:	2000      	movs	r0, #0
 8001f4c:	f7ff fc0a 	bl	8001764 <LCD_Bitmap>
					FillRect(33, 220, 20, 20, 0x001F); //Vidas Jug2
 8001f50:	231f      	movs	r3, #31
 8001f52:	9300      	str	r3, [sp, #0]
 8001f54:	2314      	movs	r3, #20
 8001f56:	2214      	movs	r2, #20
 8001f58:	21dc      	movs	r1, #220	@ 0xdc
 8001f5a:	2021      	movs	r0, #33	@ 0x21
 8001f5c:	f7ff fabc 	bl	80014d8 <FillRect>
					FillRect(53, 220, 20, 20, 0x001F);
 8001f60:	231f      	movs	r3, #31
 8001f62:	9300      	str	r3, [sp, #0]
 8001f64:	2314      	movs	r3, #20
 8001f66:	2214      	movs	r2, #20
 8001f68:	21dc      	movs	r1, #220	@ 0xdc
 8001f6a:	2035      	movs	r0, #53	@ 0x35
 8001f6c:	f7ff fab4 	bl	80014d8 <FillRect>
					FillRect(73, 220, 20, 20, 0x001F);
 8001f70:	231f      	movs	r3, #31
 8001f72:	9300      	str	r3, [sp, #0]
 8001f74:	2314      	movs	r3, #20
 8001f76:	2214      	movs	r2, #20
 8001f78:	21dc      	movs	r1, #220	@ 0xdc
 8001f7a:	2049      	movs	r0, #73	@ 0x49
 8001f7c:	f7ff faac 	bl	80014d8 <FillRect>
					FillRect(93, 220, 20, 20, 0x001F);
 8001f80:	231f      	movs	r3, #31
 8001f82:	9300      	str	r3, [sp, #0]
 8001f84:	2314      	movs	r3, #20
 8001f86:	2214      	movs	r2, #20
 8001f88:	21dc      	movs	r1, #220	@ 0xdc
 8001f8a:	205d      	movs	r0, #93	@ 0x5d
 8001f8c:	f7ff faa4 	bl	80014d8 <FillRect>
					pintjueg = 0;
 8001f90:	4b68      	ldr	r3, [pc, #416]	@ (8002134 <main+0x4cc>)
 8001f92:	2200      	movs	r2, #0
 8001f94:	601a      	str	r2, [r3, #0]
				}
				uint32_t current_time = HAL_GetTick();
 8001f96:	f001 f855 	bl	8003044 <HAL_GetTick>
 8001f9a:	61f8      	str	r0, [r7, #28]
				int random_number = (rand() % 5) + 1;//Numeros random del 1 al 5
 8001f9c:	f004 fafa 	bl	8006594 <rand>
 8001fa0:	4601      	mov	r1, r0
 8001fa2:	4b6a      	ldr	r3, [pc, #424]	@ (800214c <main+0x4e4>)
 8001fa4:	fb83 2301 	smull	r2, r3, r3, r1
 8001fa8:	105a      	asrs	r2, r3, #1
 8001faa:	17cb      	asrs	r3, r1, #31
 8001fac:	1ad2      	subs	r2, r2, r3
 8001fae:	4613      	mov	r3, r2
 8001fb0:	009b      	lsls	r3, r3, #2
 8001fb2:	4413      	add	r3, r2
 8001fb4:	1aca      	subs	r2, r1, r3
 8001fb6:	1c53      	adds	r3, r2, #1
 8001fb8:	61bb      	str	r3, [r7, #24]
				/*for(int c = 0; c < 320 -32; c++){
					HAL_Delay(15);
					int anima1 = (c/2)%2;
					LCD_Sprite(0, 200, 29, 41, movjug1, 2, anima1, 0, 1);
				}*/
				if (random_number == 1  && cactus != 1) {//&& move1 != 1
 8001fba:	69bb      	ldr	r3, [r7, #24]
 8001fbc:	2b01      	cmp	r3, #1
 8001fbe:	d15e      	bne.n	800207e <main+0x416>
 8001fc0:	4b63      	ldr	r3, [pc, #396]	@ (8002150 <main+0x4e8>)
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	2b01      	cmp	r3, #1
 8001fc6:	d05a      	beq.n	800207e <main+0x416>
					if (current_time - last_time_cactus >= 15) { // Controla la velocidad de la planta
 8001fc8:	4b62      	ldr	r3, [pc, #392]	@ (8002154 <main+0x4ec>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	69fa      	ldr	r2, [r7, #28]
 8001fce:	1ad3      	subs	r3, r2, r3
 8001fd0:	2b0e      	cmp	r3, #14
 8001fd2:	d954      	bls.n	800207e <main+0x416>
						last_time_cactus = current_time;
 8001fd4:	4a5f      	ldr	r2, [pc, #380]	@ (8002154 <main+0x4ec>)
 8001fd6:	69fb      	ldr	r3, [r7, #28]
 8001fd8:	6013      	str	r3, [r2, #0]
						clear_previous_sprite(z, 150, 20, 20); //Notas usar tamaño de la planta carnivor no 20 20
 8001fda:	4b5f      	ldr	r3, [pc, #380]	@ (8002158 <main+0x4f0>)
 8001fdc:	6818      	ldr	r0, [r3, #0]
 8001fde:	2314      	movs	r3, #20
 8001fe0:	2214      	movs	r2, #20
 8001fe2:	2196      	movs	r1, #150	@ 0x96
 8001fe4:	f7ff fd82 	bl	8001aec <clear_previous_sprite>
						// Mover cactus hacia la izquierda
						z--; // Decrementa la posición del cactus
 8001fe8:	4b5b      	ldr	r3, [pc, #364]	@ (8002158 <main+0x4f0>)
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	3b01      	subs	r3, #1
 8001fee:	4a5a      	ldr	r2, [pc, #360]	@ (8002158 <main+0x4f0>)
 8001ff0:	6013      	str	r3, [r2, #0]
						int anima = (z / 50) % 1;
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	617b      	str	r3, [r7, #20]
						//LCD_Sprite(z, 150, 20, 25, PLANTACAR, 1, anima1, 0, 1);
						FillRect(z, 150, 20, 20, 0xF800);
 8001ff6:	4b58      	ldr	r3, [pc, #352]	@ (8002158 <main+0x4f0>)
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	4618      	mov	r0, r3
 8001ffc:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002000:	9300      	str	r3, [sp, #0]
 8002002:	2314      	movs	r3, #20
 8002004:	2214      	movs	r2, #20
 8002006:	2196      	movs	r1, #150	@ 0x96
 8002008:	f7ff fa66 	bl	80014d8 <FillRect>
						if (check_collision(sprite_x, sprite_y, z, 150)) {
 800200c:	4b53      	ldr	r3, [pc, #332]	@ (800215c <main+0x4f4>)
 800200e:	6818      	ldr	r0, [r3, #0]
 8002010:	4b53      	ldr	r3, [pc, #332]	@ (8002160 <main+0x4f8>)
 8002012:	6819      	ldr	r1, [r3, #0]
 8002014:	4b50      	ldr	r3, [pc, #320]	@ (8002158 <main+0x4f0>)
 8002016:	681a      	ldr	r2, [r3, #0]
 8002018:	2396      	movs	r3, #150	@ 0x96
 800201a:	f7ff fd33 	bl	8001a84 <check_collision>
 800201e:	4603      	mov	r3, r0
 8002020:	2b00      	cmp	r3, #0
 8002022:	d019      	beq.n	8002058 <main+0x3f0>
							colision++;
 8002024:	4b4f      	ldr	r3, [pc, #316]	@ (8002164 <main+0x4fc>)
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	3301      	adds	r3, #1
 800202a:	4a4e      	ldr	r2, [pc, #312]	@ (8002164 <main+0x4fc>)
 800202c:	6013      	str	r3, [r2, #0]
							boom1 = 1;
 800202e:	4b4e      	ldr	r3, [pc, #312]	@ (8002168 <main+0x500>)
 8002030:	2201      	movs	r2, #1
 8002032:	601a      	str	r2, [r3, #0]
							// Borrar el cactus cuando hay colisión
							z = 300;
 8002034:	4b48      	ldr	r3, [pc, #288]	@ (8002158 <main+0x4f0>)
 8002036:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800203a:	601a      	str	r2, [r3, #0]
						    FillRect(z, 150, 20, 25, 0xEDCC); // Rellenar con color de fondo
 800203c:	4b46      	ldr	r3, [pc, #280]	@ (8002158 <main+0x4f0>)
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	4618      	mov	r0, r3
 8002042:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 8002046:	9300      	str	r3, [sp, #0]
 8002048:	2319      	movs	r3, #25
 800204a:	2214      	movs	r2, #20
 800204c:	2196      	movs	r1, #150	@ 0x96
 800204e:	f7ff fa43 	bl	80014d8 <FillRect>
						    cactus = 1;
 8002052:	4b3f      	ldr	r3, [pc, #252]	@ (8002150 <main+0x4e8>)
 8002054:	2201      	movs	r2, #1
 8002056:	601a      	str	r2, [r3, #0]
						}
						// Si el cactus llega al límite, reiniciar su posición
						if (z == 0){ //Nota la versión anterior era x <= 10
 8002058:	4b3f      	ldr	r3, [pc, #252]	@ (8002158 <main+0x4f0>)
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	2b00      	cmp	r3, #0
 800205e:	d10e      	bne.n	800207e <main+0x416>
							FillRect(z, 150, 20, 25, 0xEDCC); // Reiniciar la posición del cactus
 8002060:	4b3d      	ldr	r3, [pc, #244]	@ (8002158 <main+0x4f0>)
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	4618      	mov	r0, r3
 8002066:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 800206a:	9300      	str	r3, [sp, #0]
 800206c:	2319      	movs	r3, #25
 800206e:	2214      	movs	r2, #20
 8002070:	2196      	movs	r1, #150	@ 0x96
 8002072:	f7ff fa31 	bl	80014d8 <FillRect>
						    z = 300;
 8002076:	4b38      	ldr	r3, [pc, #224]	@ (8002158 <main+0x4f0>)
 8002078:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800207c:	601a      	str	r2, [r3, #0]
						}
					}
				}
				if(colision == 1){
 800207e:	4b39      	ldr	r3, [pc, #228]	@ (8002164 <main+0x4fc>)
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	2b01      	cmp	r3, #1
 8002084:	d17c      	bne.n	8002180 <main+0x518>

					if(boom1 == 1){
 8002086:	4b38      	ldr	r3, [pc, #224]	@ (8002168 <main+0x500>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	2b01      	cmp	r3, #1
 800208c:	d132      	bne.n	80020f4 <main+0x48c>
						int anima = (x/50)%3;
						LCD_Sprite(sprite_x, sprite_y, 31, 32, colijug1, 3, anima, 0, 1);
						if (x >= 320 - 32) {
							x = 0; // Restablece x para futuras ejecuciones
						}*/
						for(int x = 0; x < 80; x++){
 800208e:	2300      	movs	r3, #0
 8002090:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002092:	e029      	b.n	80020e8 <main+0x480>
							HAL_Delay(15);
 8002094:	200f      	movs	r0, #15
 8002096:	f000 ffe1 	bl	800305c <HAL_Delay>
							int anima = (x/35)%3;
 800209a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800209c:	4a33      	ldr	r2, [pc, #204]	@ (800216c <main+0x504>)
 800209e:	fb82 1203 	smull	r1, r2, r2, r3
 80020a2:	441a      	add	r2, r3
 80020a4:	1152      	asrs	r2, r2, #5
 80020a6:	17db      	asrs	r3, r3, #31
 80020a8:	1ad2      	subs	r2, r2, r3
 80020aa:	4b31      	ldr	r3, [pc, #196]	@ (8002170 <main+0x508>)
 80020ac:	fb83 3102 	smull	r3, r1, r3, r2
 80020b0:	17d3      	asrs	r3, r2, #31
 80020b2:	1ac9      	subs	r1, r1, r3
 80020b4:	460b      	mov	r3, r1
 80020b6:	005b      	lsls	r3, r3, #1
 80020b8:	440b      	add	r3, r1
 80020ba:	1ad3      	subs	r3, r2, r3
 80020bc:	607b      	str	r3, [r7, #4]
							LCD_Sprite(sprite_x, sprite_y, 31, 32, colisionjug1, 3, anima, 0, 1);
 80020be:	4b27      	ldr	r3, [pc, #156]	@ (800215c <main+0x4f4>)
 80020c0:	6818      	ldr	r0, [r3, #0]
 80020c2:	4b27      	ldr	r3, [pc, #156]	@ (8002160 <main+0x4f8>)
 80020c4:	6819      	ldr	r1, [r3, #0]
 80020c6:	2301      	movs	r3, #1
 80020c8:	9304      	str	r3, [sp, #16]
 80020ca:	2300      	movs	r3, #0
 80020cc:	9303      	str	r3, [sp, #12]
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	9302      	str	r3, [sp, #8]
 80020d2:	2303      	movs	r3, #3
 80020d4:	9301      	str	r3, [sp, #4]
 80020d6:	4b27      	ldr	r3, [pc, #156]	@ (8002174 <main+0x50c>)
 80020d8:	9300      	str	r3, [sp, #0]
 80020da:	2320      	movs	r3, #32
 80020dc:	221f      	movs	r2, #31
 80020de:	f7ff fb9b 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 80020e2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80020e4:	3301      	adds	r3, #1
 80020e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80020e8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80020ea:	2b4f      	cmp	r3, #79	@ 0x4f
 80020ec:	ddd2      	ble.n	8002094 <main+0x42c>
						}
						boom1 = 0;
 80020ee:	4b1e      	ldr	r3, [pc, #120]	@ (8002168 <main+0x500>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	601a      	str	r2, [r3, #0]
					}
					//LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
					LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, movjug1, 2, anima1, 0, 1);
 80020f4:	4b19      	ldr	r3, [pc, #100]	@ (800215c <main+0x4f4>)
 80020f6:	6818      	ldr	r0, [r3, #0]
 80020f8:	4b19      	ldr	r3, [pc, #100]	@ (8002160 <main+0x4f8>)
 80020fa:	6819      	ldr	r1, [r3, #0]
 80020fc:	241e      	movs	r4, #30
 80020fe:	251d      	movs	r5, #29
 8002100:	4b1d      	ldr	r3, [pc, #116]	@ (8002178 <main+0x510>)
 8002102:	681b      	ldr	r3, [r3, #0]
 8002104:	2201      	movs	r2, #1
 8002106:	9204      	str	r2, [sp, #16]
 8002108:	2200      	movs	r2, #0
 800210a:	9203      	str	r2, [sp, #12]
 800210c:	9302      	str	r3, [sp, #8]
 800210e:	2302      	movs	r3, #2
 8002110:	9301      	str	r3, [sp, #4]
 8002112:	4b1a      	ldr	r3, [pc, #104]	@ (800217c <main+0x514>)
 8002114:	9300      	str	r3, [sp, #0]
 8002116:	462b      	mov	r3, r5
 8002118:	4622      	mov	r2, r4
 800211a:	f7ff fb7d 	bl	8001818 <LCD_Sprite>
					FillRect(93, 0, 20, 20, 0xFFFF);
 800211e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002122:	9300      	str	r3, [sp, #0]
 8002124:	2314      	movs	r3, #20
 8002126:	2214      	movs	r2, #20
 8002128:	2100      	movs	r1, #0
 800212a:	205d      	movs	r0, #93	@ 0x5d
 800212c:	f7ff f9d4 	bl	80014d8 <FillRect>
 8002130:	e135      	b.n	800239e <main+0x736>
 8002132:	bf00      	nop
 8002134:	200139a8 	.word	0x200139a8
 8002138:	20000aa4 	.word	0x20000aa4
 800213c:	20000004 	.word	0x20000004
 8002140:	20001b84 	.word	0x20001b84
 8002144:	08008a18 	.word	0x08008a18
 8002148:	08009198 	.word	0x08009198
 800214c:	66666667 	.word	0x66666667
 8002150:	200139c0 	.word	0x200139c0
 8002154:	200139ac 	.word	0x200139ac
 8002158:	20013720 	.word	0x20013720
 800215c:	20013724 	.word	0x20013724
 8002160:	20013728 	.word	0x20013728
 8002164:	200139b4 	.word	0x200139b4
 8002168:	200139c4 	.word	0x200139c4
 800216c:	ea0ea0eb 	.word	0xea0ea0eb
 8002170:	55555556 	.word	0x55555556
 8002174:	0800acc0 	.word	0x0800acc0
 8002178:	200139bc 	.word	0x200139bc
 800217c:	08009918 	.word	0x08009918
				}else if(colision == 2){
 8002180:	4b59      	ldr	r3, [pc, #356]	@ (80022e8 <main+0x680>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	2b02      	cmp	r3, #2
 8002186:	d14f      	bne.n	8002228 <main+0x5c0>
					if(boom1 == 1){
 8002188:	4b58      	ldr	r3, [pc, #352]	@ (80022ec <main+0x684>)
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	2b01      	cmp	r3, #1
 800218e:	d132      	bne.n	80021f6 <main+0x58e>
						int anima = (x/50)%3;
						LCD_Sprite(sprite_x, sprite_y, 31, 32, colijug1, 3, anima, 0, 1);
						if (x >= 320 - 32) {
							x = 0; // Restablece x para futuras ejecuciones
						}*/
						for(int x = 0; x < 80; x++){
 8002190:	2300      	movs	r3, #0
 8002192:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002194:	e029      	b.n	80021ea <main+0x582>
							HAL_Delay(15);
 8002196:	200f      	movs	r0, #15
 8002198:	f000 ff60 	bl	800305c <HAL_Delay>
							int anima = (x/35)%3;
 800219c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800219e:	4a54      	ldr	r2, [pc, #336]	@ (80022f0 <main+0x688>)
 80021a0:	fb82 1203 	smull	r1, r2, r2, r3
 80021a4:	441a      	add	r2, r3
 80021a6:	1152      	asrs	r2, r2, #5
 80021a8:	17db      	asrs	r3, r3, #31
 80021aa:	1ad2      	subs	r2, r2, r3
 80021ac:	4b51      	ldr	r3, [pc, #324]	@ (80022f4 <main+0x68c>)
 80021ae:	fb83 3102 	smull	r3, r1, r3, r2
 80021b2:	17d3      	asrs	r3, r2, #31
 80021b4:	1ac9      	subs	r1, r1, r3
 80021b6:	460b      	mov	r3, r1
 80021b8:	005b      	lsls	r3, r3, #1
 80021ba:	440b      	add	r3, r1
 80021bc:	1ad3      	subs	r3, r2, r3
 80021be:	60bb      	str	r3, [r7, #8]
							LCD_Sprite(sprite_x, sprite_y, 31, 32, colisionjug1, 3, anima, 0, 1);
 80021c0:	4b4d      	ldr	r3, [pc, #308]	@ (80022f8 <main+0x690>)
 80021c2:	6818      	ldr	r0, [r3, #0]
 80021c4:	4b4d      	ldr	r3, [pc, #308]	@ (80022fc <main+0x694>)
 80021c6:	6819      	ldr	r1, [r3, #0]
 80021c8:	2301      	movs	r3, #1
 80021ca:	9304      	str	r3, [sp, #16]
 80021cc:	2300      	movs	r3, #0
 80021ce:	9303      	str	r3, [sp, #12]
 80021d0:	68bb      	ldr	r3, [r7, #8]
 80021d2:	9302      	str	r3, [sp, #8]
 80021d4:	2303      	movs	r3, #3
 80021d6:	9301      	str	r3, [sp, #4]
 80021d8:	4b49      	ldr	r3, [pc, #292]	@ (8002300 <main+0x698>)
 80021da:	9300      	str	r3, [sp, #0]
 80021dc:	2320      	movs	r3, #32
 80021de:	221f      	movs	r2, #31
 80021e0:	f7ff fb1a 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 80021e4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80021e6:	3301      	adds	r3, #1
 80021e8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80021ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80021ec:	2b4f      	cmp	r3, #79	@ 0x4f
 80021ee:	ddd2      	ble.n	8002196 <main+0x52e>
						}
						boom1 = 0;
 80021f0:	4b3e      	ldr	r3, [pc, #248]	@ (80022ec <main+0x684>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	601a      	str	r2, [r3, #0]
					}
					LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
 80021f6:	4b40      	ldr	r3, [pc, #256]	@ (80022f8 <main+0x690>)
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	4618      	mov	r0, r3
 80021fc:	4b3f      	ldr	r3, [pc, #252]	@ (80022fc <main+0x694>)
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	4619      	mov	r1, r3
 8002202:	231e      	movs	r3, #30
 8002204:	461a      	mov	r2, r3
 8002206:	231d      	movs	r3, #29
 8002208:	461c      	mov	r4, r3
 800220a:	4b3e      	ldr	r3, [pc, #248]	@ (8002304 <main+0x69c>)
 800220c:	9300      	str	r3, [sp, #0]
 800220e:	4623      	mov	r3, r4
 8002210:	f7ff faa8 	bl	8001764 <LCD_Bitmap>
					FillRect(73, 0, 20, 20, 0xFFFF);
 8002214:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002218:	9300      	str	r3, [sp, #0]
 800221a:	2314      	movs	r3, #20
 800221c:	2214      	movs	r2, #20
 800221e:	2100      	movs	r1, #0
 8002220:	2049      	movs	r0, #73	@ 0x49
 8002222:	f7ff f959 	bl	80014d8 <FillRect>
 8002226:	e0ba      	b.n	800239e <main+0x736>
				}else if(colision == 3){
 8002228:	4b2f      	ldr	r3, [pc, #188]	@ (80022e8 <main+0x680>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	2b03      	cmp	r3, #3
 800222e:	d14f      	bne.n	80022d0 <main+0x668>
					if(boom1 == 1){
 8002230:	4b2e      	ldr	r3, [pc, #184]	@ (80022ec <main+0x684>)
 8002232:	681b      	ldr	r3, [r3, #0]
 8002234:	2b01      	cmp	r3, #1
 8002236:	d132      	bne.n	800229e <main+0x636>
						for(int x = 0; x < 80; x++){
 8002238:	2300      	movs	r3, #0
 800223a:	627b      	str	r3, [r7, #36]	@ 0x24
 800223c:	e029      	b.n	8002292 <main+0x62a>
							HAL_Delay(15);
 800223e:	200f      	movs	r0, #15
 8002240:	f000 ff0c 	bl	800305c <HAL_Delay>
							int anima = (x/35)%3;
 8002244:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002246:	4a2a      	ldr	r2, [pc, #168]	@ (80022f0 <main+0x688>)
 8002248:	fb82 1203 	smull	r1, r2, r2, r3
 800224c:	441a      	add	r2, r3
 800224e:	1152      	asrs	r2, r2, #5
 8002250:	17db      	asrs	r3, r3, #31
 8002252:	1ad2      	subs	r2, r2, r3
 8002254:	4b27      	ldr	r3, [pc, #156]	@ (80022f4 <main+0x68c>)
 8002256:	fb83 3102 	smull	r3, r1, r3, r2
 800225a:	17d3      	asrs	r3, r2, #31
 800225c:	1ac9      	subs	r1, r1, r3
 800225e:	460b      	mov	r3, r1
 8002260:	005b      	lsls	r3, r3, #1
 8002262:	440b      	add	r3, r1
 8002264:	1ad3      	subs	r3, r2, r3
 8002266:	60fb      	str	r3, [r7, #12]
							LCD_Sprite(sprite_x, sprite_y, 31, 32, colisionjug1, 3, anima, 0, 1);
 8002268:	4b23      	ldr	r3, [pc, #140]	@ (80022f8 <main+0x690>)
 800226a:	6818      	ldr	r0, [r3, #0]
 800226c:	4b23      	ldr	r3, [pc, #140]	@ (80022fc <main+0x694>)
 800226e:	6819      	ldr	r1, [r3, #0]
 8002270:	2301      	movs	r3, #1
 8002272:	9304      	str	r3, [sp, #16]
 8002274:	2300      	movs	r3, #0
 8002276:	9303      	str	r3, [sp, #12]
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	9302      	str	r3, [sp, #8]
 800227c:	2303      	movs	r3, #3
 800227e:	9301      	str	r3, [sp, #4]
 8002280:	4b1f      	ldr	r3, [pc, #124]	@ (8002300 <main+0x698>)
 8002282:	9300      	str	r3, [sp, #0]
 8002284:	2320      	movs	r3, #32
 8002286:	221f      	movs	r2, #31
 8002288:	f7ff fac6 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 800228c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800228e:	3301      	adds	r3, #1
 8002290:	627b      	str	r3, [r7, #36]	@ 0x24
 8002292:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002294:	2b4f      	cmp	r3, #79	@ 0x4f
 8002296:	ddd2      	ble.n	800223e <main+0x5d6>
						}
						boom1 = 0;
 8002298:	4b14      	ldr	r3, [pc, #80]	@ (80022ec <main+0x684>)
 800229a:	2200      	movs	r2, #0
 800229c:	601a      	str	r2, [r3, #0]
					}
					LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
 800229e:	4b16      	ldr	r3, [pc, #88]	@ (80022f8 <main+0x690>)
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	4618      	mov	r0, r3
 80022a4:	4b15      	ldr	r3, [pc, #84]	@ (80022fc <main+0x694>)
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4619      	mov	r1, r3
 80022aa:	231e      	movs	r3, #30
 80022ac:	461a      	mov	r2, r3
 80022ae:	231d      	movs	r3, #29
 80022b0:	461c      	mov	r4, r3
 80022b2:	4b14      	ldr	r3, [pc, #80]	@ (8002304 <main+0x69c>)
 80022b4:	9300      	str	r3, [sp, #0]
 80022b6:	4623      	mov	r3, r4
 80022b8:	f7ff fa54 	bl	8001764 <LCD_Bitmap>
					FillRect(53, 0, 20, 20, 0xFFFF);
 80022bc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80022c0:	9300      	str	r3, [sp, #0]
 80022c2:	2314      	movs	r3, #20
 80022c4:	2214      	movs	r2, #20
 80022c6:	2100      	movs	r1, #0
 80022c8:	2035      	movs	r0, #53	@ 0x35
 80022ca:	f7ff f905 	bl	80014d8 <FillRect>
 80022ce:	e066      	b.n	800239e <main+0x736>
				}else if(colision == 4){
 80022d0:	4b05      	ldr	r3, [pc, #20]	@ (80022e8 <main+0x680>)
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	2b04      	cmp	r3, #4
 80022d6:	d162      	bne.n	800239e <main+0x736>
					if(boom1 == 1){
 80022d8:	4b04      	ldr	r3, [pc, #16]	@ (80022ec <main+0x684>)
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	2b01      	cmp	r3, #1
 80022de:	d143      	bne.n	8002368 <main+0x700>
						for(int x = 0; x < 80; x++){
 80022e0:	2300      	movs	r3, #0
 80022e2:	623b      	str	r3, [r7, #32]
 80022e4:	e03a      	b.n	800235c <main+0x6f4>
 80022e6:	bf00      	nop
 80022e8:	200139b4 	.word	0x200139b4
 80022ec:	200139c4 	.word	0x200139c4
 80022f0:	ea0ea0eb 	.word	0xea0ea0eb
 80022f4:	55555556 	.word	0x55555556
 80022f8:	20013724 	.word	0x20013724
 80022fc:	20013728 	.word	0x20013728
 8002300:	0800acc0 	.word	0x0800acc0
 8002304:	08008a18 	.word	0x08008a18
							HAL_Delay(15);
 8002308:	200f      	movs	r0, #15
 800230a:	f000 fea7 	bl	800305c <HAL_Delay>
							int anima = (x/35)%3;
 800230e:	6a3b      	ldr	r3, [r7, #32]
 8002310:	4ab1      	ldr	r2, [pc, #708]	@ (80025d8 <main+0x970>)
 8002312:	fb82 1203 	smull	r1, r2, r2, r3
 8002316:	441a      	add	r2, r3
 8002318:	1152      	asrs	r2, r2, #5
 800231a:	17db      	asrs	r3, r3, #31
 800231c:	1ad2      	subs	r2, r2, r3
 800231e:	4baf      	ldr	r3, [pc, #700]	@ (80025dc <main+0x974>)
 8002320:	fb83 3102 	smull	r3, r1, r3, r2
 8002324:	17d3      	asrs	r3, r2, #31
 8002326:	1ac9      	subs	r1, r1, r3
 8002328:	460b      	mov	r3, r1
 800232a:	005b      	lsls	r3, r3, #1
 800232c:	440b      	add	r3, r1
 800232e:	1ad3      	subs	r3, r2, r3
 8002330:	613b      	str	r3, [r7, #16]
							LCD_Sprite(sprite_x, sprite_y, 31, 32, colisionjug1, 3, anima, 0, 1);
 8002332:	4bab      	ldr	r3, [pc, #684]	@ (80025e0 <main+0x978>)
 8002334:	6818      	ldr	r0, [r3, #0]
 8002336:	4bab      	ldr	r3, [pc, #684]	@ (80025e4 <main+0x97c>)
 8002338:	6819      	ldr	r1, [r3, #0]
 800233a:	2301      	movs	r3, #1
 800233c:	9304      	str	r3, [sp, #16]
 800233e:	2300      	movs	r3, #0
 8002340:	9303      	str	r3, [sp, #12]
 8002342:	693b      	ldr	r3, [r7, #16]
 8002344:	9302      	str	r3, [sp, #8]
 8002346:	2303      	movs	r3, #3
 8002348:	9301      	str	r3, [sp, #4]
 800234a:	4ba7      	ldr	r3, [pc, #668]	@ (80025e8 <main+0x980>)
 800234c:	9300      	str	r3, [sp, #0]
 800234e:	2320      	movs	r3, #32
 8002350:	221f      	movs	r2, #31
 8002352:	f7ff fa61 	bl	8001818 <LCD_Sprite>
						for(int x = 0; x < 80; x++){
 8002356:	6a3b      	ldr	r3, [r7, #32]
 8002358:	3301      	adds	r3, #1
 800235a:	623b      	str	r3, [r7, #32]
 800235c:	6a3b      	ldr	r3, [r7, #32]
 800235e:	2b4f      	cmp	r3, #79	@ 0x4f
 8002360:	ddd2      	ble.n	8002308 <main+0x6a0>
						}
						boom1 = 0;
 8002362:	4ba2      	ldr	r3, [pc, #648]	@ (80025ec <main+0x984>)
 8002364:	2200      	movs	r2, #0
 8002366:	601a      	str	r2, [r3, #0]
					}
					LCD_Bitmap(sprite_x, sprite_y, sprite_width, sprite_height, Jug1);
 8002368:	4b9d      	ldr	r3, [pc, #628]	@ (80025e0 <main+0x978>)
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	4618      	mov	r0, r3
 800236e:	4b9d      	ldr	r3, [pc, #628]	@ (80025e4 <main+0x97c>)
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	4619      	mov	r1, r3
 8002374:	231e      	movs	r3, #30
 8002376:	461a      	mov	r2, r3
 8002378:	231d      	movs	r3, #29
 800237a:	461c      	mov	r4, r3
 800237c:	4b9c      	ldr	r3, [pc, #624]	@ (80025f0 <main+0x988>)
 800237e:	9300      	str	r3, [sp, #0]
 8002380:	4623      	mov	r3, r4
 8002382:	f7ff f9ef 	bl	8001764 <LCD_Bitmap>
					FillRect(33, 0, 20, 20, 0xFFFF);
 8002386:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800238a:	9300      	str	r3, [sp, #0]
 800238c:	2314      	movs	r3, #20
 800238e:	2214      	movs	r2, #20
 8002390:	2100      	movs	r1, #0
 8002392:	2021      	movs	r0, #33	@ 0x21
 8002394:	f7ff f8a0 	bl	80014d8 <FillRect>
					loser1 = 1;
 8002398:	4b96      	ldr	r3, [pc, #600]	@ (80025f4 <main+0x98c>)
 800239a:	2201      	movs	r2, #1
 800239c:	601a      	str	r2, [r3, #0]
				}
				if(loser1 == 1){
 800239e:	4b95      	ldr	r3, [pc, #596]	@ (80025f4 <main+0x98c>)
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	2b01      	cmp	r3, #1
 80023a4:	d10a      	bne.n	80023bc <main+0x754>
					LCD_Print("Perdiste! JUG1 :(", 20, 100, 1, 0x001F, 0xCAB9);
 80023a6:	f64c 23b9 	movw	r3, #51897	@ 0xcab9
 80023aa:	9301      	str	r3, [sp, #4]
 80023ac:	231f      	movs	r3, #31
 80023ae:	9300      	str	r3, [sp, #0]
 80023b0:	2301      	movs	r3, #1
 80023b2:	2264      	movs	r2, #100	@ 0x64
 80023b4:	2114      	movs	r1, #20
 80023b6:	4890      	ldr	r0, [pc, #576]	@ (80025f8 <main+0x990>)
 80023b8:	f7ff f8e8 	bl	800158c <LCD_Print>
				}
				if (received_char == 'g') {
 80023bc:	4b8f      	ldr	r3, [pc, #572]	@ (80025fc <main+0x994>)
 80023be:	781b      	ldrb	r3, [r3, #0]
 80023c0:	b2db      	uxtb	r3, r3
 80023c2:	2b67      	cmp	r3, #103	@ 0x67
 80023c4:	d107      	bne.n	80023d6 <main+0x76e>
					//move_blue_cube_up();  // Mover cubo azul hacia arriba
					//move_jug1_up();
					move_sprite_up();
 80023c6:	f7ff fba5 	bl	8001b14 <move_sprite_up>
					received_char = 0;  // Resetear el comando
 80023ca:	4b8c      	ldr	r3, [pc, #560]	@ (80025fc <main+0x994>)
 80023cc:	2200      	movs	r2, #0
 80023ce:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 80023d0:	4b8b      	ldr	r3, [pc, #556]	@ (8002600 <main+0x998>)
 80023d2:	2200      	movs	r2, #0
 80023d4:	601a      	str	r2, [r3, #0]
				}
				if (received_char == 'h') {
 80023d6:	4b89      	ldr	r3, [pc, #548]	@ (80025fc <main+0x994>)
 80023d8:	781b      	ldrb	r3, [r3, #0]
 80023da:	b2db      	uxtb	r3, r3
 80023dc:	2b68      	cmp	r3, #104	@ 0x68
 80023de:	d107      	bne.n	80023f0 <main+0x788>
					//move_blue_cube_down();  // Mover cubo azul hacia abajo
					//move_jug1_down();
					move_sprite_down();
 80023e0:	f7ff fbec 	bl	8001bbc <move_sprite_down>
					received_char = 0;  // Resetear el comando
 80023e4:	4b85      	ldr	r3, [pc, #532]	@ (80025fc <main+0x994>)
 80023e6:	2200      	movs	r2, #0
 80023e8:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 80023ea:	4b85      	ldr	r3, [pc, #532]	@ (8002600 <main+0x998>)
 80023ec:	2200      	movs	r2, #0
 80023ee:	601a      	str	r2, [r3, #0]
				}
				if (received_char == 'e') {
 80023f0:	4b82      	ldr	r3, [pc, #520]	@ (80025fc <main+0x994>)
 80023f2:	781b      	ldrb	r3, [r3, #0]
 80023f4:	b2db      	uxtb	r3, r3
 80023f6:	2b65      	cmp	r3, #101	@ 0x65
 80023f8:	d105      	bne.n	8002406 <main+0x79e>
					//move_green_cube_left();  // Mover cubo verde hacia la izquierda
					received_char = 0;  // Resetear el comando
 80023fa:	4b80      	ldr	r3, [pc, #512]	@ (80025fc <main+0x994>)
 80023fc:	2200      	movs	r2, #0
 80023fe:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8002400:	4b7f      	ldr	r3, [pc, #508]	@ (8002600 <main+0x998>)
 8002402:	2200      	movs	r2, #0
 8002404:	601a      	str	r2, [r3, #0]
				}
				if(received_char == 'f'){
 8002406:	4b7d      	ldr	r3, [pc, #500]	@ (80025fc <main+0x994>)
 8002408:	781b      	ldrb	r3, [r3, #0]
 800240a:	b2db      	uxtb	r3, r3
 800240c:	2b66      	cmp	r3, #102	@ 0x66
 800240e:	d105      	bne.n	800241c <main+0x7b4>
					//move_green_cube_right();
					received_char = 0;
 8002410:	4b7a      	ldr	r3, [pc, #488]	@ (80025fc <main+0x994>)
 8002412:	2200      	movs	r2, #0
 8002414:	701a      	strb	r2, [r3, #0]
					move1 = 0;
 8002416:	4b7a      	ldr	r3, [pc, #488]	@ (8002600 <main+0x998>)
 8002418:	2200      	movs	r2, #0
 800241a:	601a      	str	r2, [r3, #0]
				}
				if(move1 != 1){
 800241c:	4b78      	ldr	r3, [pc, #480]	@ (8002600 <main+0x998>)
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	2b01      	cmp	r3, #1
 8002422:	d025      	beq.n	8002470 <main+0x808>
					c++;
 8002424:	4b77      	ldr	r3, [pc, #476]	@ (8002604 <main+0x99c>)
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	3301      	adds	r3, #1
 800242a:	4a76      	ldr	r2, [pc, #472]	@ (8002604 <main+0x99c>)
 800242c:	6013      	str	r3, [r2, #0]
					anima1 = (c / 2) % 2;
 800242e:	4b75      	ldr	r3, [pc, #468]	@ (8002604 <main+0x99c>)
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	0fda      	lsrs	r2, r3, #31
 8002434:	4413      	add	r3, r2
 8002436:	105b      	asrs	r3, r3, #1
 8002438:	2b00      	cmp	r3, #0
 800243a:	f003 0301 	and.w	r3, r3, #1
 800243e:	bfb8      	it	lt
 8002440:	425b      	neglt	r3, r3
 8002442:	4a71      	ldr	r2, [pc, #452]	@ (8002608 <main+0x9a0>)
 8002444:	6013      	str	r3, [r2, #0]
					LCD_Sprite(sprite_x, sprite_y, sprite_width, sprite_height, movjug1, 2, anima1, 0, 1);
 8002446:	4b66      	ldr	r3, [pc, #408]	@ (80025e0 <main+0x978>)
 8002448:	6818      	ldr	r0, [r3, #0]
 800244a:	4b66      	ldr	r3, [pc, #408]	@ (80025e4 <main+0x97c>)
 800244c:	6819      	ldr	r1, [r3, #0]
 800244e:	241e      	movs	r4, #30
 8002450:	251d      	movs	r5, #29
 8002452:	4b6d      	ldr	r3, [pc, #436]	@ (8002608 <main+0x9a0>)
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	2201      	movs	r2, #1
 8002458:	9204      	str	r2, [sp, #16]
 800245a:	2200      	movs	r2, #0
 800245c:	9203      	str	r2, [sp, #12]
 800245e:	9302      	str	r3, [sp, #8]
 8002460:	2302      	movs	r3, #2
 8002462:	9301      	str	r3, [sp, #4]
 8002464:	4b69      	ldr	r3, [pc, #420]	@ (800260c <main+0x9a4>)
 8002466:	9300      	str	r3, [sp, #0]
 8002468:	462b      	mov	r3, r5
 800246a:	4622      	mov	r2, r4
 800246c:	f7ff f9d4 	bl	8001818 <LCD_Sprite>
				}
				if(c == 20){
 8002470:	4b64      	ldr	r3, [pc, #400]	@ (8002604 <main+0x99c>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	2b14      	cmp	r3, #20
 8002476:	f040 80a6 	bne.w	80025c6 <main+0x95e>
					c = 0;
 800247a:	4b62      	ldr	r3, [pc, #392]	@ (8002604 <main+0x99c>)
 800247c:	2200      	movs	r2, #0
 800247e:	601a      	str	r2, [r3, #0]
				}
				break;
 8002480:	e0a1      	b.n	80025c6 <main+0x95e>
			case 1:
				if(pintjueg == 1){
 8002482:	4b63      	ldr	r3, [pc, #396]	@ (8002610 <main+0x9a8>)
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	2b01      	cmp	r3, #1
 8002488:	f040 80a0 	bne.w	80025cc <main+0x964>
					LCD_Clear(0x00A7);
 800248c:	20a7      	movs	r0, #167	@ 0xa7
 800248e:	f7fe ffdf 	bl	8001450 <LCD_Clear>
					//             *       *
					LCD_Bitmap(25, 80, 63, 69, SELECTOROFF);
 8002492:	4b60      	ldr	r3, [pc, #384]	@ (8002614 <main+0x9ac>)
 8002494:	9300      	str	r3, [sp, #0]
 8002496:	2345      	movs	r3, #69	@ 0x45
 8002498:	223f      	movs	r2, #63	@ 0x3f
 800249a:	2150      	movs	r1, #80	@ 0x50
 800249c:	2019      	movs	r0, #25
 800249e:	f7ff f961 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(40, 90, 35, 38, personaje1);
 80024a2:	4b5d      	ldr	r3, [pc, #372]	@ (8002618 <main+0x9b0>)
 80024a4:	9300      	str	r3, [sp, #0]
 80024a6:	2326      	movs	r3, #38	@ 0x26
 80024a8:	2223      	movs	r2, #35	@ 0x23
 80024aa:	215a      	movs	r1, #90	@ 0x5a
 80024ac:	2028      	movs	r0, #40	@ 0x28
 80024ae:	f7ff f959 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(95, 80, 63, 69, SELECTOROFF);
 80024b2:	4b58      	ldr	r3, [pc, #352]	@ (8002614 <main+0x9ac>)
 80024b4:	9300      	str	r3, [sp, #0]
 80024b6:	2345      	movs	r3, #69	@ 0x45
 80024b8:	223f      	movs	r2, #63	@ 0x3f
 80024ba:	2150      	movs	r1, #80	@ 0x50
 80024bc:	205f      	movs	r0, #95	@ 0x5f
 80024be:	f7ff f951 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(110, 90, 35, 38, personaje2);
 80024c2:	4b56      	ldr	r3, [pc, #344]	@ (800261c <main+0x9b4>)
 80024c4:	9300      	str	r3, [sp, #0]
 80024c6:	2326      	movs	r3, #38	@ 0x26
 80024c8:	2223      	movs	r2, #35	@ 0x23
 80024ca:	215a      	movs	r1, #90	@ 0x5a
 80024cc:	206e      	movs	r0, #110	@ 0x6e
 80024ce:	f7ff f949 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(165, 80, 63, 69, SELECTOROFF);
 80024d2:	4b50      	ldr	r3, [pc, #320]	@ (8002614 <main+0x9ac>)
 80024d4:	9300      	str	r3, [sp, #0]
 80024d6:	2345      	movs	r3, #69	@ 0x45
 80024d8:	223f      	movs	r2, #63	@ 0x3f
 80024da:	2150      	movs	r1, #80	@ 0x50
 80024dc:	20a5      	movs	r0, #165	@ 0xa5
 80024de:	f7ff f941 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(180, 90, 35, 38, personaje3);
 80024e2:	4b4f      	ldr	r3, [pc, #316]	@ (8002620 <main+0x9b8>)
 80024e4:	9300      	str	r3, [sp, #0]
 80024e6:	2326      	movs	r3, #38	@ 0x26
 80024e8:	2223      	movs	r2, #35	@ 0x23
 80024ea:	215a      	movs	r1, #90	@ 0x5a
 80024ec:	20b4      	movs	r0, #180	@ 0xb4
 80024ee:	f7ff f939 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(235, 80, 63, 69, SELECTOROFF);
 80024f2:	4b48      	ldr	r3, [pc, #288]	@ (8002614 <main+0x9ac>)
 80024f4:	9300      	str	r3, [sp, #0]
 80024f6:	2345      	movs	r3, #69	@ 0x45
 80024f8:	223f      	movs	r2, #63	@ 0x3f
 80024fa:	2150      	movs	r1, #80	@ 0x50
 80024fc:	20eb      	movs	r0, #235	@ 0xeb
 80024fe:	f7ff f931 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(250, 90, 35, 38, personaje4);
 8002502:	4b48      	ldr	r3, [pc, #288]	@ (8002624 <main+0x9bc>)
 8002504:	9300      	str	r3, [sp, #0]
 8002506:	2326      	movs	r3, #38	@ 0x26
 8002508:	2223      	movs	r2, #35	@ 0x23
 800250a:	215a      	movs	r1, #90	@ 0x5a
 800250c:	20fa      	movs	r0, #250	@ 0xfa
 800250e:	f7ff f929 	bl	8001764 <LCD_Bitmap>


					//Añadiendo barra gris del selector del jugador
					LCD_Bitmap(25, 70, 63, 17, SELECTOROFFJ1);
 8002512:	4b45      	ldr	r3, [pc, #276]	@ (8002628 <main+0x9c0>)
 8002514:	9300      	str	r3, [sp, #0]
 8002516:	2311      	movs	r3, #17
 8002518:	223f      	movs	r2, #63	@ 0x3f
 800251a:	2146      	movs	r1, #70	@ 0x46
 800251c:	2019      	movs	r0, #25
 800251e:	f7ff f921 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(95, 70, 63, 17, SELECTOROFFJ1);
 8002522:	4b41      	ldr	r3, [pc, #260]	@ (8002628 <main+0x9c0>)
 8002524:	9300      	str	r3, [sp, #0]
 8002526:	2311      	movs	r3, #17
 8002528:	223f      	movs	r2, #63	@ 0x3f
 800252a:	2146      	movs	r1, #70	@ 0x46
 800252c:	205f      	movs	r0, #95	@ 0x5f
 800252e:	f7ff f919 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(165, 70, 63, 17, SELECTOROFFJ1);
 8002532:	4b3d      	ldr	r3, [pc, #244]	@ (8002628 <main+0x9c0>)
 8002534:	9300      	str	r3, [sp, #0]
 8002536:	2311      	movs	r3, #17
 8002538:	223f      	movs	r2, #63	@ 0x3f
 800253a:	2146      	movs	r1, #70	@ 0x46
 800253c:	20a5      	movs	r0, #165	@ 0xa5
 800253e:	f7ff f911 	bl	8001764 <LCD_Bitmap>
					LCD_Bitmap(235, 70, 63, 17, SELECTOROFFJ1);
 8002542:	4b39      	ldr	r3, [pc, #228]	@ (8002628 <main+0x9c0>)
 8002544:	9300      	str	r3, [sp, #0]
 8002546:	2311      	movs	r3, #17
 8002548:	223f      	movs	r2, #63	@ 0x3f
 800254a:	2146      	movs	r1, #70	@ 0x46
 800254c:	20eb      	movs	r0, #235	@ 0xeb
 800254e:	f7ff f909 	bl	8001764 <LCD_Bitmap>

					//80+69-18 REFERENCIA PERSONAJE 1 (Poner la misma coordenada en x que SELECTOROFF del personaje)

					LCD_Bitmap(25, 70, 63, 17, SELECTORONJ1);
 8002552:	4b36      	ldr	r3, [pc, #216]	@ (800262c <main+0x9c4>)
 8002554:	9300      	str	r3, [sp, #0]
 8002556:	2311      	movs	r3, #17
 8002558:	223f      	movs	r2, #63	@ 0x3f
 800255a:	2146      	movs	r1, #70	@ 0x46
 800255c:	2019      	movs	r0, #25
 800255e:	f7ff f901 	bl	8001764 <LCD_Bitmap>

					//80+69-18 REFERENCIA PERSONAJE 4
					LCD_Bitmap(235, 131, 63, 17, SELECTORONJ2);
 8002562:	4b33      	ldr	r3, [pc, #204]	@ (8002630 <main+0x9c8>)
 8002564:	9300      	str	r3, [sp, #0]
 8002566:	2311      	movs	r3, #17
 8002568:	223f      	movs	r2, #63	@ 0x3f
 800256a:	2183      	movs	r1, #131	@ 0x83
 800256c:	20eb      	movs	r0, #235	@ 0xeb
 800256e:	f7ff f8f9 	bl	8001764 <LCD_Bitmap>

					LCD_Bitmap(60, 175, 200, 12, AVISOJUGADOR);
 8002572:	4b30      	ldr	r3, [pc, #192]	@ (8002634 <main+0x9cc>)
 8002574:	9300      	str	r3, [sp, #0]
 8002576:	230c      	movs	r3, #12
 8002578:	22c8      	movs	r2, #200	@ 0xc8
 800257a:	21af      	movs	r1, #175	@ 0xaf
 800257c:	203c      	movs	r0, #60	@ 0x3c
 800257e:	f7ff f8f1 	bl	8001764 <LCD_Bitmap>
					pintjueg = 0;
 8002582:	4b23      	ldr	r3, [pc, #140]	@ (8002610 <main+0x9a8>)
 8002584:	2200      	movs	r2, #0
 8002586:	601a      	str	r2, [r3, #0]
				}

				break;
 8002588:	e020      	b.n	80025cc <main+0x964>
			case 2:
				if(pintjueg == 1){
 800258a:	4b21      	ldr	r3, [pc, #132]	@ (8002610 <main+0x9a8>)
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	2b01      	cmp	r3, #1
 8002590:	d11f      	bne.n	80025d2 <main+0x96a>
					LCD_Clear(0xFFFF);
 8002592:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8002596:	f7fe ff5b 	bl	8001450 <LCD_Clear>
					sprintf(Pant, "Colisiones: %d", colision);
 800259a:	4b27      	ldr	r3, [pc, #156]	@ (8002638 <main+0x9d0>)
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	461a      	mov	r2, r3
 80025a0:	4926      	ldr	r1, [pc, #152]	@ (800263c <main+0x9d4>)
 80025a2:	4827      	ldr	r0, [pc, #156]	@ (8002640 <main+0x9d8>)
 80025a4:	f004 f8f6 	bl	8006794 <siprintf>
					LCD_Print(Pant, 20, 100, 1, 0x001F, 0xEDCC);
 80025a8:	f64e 53cc 	movw	r3, #60876	@ 0xedcc
 80025ac:	9301      	str	r3, [sp, #4]
 80025ae:	231f      	movs	r3, #31
 80025b0:	9300      	str	r3, [sp, #0]
 80025b2:	2301      	movs	r3, #1
 80025b4:	2264      	movs	r2, #100	@ 0x64
 80025b6:	2114      	movs	r1, #20
 80025b8:	4821      	ldr	r0, [pc, #132]	@ (8002640 <main+0x9d8>)
 80025ba:	f7fe ffe7 	bl	800158c <LCD_Print>
					pintjueg = 0;
 80025be:	4b14      	ldr	r3, [pc, #80]	@ (8002610 <main+0x9a8>)
 80025c0:	2200      	movs	r2, #0
 80025c2:	601a      	str	r2, [r3, #0]
				}

				break;
 80025c4:	e005      	b.n	80025d2 <main+0x96a>
				break;
 80025c6:	bf00      	nop
 80025c8:	f7ff bb7d 	b.w	8001cc6 <main+0x5e>
				break;
 80025cc:	bf00      	nop
 80025ce:	f7ff bb7a 	b.w	8001cc6 <main+0x5e>
				break;
 80025d2:	bf00      	nop
		if(received_char == 'i' && unico == 1){
 80025d4:	f7ff bb77 	b.w	8001cc6 <main+0x5e>
 80025d8:	ea0ea0eb 	.word	0xea0ea0eb
 80025dc:	55555556 	.word	0x55555556
 80025e0:	20013724 	.word	0x20013724
 80025e4:	20013728 	.word	0x20013728
 80025e8:	0800acc0 	.word	0x0800acc0
 80025ec:	200139c4 	.word	0x200139c4
 80025f0:	08008a18 	.word	0x08008a18
 80025f4:	200139a4 	.word	0x200139a4
 80025f8:	080079a0 	.word	0x080079a0
 80025fc:	200139b0 	.word	0x200139b0
 8002600:	200139c8 	.word	0x200139c8
 8002604:	200139b8 	.word	0x200139b8
 8002608:	200139bc 	.word	0x200139bc
 800260c:	08009918 	.word	0x08009918
 8002610:	200139a8 	.word	0x200139a8
 8002614:	0800ccd8 	.word	0x0800ccd8
 8002618:	0800ff90 	.word	0x0800ff90
 800261c:	080109f4 	.word	0x080109f4
 8002620:	08011458 	.word	0x08011458
 8002624:	08011ebc 	.word	0x08011ebc
 8002628:	08012920 	.word	0x08012920
 800262c:	0800eed0 	.word	0x0800eed0
 8002630:	0800f730 	.word	0x0800f730
 8002634:	08013180 	.word	0x08013180
 8002638:	200139b4 	.word	0x200139b4
 800263c:	080079b4 	.word	0x080079b4
 8002640:	200139cc 	.word	0x200139cc

08002644 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002644:	b580      	push	{r7, lr}
 8002646:	b094      	sub	sp, #80	@ 0x50
 8002648:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800264a:	f107 031c 	add.w	r3, r7, #28
 800264e:	2234      	movs	r2, #52	@ 0x34
 8002650:	2100      	movs	r1, #0
 8002652:	4618      	mov	r0, r3
 8002654:	f004 f901 	bl	800685a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002658:	f107 0308 	add.w	r3, r7, #8
 800265c:	2200      	movs	r2, #0
 800265e:	601a      	str	r2, [r3, #0]
 8002660:	605a      	str	r2, [r3, #4]
 8002662:	609a      	str	r2, [r3, #8]
 8002664:	60da      	str	r2, [r3, #12]
 8002666:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002668:	2300      	movs	r3, #0
 800266a:	607b      	str	r3, [r7, #4]
 800266c:	4b29      	ldr	r3, [pc, #164]	@ (8002714 <SystemClock_Config+0xd0>)
 800266e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002670:	4a28      	ldr	r2, [pc, #160]	@ (8002714 <SystemClock_Config+0xd0>)
 8002672:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002676:	6413      	str	r3, [r2, #64]	@ 0x40
 8002678:	4b26      	ldr	r3, [pc, #152]	@ (8002714 <SystemClock_Config+0xd0>)
 800267a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800267c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002680:	607b      	str	r3, [r7, #4]
 8002682:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8002684:	2300      	movs	r3, #0
 8002686:	603b      	str	r3, [r7, #0]
 8002688:	4b23      	ldr	r3, [pc, #140]	@ (8002718 <SystemClock_Config+0xd4>)
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8002690:	4a21      	ldr	r2, [pc, #132]	@ (8002718 <SystemClock_Config+0xd4>)
 8002692:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002696:	6013      	str	r3, [r2, #0]
 8002698:	4b1f      	ldr	r3, [pc, #124]	@ (8002718 <SystemClock_Config+0xd4>)
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80026a0:	603b      	str	r3, [r7, #0]
 80026a2:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80026a4:	2302      	movs	r3, #2
 80026a6:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80026a8:	2301      	movs	r3, #1
 80026aa:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80026ac:	2310      	movs	r3, #16
 80026ae:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80026b0:	2302      	movs	r3, #2
 80026b2:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80026b4:	2300      	movs	r3, #0
 80026b6:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 80026b8:	2308      	movs	r3, #8
 80026ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 80026bc:	2350      	movs	r3, #80	@ 0x50
 80026be:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80026c0:	2302      	movs	r3, #2
 80026c2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80026c4:	2302      	movs	r3, #2
 80026c6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80026c8:	2302      	movs	r3, #2
 80026ca:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80026cc:	f107 031c 	add.w	r3, r7, #28
 80026d0:	4618      	mov	r0, r3
 80026d2:	f001 fe79 	bl	80043c8 <HAL_RCC_OscConfig>
 80026d6:	4603      	mov	r3, r0
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d001      	beq.n	80026e0 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80026dc:	f000 f978 	bl	80029d0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80026e0:	230f      	movs	r3, #15
 80026e2:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80026e4:	2302      	movs	r3, #2
 80026e6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80026e8:	2300      	movs	r3, #0
 80026ea:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80026ec:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80026f0:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80026f2:	2300      	movs	r3, #0
 80026f4:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80026f6:	f107 0308 	add.w	r3, r7, #8
 80026fa:	2102      	movs	r1, #2
 80026fc:	4618      	mov	r0, r3
 80026fe:	f001 fb9f 	bl	8003e40 <HAL_RCC_ClockConfig>
 8002702:	4603      	mov	r3, r0
 8002704:	2b00      	cmp	r3, #0
 8002706:	d001      	beq.n	800270c <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8002708:	f000 f962 	bl	80029d0 <Error_Handler>
  }
}
 800270c:	bf00      	nop
 800270e:	3750      	adds	r7, #80	@ 0x50
 8002710:	46bd      	mov	sp, r7
 8002712:	bd80      	pop	{r7, pc}
 8002714:	40023800 	.word	0x40023800
 8002718:	40007000 	.word	0x40007000

0800271c <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 800271c:	b580      	push	{r7, lr}
 800271e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8002720:	4b17      	ldr	r3, [pc, #92]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002722:	4a18      	ldr	r2, [pc, #96]	@ (8002784 <MX_SPI1_Init+0x68>)
 8002724:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002726:	4b16      	ldr	r3, [pc, #88]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002728:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800272c:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800272e:	4b14      	ldr	r3, [pc, #80]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002730:	2200      	movs	r2, #0
 8002732:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002734:	4b12      	ldr	r3, [pc, #72]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002736:	2200      	movs	r2, #0
 8002738:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800273a:	4b11      	ldr	r3, [pc, #68]	@ (8002780 <MX_SPI1_Init+0x64>)
 800273c:	2200      	movs	r2, #0
 800273e:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002740:	4b0f      	ldr	r3, [pc, #60]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002742:	2200      	movs	r2, #0
 8002744:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002746:	4b0e      	ldr	r3, [pc, #56]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002748:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800274c:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800274e:	4b0c      	ldr	r3, [pc, #48]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002750:	2200      	movs	r2, #0
 8002752:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002754:	4b0a      	ldr	r3, [pc, #40]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002756:	2200      	movs	r2, #0
 8002758:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800275a:	4b09      	ldr	r3, [pc, #36]	@ (8002780 <MX_SPI1_Init+0x64>)
 800275c:	2200      	movs	r2, #0
 800275e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002760:	4b07      	ldr	r3, [pc, #28]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002762:	2200      	movs	r2, #0
 8002764:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8002766:	4b06      	ldr	r3, [pc, #24]	@ (8002780 <MX_SPI1_Init+0x64>)
 8002768:	220a      	movs	r2, #10
 800276a:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800276c:	4804      	ldr	r0, [pc, #16]	@ (8002780 <MX_SPI1_Init+0x64>)
 800276e:	f002 f8c9 	bl	8004904 <HAL_SPI_Init>
 8002772:	4603      	mov	r3, r0
 8002774:	2b00      	cmp	r3, #0
 8002776:	d001      	beq.n	800277c <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8002778:	f000 f92a 	bl	80029d0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800277c:	bf00      	nop
 800277e:	bd80      	pop	{r7, pc}
 8002780:	200137dc 	.word	0x200137dc
 8002784:	40013000 	.word	0x40013000

08002788 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 800278c:	4b11      	ldr	r3, [pc, #68]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 800278e:	4a12      	ldr	r2, [pc, #72]	@ (80027d8 <MX_USART3_UART_Init+0x50>)
 8002790:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 8002792:	4b10      	ldr	r3, [pc, #64]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 8002794:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8002798:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800279a:	4b0e      	ldr	r3, [pc, #56]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 800279c:	2200      	movs	r2, #0
 800279e:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80027a0:	4b0c      	ldr	r3, [pc, #48]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80027a6:	4b0b      	ldr	r3, [pc, #44]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80027ac:	4b09      	ldr	r3, [pc, #36]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 80027ae:	220c      	movs	r2, #12
 80027b0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80027b2:	4b08      	ldr	r3, [pc, #32]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 80027b4:	2200      	movs	r2, #0
 80027b6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80027b8:	4b06      	ldr	r3, [pc, #24]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 80027ba:	2200      	movs	r2, #0
 80027bc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80027be:	4805      	ldr	r0, [pc, #20]	@ (80027d4 <MX_USART3_UART_Init+0x4c>)
 80027c0:	f002 fcf2 	bl	80051a8 <HAL_UART_Init>
 80027c4:	4603      	mov	r3, r0
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d001      	beq.n	80027ce <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80027ca:	f000 f901 	bl	80029d0 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80027ce:	bf00      	nop
 80027d0:	bd80      	pop	{r7, pc}
 80027d2:	bf00      	nop
 80027d4:	20013894 	.word	0x20013894
 80027d8:	40004800 	.word	0x40004800

080027dc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80027dc:	b580      	push	{r7, lr}
 80027de:	b082      	sub	sp, #8
 80027e0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80027e2:	2300      	movs	r3, #0
 80027e4:	607b      	str	r3, [r7, #4]
 80027e6:	4b1b      	ldr	r3, [pc, #108]	@ (8002854 <MX_DMA_Init+0x78>)
 80027e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027ea:	4a1a      	ldr	r2, [pc, #104]	@ (8002854 <MX_DMA_Init+0x78>)
 80027ec:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80027f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80027f2:	4b18      	ldr	r3, [pc, #96]	@ (8002854 <MX_DMA_Init+0x78>)
 80027f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027f6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80027fa:	607b      	str	r3, [r7, #4]
 80027fc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 80027fe:	2300      	movs	r3, #0
 8002800:	603b      	str	r3, [r7, #0]
 8002802:	4b14      	ldr	r3, [pc, #80]	@ (8002854 <MX_DMA_Init+0x78>)
 8002804:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002806:	4a13      	ldr	r2, [pc, #76]	@ (8002854 <MX_DMA_Init+0x78>)
 8002808:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800280c:	6313      	str	r3, [r2, #48]	@ 0x30
 800280e:	4b11      	ldr	r3, [pc, #68]	@ (8002854 <MX_DMA_Init+0x78>)
 8002810:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002812:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002816:	603b      	str	r3, [r7, #0]
 8002818:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 800281a:	2200      	movs	r2, #0
 800281c:	2100      	movs	r1, #0
 800281e:	200c      	movs	r0, #12
 8002820:	f000 fd1b 	bl	800325a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 8002824:	200c      	movs	r0, #12
 8002826:	f000 fd34 	bl	8003292 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 800282a:	2200      	movs	r2, #0
 800282c:	2100      	movs	r1, #0
 800282e:	200e      	movs	r0, #14
 8002830:	f000 fd13 	bl	800325a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 8002834:	200e      	movs	r0, #14
 8002836:	f000 fd2c 	bl	8003292 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800283a:	2200      	movs	r2, #0
 800283c:	2100      	movs	r1, #0
 800283e:	2038      	movs	r0, #56	@ 0x38
 8002840:	f000 fd0b 	bl	800325a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8002844:	2038      	movs	r0, #56	@ 0x38
 8002846:	f000 fd24 	bl	8003292 <HAL_NVIC_EnableIRQ>

}
 800284a:	bf00      	nop
 800284c:	3708      	adds	r7, #8
 800284e:	46bd      	mov	sp, r7
 8002850:	bd80      	pop	{r7, pc}
 8002852:	bf00      	nop
 8002854:	40023800 	.word	0x40023800

08002858 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002858:	b580      	push	{r7, lr}
 800285a:	b08a      	sub	sp, #40	@ 0x28
 800285c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800285e:	f107 0314 	add.w	r3, r7, #20
 8002862:	2200      	movs	r2, #0
 8002864:	601a      	str	r2, [r3, #0]
 8002866:	605a      	str	r2, [r3, #4]
 8002868:	609a      	str	r2, [r3, #8]
 800286a:	60da      	str	r2, [r3, #12]
 800286c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800286e:	2300      	movs	r3, #0
 8002870:	613b      	str	r3, [r7, #16]
 8002872:	4b45      	ldr	r3, [pc, #276]	@ (8002988 <MX_GPIO_Init+0x130>)
 8002874:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002876:	4a44      	ldr	r2, [pc, #272]	@ (8002988 <MX_GPIO_Init+0x130>)
 8002878:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800287c:	6313      	str	r3, [r2, #48]	@ 0x30
 800287e:	4b42      	ldr	r3, [pc, #264]	@ (8002988 <MX_GPIO_Init+0x130>)
 8002880:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002882:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002886:	613b      	str	r3, [r7, #16]
 8002888:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800288a:	2300      	movs	r3, #0
 800288c:	60fb      	str	r3, [r7, #12]
 800288e:	4b3e      	ldr	r3, [pc, #248]	@ (8002988 <MX_GPIO_Init+0x130>)
 8002890:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002892:	4a3d      	ldr	r2, [pc, #244]	@ (8002988 <MX_GPIO_Init+0x130>)
 8002894:	f043 0304 	orr.w	r3, r3, #4
 8002898:	6313      	str	r3, [r2, #48]	@ 0x30
 800289a:	4b3b      	ldr	r3, [pc, #236]	@ (8002988 <MX_GPIO_Init+0x130>)
 800289c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800289e:	f003 0304 	and.w	r3, r3, #4
 80028a2:	60fb      	str	r3, [r7, #12]
 80028a4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80028a6:	2300      	movs	r3, #0
 80028a8:	60bb      	str	r3, [r7, #8]
 80028aa:	4b37      	ldr	r3, [pc, #220]	@ (8002988 <MX_GPIO_Init+0x130>)
 80028ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028ae:	4a36      	ldr	r2, [pc, #216]	@ (8002988 <MX_GPIO_Init+0x130>)
 80028b0:	f043 0301 	orr.w	r3, r3, #1
 80028b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80028b6:	4b34      	ldr	r3, [pc, #208]	@ (8002988 <MX_GPIO_Init+0x130>)
 80028b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028ba:	f003 0301 	and.w	r3, r3, #1
 80028be:	60bb      	str	r3, [r7, #8]
 80028c0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80028c2:	2300      	movs	r3, #0
 80028c4:	607b      	str	r3, [r7, #4]
 80028c6:	4b30      	ldr	r3, [pc, #192]	@ (8002988 <MX_GPIO_Init+0x130>)
 80028c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028ca:	4a2f      	ldr	r2, [pc, #188]	@ (8002988 <MX_GPIO_Init+0x130>)
 80028cc:	f043 0302 	orr.w	r3, r3, #2
 80028d0:	6313      	str	r3, [r2, #48]	@ 0x30
 80028d2:	4b2d      	ldr	r3, [pc, #180]	@ (8002988 <MX_GPIO_Init+0x130>)
 80028d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028d6:	f003 0302 	and.w	r3, r3, #2
 80028da:	607b      	str	r3, [r7, #4]
 80028dc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin|LCD_D1_Pin, GPIO_PIN_RESET);
 80028de:	2200      	movs	r2, #0
 80028e0:	2182      	movs	r1, #130	@ 0x82
 80028e2:	482a      	ldr	r0, [pc, #168]	@ (800298c <MX_GPIO_Init+0x134>)
 80028e4:	f001 fa92 	bl	8003e0c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 80028e8:	2200      	movs	r2, #0
 80028ea:	f240 7113 	movw	r1, #1811	@ 0x713
 80028ee:	4828      	ldr	r0, [pc, #160]	@ (8002990 <MX_GPIO_Init+0x138>)
 80028f0:	f001 fa8c 	bl	8003e0c <HAL_GPIO_WritePin>
                          |LCD_D0_Pin|LCD_D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 80028f4:	2200      	movs	r2, #0
 80028f6:	f240 4139 	movw	r1, #1081	@ 0x439
 80028fa:	4826      	ldr	r0, [pc, #152]	@ (8002994 <MX_GPIO_Init+0x13c>)
 80028fc:	f001 fa86 	bl	8003e0c <HAL_GPIO_WritePin>
                          |LCD_D4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SD_SS_GPIO_Port, SD_SS_Pin, GPIO_PIN_SET);
 8002900:	2201      	movs	r2, #1
 8002902:	2140      	movs	r1, #64	@ 0x40
 8002904:	4823      	ldr	r0, [pc, #140]	@ (8002994 <MX_GPIO_Init+0x13c>)
 8002906:	f001 fa81 	bl	8003e0c <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_RST_Pin LCD_D1_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin|LCD_D1_Pin;
 800290a:	2382      	movs	r3, #130	@ 0x82
 800290c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800290e:	2301      	movs	r3, #1
 8002910:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002912:	2300      	movs	r3, #0
 8002914:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002916:	2302      	movs	r3, #2
 8002918:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800291a:	f107 0314 	add.w	r3, r7, #20
 800291e:	4619      	mov	r1, r3
 8002920:	481a      	ldr	r0, [pc, #104]	@ (800298c <MX_GPIO_Init+0x134>)
 8002922:	f001 f8df 	bl	8003ae4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_RD_Pin LCD_WR_Pin LCD_RS_Pin LCD_D7_Pin
                           LCD_D0_Pin LCD_D2_Pin */
  GPIO_InitStruct.Pin = LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8002926:	f240 7313 	movw	r3, #1811	@ 0x713
 800292a:	617b      	str	r3, [r7, #20]
                          |LCD_D0_Pin|LCD_D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800292c:	2301      	movs	r3, #1
 800292e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002930:	2300      	movs	r3, #0
 8002932:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002934:	2302      	movs	r3, #2
 8002936:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002938:	f107 0314 	add.w	r3, r7, #20
 800293c:	4619      	mov	r1, r3
 800293e:	4814      	ldr	r0, [pc, #80]	@ (8002990 <MX_GPIO_Init+0x138>)
 8002940:	f001 f8d0 	bl	8003ae4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_CS_Pin LCD_D6_Pin LCD_D3_Pin LCD_D5_Pin
                           LCD_D4_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 8002944:	f240 4339 	movw	r3, #1081	@ 0x439
 8002948:	617b      	str	r3, [r7, #20]
                          |LCD_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800294a:	2301      	movs	r3, #1
 800294c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800294e:	2300      	movs	r3, #0
 8002950:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002952:	2302      	movs	r3, #2
 8002954:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002956:	f107 0314 	add.w	r3, r7, #20
 800295a:	4619      	mov	r1, r3
 800295c:	480d      	ldr	r0, [pc, #52]	@ (8002994 <MX_GPIO_Init+0x13c>)
 800295e:	f001 f8c1 	bl	8003ae4 <HAL_GPIO_Init>

  /*Configure GPIO pin : SD_SS_Pin */
  GPIO_InitStruct.Pin = SD_SS_Pin;
 8002962:	2340      	movs	r3, #64	@ 0x40
 8002964:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002966:	2301      	movs	r3, #1
 8002968:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800296a:	2300      	movs	r3, #0
 800296c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 800296e:	2301      	movs	r3, #1
 8002970:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SD_SS_GPIO_Port, &GPIO_InitStruct);
 8002972:	f107 0314 	add.w	r3, r7, #20
 8002976:	4619      	mov	r1, r3
 8002978:	4806      	ldr	r0, [pc, #24]	@ (8002994 <MX_GPIO_Init+0x13c>)
 800297a:	f001 f8b3 	bl	8003ae4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800297e:	bf00      	nop
 8002980:	3728      	adds	r7, #40	@ 0x28
 8002982:	46bd      	mov	sp, r7
 8002984:	bd80      	pop	{r7, pc}
 8002986:	bf00      	nop
 8002988:	40023800 	.word	0x40023800
 800298c:	40020800 	.word	0x40020800
 8002990:	40020000 	.word	0x40020000
 8002994:	40020400 	.word	0x40020400

08002998 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002998:	b580      	push	{r7, lr}
 800299a:	b082      	sub	sp, #8
 800299c:	af00      	add	r7, sp, #0
 800299e:	6078      	str	r0, [r7, #4]

	//HAL_UART_Receive_IT(&huart3, data, 1);
	HAL_UART_Receive_DMA(&huart3, data, 1);
 80029a0:	2201      	movs	r2, #1
 80029a2:	4907      	ldr	r1, [pc, #28]	@ (80029c0 <HAL_UART_RxCpltCallback+0x28>)
 80029a4:	4807      	ldr	r0, [pc, #28]	@ (80029c4 <HAL_UART_RxCpltCallback+0x2c>)
 80029a6:	f002 fc4f 	bl	8005248 <HAL_UART_Receive_DMA>
	received_char = data[0];
 80029aa:	4b05      	ldr	r3, [pc, #20]	@ (80029c0 <HAL_UART_RxCpltCallback+0x28>)
 80029ac:	781a      	ldrb	r2, [r3, #0]
 80029ae:	4b06      	ldr	r3, [pc, #24]	@ (80029c8 <HAL_UART_RxCpltCallback+0x30>)
 80029b0:	701a      	strb	r2, [r3, #0]
	move1 = 1;
 80029b2:	4b06      	ldr	r3, [pc, #24]	@ (80029cc <HAL_UART_RxCpltCallback+0x34>)
 80029b4:	2201      	movs	r2, #1
 80029b6:	601a      	str	r2, [r3, #0]
}
 80029b8:	bf00      	nop
 80029ba:	3708      	adds	r7, #8
 80029bc:	46bd      	mov	sp, r7
 80029be:	bd80      	pop	{r7, pc}
 80029c0:	2001399c 	.word	0x2001399c
 80029c4:	20013894 	.word	0x20013894
 80029c8:	200139b0 	.word	0x200139b0
 80029cc:	200139c8 	.word	0x200139c8

080029d0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80029d0:	b480      	push	{r7}
 80029d2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80029d4:	b672      	cpsid	i
}
 80029d6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 80029d8:	bf00      	nop
 80029da:	e7fd      	b.n	80029d8 <Error_Handler+0x8>

080029dc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80029dc:	b480      	push	{r7}
 80029de:	b083      	sub	sp, #12
 80029e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80029e2:	2300      	movs	r3, #0
 80029e4:	607b      	str	r3, [r7, #4]
 80029e6:	4b10      	ldr	r3, [pc, #64]	@ (8002a28 <HAL_MspInit+0x4c>)
 80029e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029ea:	4a0f      	ldr	r2, [pc, #60]	@ (8002a28 <HAL_MspInit+0x4c>)
 80029ec:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80029f0:	6453      	str	r3, [r2, #68]	@ 0x44
 80029f2:	4b0d      	ldr	r3, [pc, #52]	@ (8002a28 <HAL_MspInit+0x4c>)
 80029f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029f6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80029fa:	607b      	str	r3, [r7, #4]
 80029fc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80029fe:	2300      	movs	r3, #0
 8002a00:	603b      	str	r3, [r7, #0]
 8002a02:	4b09      	ldr	r3, [pc, #36]	@ (8002a28 <HAL_MspInit+0x4c>)
 8002a04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a06:	4a08      	ldr	r2, [pc, #32]	@ (8002a28 <HAL_MspInit+0x4c>)
 8002a08:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002a0c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002a0e:	4b06      	ldr	r3, [pc, #24]	@ (8002a28 <HAL_MspInit+0x4c>)
 8002a10:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a12:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a16:	603b      	str	r3, [r7, #0]
 8002a18:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002a1a:	bf00      	nop
 8002a1c:	370c      	adds	r7, #12
 8002a1e:	46bd      	mov	sp, r7
 8002a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a24:	4770      	bx	lr
 8002a26:	bf00      	nop
 8002a28:	40023800 	.word	0x40023800

08002a2c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002a2c:	b580      	push	{r7, lr}
 8002a2e:	b08a      	sub	sp, #40	@ 0x28
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002a34:	f107 0314 	add.w	r3, r7, #20
 8002a38:	2200      	movs	r2, #0
 8002a3a:	601a      	str	r2, [r3, #0]
 8002a3c:	605a      	str	r2, [r3, #4]
 8002a3e:	609a      	str	r2, [r3, #8]
 8002a40:	60da      	str	r2, [r3, #12]
 8002a42:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	4a30      	ldr	r2, [pc, #192]	@ (8002b0c <HAL_SPI_MspInit+0xe0>)
 8002a4a:	4293      	cmp	r3, r2
 8002a4c:	d15a      	bne.n	8002b04 <HAL_SPI_MspInit+0xd8>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002a4e:	2300      	movs	r3, #0
 8002a50:	613b      	str	r3, [r7, #16]
 8002a52:	4b2f      	ldr	r3, [pc, #188]	@ (8002b10 <HAL_SPI_MspInit+0xe4>)
 8002a54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a56:	4a2e      	ldr	r2, [pc, #184]	@ (8002b10 <HAL_SPI_MspInit+0xe4>)
 8002a58:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002a5c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002a5e:	4b2c      	ldr	r3, [pc, #176]	@ (8002b10 <HAL_SPI_MspInit+0xe4>)
 8002a60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a62:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002a66:	613b      	str	r3, [r7, #16]
 8002a68:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a6a:	2300      	movs	r3, #0
 8002a6c:	60fb      	str	r3, [r7, #12]
 8002a6e:	4b28      	ldr	r3, [pc, #160]	@ (8002b10 <HAL_SPI_MspInit+0xe4>)
 8002a70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a72:	4a27      	ldr	r2, [pc, #156]	@ (8002b10 <HAL_SPI_MspInit+0xe4>)
 8002a74:	f043 0301 	orr.w	r3, r3, #1
 8002a78:	6313      	str	r3, [r2, #48]	@ 0x30
 8002a7a:	4b25      	ldr	r3, [pc, #148]	@ (8002b10 <HAL_SPI_MspInit+0xe4>)
 8002a7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a7e:	f003 0301 	and.w	r3, r3, #1
 8002a82:	60fb      	str	r3, [r7, #12]
 8002a84:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8002a86:	23e0      	movs	r3, #224	@ 0xe0
 8002a88:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a8a:	2302      	movs	r3, #2
 8002a8c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a8e:	2300      	movs	r3, #0
 8002a90:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a92:	2303      	movs	r3, #3
 8002a94:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8002a96:	2305      	movs	r3, #5
 8002a98:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a9a:	f107 0314 	add.w	r3, r7, #20
 8002a9e:	4619      	mov	r1, r3
 8002aa0:	481c      	ldr	r0, [pc, #112]	@ (8002b14 <HAL_SPI_MspInit+0xe8>)
 8002aa2:	f001 f81f 	bl	8003ae4 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_RX Init */
    hdma_spi1_rx.Instance = DMA2_Stream0;
 8002aa6:	4b1c      	ldr	r3, [pc, #112]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002aa8:	4a1c      	ldr	r2, [pc, #112]	@ (8002b1c <HAL_SPI_MspInit+0xf0>)
 8002aaa:	601a      	str	r2, [r3, #0]
    hdma_spi1_rx.Init.Channel = DMA_CHANNEL_3;
 8002aac:	4b1a      	ldr	r3, [pc, #104]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002aae:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 8002ab2:	605a      	str	r2, [r3, #4]
    hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002ab4:	4b18      	ldr	r3, [pc, #96]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002ab6:	2200      	movs	r2, #0
 8002ab8:	609a      	str	r2, [r3, #8]
    hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002aba:	4b17      	ldr	r3, [pc, #92]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002abc:	2200      	movs	r2, #0
 8002abe:	60da      	str	r2, [r3, #12]
    hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002ac0:	4b15      	ldr	r3, [pc, #84]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002ac2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002ac6:	611a      	str	r2, [r3, #16]
    hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002ac8:	4b13      	ldr	r3, [pc, #76]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002aca:	2200      	movs	r2, #0
 8002acc:	615a      	str	r2, [r3, #20]
    hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002ace:	4b12      	ldr	r3, [pc, #72]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002ad0:	2200      	movs	r2, #0
 8002ad2:	619a      	str	r2, [r3, #24]
    hdma_spi1_rx.Init.Mode = DMA_NORMAL;
 8002ad4:	4b10      	ldr	r3, [pc, #64]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002ad6:	2200      	movs	r2, #0
 8002ad8:	61da      	str	r2, [r3, #28]
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_MEDIUM;
 8002ada:	4b0f      	ldr	r3, [pc, #60]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002adc:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002ae0:	621a      	str	r2, [r3, #32]
    hdma_spi1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002ae2:	4b0d      	ldr	r3, [pc, #52]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 8002ae8:	480b      	ldr	r0, [pc, #44]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002aea:	f000 fbf9 	bl	80032e0 <HAL_DMA_Init>
 8002aee:	4603      	mov	r3, r0
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d001      	beq.n	8002af8 <HAL_SPI_MspInit+0xcc>
    {
      Error_Handler();
 8002af4:	f7ff ff6c 	bl	80029d0 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmarx,hdma_spi1_rx);
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	4a07      	ldr	r2, [pc, #28]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002afc:	64da      	str	r2, [r3, #76]	@ 0x4c
 8002afe:	4a06      	ldr	r2, [pc, #24]	@ (8002b18 <HAL_SPI_MspInit+0xec>)
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END SPI1_MspInit 1 */

  }

}
 8002b04:	bf00      	nop
 8002b06:	3728      	adds	r7, #40	@ 0x28
 8002b08:	46bd      	mov	sp, r7
 8002b0a:	bd80      	pop	{r7, pc}
 8002b0c:	40013000 	.word	0x40013000
 8002b10:	40023800 	.word	0x40023800
 8002b14:	40020000 	.word	0x40020000
 8002b18:	20013834 	.word	0x20013834
 8002b1c:	40026410 	.word	0x40026410

08002b20 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002b20:	b580      	push	{r7, lr}
 8002b22:	b08a      	sub	sp, #40	@ 0x28
 8002b24:	af00      	add	r7, sp, #0
 8002b26:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b28:	f107 0314 	add.w	r3, r7, #20
 8002b2c:	2200      	movs	r2, #0
 8002b2e:	601a      	str	r2, [r3, #0]
 8002b30:	605a      	str	r2, [r3, #4]
 8002b32:	609a      	str	r2, [r3, #8]
 8002b34:	60da      	str	r2, [r3, #12]
 8002b36:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART3)
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	4a4d      	ldr	r2, [pc, #308]	@ (8002c74 <HAL_UART_MspInit+0x154>)
 8002b3e:	4293      	cmp	r3, r2
 8002b40:	f040 8093 	bne.w	8002c6a <HAL_UART_MspInit+0x14a>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8002b44:	2300      	movs	r3, #0
 8002b46:	613b      	str	r3, [r7, #16]
 8002b48:	4b4b      	ldr	r3, [pc, #300]	@ (8002c78 <HAL_UART_MspInit+0x158>)
 8002b4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b4c:	4a4a      	ldr	r2, [pc, #296]	@ (8002c78 <HAL_UART_MspInit+0x158>)
 8002b4e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002b52:	6413      	str	r3, [r2, #64]	@ 0x40
 8002b54:	4b48      	ldr	r3, [pc, #288]	@ (8002c78 <HAL_UART_MspInit+0x158>)
 8002b56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b58:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002b5c:	613b      	str	r3, [r7, #16]
 8002b5e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002b60:	2300      	movs	r3, #0
 8002b62:	60fb      	str	r3, [r7, #12]
 8002b64:	4b44      	ldr	r3, [pc, #272]	@ (8002c78 <HAL_UART_MspInit+0x158>)
 8002b66:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b68:	4a43      	ldr	r2, [pc, #268]	@ (8002c78 <HAL_UART_MspInit+0x158>)
 8002b6a:	f043 0304 	orr.w	r3, r3, #4
 8002b6e:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b70:	4b41      	ldr	r3, [pc, #260]	@ (8002c78 <HAL_UART_MspInit+0x158>)
 8002b72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b74:	f003 0304 	and.w	r3, r3, #4
 8002b78:	60fb      	str	r3, [r7, #12]
 8002b7a:	68fb      	ldr	r3, [r7, #12]
    /**USART3 GPIO Configuration
    PC5     ------> USART3_RX
    PC10     ------> USART3_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_10;
 8002b7c:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8002b80:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b82:	2302      	movs	r3, #2
 8002b84:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b86:	2300      	movs	r3, #0
 8002b88:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002b8a:	2303      	movs	r3, #3
 8002b8c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8002b8e:	2307      	movs	r3, #7
 8002b90:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b92:	f107 0314 	add.w	r3, r7, #20
 8002b96:	4619      	mov	r1, r3
 8002b98:	4838      	ldr	r0, [pc, #224]	@ (8002c7c <HAL_UART_MspInit+0x15c>)
 8002b9a:	f000 ffa3 	bl	8003ae4 <HAL_GPIO_Init>

    /* USART3 DMA Init */
    /* USART3_RX Init */
    hdma_usart3_rx.Instance = DMA1_Stream1;
 8002b9e:	4b38      	ldr	r3, [pc, #224]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002ba0:	4a38      	ldr	r2, [pc, #224]	@ (8002c84 <HAL_UART_MspInit+0x164>)
 8002ba2:	601a      	str	r2, [r3, #0]
    hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 8002ba4:	4b36      	ldr	r3, [pc, #216]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002ba6:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002baa:	605a      	str	r2, [r3, #4]
    hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002bac:	4b34      	ldr	r3, [pc, #208]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bae:	2200      	movs	r2, #0
 8002bb0:	609a      	str	r2, [r3, #8]
    hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002bb2:	4b33      	ldr	r3, [pc, #204]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	60da      	str	r2, [r3, #12]
    hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002bb8:	4b31      	ldr	r3, [pc, #196]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bba:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002bbe:	611a      	str	r2, [r3, #16]
    hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002bc0:	4b2f      	ldr	r3, [pc, #188]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bc2:	2200      	movs	r2, #0
 8002bc4:	615a      	str	r2, [r3, #20]
    hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002bc6:	4b2e      	ldr	r3, [pc, #184]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bc8:	2200      	movs	r2, #0
 8002bca:	619a      	str	r2, [r3, #24]
    hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 8002bcc:	4b2c      	ldr	r3, [pc, #176]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bce:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002bd2:	61da      	str	r2, [r3, #28]
    hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 8002bd4:	4b2a      	ldr	r3, [pc, #168]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bd6:	2200      	movs	r2, #0
 8002bd8:	621a      	str	r2, [r3, #32]
    hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002bda:	4b29      	ldr	r3, [pc, #164]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bdc:	2200      	movs	r2, #0
 8002bde:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 8002be0:	4827      	ldr	r0, [pc, #156]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002be2:	f000 fb7d 	bl	80032e0 <HAL_DMA_Init>
 8002be6:	4603      	mov	r3, r0
 8002be8:	2b00      	cmp	r3, #0
 8002bea:	d001      	beq.n	8002bf0 <HAL_UART_MspInit+0xd0>
    {
      Error_Handler();
 8002bec:	f7ff fef0 	bl	80029d0 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	4a23      	ldr	r2, [pc, #140]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bf4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002bf6:	4a22      	ldr	r2, [pc, #136]	@ (8002c80 <HAL_UART_MspInit+0x160>)
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART3_TX Init */
    hdma_usart3_tx.Instance = DMA1_Stream3;
 8002bfc:	4b22      	ldr	r3, [pc, #136]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002bfe:	4a23      	ldr	r2, [pc, #140]	@ (8002c8c <HAL_UART_MspInit+0x16c>)
 8002c00:	601a      	str	r2, [r3, #0]
    hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 8002c02:	4b21      	ldr	r3, [pc, #132]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c04:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002c08:	605a      	str	r2, [r3, #4]
    hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002c0a:	4b1f      	ldr	r3, [pc, #124]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c0c:	2240      	movs	r2, #64	@ 0x40
 8002c0e:	609a      	str	r2, [r3, #8]
    hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002c10:	4b1d      	ldr	r3, [pc, #116]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c12:	2200      	movs	r2, #0
 8002c14:	60da      	str	r2, [r3, #12]
    hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002c16:	4b1c      	ldr	r3, [pc, #112]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c18:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002c1c:	611a      	str	r2, [r3, #16]
    hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002c1e:	4b1a      	ldr	r3, [pc, #104]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c20:	2200      	movs	r2, #0
 8002c22:	615a      	str	r2, [r3, #20]
    hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002c24:	4b18      	ldr	r3, [pc, #96]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c26:	2200      	movs	r2, #0
 8002c28:	619a      	str	r2, [r3, #24]
    hdma_usart3_tx.Init.Mode = DMA_CIRCULAR;
 8002c2a:	4b17      	ldr	r3, [pc, #92]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c2c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002c30:	61da      	str	r2, [r3, #28]
    hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 8002c32:	4b15      	ldr	r3, [pc, #84]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c34:	2200      	movs	r2, #0
 8002c36:	621a      	str	r2, [r3, #32]
    hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002c38:	4b13      	ldr	r3, [pc, #76]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c3a:	2200      	movs	r2, #0
 8002c3c:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 8002c3e:	4812      	ldr	r0, [pc, #72]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c40:	f000 fb4e 	bl	80032e0 <HAL_DMA_Init>
 8002c44:	4603      	mov	r3, r0
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d001      	beq.n	8002c4e <HAL_UART_MspInit+0x12e>
    {
      Error_Handler();
 8002c4a:	f7ff fec1 	bl	80029d0 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart3_tx);
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	4a0d      	ldr	r2, [pc, #52]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c52:	639a      	str	r2, [r3, #56]	@ 0x38
 8002c54:	4a0c      	ldr	r2, [pc, #48]	@ (8002c88 <HAL_UART_MspInit+0x168>)
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8002c5a:	2200      	movs	r2, #0
 8002c5c:	2100      	movs	r1, #0
 8002c5e:	2027      	movs	r0, #39	@ 0x27
 8002c60:	f000 fafb 	bl	800325a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8002c64:	2027      	movs	r0, #39	@ 0x27
 8002c66:	f000 fb14 	bl	8003292 <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART3_MspInit 1 */

  }

}
 8002c6a:	bf00      	nop
 8002c6c:	3728      	adds	r7, #40	@ 0x28
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd80      	pop	{r7, pc}
 8002c72:	bf00      	nop
 8002c74:	40004800 	.word	0x40004800
 8002c78:	40023800 	.word	0x40023800
 8002c7c:	40020800 	.word	0x40020800
 8002c80:	200138dc 	.word	0x200138dc
 8002c84:	40026028 	.word	0x40026028
 8002c88:	2001393c 	.word	0x2001393c
 8002c8c:	40026058 	.word	0x40026058

08002c90 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002c90:	b480      	push	{r7}
 8002c92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002c94:	bf00      	nop
 8002c96:	e7fd      	b.n	8002c94 <NMI_Handler+0x4>

08002c98 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002c98:	b480      	push	{r7}
 8002c9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002c9c:	bf00      	nop
 8002c9e:	e7fd      	b.n	8002c9c <HardFault_Handler+0x4>

08002ca0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002ca0:	b480      	push	{r7}
 8002ca2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002ca4:	bf00      	nop
 8002ca6:	e7fd      	b.n	8002ca4 <MemManage_Handler+0x4>

08002ca8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002ca8:	b480      	push	{r7}
 8002caa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002cac:	bf00      	nop
 8002cae:	e7fd      	b.n	8002cac <BusFault_Handler+0x4>

08002cb0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002cb0:	b480      	push	{r7}
 8002cb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002cb4:	bf00      	nop
 8002cb6:	e7fd      	b.n	8002cb4 <UsageFault_Handler+0x4>

08002cb8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002cb8:	b480      	push	{r7}
 8002cba:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002cbc:	bf00      	nop
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc4:	4770      	bx	lr

08002cc6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002cc6:	b480      	push	{r7}
 8002cc8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002cca:	bf00      	nop
 8002ccc:	46bd      	mov	sp, r7
 8002cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cd2:	4770      	bx	lr

08002cd4 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002cd4:	b480      	push	{r7}
 8002cd6:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002cd8:	bf00      	nop
 8002cda:	46bd      	mov	sp, r7
 8002cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce0:	4770      	bx	lr
	...

08002ce4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */
	if(Timer1 > 0){
 8002ce8:	4b0c      	ldr	r3, [pc, #48]	@ (8002d1c <SysTick_Handler+0x38>)
 8002cea:	881b      	ldrh	r3, [r3, #0]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d005      	beq.n	8002cfc <SysTick_Handler+0x18>
		Timer1--;
 8002cf0:	4b0a      	ldr	r3, [pc, #40]	@ (8002d1c <SysTick_Handler+0x38>)
 8002cf2:	881b      	ldrh	r3, [r3, #0]
 8002cf4:	3b01      	subs	r3, #1
 8002cf6:	b29a      	uxth	r2, r3
 8002cf8:	4b08      	ldr	r3, [pc, #32]	@ (8002d1c <SysTick_Handler+0x38>)
 8002cfa:	801a      	strh	r2, [r3, #0]
	}
	if(Timer2 > 0){
 8002cfc:	4b08      	ldr	r3, [pc, #32]	@ (8002d20 <SysTick_Handler+0x3c>)
 8002cfe:	881b      	ldrh	r3, [r3, #0]
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d005      	beq.n	8002d10 <SysTick_Handler+0x2c>
		Timer2--;
 8002d04:	4b06      	ldr	r3, [pc, #24]	@ (8002d20 <SysTick_Handler+0x3c>)
 8002d06:	881b      	ldrh	r3, [r3, #0]
 8002d08:	3b01      	subs	r3, #1
 8002d0a:	b29a      	uxth	r2, r3
 8002d0c:	4b04      	ldr	r3, [pc, #16]	@ (8002d20 <SysTick_Handler+0x3c>)
 8002d0e:	801a      	strh	r2, [r3, #0]
	}
  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002d10:	f000 f984 	bl	800301c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  HAL_SYSTICK_IRQHandler();
 8002d14:	f000 fad7 	bl	80032c6 <HAL_SYSTICK_IRQHandler>
  /* USER CODE END SysTick_IRQn 1 */
}
 8002d18:	bf00      	nop
 8002d1a:	bd80      	pop	{r7, pc}
 8002d1c:	200137d4 	.word	0x200137d4
 8002d20:	200137d6 	.word	0x200137d6

08002d24 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 8002d24:	b580      	push	{r7, lr}
 8002d26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_rx);
 8002d28:	4802      	ldr	r0, [pc, #8]	@ (8002d34 <DMA1_Stream1_IRQHandler+0x10>)
 8002d2a:	f000 fc71 	bl	8003610 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 8002d2e:	bf00      	nop
 8002d30:	bd80      	pop	{r7, pc}
 8002d32:	bf00      	nop
 8002d34:	200138dc 	.word	0x200138dc

08002d38 <DMA1_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA1 stream3 global interrupt.
  */
void DMA1_Stream3_IRQHandler(void)
{
 8002d38:	b580      	push	{r7, lr}
 8002d3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */

  /* USER CODE END DMA1_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart3_tx);
 8002d3c:	4802      	ldr	r0, [pc, #8]	@ (8002d48 <DMA1_Stream3_IRQHandler+0x10>)
 8002d3e:	f000 fc67 	bl	8003610 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */

  /* USER CODE END DMA1_Stream3_IRQn 1 */
}
 8002d42:	bf00      	nop
 8002d44:	bd80      	pop	{r7, pc}
 8002d46:	bf00      	nop
 8002d48:	2001393c 	.word	0x2001393c

08002d4c <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8002d50:	4802      	ldr	r0, [pc, #8]	@ (8002d5c <USART3_IRQHandler+0x10>)
 8002d52:	f002 fa9f 	bl	8005294 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8002d56:	bf00      	nop
 8002d58:	bd80      	pop	{r7, pc}
 8002d5a:	bf00      	nop
 8002d5c:	20013894 	.word	0x20013894

08002d60 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8002d60:	b580      	push	{r7, lr}
 8002d62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_rx);
 8002d64:	4802      	ldr	r0, [pc, #8]	@ (8002d70 <DMA2_Stream0_IRQHandler+0x10>)
 8002d66:	f000 fc53 	bl	8003610 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8002d6a:	bf00      	nop
 8002d6c:	bd80      	pop	{r7, pc}
 8002d6e:	bf00      	nop
 8002d70:	20013834 	.word	0x20013834

08002d74 <_getpid>:
 8002d74:	b480      	push	{r7}
 8002d76:	af00      	add	r7, sp, #0
 8002d78:	2301      	movs	r3, #1
 8002d7a:	4618      	mov	r0, r3
 8002d7c:	46bd      	mov	sp, r7
 8002d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d82:	4770      	bx	lr

08002d84 <_kill>:
 8002d84:	b580      	push	{r7, lr}
 8002d86:	b082      	sub	sp, #8
 8002d88:	af00      	add	r7, sp, #0
 8002d8a:	6078      	str	r0, [r7, #4]
 8002d8c:	6039      	str	r1, [r7, #0]
 8002d8e:	f003 fde1 	bl	8006954 <__errno>
 8002d92:	4603      	mov	r3, r0
 8002d94:	2216      	movs	r2, #22
 8002d96:	601a      	str	r2, [r3, #0]
 8002d98:	f04f 33ff 	mov.w	r3, #4294967295
 8002d9c:	4618      	mov	r0, r3
 8002d9e:	3708      	adds	r7, #8
 8002da0:	46bd      	mov	sp, r7
 8002da2:	bd80      	pop	{r7, pc}

08002da4 <_exit>:
 8002da4:	b580      	push	{r7, lr}
 8002da6:	b082      	sub	sp, #8
 8002da8:	af00      	add	r7, sp, #0
 8002daa:	6078      	str	r0, [r7, #4]
 8002dac:	f04f 31ff 	mov.w	r1, #4294967295
 8002db0:	6878      	ldr	r0, [r7, #4]
 8002db2:	f7ff ffe7 	bl	8002d84 <_kill>
 8002db6:	bf00      	nop
 8002db8:	e7fd      	b.n	8002db6 <_exit+0x12>

08002dba <_read>:
 8002dba:	b580      	push	{r7, lr}
 8002dbc:	b086      	sub	sp, #24
 8002dbe:	af00      	add	r7, sp, #0
 8002dc0:	60f8      	str	r0, [r7, #12]
 8002dc2:	60b9      	str	r1, [r7, #8]
 8002dc4:	607a      	str	r2, [r7, #4]
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	617b      	str	r3, [r7, #20]
 8002dca:	e00a      	b.n	8002de2 <_read+0x28>
 8002dcc:	f3af 8000 	nop.w
 8002dd0:	4601      	mov	r1, r0
 8002dd2:	68bb      	ldr	r3, [r7, #8]
 8002dd4:	1c5a      	adds	r2, r3, #1
 8002dd6:	60ba      	str	r2, [r7, #8]
 8002dd8:	b2ca      	uxtb	r2, r1
 8002dda:	701a      	strb	r2, [r3, #0]
 8002ddc:	697b      	ldr	r3, [r7, #20]
 8002dde:	3301      	adds	r3, #1
 8002de0:	617b      	str	r3, [r7, #20]
 8002de2:	697a      	ldr	r2, [r7, #20]
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	429a      	cmp	r2, r3
 8002de8:	dbf0      	blt.n	8002dcc <_read+0x12>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	4618      	mov	r0, r3
 8002dee:	3718      	adds	r7, #24
 8002df0:	46bd      	mov	sp, r7
 8002df2:	bd80      	pop	{r7, pc}

08002df4 <_write>:
 8002df4:	b580      	push	{r7, lr}
 8002df6:	b086      	sub	sp, #24
 8002df8:	af00      	add	r7, sp, #0
 8002dfa:	60f8      	str	r0, [r7, #12]
 8002dfc:	60b9      	str	r1, [r7, #8]
 8002dfe:	607a      	str	r2, [r7, #4]
 8002e00:	2300      	movs	r3, #0
 8002e02:	617b      	str	r3, [r7, #20]
 8002e04:	e009      	b.n	8002e1a <_write+0x26>
 8002e06:	68bb      	ldr	r3, [r7, #8]
 8002e08:	1c5a      	adds	r2, r3, #1
 8002e0a:	60ba      	str	r2, [r7, #8]
 8002e0c:	781b      	ldrb	r3, [r3, #0]
 8002e0e:	4618      	mov	r0, r3
 8002e10:	f3af 8000 	nop.w
 8002e14:	697b      	ldr	r3, [r7, #20]
 8002e16:	3301      	adds	r3, #1
 8002e18:	617b      	str	r3, [r7, #20]
 8002e1a:	697a      	ldr	r2, [r7, #20]
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	429a      	cmp	r2, r3
 8002e20:	dbf1      	blt.n	8002e06 <_write+0x12>
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	4618      	mov	r0, r3
 8002e26:	3718      	adds	r7, #24
 8002e28:	46bd      	mov	sp, r7
 8002e2a:	bd80      	pop	{r7, pc}

08002e2c <_close>:
 8002e2c:	b480      	push	{r7}
 8002e2e:	b083      	sub	sp, #12
 8002e30:	af00      	add	r7, sp, #0
 8002e32:	6078      	str	r0, [r7, #4]
 8002e34:	f04f 33ff 	mov.w	r3, #4294967295
 8002e38:	4618      	mov	r0, r3
 8002e3a:	370c      	adds	r7, #12
 8002e3c:	46bd      	mov	sp, r7
 8002e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e42:	4770      	bx	lr

08002e44 <_fstat>:
 8002e44:	b480      	push	{r7}
 8002e46:	b083      	sub	sp, #12
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	6078      	str	r0, [r7, #4]
 8002e4c:	6039      	str	r1, [r7, #0]
 8002e4e:	683b      	ldr	r3, [r7, #0]
 8002e50:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002e54:	605a      	str	r2, [r3, #4]
 8002e56:	2300      	movs	r3, #0
 8002e58:	4618      	mov	r0, r3
 8002e5a:	370c      	adds	r7, #12
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e62:	4770      	bx	lr

08002e64 <_isatty>:
 8002e64:	b480      	push	{r7}
 8002e66:	b083      	sub	sp, #12
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
 8002e6c:	2301      	movs	r3, #1
 8002e6e:	4618      	mov	r0, r3
 8002e70:	370c      	adds	r7, #12
 8002e72:	46bd      	mov	sp, r7
 8002e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e78:	4770      	bx	lr

08002e7a <_lseek>:
 8002e7a:	b480      	push	{r7}
 8002e7c:	b085      	sub	sp, #20
 8002e7e:	af00      	add	r7, sp, #0
 8002e80:	60f8      	str	r0, [r7, #12]
 8002e82:	60b9      	str	r1, [r7, #8]
 8002e84:	607a      	str	r2, [r7, #4]
 8002e86:	2300      	movs	r3, #0
 8002e88:	4618      	mov	r0, r3
 8002e8a:	3714      	adds	r7, #20
 8002e8c:	46bd      	mov	sp, r7
 8002e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e92:	4770      	bx	lr

08002e94 <_sbrk>:
 8002e94:	b580      	push	{r7, lr}
 8002e96:	b086      	sub	sp, #24
 8002e98:	af00      	add	r7, sp, #0
 8002e9a:	6078      	str	r0, [r7, #4]
 8002e9c:	4a14      	ldr	r2, [pc, #80]	@ (8002ef0 <_sbrk+0x5c>)
 8002e9e:	4b15      	ldr	r3, [pc, #84]	@ (8002ef4 <_sbrk+0x60>)
 8002ea0:	1ad3      	subs	r3, r2, r3
 8002ea2:	617b      	str	r3, [r7, #20]
 8002ea4:	697b      	ldr	r3, [r7, #20]
 8002ea6:	613b      	str	r3, [r7, #16]
 8002ea8:	4b13      	ldr	r3, [pc, #76]	@ (8002ef8 <_sbrk+0x64>)
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d102      	bne.n	8002eb6 <_sbrk+0x22>
 8002eb0:	4b11      	ldr	r3, [pc, #68]	@ (8002ef8 <_sbrk+0x64>)
 8002eb2:	4a12      	ldr	r2, [pc, #72]	@ (8002efc <_sbrk+0x68>)
 8002eb4:	601a      	str	r2, [r3, #0]
 8002eb6:	4b10      	ldr	r3, [pc, #64]	@ (8002ef8 <_sbrk+0x64>)
 8002eb8:	681a      	ldr	r2, [r3, #0]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	4413      	add	r3, r2
 8002ebe:	693a      	ldr	r2, [r7, #16]
 8002ec0:	429a      	cmp	r2, r3
 8002ec2:	d207      	bcs.n	8002ed4 <_sbrk+0x40>
 8002ec4:	f003 fd46 	bl	8006954 <__errno>
 8002ec8:	4603      	mov	r3, r0
 8002eca:	220c      	movs	r2, #12
 8002ecc:	601a      	str	r2, [r3, #0]
 8002ece:	f04f 33ff 	mov.w	r3, #4294967295
 8002ed2:	e009      	b.n	8002ee8 <_sbrk+0x54>
 8002ed4:	4b08      	ldr	r3, [pc, #32]	@ (8002ef8 <_sbrk+0x64>)
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	60fb      	str	r3, [r7, #12]
 8002eda:	4b07      	ldr	r3, [pc, #28]	@ (8002ef8 <_sbrk+0x64>)
 8002edc:	681a      	ldr	r2, [r3, #0]
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	4413      	add	r3, r2
 8002ee2:	4a05      	ldr	r2, [pc, #20]	@ (8002ef8 <_sbrk+0x64>)
 8002ee4:	6013      	str	r3, [r2, #0]
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	4618      	mov	r0, r3
 8002eea:	3718      	adds	r7, #24
 8002eec:	46bd      	mov	sp, r7
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	20020000 	.word	0x20020000
 8002ef4:	00000400 	.word	0x00000400
 8002ef8:	200139e0 	.word	0x200139e0
 8002efc:	20013b48 	.word	0x20013b48

08002f00 <SystemInit>:
 8002f00:	b480      	push	{r7}
 8002f02:	af00      	add	r7, sp, #0
 8002f04:	4b06      	ldr	r3, [pc, #24]	@ (8002f20 <SystemInit+0x20>)
 8002f06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002f0a:	4a05      	ldr	r2, [pc, #20]	@ (8002f20 <SystemInit+0x20>)
 8002f0c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002f10:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002f14:	bf00      	nop
 8002f16:	46bd      	mov	sp, r7
 8002f18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f1c:	4770      	bx	lr
 8002f1e:	bf00      	nop
 8002f20:	e000ed00 	.word	0xe000ed00

08002f24 <Reset_Handler>:
 8002f24:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002f5c <LoopFillZerobss+0xe>
 8002f28:	f7ff ffea 	bl	8002f00 <SystemInit>
 8002f2c:	480c      	ldr	r0, [pc, #48]	@ (8002f60 <LoopFillZerobss+0x12>)
 8002f2e:	490d      	ldr	r1, [pc, #52]	@ (8002f64 <LoopFillZerobss+0x16>)
 8002f30:	4a0d      	ldr	r2, [pc, #52]	@ (8002f68 <LoopFillZerobss+0x1a>)
 8002f32:	2300      	movs	r3, #0
 8002f34:	e002      	b.n	8002f3c <LoopCopyDataInit>

08002f36 <CopyDataInit>:
 8002f36:	58d4      	ldr	r4, [r2, r3]
 8002f38:	50c4      	str	r4, [r0, r3]
 8002f3a:	3304      	adds	r3, #4

08002f3c <LoopCopyDataInit>:
 8002f3c:	18c4      	adds	r4, r0, r3
 8002f3e:	428c      	cmp	r4, r1
 8002f40:	d3f9      	bcc.n	8002f36 <CopyDataInit>
 8002f42:	4a0a      	ldr	r2, [pc, #40]	@ (8002f6c <LoopFillZerobss+0x1e>)
 8002f44:	4c0a      	ldr	r4, [pc, #40]	@ (8002f70 <LoopFillZerobss+0x22>)
 8002f46:	2300      	movs	r3, #0
 8002f48:	e001      	b.n	8002f4e <LoopFillZerobss>

08002f4a <FillZerobss>:
 8002f4a:	6013      	str	r3, [r2, #0]
 8002f4c:	3204      	adds	r2, #4

08002f4e <LoopFillZerobss>:
 8002f4e:	42a2      	cmp	r2, r4
 8002f50:	d3fb      	bcc.n	8002f4a <FillZerobss>
 8002f52:	f003 fd05 	bl	8006960 <__libc_init_array>
 8002f56:	f7fe fe87 	bl	8001c68 <main>
 8002f5a:	4770      	bx	lr
 8002f5c:	20020000 	.word	0x20020000
 8002f60:	20000000 	.word	0x20000000
 8002f64:	200137b8 	.word	0x200137b8
 8002f68:	08014550 	.word	0x08014550
 8002f6c:	200137b8 	.word	0x200137b8
 8002f70:	20013b48 	.word	0x20013b48

08002f74 <ADC_IRQHandler>:
 8002f74:	e7fe      	b.n	8002f74 <ADC_IRQHandler>
	...

08002f78 <HAL_Init>:
 8002f78:	b580      	push	{r7, lr}
 8002f7a:	af00      	add	r7, sp, #0
 8002f7c:	4b0e      	ldr	r3, [pc, #56]	@ (8002fb8 <HAL_Init+0x40>)
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	4a0d      	ldr	r2, [pc, #52]	@ (8002fb8 <HAL_Init+0x40>)
 8002f82:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002f86:	6013      	str	r3, [r2, #0]
 8002f88:	4b0b      	ldr	r3, [pc, #44]	@ (8002fb8 <HAL_Init+0x40>)
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	4a0a      	ldr	r2, [pc, #40]	@ (8002fb8 <HAL_Init+0x40>)
 8002f8e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002f92:	6013      	str	r3, [r2, #0]
 8002f94:	4b08      	ldr	r3, [pc, #32]	@ (8002fb8 <HAL_Init+0x40>)
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	4a07      	ldr	r2, [pc, #28]	@ (8002fb8 <HAL_Init+0x40>)
 8002f9a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002f9e:	6013      	str	r3, [r2, #0]
 8002fa0:	2003      	movs	r0, #3
 8002fa2:	f000 f94f 	bl	8003244 <HAL_NVIC_SetPriorityGrouping>
 8002fa6:	200f      	movs	r0, #15
 8002fa8:	f000 f808 	bl	8002fbc <HAL_InitTick>
 8002fac:	f7ff fd16 	bl	80029dc <HAL_MspInit>
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	4618      	mov	r0, r3
 8002fb4:	bd80      	pop	{r7, pc}
 8002fb6:	bf00      	nop
 8002fb8:	40023c00 	.word	0x40023c00

08002fbc <HAL_InitTick>:
 8002fbc:	b580      	push	{r7, lr}
 8002fbe:	b082      	sub	sp, #8
 8002fc0:	af00      	add	r7, sp, #0
 8002fc2:	6078      	str	r0, [r7, #4]
 8002fc4:	4b12      	ldr	r3, [pc, #72]	@ (8003010 <HAL_InitTick+0x54>)
 8002fc6:	681a      	ldr	r2, [r3, #0]
 8002fc8:	4b12      	ldr	r3, [pc, #72]	@ (8003014 <HAL_InitTick+0x58>)
 8002fca:	781b      	ldrb	r3, [r3, #0]
 8002fcc:	4619      	mov	r1, r3
 8002fce:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002fd2:	fbb3 f3f1 	udiv	r3, r3, r1
 8002fd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8002fda:	4618      	mov	r0, r3
 8002fdc:	f000 f967 	bl	80032ae <HAL_SYSTICK_Config>
 8002fe0:	4603      	mov	r3, r0
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d001      	beq.n	8002fea <HAL_InitTick+0x2e>
 8002fe6:	2301      	movs	r3, #1
 8002fe8:	e00e      	b.n	8003008 <HAL_InitTick+0x4c>
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	2b0f      	cmp	r3, #15
 8002fee:	d80a      	bhi.n	8003006 <HAL_InitTick+0x4a>
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	6879      	ldr	r1, [r7, #4]
 8002ff4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ff8:	f000 f92f 	bl	800325a <HAL_NVIC_SetPriority>
 8002ffc:	4a06      	ldr	r2, [pc, #24]	@ (8003018 <HAL_InitTick+0x5c>)
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6013      	str	r3, [r2, #0]
 8003002:	2300      	movs	r3, #0
 8003004:	e000      	b.n	8003008 <HAL_InitTick+0x4c>
 8003006:	2301      	movs	r3, #1
 8003008:	4618      	mov	r0, r3
 800300a:	3708      	adds	r7, #8
 800300c:	46bd      	mov	sp, r7
 800300e:	bd80      	pop	{r7, pc}
 8003010:	2001373c 	.word	0x2001373c
 8003014:	20013744 	.word	0x20013744
 8003018:	20013740 	.word	0x20013740

0800301c <HAL_IncTick>:
 800301c:	b480      	push	{r7}
 800301e:	af00      	add	r7, sp, #0
 8003020:	4b06      	ldr	r3, [pc, #24]	@ (800303c <HAL_IncTick+0x20>)
 8003022:	781b      	ldrb	r3, [r3, #0]
 8003024:	461a      	mov	r2, r3
 8003026:	4b06      	ldr	r3, [pc, #24]	@ (8003040 <HAL_IncTick+0x24>)
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	4413      	add	r3, r2
 800302c:	4a04      	ldr	r2, [pc, #16]	@ (8003040 <HAL_IncTick+0x24>)
 800302e:	6013      	str	r3, [r2, #0]
 8003030:	bf00      	nop
 8003032:	46bd      	mov	sp, r7
 8003034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003038:	4770      	bx	lr
 800303a:	bf00      	nop
 800303c:	20013744 	.word	0x20013744
 8003040:	200139e4 	.word	0x200139e4

08003044 <HAL_GetTick>:
 8003044:	b480      	push	{r7}
 8003046:	af00      	add	r7, sp, #0
 8003048:	4b03      	ldr	r3, [pc, #12]	@ (8003058 <HAL_GetTick+0x14>)
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	4618      	mov	r0, r3
 800304e:	46bd      	mov	sp, r7
 8003050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003054:	4770      	bx	lr
 8003056:	bf00      	nop
 8003058:	200139e4 	.word	0x200139e4

0800305c <HAL_Delay>:
 800305c:	b580      	push	{r7, lr}
 800305e:	b084      	sub	sp, #16
 8003060:	af00      	add	r7, sp, #0
 8003062:	6078      	str	r0, [r7, #4]
 8003064:	f7ff ffee 	bl	8003044 <HAL_GetTick>
 8003068:	60b8      	str	r0, [r7, #8]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	60fb      	str	r3, [r7, #12]
 800306e:	68fb      	ldr	r3, [r7, #12]
 8003070:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003074:	d005      	beq.n	8003082 <HAL_Delay+0x26>
 8003076:	4b0a      	ldr	r3, [pc, #40]	@ (80030a0 <HAL_Delay+0x44>)
 8003078:	781b      	ldrb	r3, [r3, #0]
 800307a:	461a      	mov	r2, r3
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	4413      	add	r3, r2
 8003080:	60fb      	str	r3, [r7, #12]
 8003082:	bf00      	nop
 8003084:	f7ff ffde 	bl	8003044 <HAL_GetTick>
 8003088:	4602      	mov	r2, r0
 800308a:	68bb      	ldr	r3, [r7, #8]
 800308c:	1ad3      	subs	r3, r2, r3
 800308e:	68fa      	ldr	r2, [r7, #12]
 8003090:	429a      	cmp	r2, r3
 8003092:	d8f7      	bhi.n	8003084 <HAL_Delay+0x28>
 8003094:	bf00      	nop
 8003096:	bf00      	nop
 8003098:	3710      	adds	r7, #16
 800309a:	46bd      	mov	sp, r7
 800309c:	bd80      	pop	{r7, pc}
 800309e:	bf00      	nop
 80030a0:	20013744 	.word	0x20013744

080030a4 <__NVIC_SetPriorityGrouping>:
 80030a4:	b480      	push	{r7}
 80030a6:	b085      	sub	sp, #20
 80030a8:	af00      	add	r7, sp, #0
 80030aa:	6078      	str	r0, [r7, #4]
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	f003 0307 	and.w	r3, r3, #7
 80030b2:	60fb      	str	r3, [r7, #12]
 80030b4:	4b0c      	ldr	r3, [pc, #48]	@ (80030e8 <__NVIC_SetPriorityGrouping+0x44>)
 80030b6:	68db      	ldr	r3, [r3, #12]
 80030b8:	60bb      	str	r3, [r7, #8]
 80030ba:	68ba      	ldr	r2, [r7, #8]
 80030bc:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80030c0:	4013      	ands	r3, r2
 80030c2:	60bb      	str	r3, [r7, #8]
 80030c4:	68fb      	ldr	r3, [r7, #12]
 80030c6:	021a      	lsls	r2, r3, #8
 80030c8:	68bb      	ldr	r3, [r7, #8]
 80030ca:	4313      	orrs	r3, r2
 80030cc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80030d0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80030d4:	60bb      	str	r3, [r7, #8]
 80030d6:	4a04      	ldr	r2, [pc, #16]	@ (80030e8 <__NVIC_SetPriorityGrouping+0x44>)
 80030d8:	68bb      	ldr	r3, [r7, #8]
 80030da:	60d3      	str	r3, [r2, #12]
 80030dc:	bf00      	nop
 80030de:	3714      	adds	r7, #20
 80030e0:	46bd      	mov	sp, r7
 80030e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e6:	4770      	bx	lr
 80030e8:	e000ed00 	.word	0xe000ed00

080030ec <__NVIC_GetPriorityGrouping>:
 80030ec:	b480      	push	{r7}
 80030ee:	af00      	add	r7, sp, #0
 80030f0:	4b04      	ldr	r3, [pc, #16]	@ (8003104 <__NVIC_GetPriorityGrouping+0x18>)
 80030f2:	68db      	ldr	r3, [r3, #12]
 80030f4:	0a1b      	lsrs	r3, r3, #8
 80030f6:	f003 0307 	and.w	r3, r3, #7
 80030fa:	4618      	mov	r0, r3
 80030fc:	46bd      	mov	sp, r7
 80030fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003102:	4770      	bx	lr
 8003104:	e000ed00 	.word	0xe000ed00

08003108 <__NVIC_EnableIRQ>:
 8003108:	b480      	push	{r7}
 800310a:	b083      	sub	sp, #12
 800310c:	af00      	add	r7, sp, #0
 800310e:	4603      	mov	r3, r0
 8003110:	71fb      	strb	r3, [r7, #7]
 8003112:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003116:	2b00      	cmp	r3, #0
 8003118:	db0b      	blt.n	8003132 <__NVIC_EnableIRQ+0x2a>
 800311a:	79fb      	ldrb	r3, [r7, #7]
 800311c:	f003 021f 	and.w	r2, r3, #31
 8003120:	4907      	ldr	r1, [pc, #28]	@ (8003140 <__NVIC_EnableIRQ+0x38>)
 8003122:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003126:	095b      	lsrs	r3, r3, #5
 8003128:	2001      	movs	r0, #1
 800312a:	fa00 f202 	lsl.w	r2, r0, r2
 800312e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003132:	bf00      	nop
 8003134:	370c      	adds	r7, #12
 8003136:	46bd      	mov	sp, r7
 8003138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800313c:	4770      	bx	lr
 800313e:	bf00      	nop
 8003140:	e000e100 	.word	0xe000e100

08003144 <__NVIC_SetPriority>:
 8003144:	b480      	push	{r7}
 8003146:	b083      	sub	sp, #12
 8003148:	af00      	add	r7, sp, #0
 800314a:	4603      	mov	r3, r0
 800314c:	6039      	str	r1, [r7, #0]
 800314e:	71fb      	strb	r3, [r7, #7]
 8003150:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003154:	2b00      	cmp	r3, #0
 8003156:	db0a      	blt.n	800316e <__NVIC_SetPriority+0x2a>
 8003158:	683b      	ldr	r3, [r7, #0]
 800315a:	b2da      	uxtb	r2, r3
 800315c:	490c      	ldr	r1, [pc, #48]	@ (8003190 <__NVIC_SetPriority+0x4c>)
 800315e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003162:	0112      	lsls	r2, r2, #4
 8003164:	b2d2      	uxtb	r2, r2
 8003166:	440b      	add	r3, r1
 8003168:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800316c:	e00a      	b.n	8003184 <__NVIC_SetPriority+0x40>
 800316e:	683b      	ldr	r3, [r7, #0]
 8003170:	b2da      	uxtb	r2, r3
 8003172:	4908      	ldr	r1, [pc, #32]	@ (8003194 <__NVIC_SetPriority+0x50>)
 8003174:	79fb      	ldrb	r3, [r7, #7]
 8003176:	f003 030f 	and.w	r3, r3, #15
 800317a:	3b04      	subs	r3, #4
 800317c:	0112      	lsls	r2, r2, #4
 800317e:	b2d2      	uxtb	r2, r2
 8003180:	440b      	add	r3, r1
 8003182:	761a      	strb	r2, [r3, #24]
 8003184:	bf00      	nop
 8003186:	370c      	adds	r7, #12
 8003188:	46bd      	mov	sp, r7
 800318a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800318e:	4770      	bx	lr
 8003190:	e000e100 	.word	0xe000e100
 8003194:	e000ed00 	.word	0xe000ed00

08003198 <NVIC_EncodePriority>:
 8003198:	b480      	push	{r7}
 800319a:	b089      	sub	sp, #36	@ 0x24
 800319c:	af00      	add	r7, sp, #0
 800319e:	60f8      	str	r0, [r7, #12]
 80031a0:	60b9      	str	r1, [r7, #8]
 80031a2:	607a      	str	r2, [r7, #4]
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	f003 0307 	and.w	r3, r3, #7
 80031aa:	61fb      	str	r3, [r7, #28]
 80031ac:	69fb      	ldr	r3, [r7, #28]
 80031ae:	f1c3 0307 	rsb	r3, r3, #7
 80031b2:	2b04      	cmp	r3, #4
 80031b4:	bf28      	it	cs
 80031b6:	2304      	movcs	r3, #4
 80031b8:	61bb      	str	r3, [r7, #24]
 80031ba:	69fb      	ldr	r3, [r7, #28]
 80031bc:	3304      	adds	r3, #4
 80031be:	2b06      	cmp	r3, #6
 80031c0:	d902      	bls.n	80031c8 <NVIC_EncodePriority+0x30>
 80031c2:	69fb      	ldr	r3, [r7, #28]
 80031c4:	3b03      	subs	r3, #3
 80031c6:	e000      	b.n	80031ca <NVIC_EncodePriority+0x32>
 80031c8:	2300      	movs	r3, #0
 80031ca:	617b      	str	r3, [r7, #20]
 80031cc:	f04f 32ff 	mov.w	r2, #4294967295
 80031d0:	69bb      	ldr	r3, [r7, #24]
 80031d2:	fa02 f303 	lsl.w	r3, r2, r3
 80031d6:	43da      	mvns	r2, r3
 80031d8:	68bb      	ldr	r3, [r7, #8]
 80031da:	401a      	ands	r2, r3
 80031dc:	697b      	ldr	r3, [r7, #20]
 80031de:	409a      	lsls	r2, r3
 80031e0:	f04f 31ff 	mov.w	r1, #4294967295
 80031e4:	697b      	ldr	r3, [r7, #20]
 80031e6:	fa01 f303 	lsl.w	r3, r1, r3
 80031ea:	43d9      	mvns	r1, r3
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	400b      	ands	r3, r1
 80031f0:	4313      	orrs	r3, r2
 80031f2:	4618      	mov	r0, r3
 80031f4:	3724      	adds	r7, #36	@ 0x24
 80031f6:	46bd      	mov	sp, r7
 80031f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fc:	4770      	bx	lr
	...

08003200 <SysTick_Config>:
 8003200:	b580      	push	{r7, lr}
 8003202:	b082      	sub	sp, #8
 8003204:	af00      	add	r7, sp, #0
 8003206:	6078      	str	r0, [r7, #4]
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	3b01      	subs	r3, #1
 800320c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003210:	d301      	bcc.n	8003216 <SysTick_Config+0x16>
 8003212:	2301      	movs	r3, #1
 8003214:	e00f      	b.n	8003236 <SysTick_Config+0x36>
 8003216:	4a0a      	ldr	r2, [pc, #40]	@ (8003240 <SysTick_Config+0x40>)
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	3b01      	subs	r3, #1
 800321c:	6053      	str	r3, [r2, #4]
 800321e:	210f      	movs	r1, #15
 8003220:	f04f 30ff 	mov.w	r0, #4294967295
 8003224:	f7ff ff8e 	bl	8003144 <__NVIC_SetPriority>
 8003228:	4b05      	ldr	r3, [pc, #20]	@ (8003240 <SysTick_Config+0x40>)
 800322a:	2200      	movs	r2, #0
 800322c:	609a      	str	r2, [r3, #8]
 800322e:	4b04      	ldr	r3, [pc, #16]	@ (8003240 <SysTick_Config+0x40>)
 8003230:	2207      	movs	r2, #7
 8003232:	601a      	str	r2, [r3, #0]
 8003234:	2300      	movs	r3, #0
 8003236:	4618      	mov	r0, r3
 8003238:	3708      	adds	r7, #8
 800323a:	46bd      	mov	sp, r7
 800323c:	bd80      	pop	{r7, pc}
 800323e:	bf00      	nop
 8003240:	e000e010 	.word	0xe000e010

08003244 <HAL_NVIC_SetPriorityGrouping>:
 8003244:	b580      	push	{r7, lr}
 8003246:	b082      	sub	sp, #8
 8003248:	af00      	add	r7, sp, #0
 800324a:	6078      	str	r0, [r7, #4]
 800324c:	6878      	ldr	r0, [r7, #4]
 800324e:	f7ff ff29 	bl	80030a4 <__NVIC_SetPriorityGrouping>
 8003252:	bf00      	nop
 8003254:	3708      	adds	r7, #8
 8003256:	46bd      	mov	sp, r7
 8003258:	bd80      	pop	{r7, pc}

0800325a <HAL_NVIC_SetPriority>:
 800325a:	b580      	push	{r7, lr}
 800325c:	b086      	sub	sp, #24
 800325e:	af00      	add	r7, sp, #0
 8003260:	4603      	mov	r3, r0
 8003262:	60b9      	str	r1, [r7, #8]
 8003264:	607a      	str	r2, [r7, #4]
 8003266:	73fb      	strb	r3, [r7, #15]
 8003268:	2300      	movs	r3, #0
 800326a:	617b      	str	r3, [r7, #20]
 800326c:	f7ff ff3e 	bl	80030ec <__NVIC_GetPriorityGrouping>
 8003270:	6178      	str	r0, [r7, #20]
 8003272:	687a      	ldr	r2, [r7, #4]
 8003274:	68b9      	ldr	r1, [r7, #8]
 8003276:	6978      	ldr	r0, [r7, #20]
 8003278:	f7ff ff8e 	bl	8003198 <NVIC_EncodePriority>
 800327c:	4602      	mov	r2, r0
 800327e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003282:	4611      	mov	r1, r2
 8003284:	4618      	mov	r0, r3
 8003286:	f7ff ff5d 	bl	8003144 <__NVIC_SetPriority>
 800328a:	bf00      	nop
 800328c:	3718      	adds	r7, #24
 800328e:	46bd      	mov	sp, r7
 8003290:	bd80      	pop	{r7, pc}

08003292 <HAL_NVIC_EnableIRQ>:
 8003292:	b580      	push	{r7, lr}
 8003294:	b082      	sub	sp, #8
 8003296:	af00      	add	r7, sp, #0
 8003298:	4603      	mov	r3, r0
 800329a:	71fb      	strb	r3, [r7, #7]
 800329c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032a0:	4618      	mov	r0, r3
 80032a2:	f7ff ff31 	bl	8003108 <__NVIC_EnableIRQ>
 80032a6:	bf00      	nop
 80032a8:	3708      	adds	r7, #8
 80032aa:	46bd      	mov	sp, r7
 80032ac:	bd80      	pop	{r7, pc}

080032ae <HAL_SYSTICK_Config>:
 80032ae:	b580      	push	{r7, lr}
 80032b0:	b082      	sub	sp, #8
 80032b2:	af00      	add	r7, sp, #0
 80032b4:	6078      	str	r0, [r7, #4]
 80032b6:	6878      	ldr	r0, [r7, #4]
 80032b8:	f7ff ffa2 	bl	8003200 <SysTick_Config>
 80032bc:	4603      	mov	r3, r0
 80032be:	4618      	mov	r0, r3
 80032c0:	3708      	adds	r7, #8
 80032c2:	46bd      	mov	sp, r7
 80032c4:	bd80      	pop	{r7, pc}

080032c6 <HAL_SYSTICK_IRQHandler>:
 80032c6:	b580      	push	{r7, lr}
 80032c8:	af00      	add	r7, sp, #0
 80032ca:	f000 f802 	bl	80032d2 <HAL_SYSTICK_Callback>
 80032ce:	bf00      	nop
 80032d0:	bd80      	pop	{r7, pc}

080032d2 <HAL_SYSTICK_Callback>:
 80032d2:	b480      	push	{r7}
 80032d4:	af00      	add	r7, sp, #0
 80032d6:	bf00      	nop
 80032d8:	46bd      	mov	sp, r7
 80032da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032de:	4770      	bx	lr

080032e0 <HAL_DMA_Init>:
 80032e0:	b580      	push	{r7, lr}
 80032e2:	b086      	sub	sp, #24
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	6078      	str	r0, [r7, #4]
 80032e8:	2300      	movs	r3, #0
 80032ea:	617b      	str	r3, [r7, #20]
 80032ec:	f7ff feaa 	bl	8003044 <HAL_GetTick>
 80032f0:	6138      	str	r0, [r7, #16]
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d101      	bne.n	80032fc <HAL_DMA_Init+0x1c>
 80032f8:	2301      	movs	r3, #1
 80032fa:	e099      	b.n	8003430 <HAL_DMA_Init+0x150>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	2202      	movs	r2, #2
 8003300:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	2200      	movs	r2, #0
 8003308:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	681a      	ldr	r2, [r3, #0]
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	f022 0201 	bic.w	r2, r2, #1
 800331a:	601a      	str	r2, [r3, #0]
 800331c:	e00f      	b.n	800333e <HAL_DMA_Init+0x5e>
 800331e:	f7ff fe91 	bl	8003044 <HAL_GetTick>
 8003322:	4602      	mov	r2, r0
 8003324:	693b      	ldr	r3, [r7, #16]
 8003326:	1ad3      	subs	r3, r2, r3
 8003328:	2b05      	cmp	r3, #5
 800332a:	d908      	bls.n	800333e <HAL_DMA_Init+0x5e>
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	2220      	movs	r2, #32
 8003330:	655a      	str	r2, [r3, #84]	@ 0x54
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	2203      	movs	r2, #3
 8003336:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800333a:	2303      	movs	r3, #3
 800333c:	e078      	b.n	8003430 <HAL_DMA_Init+0x150>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	f003 0301 	and.w	r3, r3, #1
 8003348:	2b00      	cmp	r3, #0
 800334a:	d1e8      	bne.n	800331e <HAL_DMA_Init+0x3e>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	617b      	str	r3, [r7, #20]
 8003354:	697a      	ldr	r2, [r7, #20]
 8003356:	4b38      	ldr	r3, [pc, #224]	@ (8003438 <HAL_DMA_Init+0x158>)
 8003358:	4013      	ands	r3, r2
 800335a:	617b      	str	r3, [r7, #20]
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	685a      	ldr	r2, [r3, #4]
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	689b      	ldr	r3, [r3, #8]
 8003364:	431a      	orrs	r2, r3
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	68db      	ldr	r3, [r3, #12]
 800336a:	431a      	orrs	r2, r3
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	691b      	ldr	r3, [r3, #16]
 8003370:	431a      	orrs	r2, r3
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	695b      	ldr	r3, [r3, #20]
 8003376:	431a      	orrs	r2, r3
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	699b      	ldr	r3, [r3, #24]
 800337c:	431a      	orrs	r2, r3
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	69db      	ldr	r3, [r3, #28]
 8003382:	431a      	orrs	r2, r3
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	6a1b      	ldr	r3, [r3, #32]
 8003388:	4313      	orrs	r3, r2
 800338a:	697a      	ldr	r2, [r7, #20]
 800338c:	4313      	orrs	r3, r2
 800338e:	617b      	str	r3, [r7, #20]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003394:	2b04      	cmp	r3, #4
 8003396:	d107      	bne.n	80033a8 <HAL_DMA_Init+0xc8>
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80033a0:	4313      	orrs	r3, r2
 80033a2:	697a      	ldr	r2, [r7, #20]
 80033a4:	4313      	orrs	r3, r2
 80033a6:	617b      	str	r3, [r7, #20]
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	697a      	ldr	r2, [r7, #20]
 80033ae:	601a      	str	r2, [r3, #0]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	695b      	ldr	r3, [r3, #20]
 80033b6:	617b      	str	r3, [r7, #20]
 80033b8:	697b      	ldr	r3, [r7, #20]
 80033ba:	f023 0307 	bic.w	r3, r3, #7
 80033be:	617b      	str	r3, [r7, #20]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033c4:	697a      	ldr	r2, [r7, #20]
 80033c6:	4313      	orrs	r3, r2
 80033c8:	617b      	str	r3, [r7, #20]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033ce:	2b04      	cmp	r3, #4
 80033d0:	d117      	bne.n	8003402 <HAL_DMA_Init+0x122>
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80033d6:	697a      	ldr	r2, [r7, #20]
 80033d8:	4313      	orrs	r3, r2
 80033da:	617b      	str	r3, [r7, #20]
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	d00e      	beq.n	8003402 <HAL_DMA_Init+0x122>
 80033e4:	6878      	ldr	r0, [r7, #4]
 80033e6:	f000 fb01 	bl	80039ec <DMA_CheckFifoParam>
 80033ea:	4603      	mov	r3, r0
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d008      	beq.n	8003402 <HAL_DMA_Init+0x122>
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	2240      	movs	r2, #64	@ 0x40
 80033f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	2201      	movs	r2, #1
 80033fa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80033fe:	2301      	movs	r3, #1
 8003400:	e016      	b.n	8003430 <HAL_DMA_Init+0x150>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	697a      	ldr	r2, [r7, #20]
 8003408:	615a      	str	r2, [r3, #20]
 800340a:	6878      	ldr	r0, [r7, #4]
 800340c:	f000 fab8 	bl	8003980 <DMA_CalcBaseAndBitshift>
 8003410:	4603      	mov	r3, r0
 8003412:	60fb      	str	r3, [r7, #12]
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003418:	223f      	movs	r2, #63	@ 0x3f
 800341a:	409a      	lsls	r2, r3
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	609a      	str	r2, [r3, #8]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2200      	movs	r2, #0
 8003424:	655a      	str	r2, [r3, #84]	@ 0x54
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2201      	movs	r2, #1
 800342a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800342e:	2300      	movs	r3, #0
 8003430:	4618      	mov	r0, r3
 8003432:	3718      	adds	r7, #24
 8003434:	46bd      	mov	sp, r7
 8003436:	bd80      	pop	{r7, pc}
 8003438:	f010803f 	.word	0xf010803f

0800343c <HAL_DMA_Start_IT>:
 800343c:	b580      	push	{r7, lr}
 800343e:	b086      	sub	sp, #24
 8003440:	af00      	add	r7, sp, #0
 8003442:	60f8      	str	r0, [r7, #12]
 8003444:	60b9      	str	r1, [r7, #8]
 8003446:	607a      	str	r2, [r7, #4]
 8003448:	603b      	str	r3, [r7, #0]
 800344a:	2300      	movs	r3, #0
 800344c:	75fb      	strb	r3, [r7, #23]
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003452:	613b      	str	r3, [r7, #16]
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800345a:	2b01      	cmp	r3, #1
 800345c:	d101      	bne.n	8003462 <HAL_DMA_Start_IT+0x26>
 800345e:	2302      	movs	r3, #2
 8003460:	e040      	b.n	80034e4 <HAL_DMA_Start_IT+0xa8>
 8003462:	68fb      	ldr	r3, [r7, #12]
 8003464:	2201      	movs	r2, #1
 8003466:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003470:	b2db      	uxtb	r3, r3
 8003472:	2b01      	cmp	r3, #1
 8003474:	d12f      	bne.n	80034d6 <HAL_DMA_Start_IT+0x9a>
 8003476:	68fb      	ldr	r3, [r7, #12]
 8003478:	2202      	movs	r2, #2
 800347a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	2200      	movs	r2, #0
 8003482:	655a      	str	r2, [r3, #84]	@ 0x54
 8003484:	683b      	ldr	r3, [r7, #0]
 8003486:	687a      	ldr	r2, [r7, #4]
 8003488:	68b9      	ldr	r1, [r7, #8]
 800348a:	68f8      	ldr	r0, [r7, #12]
 800348c:	f000 fa4a 	bl	8003924 <DMA_SetConfig>
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003494:	223f      	movs	r2, #63	@ 0x3f
 8003496:	409a      	lsls	r2, r3
 8003498:	693b      	ldr	r3, [r7, #16]
 800349a:	609a      	str	r2, [r3, #8]
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	681a      	ldr	r2, [r3, #0]
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	f042 0216 	orr.w	r2, r2, #22
 80034aa:	601a      	str	r2, [r3, #0]
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034b0:	2b00      	cmp	r3, #0
 80034b2:	d007      	beq.n	80034c4 <HAL_DMA_Start_IT+0x88>
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	681a      	ldr	r2, [r3, #0]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	f042 0208 	orr.w	r2, r2, #8
 80034c2:	601a      	str	r2, [r3, #0]
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	681a      	ldr	r2, [r3, #0]
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	f042 0201 	orr.w	r2, r2, #1
 80034d2:	601a      	str	r2, [r3, #0]
 80034d4:	e005      	b.n	80034e2 <HAL_DMA_Start_IT+0xa6>
 80034d6:	68fb      	ldr	r3, [r7, #12]
 80034d8:	2200      	movs	r2, #0
 80034da:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80034de:	2302      	movs	r3, #2
 80034e0:	75fb      	strb	r3, [r7, #23]
 80034e2:	7dfb      	ldrb	r3, [r7, #23]
 80034e4:	4618      	mov	r0, r3
 80034e6:	3718      	adds	r7, #24
 80034e8:	46bd      	mov	sp, r7
 80034ea:	bd80      	pop	{r7, pc}

080034ec <HAL_DMA_Abort>:
 80034ec:	b580      	push	{r7, lr}
 80034ee:	b084      	sub	sp, #16
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	6078      	str	r0, [r7, #4]
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80034f8:	60fb      	str	r3, [r7, #12]
 80034fa:	f7ff fda3 	bl	8003044 <HAL_GetTick>
 80034fe:	60b8      	str	r0, [r7, #8]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003506:	b2db      	uxtb	r3, r3
 8003508:	2b02      	cmp	r3, #2
 800350a:	d008      	beq.n	800351e <HAL_DMA_Abort+0x32>
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	2280      	movs	r2, #128	@ 0x80
 8003510:	655a      	str	r2, [r3, #84]	@ 0x54
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	2200      	movs	r2, #0
 8003516:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800351a:	2301      	movs	r3, #1
 800351c:	e052      	b.n	80035c4 <HAL_DMA_Abort+0xd8>
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	681a      	ldr	r2, [r3, #0]
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	f022 0216 	bic.w	r2, r2, #22
 800352c:	601a      	str	r2, [r3, #0]
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	695a      	ldr	r2, [r3, #20]
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800353c:	615a      	str	r2, [r3, #20]
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003542:	2b00      	cmp	r3, #0
 8003544:	d103      	bne.n	800354e <HAL_DMA_Abort+0x62>
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800354a:	2b00      	cmp	r3, #0
 800354c:	d007      	beq.n	800355e <HAL_DMA_Abort+0x72>
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	681a      	ldr	r2, [r3, #0]
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	f022 0208 	bic.w	r2, r2, #8
 800355c:	601a      	str	r2, [r3, #0]
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	681a      	ldr	r2, [r3, #0]
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	f022 0201 	bic.w	r2, r2, #1
 800356c:	601a      	str	r2, [r3, #0]
 800356e:	e013      	b.n	8003598 <HAL_DMA_Abort+0xac>
 8003570:	f7ff fd68 	bl	8003044 <HAL_GetTick>
 8003574:	4602      	mov	r2, r0
 8003576:	68bb      	ldr	r3, [r7, #8]
 8003578:	1ad3      	subs	r3, r2, r3
 800357a:	2b05      	cmp	r3, #5
 800357c:	d90c      	bls.n	8003598 <HAL_DMA_Abort+0xac>
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	2220      	movs	r2, #32
 8003582:	655a      	str	r2, [r3, #84]	@ 0x54
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	2203      	movs	r2, #3
 8003588:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	2200      	movs	r2, #0
 8003590:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003594:	2303      	movs	r3, #3
 8003596:	e015      	b.n	80035c4 <HAL_DMA_Abort+0xd8>
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	f003 0301 	and.w	r3, r3, #1
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	d1e4      	bne.n	8003570 <HAL_DMA_Abort+0x84>
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80035aa:	223f      	movs	r2, #63	@ 0x3f
 80035ac:	409a      	lsls	r2, r3
 80035ae:	68fb      	ldr	r3, [r7, #12]
 80035b0:	609a      	str	r2, [r3, #8]
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	2201      	movs	r2, #1
 80035b6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	2200      	movs	r2, #0
 80035be:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80035c2:	2300      	movs	r3, #0
 80035c4:	4618      	mov	r0, r3
 80035c6:	3710      	adds	r7, #16
 80035c8:	46bd      	mov	sp, r7
 80035ca:	bd80      	pop	{r7, pc}

080035cc <HAL_DMA_Abort_IT>:
 80035cc:	b480      	push	{r7}
 80035ce:	b083      	sub	sp, #12
 80035d0:	af00      	add	r7, sp, #0
 80035d2:	6078      	str	r0, [r7, #4]
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80035da:	b2db      	uxtb	r3, r3
 80035dc:	2b02      	cmp	r3, #2
 80035de:	d004      	beq.n	80035ea <HAL_DMA_Abort_IT+0x1e>
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	2280      	movs	r2, #128	@ 0x80
 80035e4:	655a      	str	r2, [r3, #84]	@ 0x54
 80035e6:	2301      	movs	r3, #1
 80035e8:	e00c      	b.n	8003604 <HAL_DMA_Abort_IT+0x38>
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2205      	movs	r2, #5
 80035ee:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	681a      	ldr	r2, [r3, #0]
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	681b      	ldr	r3, [r3, #0]
 80035fc:	f022 0201 	bic.w	r2, r2, #1
 8003600:	601a      	str	r2, [r3, #0]
 8003602:	2300      	movs	r3, #0
 8003604:	4618      	mov	r0, r3
 8003606:	370c      	adds	r7, #12
 8003608:	46bd      	mov	sp, r7
 800360a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800360e:	4770      	bx	lr

08003610 <HAL_DMA_IRQHandler>:
 8003610:	b580      	push	{r7, lr}
 8003612:	b086      	sub	sp, #24
 8003614:	af00      	add	r7, sp, #0
 8003616:	6078      	str	r0, [r7, #4]
 8003618:	2300      	movs	r3, #0
 800361a:	60bb      	str	r3, [r7, #8]
 800361c:	4b8e      	ldr	r3, [pc, #568]	@ (8003858 <HAL_DMA_IRQHandler+0x248>)
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	4a8e      	ldr	r2, [pc, #568]	@ (800385c <HAL_DMA_IRQHandler+0x24c>)
 8003622:	fba2 2303 	umull	r2, r3, r2, r3
 8003626:	0a9b      	lsrs	r3, r3, #10
 8003628:	617b      	str	r3, [r7, #20]
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800362e:	613b      	str	r3, [r7, #16]
 8003630:	693b      	ldr	r3, [r7, #16]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	60fb      	str	r3, [r7, #12]
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800363a:	2208      	movs	r2, #8
 800363c:	409a      	lsls	r2, r3
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	4013      	ands	r3, r2
 8003642:	2b00      	cmp	r3, #0
 8003644:	d01a      	beq.n	800367c <HAL_DMA_IRQHandler+0x6c>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	f003 0304 	and.w	r3, r3, #4
 8003650:	2b00      	cmp	r3, #0
 8003652:	d013      	beq.n	800367c <HAL_DMA_IRQHandler+0x6c>
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	f022 0204 	bic.w	r2, r2, #4
 8003662:	601a      	str	r2, [r3, #0]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003668:	2208      	movs	r2, #8
 800366a:	409a      	lsls	r2, r3
 800366c:	693b      	ldr	r3, [r7, #16]
 800366e:	609a      	str	r2, [r3, #8]
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003674:	f043 0201 	orr.w	r2, r3, #1
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	655a      	str	r2, [r3, #84]	@ 0x54
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003680:	2201      	movs	r2, #1
 8003682:	409a      	lsls	r2, r3
 8003684:	68fb      	ldr	r3, [r7, #12]
 8003686:	4013      	ands	r3, r2
 8003688:	2b00      	cmp	r3, #0
 800368a:	d012      	beq.n	80036b2 <HAL_DMA_IRQHandler+0xa2>
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	681b      	ldr	r3, [r3, #0]
 8003690:	695b      	ldr	r3, [r3, #20]
 8003692:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003696:	2b00      	cmp	r3, #0
 8003698:	d00b      	beq.n	80036b2 <HAL_DMA_IRQHandler+0xa2>
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800369e:	2201      	movs	r2, #1
 80036a0:	409a      	lsls	r2, r3
 80036a2:	693b      	ldr	r3, [r7, #16]
 80036a4:	609a      	str	r2, [r3, #8]
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80036aa:	f043 0202 	orr.w	r2, r3, #2
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	655a      	str	r2, [r3, #84]	@ 0x54
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80036b6:	2204      	movs	r2, #4
 80036b8:	409a      	lsls	r2, r3
 80036ba:	68fb      	ldr	r3, [r7, #12]
 80036bc:	4013      	ands	r3, r2
 80036be:	2b00      	cmp	r3, #0
 80036c0:	d012      	beq.n	80036e8 <HAL_DMA_IRQHandler+0xd8>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	f003 0302 	and.w	r3, r3, #2
 80036cc:	2b00      	cmp	r3, #0
 80036ce:	d00b      	beq.n	80036e8 <HAL_DMA_IRQHandler+0xd8>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80036d4:	2204      	movs	r2, #4
 80036d6:	409a      	lsls	r2, r3
 80036d8:	693b      	ldr	r3, [r7, #16]
 80036da:	609a      	str	r2, [r3, #8]
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80036e0:	f043 0204 	orr.w	r2, r3, #4
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80036ec:	2210      	movs	r2, #16
 80036ee:	409a      	lsls	r2, r3
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	4013      	ands	r3, r2
 80036f4:	2b00      	cmp	r3, #0
 80036f6:	d043      	beq.n	8003780 <HAL_DMA_IRQHandler+0x170>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	f003 0308 	and.w	r3, r3, #8
 8003702:	2b00      	cmp	r3, #0
 8003704:	d03c      	beq.n	8003780 <HAL_DMA_IRQHandler+0x170>
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800370a:	2210      	movs	r2, #16
 800370c:	409a      	lsls	r2, r3
 800370e:	693b      	ldr	r3, [r7, #16]
 8003710:	609a      	str	r2, [r3, #8]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800371c:	2b00      	cmp	r3, #0
 800371e:	d018      	beq.n	8003752 <HAL_DMA_IRQHandler+0x142>
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800372a:	2b00      	cmp	r3, #0
 800372c:	d108      	bne.n	8003740 <HAL_DMA_IRQHandler+0x130>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003732:	2b00      	cmp	r3, #0
 8003734:	d024      	beq.n	8003780 <HAL_DMA_IRQHandler+0x170>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800373a:	6878      	ldr	r0, [r7, #4]
 800373c:	4798      	blx	r3
 800373e:	e01f      	b.n	8003780 <HAL_DMA_IRQHandler+0x170>
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003744:	2b00      	cmp	r3, #0
 8003746:	d01b      	beq.n	8003780 <HAL_DMA_IRQHandler+0x170>
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800374c:	6878      	ldr	r0, [r7, #4]
 800374e:	4798      	blx	r3
 8003750:	e016      	b.n	8003780 <HAL_DMA_IRQHandler+0x170>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800375c:	2b00      	cmp	r3, #0
 800375e:	d107      	bne.n	8003770 <HAL_DMA_IRQHandler+0x160>
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	681a      	ldr	r2, [r3, #0]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	681b      	ldr	r3, [r3, #0]
 800376a:	f022 0208 	bic.w	r2, r2, #8
 800376e:	601a      	str	r2, [r3, #0]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003774:	2b00      	cmp	r3, #0
 8003776:	d003      	beq.n	8003780 <HAL_DMA_IRQHandler+0x170>
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800377c:	6878      	ldr	r0, [r7, #4]
 800377e:	4798      	blx	r3
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003784:	2220      	movs	r2, #32
 8003786:	409a      	lsls	r2, r3
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	4013      	ands	r3, r2
 800378c:	2b00      	cmp	r3, #0
 800378e:	f000 808f 	beq.w	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	f003 0310 	and.w	r3, r3, #16
 800379c:	2b00      	cmp	r3, #0
 800379e:	f000 8087 	beq.w	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037a6:	2220      	movs	r2, #32
 80037a8:	409a      	lsls	r2, r3
 80037aa:	693b      	ldr	r3, [r7, #16]
 80037ac:	609a      	str	r2, [r3, #8]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80037b4:	b2db      	uxtb	r3, r3
 80037b6:	2b05      	cmp	r3, #5
 80037b8:	d136      	bne.n	8003828 <HAL_DMA_IRQHandler+0x218>
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	681a      	ldr	r2, [r3, #0]
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	f022 0216 	bic.w	r2, r2, #22
 80037c8:	601a      	str	r2, [r3, #0]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	695a      	ldr	r2, [r3, #20]
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80037d8:	615a      	str	r2, [r3, #20]
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d103      	bne.n	80037ea <HAL_DMA_IRQHandler+0x1da>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d007      	beq.n	80037fa <HAL_DMA_IRQHandler+0x1ea>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	681a      	ldr	r2, [r3, #0]
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	f022 0208 	bic.w	r2, r2, #8
 80037f8:	601a      	str	r2, [r3, #0]
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037fe:	223f      	movs	r2, #63	@ 0x3f
 8003800:	409a      	lsls	r2, r3
 8003802:	693b      	ldr	r3, [r7, #16]
 8003804:	609a      	str	r2, [r3, #8]
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	2201      	movs	r2, #1
 800380a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	2200      	movs	r2, #0
 8003812:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800381a:	2b00      	cmp	r3, #0
 800381c:	d07e      	beq.n	800391c <HAL_DMA_IRQHandler+0x30c>
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003822:	6878      	ldr	r0, [r7, #4]
 8003824:	4798      	blx	r3
 8003826:	e079      	b.n	800391c <HAL_DMA_IRQHandler+0x30c>
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003832:	2b00      	cmp	r3, #0
 8003834:	d01d      	beq.n	8003872 <HAL_DMA_IRQHandler+0x262>
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003840:	2b00      	cmp	r3, #0
 8003842:	d10d      	bne.n	8003860 <HAL_DMA_IRQHandler+0x250>
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003848:	2b00      	cmp	r3, #0
 800384a:	d031      	beq.n	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003850:	6878      	ldr	r0, [r7, #4]
 8003852:	4798      	blx	r3
 8003854:	e02c      	b.n	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 8003856:	bf00      	nop
 8003858:	2001373c 	.word	0x2001373c
 800385c:	1b4e81b5 	.word	0x1b4e81b5
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003864:	2b00      	cmp	r3, #0
 8003866:	d023      	beq.n	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800386c:	6878      	ldr	r0, [r7, #4]
 800386e:	4798      	blx	r3
 8003870:	e01e      	b.n	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800387c:	2b00      	cmp	r3, #0
 800387e:	d10f      	bne.n	80038a0 <HAL_DMA_IRQHandler+0x290>
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	681a      	ldr	r2, [r3, #0]
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	f022 0210 	bic.w	r2, r2, #16
 800388e:	601a      	str	r2, [r3, #0]
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	2201      	movs	r2, #1
 8003894:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2200      	movs	r2, #0
 800389c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d003      	beq.n	80038b0 <HAL_DMA_IRQHandler+0x2a0>
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80038ac:	6878      	ldr	r0, [r7, #4]
 80038ae:	4798      	blx	r3
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d032      	beq.n	800391e <HAL_DMA_IRQHandler+0x30e>
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80038bc:	f003 0301 	and.w	r3, r3, #1
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	d022      	beq.n	800390a <HAL_DMA_IRQHandler+0x2fa>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2205      	movs	r2, #5
 80038c8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	681a      	ldr	r2, [r3, #0]
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	f022 0201 	bic.w	r2, r2, #1
 80038da:	601a      	str	r2, [r3, #0]
 80038dc:	68bb      	ldr	r3, [r7, #8]
 80038de:	3301      	adds	r3, #1
 80038e0:	60bb      	str	r3, [r7, #8]
 80038e2:	697a      	ldr	r2, [r7, #20]
 80038e4:	429a      	cmp	r2, r3
 80038e6:	d307      	bcc.n	80038f8 <HAL_DMA_IRQHandler+0x2e8>
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	f003 0301 	and.w	r3, r3, #1
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d1f2      	bne.n	80038dc <HAL_DMA_IRQHandler+0x2cc>
 80038f6:	e000      	b.n	80038fa <HAL_DMA_IRQHandler+0x2ea>
 80038f8:	bf00      	nop
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	2201      	movs	r2, #1
 80038fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	2200      	movs	r2, #0
 8003906:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800390e:	2b00      	cmp	r3, #0
 8003910:	d005      	beq.n	800391e <HAL_DMA_IRQHandler+0x30e>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003916:	6878      	ldr	r0, [r7, #4]
 8003918:	4798      	blx	r3
 800391a:	e000      	b.n	800391e <HAL_DMA_IRQHandler+0x30e>
 800391c:	bf00      	nop
 800391e:	3718      	adds	r7, #24
 8003920:	46bd      	mov	sp, r7
 8003922:	bd80      	pop	{r7, pc}

08003924 <DMA_SetConfig>:
 8003924:	b480      	push	{r7}
 8003926:	b085      	sub	sp, #20
 8003928:	af00      	add	r7, sp, #0
 800392a:	60f8      	str	r0, [r7, #12]
 800392c:	60b9      	str	r1, [r7, #8]
 800392e:	607a      	str	r2, [r7, #4]
 8003930:	603b      	str	r3, [r7, #0]
 8003932:	68fb      	ldr	r3, [r7, #12]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	681a      	ldr	r2, [r3, #0]
 8003938:	68fb      	ldr	r3, [r7, #12]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003940:	601a      	str	r2, [r3, #0]
 8003942:	68fb      	ldr	r3, [r7, #12]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	683a      	ldr	r2, [r7, #0]
 8003948:	605a      	str	r2, [r3, #4]
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	689b      	ldr	r3, [r3, #8]
 800394e:	2b40      	cmp	r3, #64	@ 0x40
 8003950:	d108      	bne.n	8003964 <DMA_SetConfig+0x40>
 8003952:	68fb      	ldr	r3, [r7, #12]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	687a      	ldr	r2, [r7, #4]
 8003958:	609a      	str	r2, [r3, #8]
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	68ba      	ldr	r2, [r7, #8]
 8003960:	60da      	str	r2, [r3, #12]
 8003962:	e007      	b.n	8003974 <DMA_SetConfig+0x50>
 8003964:	68fb      	ldr	r3, [r7, #12]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	68ba      	ldr	r2, [r7, #8]
 800396a:	609a      	str	r2, [r3, #8]
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	687a      	ldr	r2, [r7, #4]
 8003972:	60da      	str	r2, [r3, #12]
 8003974:	bf00      	nop
 8003976:	3714      	adds	r7, #20
 8003978:	46bd      	mov	sp, r7
 800397a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800397e:	4770      	bx	lr

08003980 <DMA_CalcBaseAndBitshift>:
 8003980:	b480      	push	{r7}
 8003982:	b085      	sub	sp, #20
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	b2db      	uxtb	r3, r3
 800398e:	3b10      	subs	r3, #16
 8003990:	4a14      	ldr	r2, [pc, #80]	@ (80039e4 <DMA_CalcBaseAndBitshift+0x64>)
 8003992:	fba2 2303 	umull	r2, r3, r2, r3
 8003996:	091b      	lsrs	r3, r3, #4
 8003998:	60fb      	str	r3, [r7, #12]
 800399a:	4a13      	ldr	r2, [pc, #76]	@ (80039e8 <DMA_CalcBaseAndBitshift+0x68>)
 800399c:	68fb      	ldr	r3, [r7, #12]
 800399e:	4413      	add	r3, r2
 80039a0:	781b      	ldrb	r3, [r3, #0]
 80039a2:	461a      	mov	r2, r3
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80039a8:	68fb      	ldr	r3, [r7, #12]
 80039aa:	2b03      	cmp	r3, #3
 80039ac:	d909      	bls.n	80039c2 <DMA_CalcBaseAndBitshift+0x42>
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 80039b6:	f023 0303 	bic.w	r3, r3, #3
 80039ba:	1d1a      	adds	r2, r3, #4
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	659a      	str	r2, [r3, #88]	@ 0x58
 80039c0:	e007      	b.n	80039d2 <DMA_CalcBaseAndBitshift+0x52>
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 80039ca:	f023 0303 	bic.w	r3, r3, #3
 80039ce:	687a      	ldr	r2, [r7, #4]
 80039d0:	6593      	str	r3, [r2, #88]	@ 0x58
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039d6:	4618      	mov	r0, r3
 80039d8:	3714      	adds	r7, #20
 80039da:	46bd      	mov	sp, r7
 80039dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039e0:	4770      	bx	lr
 80039e2:	bf00      	nop
 80039e4:	aaaaaaab 	.word	0xaaaaaaab
 80039e8:	08014458 	.word	0x08014458

080039ec <DMA_CheckFifoParam>:
 80039ec:	b480      	push	{r7}
 80039ee:	b085      	sub	sp, #20
 80039f0:	af00      	add	r7, sp, #0
 80039f2:	6078      	str	r0, [r7, #4]
 80039f4:	2300      	movs	r3, #0
 80039f6:	73fb      	strb	r3, [r7, #15]
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80039fc:	60bb      	str	r3, [r7, #8]
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	699b      	ldr	r3, [r3, #24]
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	d11f      	bne.n	8003a46 <DMA_CheckFifoParam+0x5a>
 8003a06:	68bb      	ldr	r3, [r7, #8]
 8003a08:	2b03      	cmp	r3, #3
 8003a0a:	d856      	bhi.n	8003aba <DMA_CheckFifoParam+0xce>
 8003a0c:	a201      	add	r2, pc, #4	@ (adr r2, 8003a14 <DMA_CheckFifoParam+0x28>)
 8003a0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a12:	bf00      	nop
 8003a14:	08003a25 	.word	0x08003a25
 8003a18:	08003a37 	.word	0x08003a37
 8003a1c:	08003a25 	.word	0x08003a25
 8003a20:	08003abb 	.word	0x08003abb
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a28:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d046      	beq.n	8003abe <DMA_CheckFifoParam+0xd2>
 8003a30:	2301      	movs	r3, #1
 8003a32:	73fb      	strb	r3, [r7, #15]
 8003a34:	e043      	b.n	8003abe <DMA_CheckFifoParam+0xd2>
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a3a:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003a3e:	d140      	bne.n	8003ac2 <DMA_CheckFifoParam+0xd6>
 8003a40:	2301      	movs	r3, #1
 8003a42:	73fb      	strb	r3, [r7, #15]
 8003a44:	e03d      	b.n	8003ac2 <DMA_CheckFifoParam+0xd6>
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	699b      	ldr	r3, [r3, #24]
 8003a4a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003a4e:	d121      	bne.n	8003a94 <DMA_CheckFifoParam+0xa8>
 8003a50:	68bb      	ldr	r3, [r7, #8]
 8003a52:	2b03      	cmp	r3, #3
 8003a54:	d837      	bhi.n	8003ac6 <DMA_CheckFifoParam+0xda>
 8003a56:	a201      	add	r2, pc, #4	@ (adr r2, 8003a5c <DMA_CheckFifoParam+0x70>)
 8003a58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a5c:	08003a6d 	.word	0x08003a6d
 8003a60:	08003a73 	.word	0x08003a73
 8003a64:	08003a6d 	.word	0x08003a6d
 8003a68:	08003a85 	.word	0x08003a85
 8003a6c:	2301      	movs	r3, #1
 8003a6e:	73fb      	strb	r3, [r7, #15]
 8003a70:	e030      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a76:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	d025      	beq.n	8003aca <DMA_CheckFifoParam+0xde>
 8003a7e:	2301      	movs	r3, #1
 8003a80:	73fb      	strb	r3, [r7, #15]
 8003a82:	e022      	b.n	8003aca <DMA_CheckFifoParam+0xde>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a88:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003a8c:	d11f      	bne.n	8003ace <DMA_CheckFifoParam+0xe2>
 8003a8e:	2301      	movs	r3, #1
 8003a90:	73fb      	strb	r3, [r7, #15]
 8003a92:	e01c      	b.n	8003ace <DMA_CheckFifoParam+0xe2>
 8003a94:	68bb      	ldr	r3, [r7, #8]
 8003a96:	2b02      	cmp	r3, #2
 8003a98:	d903      	bls.n	8003aa2 <DMA_CheckFifoParam+0xb6>
 8003a9a:	68bb      	ldr	r3, [r7, #8]
 8003a9c:	2b03      	cmp	r3, #3
 8003a9e:	d003      	beq.n	8003aa8 <DMA_CheckFifoParam+0xbc>
 8003aa0:	e018      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003aa2:	2301      	movs	r3, #1
 8003aa4:	73fb      	strb	r3, [r7, #15]
 8003aa6:	e015      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003aac:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d00e      	beq.n	8003ad2 <DMA_CheckFifoParam+0xe6>
 8003ab4:	2301      	movs	r3, #1
 8003ab6:	73fb      	strb	r3, [r7, #15]
 8003ab8:	e00b      	b.n	8003ad2 <DMA_CheckFifoParam+0xe6>
 8003aba:	bf00      	nop
 8003abc:	e00a      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003abe:	bf00      	nop
 8003ac0:	e008      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003ac2:	bf00      	nop
 8003ac4:	e006      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003ac6:	bf00      	nop
 8003ac8:	e004      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003aca:	bf00      	nop
 8003acc:	e002      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003ace:	bf00      	nop
 8003ad0:	e000      	b.n	8003ad4 <DMA_CheckFifoParam+0xe8>
 8003ad2:	bf00      	nop
 8003ad4:	7bfb      	ldrb	r3, [r7, #15]
 8003ad6:	4618      	mov	r0, r3
 8003ad8:	3714      	adds	r7, #20
 8003ada:	46bd      	mov	sp, r7
 8003adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ae0:	4770      	bx	lr
 8003ae2:	bf00      	nop

08003ae4 <HAL_GPIO_Init>:
 8003ae4:	b480      	push	{r7}
 8003ae6:	b089      	sub	sp, #36	@ 0x24
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	6078      	str	r0, [r7, #4]
 8003aec:	6039      	str	r1, [r7, #0]
 8003aee:	2300      	movs	r3, #0
 8003af0:	617b      	str	r3, [r7, #20]
 8003af2:	2300      	movs	r3, #0
 8003af4:	613b      	str	r3, [r7, #16]
 8003af6:	2300      	movs	r3, #0
 8003af8:	61bb      	str	r3, [r7, #24]
 8003afa:	2300      	movs	r3, #0
 8003afc:	61fb      	str	r3, [r7, #28]
 8003afe:	e165      	b.n	8003dcc <HAL_GPIO_Init+0x2e8>
 8003b00:	2201      	movs	r2, #1
 8003b02:	69fb      	ldr	r3, [r7, #28]
 8003b04:	fa02 f303 	lsl.w	r3, r2, r3
 8003b08:	617b      	str	r3, [r7, #20]
 8003b0a:	683b      	ldr	r3, [r7, #0]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	697a      	ldr	r2, [r7, #20]
 8003b10:	4013      	ands	r3, r2
 8003b12:	613b      	str	r3, [r7, #16]
 8003b14:	693a      	ldr	r2, [r7, #16]
 8003b16:	697b      	ldr	r3, [r7, #20]
 8003b18:	429a      	cmp	r2, r3
 8003b1a:	f040 8154 	bne.w	8003dc6 <HAL_GPIO_Init+0x2e2>
 8003b1e:	683b      	ldr	r3, [r7, #0]
 8003b20:	685b      	ldr	r3, [r3, #4]
 8003b22:	f003 0303 	and.w	r3, r3, #3
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	d005      	beq.n	8003b36 <HAL_GPIO_Init+0x52>
 8003b2a:	683b      	ldr	r3, [r7, #0]
 8003b2c:	685b      	ldr	r3, [r3, #4]
 8003b2e:	f003 0303 	and.w	r3, r3, #3
 8003b32:	2b02      	cmp	r3, #2
 8003b34:	d130      	bne.n	8003b98 <HAL_GPIO_Init+0xb4>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	689b      	ldr	r3, [r3, #8]
 8003b3a:	61bb      	str	r3, [r7, #24]
 8003b3c:	69fb      	ldr	r3, [r7, #28]
 8003b3e:	005b      	lsls	r3, r3, #1
 8003b40:	2203      	movs	r2, #3
 8003b42:	fa02 f303 	lsl.w	r3, r2, r3
 8003b46:	43db      	mvns	r3, r3
 8003b48:	69ba      	ldr	r2, [r7, #24]
 8003b4a:	4013      	ands	r3, r2
 8003b4c:	61bb      	str	r3, [r7, #24]
 8003b4e:	683b      	ldr	r3, [r7, #0]
 8003b50:	68da      	ldr	r2, [r3, #12]
 8003b52:	69fb      	ldr	r3, [r7, #28]
 8003b54:	005b      	lsls	r3, r3, #1
 8003b56:	fa02 f303 	lsl.w	r3, r2, r3
 8003b5a:	69ba      	ldr	r2, [r7, #24]
 8003b5c:	4313      	orrs	r3, r2
 8003b5e:	61bb      	str	r3, [r7, #24]
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	69ba      	ldr	r2, [r7, #24]
 8003b64:	609a      	str	r2, [r3, #8]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	685b      	ldr	r3, [r3, #4]
 8003b6a:	61bb      	str	r3, [r7, #24]
 8003b6c:	2201      	movs	r2, #1
 8003b6e:	69fb      	ldr	r3, [r7, #28]
 8003b70:	fa02 f303 	lsl.w	r3, r2, r3
 8003b74:	43db      	mvns	r3, r3
 8003b76:	69ba      	ldr	r2, [r7, #24]
 8003b78:	4013      	ands	r3, r2
 8003b7a:	61bb      	str	r3, [r7, #24]
 8003b7c:	683b      	ldr	r3, [r7, #0]
 8003b7e:	685b      	ldr	r3, [r3, #4]
 8003b80:	091b      	lsrs	r3, r3, #4
 8003b82:	f003 0201 	and.w	r2, r3, #1
 8003b86:	69fb      	ldr	r3, [r7, #28]
 8003b88:	fa02 f303 	lsl.w	r3, r2, r3
 8003b8c:	69ba      	ldr	r2, [r7, #24]
 8003b8e:	4313      	orrs	r3, r2
 8003b90:	61bb      	str	r3, [r7, #24]
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	69ba      	ldr	r2, [r7, #24]
 8003b96:	605a      	str	r2, [r3, #4]
 8003b98:	683b      	ldr	r3, [r7, #0]
 8003b9a:	685b      	ldr	r3, [r3, #4]
 8003b9c:	f003 0303 	and.w	r3, r3, #3
 8003ba0:	2b03      	cmp	r3, #3
 8003ba2:	d017      	beq.n	8003bd4 <HAL_GPIO_Init+0xf0>
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	68db      	ldr	r3, [r3, #12]
 8003ba8:	61bb      	str	r3, [r7, #24]
 8003baa:	69fb      	ldr	r3, [r7, #28]
 8003bac:	005b      	lsls	r3, r3, #1
 8003bae:	2203      	movs	r2, #3
 8003bb0:	fa02 f303 	lsl.w	r3, r2, r3
 8003bb4:	43db      	mvns	r3, r3
 8003bb6:	69ba      	ldr	r2, [r7, #24]
 8003bb8:	4013      	ands	r3, r2
 8003bba:	61bb      	str	r3, [r7, #24]
 8003bbc:	683b      	ldr	r3, [r7, #0]
 8003bbe:	689a      	ldr	r2, [r3, #8]
 8003bc0:	69fb      	ldr	r3, [r7, #28]
 8003bc2:	005b      	lsls	r3, r3, #1
 8003bc4:	fa02 f303 	lsl.w	r3, r2, r3
 8003bc8:	69ba      	ldr	r2, [r7, #24]
 8003bca:	4313      	orrs	r3, r2
 8003bcc:	61bb      	str	r3, [r7, #24]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	69ba      	ldr	r2, [r7, #24]
 8003bd2:	60da      	str	r2, [r3, #12]
 8003bd4:	683b      	ldr	r3, [r7, #0]
 8003bd6:	685b      	ldr	r3, [r3, #4]
 8003bd8:	f003 0303 	and.w	r3, r3, #3
 8003bdc:	2b02      	cmp	r3, #2
 8003bde:	d123      	bne.n	8003c28 <HAL_GPIO_Init+0x144>
 8003be0:	69fb      	ldr	r3, [r7, #28]
 8003be2:	08da      	lsrs	r2, r3, #3
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	3208      	adds	r2, #8
 8003be8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003bec:	61bb      	str	r3, [r7, #24]
 8003bee:	69fb      	ldr	r3, [r7, #28]
 8003bf0:	f003 0307 	and.w	r3, r3, #7
 8003bf4:	009b      	lsls	r3, r3, #2
 8003bf6:	220f      	movs	r2, #15
 8003bf8:	fa02 f303 	lsl.w	r3, r2, r3
 8003bfc:	43db      	mvns	r3, r3
 8003bfe:	69ba      	ldr	r2, [r7, #24]
 8003c00:	4013      	ands	r3, r2
 8003c02:	61bb      	str	r3, [r7, #24]
 8003c04:	683b      	ldr	r3, [r7, #0]
 8003c06:	691a      	ldr	r2, [r3, #16]
 8003c08:	69fb      	ldr	r3, [r7, #28]
 8003c0a:	f003 0307 	and.w	r3, r3, #7
 8003c0e:	009b      	lsls	r3, r3, #2
 8003c10:	fa02 f303 	lsl.w	r3, r2, r3
 8003c14:	69ba      	ldr	r2, [r7, #24]
 8003c16:	4313      	orrs	r3, r2
 8003c18:	61bb      	str	r3, [r7, #24]
 8003c1a:	69fb      	ldr	r3, [r7, #28]
 8003c1c:	08da      	lsrs	r2, r3, #3
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	3208      	adds	r2, #8
 8003c22:	69b9      	ldr	r1, [r7, #24]
 8003c24:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	61bb      	str	r3, [r7, #24]
 8003c2e:	69fb      	ldr	r3, [r7, #28]
 8003c30:	005b      	lsls	r3, r3, #1
 8003c32:	2203      	movs	r2, #3
 8003c34:	fa02 f303 	lsl.w	r3, r2, r3
 8003c38:	43db      	mvns	r3, r3
 8003c3a:	69ba      	ldr	r2, [r7, #24]
 8003c3c:	4013      	ands	r3, r2
 8003c3e:	61bb      	str	r3, [r7, #24]
 8003c40:	683b      	ldr	r3, [r7, #0]
 8003c42:	685b      	ldr	r3, [r3, #4]
 8003c44:	f003 0203 	and.w	r2, r3, #3
 8003c48:	69fb      	ldr	r3, [r7, #28]
 8003c4a:	005b      	lsls	r3, r3, #1
 8003c4c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c50:	69ba      	ldr	r2, [r7, #24]
 8003c52:	4313      	orrs	r3, r2
 8003c54:	61bb      	str	r3, [r7, #24]
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	69ba      	ldr	r2, [r7, #24]
 8003c5a:	601a      	str	r2, [r3, #0]
 8003c5c:	683b      	ldr	r3, [r7, #0]
 8003c5e:	685b      	ldr	r3, [r3, #4]
 8003c60:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	f000 80ae 	beq.w	8003dc6 <HAL_GPIO_Init+0x2e2>
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	60fb      	str	r3, [r7, #12]
 8003c6e:	4b5d      	ldr	r3, [pc, #372]	@ (8003de4 <HAL_GPIO_Init+0x300>)
 8003c70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003c72:	4a5c      	ldr	r2, [pc, #368]	@ (8003de4 <HAL_GPIO_Init+0x300>)
 8003c74:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003c78:	6453      	str	r3, [r2, #68]	@ 0x44
 8003c7a:	4b5a      	ldr	r3, [pc, #360]	@ (8003de4 <HAL_GPIO_Init+0x300>)
 8003c7c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003c7e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003c82:	60fb      	str	r3, [r7, #12]
 8003c84:	68fb      	ldr	r3, [r7, #12]
 8003c86:	4a58      	ldr	r2, [pc, #352]	@ (8003de8 <HAL_GPIO_Init+0x304>)
 8003c88:	69fb      	ldr	r3, [r7, #28]
 8003c8a:	089b      	lsrs	r3, r3, #2
 8003c8c:	3302      	adds	r3, #2
 8003c8e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003c92:	61bb      	str	r3, [r7, #24]
 8003c94:	69fb      	ldr	r3, [r7, #28]
 8003c96:	f003 0303 	and.w	r3, r3, #3
 8003c9a:	009b      	lsls	r3, r3, #2
 8003c9c:	220f      	movs	r2, #15
 8003c9e:	fa02 f303 	lsl.w	r3, r2, r3
 8003ca2:	43db      	mvns	r3, r3
 8003ca4:	69ba      	ldr	r2, [r7, #24]
 8003ca6:	4013      	ands	r3, r2
 8003ca8:	61bb      	str	r3, [r7, #24]
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	4a4f      	ldr	r2, [pc, #316]	@ (8003dec <HAL_GPIO_Init+0x308>)
 8003cae:	4293      	cmp	r3, r2
 8003cb0:	d025      	beq.n	8003cfe <HAL_GPIO_Init+0x21a>
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	4a4e      	ldr	r2, [pc, #312]	@ (8003df0 <HAL_GPIO_Init+0x30c>)
 8003cb6:	4293      	cmp	r3, r2
 8003cb8:	d01f      	beq.n	8003cfa <HAL_GPIO_Init+0x216>
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	4a4d      	ldr	r2, [pc, #308]	@ (8003df4 <HAL_GPIO_Init+0x310>)
 8003cbe:	4293      	cmp	r3, r2
 8003cc0:	d019      	beq.n	8003cf6 <HAL_GPIO_Init+0x212>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	4a4c      	ldr	r2, [pc, #304]	@ (8003df8 <HAL_GPIO_Init+0x314>)
 8003cc6:	4293      	cmp	r3, r2
 8003cc8:	d013      	beq.n	8003cf2 <HAL_GPIO_Init+0x20e>
 8003cca:	687b      	ldr	r3, [r7, #4]
 8003ccc:	4a4b      	ldr	r2, [pc, #300]	@ (8003dfc <HAL_GPIO_Init+0x318>)
 8003cce:	4293      	cmp	r3, r2
 8003cd0:	d00d      	beq.n	8003cee <HAL_GPIO_Init+0x20a>
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	4a4a      	ldr	r2, [pc, #296]	@ (8003e00 <HAL_GPIO_Init+0x31c>)
 8003cd6:	4293      	cmp	r3, r2
 8003cd8:	d007      	beq.n	8003cea <HAL_GPIO_Init+0x206>
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	4a49      	ldr	r2, [pc, #292]	@ (8003e04 <HAL_GPIO_Init+0x320>)
 8003cde:	4293      	cmp	r3, r2
 8003ce0:	d101      	bne.n	8003ce6 <HAL_GPIO_Init+0x202>
 8003ce2:	2306      	movs	r3, #6
 8003ce4:	e00c      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003ce6:	2307      	movs	r3, #7
 8003ce8:	e00a      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003cea:	2305      	movs	r3, #5
 8003cec:	e008      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003cee:	2304      	movs	r3, #4
 8003cf0:	e006      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003cf2:	2303      	movs	r3, #3
 8003cf4:	e004      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003cf6:	2302      	movs	r3, #2
 8003cf8:	e002      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003cfa:	2301      	movs	r3, #1
 8003cfc:	e000      	b.n	8003d00 <HAL_GPIO_Init+0x21c>
 8003cfe:	2300      	movs	r3, #0
 8003d00:	69fa      	ldr	r2, [r7, #28]
 8003d02:	f002 0203 	and.w	r2, r2, #3
 8003d06:	0092      	lsls	r2, r2, #2
 8003d08:	4093      	lsls	r3, r2
 8003d0a:	69ba      	ldr	r2, [r7, #24]
 8003d0c:	4313      	orrs	r3, r2
 8003d0e:	61bb      	str	r3, [r7, #24]
 8003d10:	4935      	ldr	r1, [pc, #212]	@ (8003de8 <HAL_GPIO_Init+0x304>)
 8003d12:	69fb      	ldr	r3, [r7, #28]
 8003d14:	089b      	lsrs	r3, r3, #2
 8003d16:	3302      	adds	r3, #2
 8003d18:	69ba      	ldr	r2, [r7, #24]
 8003d1a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003d1e:	4b3a      	ldr	r3, [pc, #232]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d20:	689b      	ldr	r3, [r3, #8]
 8003d22:	61bb      	str	r3, [r7, #24]
 8003d24:	693b      	ldr	r3, [r7, #16]
 8003d26:	43db      	mvns	r3, r3
 8003d28:	69ba      	ldr	r2, [r7, #24]
 8003d2a:	4013      	ands	r3, r2
 8003d2c:	61bb      	str	r3, [r7, #24]
 8003d2e:	683b      	ldr	r3, [r7, #0]
 8003d30:	685b      	ldr	r3, [r3, #4]
 8003d32:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	d003      	beq.n	8003d42 <HAL_GPIO_Init+0x25e>
 8003d3a:	69ba      	ldr	r2, [r7, #24]
 8003d3c:	693b      	ldr	r3, [r7, #16]
 8003d3e:	4313      	orrs	r3, r2
 8003d40:	61bb      	str	r3, [r7, #24]
 8003d42:	4a31      	ldr	r2, [pc, #196]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d44:	69bb      	ldr	r3, [r7, #24]
 8003d46:	6093      	str	r3, [r2, #8]
 8003d48:	4b2f      	ldr	r3, [pc, #188]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d4a:	68db      	ldr	r3, [r3, #12]
 8003d4c:	61bb      	str	r3, [r7, #24]
 8003d4e:	693b      	ldr	r3, [r7, #16]
 8003d50:	43db      	mvns	r3, r3
 8003d52:	69ba      	ldr	r2, [r7, #24]
 8003d54:	4013      	ands	r3, r2
 8003d56:	61bb      	str	r3, [r7, #24]
 8003d58:	683b      	ldr	r3, [r7, #0]
 8003d5a:	685b      	ldr	r3, [r3, #4]
 8003d5c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003d60:	2b00      	cmp	r3, #0
 8003d62:	d003      	beq.n	8003d6c <HAL_GPIO_Init+0x288>
 8003d64:	69ba      	ldr	r2, [r7, #24]
 8003d66:	693b      	ldr	r3, [r7, #16]
 8003d68:	4313      	orrs	r3, r2
 8003d6a:	61bb      	str	r3, [r7, #24]
 8003d6c:	4a26      	ldr	r2, [pc, #152]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d6e:	69bb      	ldr	r3, [r7, #24]
 8003d70:	60d3      	str	r3, [r2, #12]
 8003d72:	4b25      	ldr	r3, [pc, #148]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d74:	685b      	ldr	r3, [r3, #4]
 8003d76:	61bb      	str	r3, [r7, #24]
 8003d78:	693b      	ldr	r3, [r7, #16]
 8003d7a:	43db      	mvns	r3, r3
 8003d7c:	69ba      	ldr	r2, [r7, #24]
 8003d7e:	4013      	ands	r3, r2
 8003d80:	61bb      	str	r3, [r7, #24]
 8003d82:	683b      	ldr	r3, [r7, #0]
 8003d84:	685b      	ldr	r3, [r3, #4]
 8003d86:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	d003      	beq.n	8003d96 <HAL_GPIO_Init+0x2b2>
 8003d8e:	69ba      	ldr	r2, [r7, #24]
 8003d90:	693b      	ldr	r3, [r7, #16]
 8003d92:	4313      	orrs	r3, r2
 8003d94:	61bb      	str	r3, [r7, #24]
 8003d96:	4a1c      	ldr	r2, [pc, #112]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d98:	69bb      	ldr	r3, [r7, #24]
 8003d9a:	6053      	str	r3, [r2, #4]
 8003d9c:	4b1a      	ldr	r3, [pc, #104]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	61bb      	str	r3, [r7, #24]
 8003da2:	693b      	ldr	r3, [r7, #16]
 8003da4:	43db      	mvns	r3, r3
 8003da6:	69ba      	ldr	r2, [r7, #24]
 8003da8:	4013      	ands	r3, r2
 8003daa:	61bb      	str	r3, [r7, #24]
 8003dac:	683b      	ldr	r3, [r7, #0]
 8003dae:	685b      	ldr	r3, [r3, #4]
 8003db0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d003      	beq.n	8003dc0 <HAL_GPIO_Init+0x2dc>
 8003db8:	69ba      	ldr	r2, [r7, #24]
 8003dba:	693b      	ldr	r3, [r7, #16]
 8003dbc:	4313      	orrs	r3, r2
 8003dbe:	61bb      	str	r3, [r7, #24]
 8003dc0:	4a11      	ldr	r2, [pc, #68]	@ (8003e08 <HAL_GPIO_Init+0x324>)
 8003dc2:	69bb      	ldr	r3, [r7, #24]
 8003dc4:	6013      	str	r3, [r2, #0]
 8003dc6:	69fb      	ldr	r3, [r7, #28]
 8003dc8:	3301      	adds	r3, #1
 8003dca:	61fb      	str	r3, [r7, #28]
 8003dcc:	69fb      	ldr	r3, [r7, #28]
 8003dce:	2b0f      	cmp	r3, #15
 8003dd0:	f67f ae96 	bls.w	8003b00 <HAL_GPIO_Init+0x1c>
 8003dd4:	bf00      	nop
 8003dd6:	bf00      	nop
 8003dd8:	3724      	adds	r7, #36	@ 0x24
 8003dda:	46bd      	mov	sp, r7
 8003ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003de0:	4770      	bx	lr
 8003de2:	bf00      	nop
 8003de4:	40023800 	.word	0x40023800
 8003de8:	40013800 	.word	0x40013800
 8003dec:	40020000 	.word	0x40020000
 8003df0:	40020400 	.word	0x40020400
 8003df4:	40020800 	.word	0x40020800
 8003df8:	40020c00 	.word	0x40020c00
 8003dfc:	40021000 	.word	0x40021000
 8003e00:	40021400 	.word	0x40021400
 8003e04:	40021800 	.word	0x40021800
 8003e08:	40013c00 	.word	0x40013c00

08003e0c <HAL_GPIO_WritePin>:
 8003e0c:	b480      	push	{r7}
 8003e0e:	b083      	sub	sp, #12
 8003e10:	af00      	add	r7, sp, #0
 8003e12:	6078      	str	r0, [r7, #4]
 8003e14:	460b      	mov	r3, r1
 8003e16:	807b      	strh	r3, [r7, #2]
 8003e18:	4613      	mov	r3, r2
 8003e1a:	707b      	strb	r3, [r7, #1]
 8003e1c:	787b      	ldrb	r3, [r7, #1]
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d003      	beq.n	8003e2a <HAL_GPIO_WritePin+0x1e>
 8003e22:	887a      	ldrh	r2, [r7, #2]
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	619a      	str	r2, [r3, #24]
 8003e28:	e003      	b.n	8003e32 <HAL_GPIO_WritePin+0x26>
 8003e2a:	887b      	ldrh	r3, [r7, #2]
 8003e2c:	041a      	lsls	r2, r3, #16
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	619a      	str	r2, [r3, #24]
 8003e32:	bf00      	nop
 8003e34:	370c      	adds	r7, #12
 8003e36:	46bd      	mov	sp, r7
 8003e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e3c:	4770      	bx	lr
	...

08003e40 <HAL_RCC_ClockConfig>:
 8003e40:	b580      	push	{r7, lr}
 8003e42:	b084      	sub	sp, #16
 8003e44:	af00      	add	r7, sp, #0
 8003e46:	6078      	str	r0, [r7, #4]
 8003e48:	6039      	str	r1, [r7, #0]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	2b00      	cmp	r3, #0
 8003e4e:	d101      	bne.n	8003e54 <HAL_RCC_ClockConfig+0x14>
 8003e50:	2301      	movs	r3, #1
 8003e52:	e0cc      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003e54:	4b68      	ldr	r3, [pc, #416]	@ (8003ff8 <HAL_RCC_ClockConfig+0x1b8>)
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	f003 030f 	and.w	r3, r3, #15
 8003e5c:	683a      	ldr	r2, [r7, #0]
 8003e5e:	429a      	cmp	r2, r3
 8003e60:	d90c      	bls.n	8003e7c <HAL_RCC_ClockConfig+0x3c>
 8003e62:	4b65      	ldr	r3, [pc, #404]	@ (8003ff8 <HAL_RCC_ClockConfig+0x1b8>)
 8003e64:	683a      	ldr	r2, [r7, #0]
 8003e66:	b2d2      	uxtb	r2, r2
 8003e68:	701a      	strb	r2, [r3, #0]
 8003e6a:	4b63      	ldr	r3, [pc, #396]	@ (8003ff8 <HAL_RCC_ClockConfig+0x1b8>)
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	f003 030f 	and.w	r3, r3, #15
 8003e72:	683a      	ldr	r2, [r7, #0]
 8003e74:	429a      	cmp	r2, r3
 8003e76:	d001      	beq.n	8003e7c <HAL_RCC_ClockConfig+0x3c>
 8003e78:	2301      	movs	r3, #1
 8003e7a:	e0b8      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	f003 0302 	and.w	r3, r3, #2
 8003e84:	2b00      	cmp	r3, #0
 8003e86:	d020      	beq.n	8003eca <HAL_RCC_ClockConfig+0x8a>
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	f003 0304 	and.w	r3, r3, #4
 8003e90:	2b00      	cmp	r3, #0
 8003e92:	d005      	beq.n	8003ea0 <HAL_RCC_ClockConfig+0x60>
 8003e94:	4b59      	ldr	r3, [pc, #356]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003e96:	689b      	ldr	r3, [r3, #8]
 8003e98:	4a58      	ldr	r2, [pc, #352]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003e9a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8003e9e:	6093      	str	r3, [r2, #8]
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	f003 0308 	and.w	r3, r3, #8
 8003ea8:	2b00      	cmp	r3, #0
 8003eaa:	d005      	beq.n	8003eb8 <HAL_RCC_ClockConfig+0x78>
 8003eac:	4b53      	ldr	r3, [pc, #332]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003eae:	689b      	ldr	r3, [r3, #8]
 8003eb0:	4a52      	ldr	r2, [pc, #328]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003eb2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003eb6:	6093      	str	r3, [r2, #8]
 8003eb8:	4b50      	ldr	r3, [pc, #320]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003eba:	689b      	ldr	r3, [r3, #8]
 8003ebc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	689b      	ldr	r3, [r3, #8]
 8003ec4:	494d      	ldr	r1, [pc, #308]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003ec6:	4313      	orrs	r3, r2
 8003ec8:	608b      	str	r3, [r1, #8]
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f003 0301 	and.w	r3, r3, #1
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d044      	beq.n	8003f60 <HAL_RCC_ClockConfig+0x120>
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	685b      	ldr	r3, [r3, #4]
 8003eda:	2b01      	cmp	r3, #1
 8003edc:	d107      	bne.n	8003eee <HAL_RCC_ClockConfig+0xae>
 8003ede:	4b47      	ldr	r3, [pc, #284]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003ee6:	2b00      	cmp	r3, #0
 8003ee8:	d119      	bne.n	8003f1e <HAL_RCC_ClockConfig+0xde>
 8003eea:	2301      	movs	r3, #1
 8003eec:	e07f      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	685b      	ldr	r3, [r3, #4]
 8003ef2:	2b02      	cmp	r3, #2
 8003ef4:	d003      	beq.n	8003efe <HAL_RCC_ClockConfig+0xbe>
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	685b      	ldr	r3, [r3, #4]
 8003efa:	2b03      	cmp	r3, #3
 8003efc:	d107      	bne.n	8003f0e <HAL_RCC_ClockConfig+0xce>
 8003efe:	4b3f      	ldr	r3, [pc, #252]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d109      	bne.n	8003f1e <HAL_RCC_ClockConfig+0xde>
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	e06f      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003f0e:	4b3b      	ldr	r3, [pc, #236]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	f003 0302 	and.w	r3, r3, #2
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	d101      	bne.n	8003f1e <HAL_RCC_ClockConfig+0xde>
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	e067      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003f1e:	4b37      	ldr	r3, [pc, #220]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003f20:	689b      	ldr	r3, [r3, #8]
 8003f22:	f023 0203 	bic.w	r2, r3, #3
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	685b      	ldr	r3, [r3, #4]
 8003f2a:	4934      	ldr	r1, [pc, #208]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003f2c:	4313      	orrs	r3, r2
 8003f2e:	608b      	str	r3, [r1, #8]
 8003f30:	f7ff f888 	bl	8003044 <HAL_GetTick>
 8003f34:	60f8      	str	r0, [r7, #12]
 8003f36:	e00a      	b.n	8003f4e <HAL_RCC_ClockConfig+0x10e>
 8003f38:	f7ff f884 	bl	8003044 <HAL_GetTick>
 8003f3c:	4602      	mov	r2, r0
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	1ad3      	subs	r3, r2, r3
 8003f42:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003f46:	4293      	cmp	r3, r2
 8003f48:	d901      	bls.n	8003f4e <HAL_RCC_ClockConfig+0x10e>
 8003f4a:	2303      	movs	r3, #3
 8003f4c:	e04f      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003f4e:	4b2b      	ldr	r3, [pc, #172]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003f50:	689b      	ldr	r3, [r3, #8]
 8003f52:	f003 020c 	and.w	r2, r3, #12
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	685b      	ldr	r3, [r3, #4]
 8003f5a:	009b      	lsls	r3, r3, #2
 8003f5c:	429a      	cmp	r2, r3
 8003f5e:	d1eb      	bne.n	8003f38 <HAL_RCC_ClockConfig+0xf8>
 8003f60:	4b25      	ldr	r3, [pc, #148]	@ (8003ff8 <HAL_RCC_ClockConfig+0x1b8>)
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	f003 030f 	and.w	r3, r3, #15
 8003f68:	683a      	ldr	r2, [r7, #0]
 8003f6a:	429a      	cmp	r2, r3
 8003f6c:	d20c      	bcs.n	8003f88 <HAL_RCC_ClockConfig+0x148>
 8003f6e:	4b22      	ldr	r3, [pc, #136]	@ (8003ff8 <HAL_RCC_ClockConfig+0x1b8>)
 8003f70:	683a      	ldr	r2, [r7, #0]
 8003f72:	b2d2      	uxtb	r2, r2
 8003f74:	701a      	strb	r2, [r3, #0]
 8003f76:	4b20      	ldr	r3, [pc, #128]	@ (8003ff8 <HAL_RCC_ClockConfig+0x1b8>)
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	f003 030f 	and.w	r3, r3, #15
 8003f7e:	683a      	ldr	r2, [r7, #0]
 8003f80:	429a      	cmp	r2, r3
 8003f82:	d001      	beq.n	8003f88 <HAL_RCC_ClockConfig+0x148>
 8003f84:	2301      	movs	r3, #1
 8003f86:	e032      	b.n	8003fee <HAL_RCC_ClockConfig+0x1ae>
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	f003 0304 	and.w	r3, r3, #4
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d008      	beq.n	8003fa6 <HAL_RCC_ClockConfig+0x166>
 8003f94:	4b19      	ldr	r3, [pc, #100]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003f96:	689b      	ldr	r3, [r3, #8]
 8003f98:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	68db      	ldr	r3, [r3, #12]
 8003fa0:	4916      	ldr	r1, [pc, #88]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003fa2:	4313      	orrs	r3, r2
 8003fa4:	608b      	str	r3, [r1, #8]
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	f003 0308 	and.w	r3, r3, #8
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d009      	beq.n	8003fc6 <HAL_RCC_ClockConfig+0x186>
 8003fb2:	4b12      	ldr	r3, [pc, #72]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003fb4:	689b      	ldr	r3, [r3, #8]
 8003fb6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	691b      	ldr	r3, [r3, #16]
 8003fbe:	00db      	lsls	r3, r3, #3
 8003fc0:	490e      	ldr	r1, [pc, #56]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003fc2:	4313      	orrs	r3, r2
 8003fc4:	608b      	str	r3, [r1, #8]
 8003fc6:	f000 f855 	bl	8004074 <HAL_RCC_GetSysClockFreq>
 8003fca:	4602      	mov	r2, r0
 8003fcc:	4b0b      	ldr	r3, [pc, #44]	@ (8003ffc <HAL_RCC_ClockConfig+0x1bc>)
 8003fce:	689b      	ldr	r3, [r3, #8]
 8003fd0:	091b      	lsrs	r3, r3, #4
 8003fd2:	f003 030f 	and.w	r3, r3, #15
 8003fd6:	490a      	ldr	r1, [pc, #40]	@ (8004000 <HAL_RCC_ClockConfig+0x1c0>)
 8003fd8:	5ccb      	ldrb	r3, [r1, r3]
 8003fda:	fa22 f303 	lsr.w	r3, r2, r3
 8003fde:	4a09      	ldr	r2, [pc, #36]	@ (8004004 <HAL_RCC_ClockConfig+0x1c4>)
 8003fe0:	6013      	str	r3, [r2, #0]
 8003fe2:	4b09      	ldr	r3, [pc, #36]	@ (8004008 <HAL_RCC_ClockConfig+0x1c8>)
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	4618      	mov	r0, r3
 8003fe8:	f7fe ffe8 	bl	8002fbc <HAL_InitTick>
 8003fec:	2300      	movs	r3, #0
 8003fee:	4618      	mov	r0, r3
 8003ff0:	3710      	adds	r7, #16
 8003ff2:	46bd      	mov	sp, r7
 8003ff4:	bd80      	pop	{r7, pc}
 8003ff6:	bf00      	nop
 8003ff8:	40023c00 	.word	0x40023c00
 8003ffc:	40023800 	.word	0x40023800
 8004000:	08014440 	.word	0x08014440
 8004004:	2001373c 	.word	0x2001373c
 8004008:	20013740 	.word	0x20013740

0800400c <HAL_RCC_GetHCLKFreq>:
 800400c:	b480      	push	{r7}
 800400e:	af00      	add	r7, sp, #0
 8004010:	4b03      	ldr	r3, [pc, #12]	@ (8004020 <HAL_RCC_GetHCLKFreq+0x14>)
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	4618      	mov	r0, r3
 8004016:	46bd      	mov	sp, r7
 8004018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800401c:	4770      	bx	lr
 800401e:	bf00      	nop
 8004020:	2001373c 	.word	0x2001373c

08004024 <HAL_RCC_GetPCLK1Freq>:
 8004024:	b580      	push	{r7, lr}
 8004026:	af00      	add	r7, sp, #0
 8004028:	f7ff fff0 	bl	800400c <HAL_RCC_GetHCLKFreq>
 800402c:	4602      	mov	r2, r0
 800402e:	4b05      	ldr	r3, [pc, #20]	@ (8004044 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004030:	689b      	ldr	r3, [r3, #8]
 8004032:	0a9b      	lsrs	r3, r3, #10
 8004034:	f003 0307 	and.w	r3, r3, #7
 8004038:	4903      	ldr	r1, [pc, #12]	@ (8004048 <HAL_RCC_GetPCLK1Freq+0x24>)
 800403a:	5ccb      	ldrb	r3, [r1, r3]
 800403c:	fa22 f303 	lsr.w	r3, r2, r3
 8004040:	4618      	mov	r0, r3
 8004042:	bd80      	pop	{r7, pc}
 8004044:	40023800 	.word	0x40023800
 8004048:	08014450 	.word	0x08014450

0800404c <HAL_RCC_GetPCLK2Freq>:
 800404c:	b580      	push	{r7, lr}
 800404e:	af00      	add	r7, sp, #0
 8004050:	f7ff ffdc 	bl	800400c <HAL_RCC_GetHCLKFreq>
 8004054:	4602      	mov	r2, r0
 8004056:	4b05      	ldr	r3, [pc, #20]	@ (800406c <HAL_RCC_GetPCLK2Freq+0x20>)
 8004058:	689b      	ldr	r3, [r3, #8]
 800405a:	0b5b      	lsrs	r3, r3, #13
 800405c:	f003 0307 	and.w	r3, r3, #7
 8004060:	4903      	ldr	r1, [pc, #12]	@ (8004070 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004062:	5ccb      	ldrb	r3, [r1, r3]
 8004064:	fa22 f303 	lsr.w	r3, r2, r3
 8004068:	4618      	mov	r0, r3
 800406a:	bd80      	pop	{r7, pc}
 800406c:	40023800 	.word	0x40023800
 8004070:	08014450 	.word	0x08014450

08004074 <HAL_RCC_GetSysClockFreq>:
 8004074:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004078:	b0a6      	sub	sp, #152	@ 0x98
 800407a:	af00      	add	r7, sp, #0
 800407c:	2300      	movs	r3, #0
 800407e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004082:	2300      	movs	r3, #0
 8004084:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004088:	2300      	movs	r3, #0
 800408a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800408e:	2300      	movs	r3, #0
 8004090:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004094:	2300      	movs	r3, #0
 8004096:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800409a:	4bc8      	ldr	r3, [pc, #800]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 800409c:	689b      	ldr	r3, [r3, #8]
 800409e:	f003 030c 	and.w	r3, r3, #12
 80040a2:	2b0c      	cmp	r3, #12
 80040a4:	f200 817e 	bhi.w	80043a4 <HAL_RCC_GetSysClockFreq+0x330>
 80040a8:	a201      	add	r2, pc, #4	@ (adr r2, 80040b0 <HAL_RCC_GetSysClockFreq+0x3c>)
 80040aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80040ae:	bf00      	nop
 80040b0:	080040e5 	.word	0x080040e5
 80040b4:	080043a5 	.word	0x080043a5
 80040b8:	080043a5 	.word	0x080043a5
 80040bc:	080043a5 	.word	0x080043a5
 80040c0:	080040ed 	.word	0x080040ed
 80040c4:	080043a5 	.word	0x080043a5
 80040c8:	080043a5 	.word	0x080043a5
 80040cc:	080043a5 	.word	0x080043a5
 80040d0:	080040f5 	.word	0x080040f5
 80040d4:	080043a5 	.word	0x080043a5
 80040d8:	080043a5 	.word	0x080043a5
 80040dc:	080043a5 	.word	0x080043a5
 80040e0:	0800425f 	.word	0x0800425f
 80040e4:	4bb6      	ldr	r3, [pc, #728]	@ (80043c0 <HAL_RCC_GetSysClockFreq+0x34c>)
 80040e6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80040ea:	e15f      	b.n	80043ac <HAL_RCC_GetSysClockFreq+0x338>
 80040ec:	4bb5      	ldr	r3, [pc, #724]	@ (80043c4 <HAL_RCC_GetSysClockFreq+0x350>)
 80040ee:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80040f2:	e15b      	b.n	80043ac <HAL_RCC_GetSysClockFreq+0x338>
 80040f4:	4bb1      	ldr	r3, [pc, #708]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 80040f6:	685b      	ldr	r3, [r3, #4]
 80040f8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80040fc:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004100:	4bae      	ldr	r3, [pc, #696]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 8004102:	685b      	ldr	r3, [r3, #4]
 8004104:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004108:	2b00      	cmp	r3, #0
 800410a:	d031      	beq.n	8004170 <HAL_RCC_GetSysClockFreq+0xfc>
 800410c:	4bab      	ldr	r3, [pc, #684]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 800410e:	685b      	ldr	r3, [r3, #4]
 8004110:	099b      	lsrs	r3, r3, #6
 8004112:	2200      	movs	r2, #0
 8004114:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004116:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004118:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800411a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800411e:	663b      	str	r3, [r7, #96]	@ 0x60
 8004120:	2300      	movs	r3, #0
 8004122:	667b      	str	r3, [r7, #100]	@ 0x64
 8004124:	4ba7      	ldr	r3, [pc, #668]	@ (80043c4 <HAL_RCC_GetSysClockFreq+0x350>)
 8004126:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 800412a:	462a      	mov	r2, r5
 800412c:	fb03 f202 	mul.w	r2, r3, r2
 8004130:	2300      	movs	r3, #0
 8004132:	4621      	mov	r1, r4
 8004134:	fb01 f303 	mul.w	r3, r1, r3
 8004138:	4413      	add	r3, r2
 800413a:	4aa2      	ldr	r2, [pc, #648]	@ (80043c4 <HAL_RCC_GetSysClockFreq+0x350>)
 800413c:	4621      	mov	r1, r4
 800413e:	fba1 1202 	umull	r1, r2, r1, r2
 8004142:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004144:	460a      	mov	r2, r1
 8004146:	67ba      	str	r2, [r7, #120]	@ 0x78
 8004148:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800414a:	4413      	add	r3, r2
 800414c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800414e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004152:	2200      	movs	r2, #0
 8004154:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004156:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8004158:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800415c:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8004160:	f7fc f8ae 	bl	80002c0 <__aeabi_uldivmod>
 8004164:	4602      	mov	r2, r0
 8004166:	460b      	mov	r3, r1
 8004168:	4613      	mov	r3, r2
 800416a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800416e:	e064      	b.n	800423a <HAL_RCC_GetSysClockFreq+0x1c6>
 8004170:	4b92      	ldr	r3, [pc, #584]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 8004172:	685b      	ldr	r3, [r3, #4]
 8004174:	099b      	lsrs	r3, r3, #6
 8004176:	2200      	movs	r2, #0
 8004178:	653b      	str	r3, [r7, #80]	@ 0x50
 800417a:	657a      	str	r2, [r7, #84]	@ 0x54
 800417c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800417e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004182:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004184:	2300      	movs	r3, #0
 8004186:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004188:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 800418c:	4622      	mov	r2, r4
 800418e:	462b      	mov	r3, r5
 8004190:	f04f 0000 	mov.w	r0, #0
 8004194:	f04f 0100 	mov.w	r1, #0
 8004198:	0159      	lsls	r1, r3, #5
 800419a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800419e:	0150      	lsls	r0, r2, #5
 80041a0:	4602      	mov	r2, r0
 80041a2:	460b      	mov	r3, r1
 80041a4:	4621      	mov	r1, r4
 80041a6:	1a51      	subs	r1, r2, r1
 80041a8:	6139      	str	r1, [r7, #16]
 80041aa:	4629      	mov	r1, r5
 80041ac:	eb63 0301 	sbc.w	r3, r3, r1
 80041b0:	617b      	str	r3, [r7, #20]
 80041b2:	f04f 0200 	mov.w	r2, #0
 80041b6:	f04f 0300 	mov.w	r3, #0
 80041ba:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80041be:	4659      	mov	r1, fp
 80041c0:	018b      	lsls	r3, r1, #6
 80041c2:	4651      	mov	r1, sl
 80041c4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80041c8:	4651      	mov	r1, sl
 80041ca:	018a      	lsls	r2, r1, #6
 80041cc:	4651      	mov	r1, sl
 80041ce:	ebb2 0801 	subs.w	r8, r2, r1
 80041d2:	4659      	mov	r1, fp
 80041d4:	eb63 0901 	sbc.w	r9, r3, r1
 80041d8:	f04f 0200 	mov.w	r2, #0
 80041dc:	f04f 0300 	mov.w	r3, #0
 80041e0:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80041e4:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80041e8:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80041ec:	4690      	mov	r8, r2
 80041ee:	4699      	mov	r9, r3
 80041f0:	4623      	mov	r3, r4
 80041f2:	eb18 0303 	adds.w	r3, r8, r3
 80041f6:	60bb      	str	r3, [r7, #8]
 80041f8:	462b      	mov	r3, r5
 80041fa:	eb49 0303 	adc.w	r3, r9, r3
 80041fe:	60fb      	str	r3, [r7, #12]
 8004200:	f04f 0200 	mov.w	r2, #0
 8004204:	f04f 0300 	mov.w	r3, #0
 8004208:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800420c:	4629      	mov	r1, r5
 800420e:	028b      	lsls	r3, r1, #10
 8004210:	4621      	mov	r1, r4
 8004212:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004216:	4621      	mov	r1, r4
 8004218:	028a      	lsls	r2, r1, #10
 800421a:	4610      	mov	r0, r2
 800421c:	4619      	mov	r1, r3
 800421e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004222:	2200      	movs	r2, #0
 8004224:	643b      	str	r3, [r7, #64]	@ 0x40
 8004226:	647a      	str	r2, [r7, #68]	@ 0x44
 8004228:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800422c:	f7fc f848 	bl	80002c0 <__aeabi_uldivmod>
 8004230:	4602      	mov	r2, r0
 8004232:	460b      	mov	r3, r1
 8004234:	4613      	mov	r3, r2
 8004236:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800423a:	4b60      	ldr	r3, [pc, #384]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 800423c:	685b      	ldr	r3, [r3, #4]
 800423e:	0c1b      	lsrs	r3, r3, #16
 8004240:	f003 0303 	and.w	r3, r3, #3
 8004244:	3301      	adds	r3, #1
 8004246:	005b      	lsls	r3, r3, #1
 8004248:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800424c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004250:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004254:	fbb2 f3f3 	udiv	r3, r2, r3
 8004258:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800425c:	e0a6      	b.n	80043ac <HAL_RCC_GetSysClockFreq+0x338>
 800425e:	4b57      	ldr	r3, [pc, #348]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 8004260:	685b      	ldr	r3, [r3, #4]
 8004262:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004266:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800426a:	4b54      	ldr	r3, [pc, #336]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 800426c:	685b      	ldr	r3, [r3, #4]
 800426e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004272:	2b00      	cmp	r3, #0
 8004274:	d02a      	beq.n	80042cc <HAL_RCC_GetSysClockFreq+0x258>
 8004276:	4b51      	ldr	r3, [pc, #324]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 8004278:	685b      	ldr	r3, [r3, #4]
 800427a:	099b      	lsrs	r3, r3, #6
 800427c:	2200      	movs	r2, #0
 800427e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004280:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004282:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004284:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004288:	2100      	movs	r1, #0
 800428a:	4b4e      	ldr	r3, [pc, #312]	@ (80043c4 <HAL_RCC_GetSysClockFreq+0x350>)
 800428c:	fb03 f201 	mul.w	r2, r3, r1
 8004290:	2300      	movs	r3, #0
 8004292:	fb00 f303 	mul.w	r3, r0, r3
 8004296:	4413      	add	r3, r2
 8004298:	4a4a      	ldr	r2, [pc, #296]	@ (80043c4 <HAL_RCC_GetSysClockFreq+0x350>)
 800429a:	fba0 1202 	umull	r1, r2, r0, r2
 800429e:	677a      	str	r2, [r7, #116]	@ 0x74
 80042a0:	460a      	mov	r2, r1
 80042a2:	673a      	str	r2, [r7, #112]	@ 0x70
 80042a4:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80042a6:	4413      	add	r3, r2
 80042a8:	677b      	str	r3, [r7, #116]	@ 0x74
 80042aa:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80042ae:	2200      	movs	r2, #0
 80042b0:	633b      	str	r3, [r7, #48]	@ 0x30
 80042b2:	637a      	str	r2, [r7, #52]	@ 0x34
 80042b4:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80042b8:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80042bc:	f7fc f800 	bl	80002c0 <__aeabi_uldivmod>
 80042c0:	4602      	mov	r2, r0
 80042c2:	460b      	mov	r3, r1
 80042c4:	4613      	mov	r3, r2
 80042c6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80042ca:	e05b      	b.n	8004384 <HAL_RCC_GetSysClockFreq+0x310>
 80042cc:	4b3b      	ldr	r3, [pc, #236]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 80042ce:	685b      	ldr	r3, [r3, #4]
 80042d0:	099b      	lsrs	r3, r3, #6
 80042d2:	2200      	movs	r2, #0
 80042d4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80042d6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80042d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80042da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80042de:	623b      	str	r3, [r7, #32]
 80042e0:	2300      	movs	r3, #0
 80042e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80042e4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80042e8:	4642      	mov	r2, r8
 80042ea:	464b      	mov	r3, r9
 80042ec:	f04f 0000 	mov.w	r0, #0
 80042f0:	f04f 0100 	mov.w	r1, #0
 80042f4:	0159      	lsls	r1, r3, #5
 80042f6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80042fa:	0150      	lsls	r0, r2, #5
 80042fc:	4602      	mov	r2, r0
 80042fe:	460b      	mov	r3, r1
 8004300:	4641      	mov	r1, r8
 8004302:	ebb2 0a01 	subs.w	sl, r2, r1
 8004306:	4649      	mov	r1, r9
 8004308:	eb63 0b01 	sbc.w	fp, r3, r1
 800430c:	f04f 0200 	mov.w	r2, #0
 8004310:	f04f 0300 	mov.w	r3, #0
 8004314:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8004318:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800431c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8004320:	ebb2 040a 	subs.w	r4, r2, sl
 8004324:	eb63 050b 	sbc.w	r5, r3, fp
 8004328:	f04f 0200 	mov.w	r2, #0
 800432c:	f04f 0300 	mov.w	r3, #0
 8004330:	00eb      	lsls	r3, r5, #3
 8004332:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004336:	00e2      	lsls	r2, r4, #3
 8004338:	4614      	mov	r4, r2
 800433a:	461d      	mov	r5, r3
 800433c:	4643      	mov	r3, r8
 800433e:	18e3      	adds	r3, r4, r3
 8004340:	603b      	str	r3, [r7, #0]
 8004342:	464b      	mov	r3, r9
 8004344:	eb45 0303 	adc.w	r3, r5, r3
 8004348:	607b      	str	r3, [r7, #4]
 800434a:	f04f 0200 	mov.w	r2, #0
 800434e:	f04f 0300 	mov.w	r3, #0
 8004352:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004356:	4629      	mov	r1, r5
 8004358:	028b      	lsls	r3, r1, #10
 800435a:	4621      	mov	r1, r4
 800435c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004360:	4621      	mov	r1, r4
 8004362:	028a      	lsls	r2, r1, #10
 8004364:	4610      	mov	r0, r2
 8004366:	4619      	mov	r1, r3
 8004368:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800436c:	2200      	movs	r2, #0
 800436e:	61bb      	str	r3, [r7, #24]
 8004370:	61fa      	str	r2, [r7, #28]
 8004372:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004376:	f7fb ffa3 	bl	80002c0 <__aeabi_uldivmod>
 800437a:	4602      	mov	r2, r0
 800437c:	460b      	mov	r3, r1
 800437e:	4613      	mov	r3, r2
 8004380:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004384:	4b0d      	ldr	r3, [pc, #52]	@ (80043bc <HAL_RCC_GetSysClockFreq+0x348>)
 8004386:	685b      	ldr	r3, [r3, #4]
 8004388:	0f1b      	lsrs	r3, r3, #28
 800438a:	f003 0307 	and.w	r3, r3, #7
 800438e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004392:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004396:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800439a:	fbb2 f3f3 	udiv	r3, r2, r3
 800439e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80043a2:	e003      	b.n	80043ac <HAL_RCC_GetSysClockFreq+0x338>
 80043a4:	4b06      	ldr	r3, [pc, #24]	@ (80043c0 <HAL_RCC_GetSysClockFreq+0x34c>)
 80043a6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80043aa:	bf00      	nop
 80043ac:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80043b0:	4618      	mov	r0, r3
 80043b2:	3798      	adds	r7, #152	@ 0x98
 80043b4:	46bd      	mov	sp, r7
 80043b6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80043ba:	bf00      	nop
 80043bc:	40023800 	.word	0x40023800
 80043c0:	00f42400 	.word	0x00f42400
 80043c4:	017d7840 	.word	0x017d7840

080043c8 <HAL_RCC_OscConfig>:
 80043c8:	b580      	push	{r7, lr}
 80043ca:	b086      	sub	sp, #24
 80043cc:	af00      	add	r7, sp, #0
 80043ce:	6078      	str	r0, [r7, #4]
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	d101      	bne.n	80043da <HAL_RCC_OscConfig+0x12>
 80043d6:	2301      	movs	r3, #1
 80043d8:	e28d      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	f003 0301 	and.w	r3, r3, #1
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	f000 8083 	beq.w	80044ee <HAL_RCC_OscConfig+0x126>
 80043e8:	4b94      	ldr	r3, [pc, #592]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80043ea:	689b      	ldr	r3, [r3, #8]
 80043ec:	f003 030c 	and.w	r3, r3, #12
 80043f0:	2b04      	cmp	r3, #4
 80043f2:	d019      	beq.n	8004428 <HAL_RCC_OscConfig+0x60>
 80043f4:	4b91      	ldr	r3, [pc, #580]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80043f6:	689b      	ldr	r3, [r3, #8]
 80043f8:	f003 030c 	and.w	r3, r3, #12
 80043fc:	2b08      	cmp	r3, #8
 80043fe:	d106      	bne.n	800440e <HAL_RCC_OscConfig+0x46>
 8004400:	4b8e      	ldr	r3, [pc, #568]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004402:	685b      	ldr	r3, [r3, #4]
 8004404:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004408:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800440c:	d00c      	beq.n	8004428 <HAL_RCC_OscConfig+0x60>
 800440e:	4b8b      	ldr	r3, [pc, #556]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004410:	689b      	ldr	r3, [r3, #8]
 8004412:	f003 030c 	and.w	r3, r3, #12
 8004416:	2b0c      	cmp	r3, #12
 8004418:	d112      	bne.n	8004440 <HAL_RCC_OscConfig+0x78>
 800441a:	4b88      	ldr	r3, [pc, #544]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800441c:	685b      	ldr	r3, [r3, #4]
 800441e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004422:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004426:	d10b      	bne.n	8004440 <HAL_RCC_OscConfig+0x78>
 8004428:	4b84      	ldr	r3, [pc, #528]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800442a:	681b      	ldr	r3, [r3, #0]
 800442c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004430:	2b00      	cmp	r3, #0
 8004432:	d05b      	beq.n	80044ec <HAL_RCC_OscConfig+0x124>
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	685b      	ldr	r3, [r3, #4]
 8004438:	2b00      	cmp	r3, #0
 800443a:	d157      	bne.n	80044ec <HAL_RCC_OscConfig+0x124>
 800443c:	2301      	movs	r3, #1
 800443e:	e25a      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	685b      	ldr	r3, [r3, #4]
 8004444:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004448:	d106      	bne.n	8004458 <HAL_RCC_OscConfig+0x90>
 800444a:	4b7c      	ldr	r3, [pc, #496]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	4a7b      	ldr	r2, [pc, #492]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004450:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004454:	6013      	str	r3, [r2, #0]
 8004456:	e01d      	b.n	8004494 <HAL_RCC_OscConfig+0xcc>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	685b      	ldr	r3, [r3, #4]
 800445c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004460:	d10c      	bne.n	800447c <HAL_RCC_OscConfig+0xb4>
 8004462:	4b76      	ldr	r3, [pc, #472]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	4a75      	ldr	r2, [pc, #468]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004468:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800446c:	6013      	str	r3, [r2, #0]
 800446e:	4b73      	ldr	r3, [pc, #460]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	4a72      	ldr	r2, [pc, #456]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004474:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004478:	6013      	str	r3, [r2, #0]
 800447a:	e00b      	b.n	8004494 <HAL_RCC_OscConfig+0xcc>
 800447c:	4b6f      	ldr	r3, [pc, #444]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	4a6e      	ldr	r2, [pc, #440]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004482:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004486:	6013      	str	r3, [r2, #0]
 8004488:	4b6c      	ldr	r3, [pc, #432]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	4a6b      	ldr	r2, [pc, #428]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800448e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004492:	6013      	str	r3, [r2, #0]
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	685b      	ldr	r3, [r3, #4]
 8004498:	2b00      	cmp	r3, #0
 800449a:	d013      	beq.n	80044c4 <HAL_RCC_OscConfig+0xfc>
 800449c:	f7fe fdd2 	bl	8003044 <HAL_GetTick>
 80044a0:	6138      	str	r0, [r7, #16]
 80044a2:	e008      	b.n	80044b6 <HAL_RCC_OscConfig+0xee>
 80044a4:	f7fe fdce 	bl	8003044 <HAL_GetTick>
 80044a8:	4602      	mov	r2, r0
 80044aa:	693b      	ldr	r3, [r7, #16]
 80044ac:	1ad3      	subs	r3, r2, r3
 80044ae:	2b64      	cmp	r3, #100	@ 0x64
 80044b0:	d901      	bls.n	80044b6 <HAL_RCC_OscConfig+0xee>
 80044b2:	2303      	movs	r3, #3
 80044b4:	e21f      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80044b6:	4b61      	ldr	r3, [pc, #388]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044be:	2b00      	cmp	r3, #0
 80044c0:	d0f0      	beq.n	80044a4 <HAL_RCC_OscConfig+0xdc>
 80044c2:	e014      	b.n	80044ee <HAL_RCC_OscConfig+0x126>
 80044c4:	f7fe fdbe 	bl	8003044 <HAL_GetTick>
 80044c8:	6138      	str	r0, [r7, #16]
 80044ca:	e008      	b.n	80044de <HAL_RCC_OscConfig+0x116>
 80044cc:	f7fe fdba 	bl	8003044 <HAL_GetTick>
 80044d0:	4602      	mov	r2, r0
 80044d2:	693b      	ldr	r3, [r7, #16]
 80044d4:	1ad3      	subs	r3, r2, r3
 80044d6:	2b64      	cmp	r3, #100	@ 0x64
 80044d8:	d901      	bls.n	80044de <HAL_RCC_OscConfig+0x116>
 80044da:	2303      	movs	r3, #3
 80044dc:	e20b      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80044de:	4b57      	ldr	r3, [pc, #348]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d1f0      	bne.n	80044cc <HAL_RCC_OscConfig+0x104>
 80044ea:	e000      	b.n	80044ee <HAL_RCC_OscConfig+0x126>
 80044ec:	bf00      	nop
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	f003 0302 	and.w	r3, r3, #2
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d06f      	beq.n	80045da <HAL_RCC_OscConfig+0x212>
 80044fa:	4b50      	ldr	r3, [pc, #320]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80044fc:	689b      	ldr	r3, [r3, #8]
 80044fe:	f003 030c 	and.w	r3, r3, #12
 8004502:	2b00      	cmp	r3, #0
 8004504:	d017      	beq.n	8004536 <HAL_RCC_OscConfig+0x16e>
 8004506:	4b4d      	ldr	r3, [pc, #308]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004508:	689b      	ldr	r3, [r3, #8]
 800450a:	f003 030c 	and.w	r3, r3, #12
 800450e:	2b08      	cmp	r3, #8
 8004510:	d105      	bne.n	800451e <HAL_RCC_OscConfig+0x156>
 8004512:	4b4a      	ldr	r3, [pc, #296]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004514:	685b      	ldr	r3, [r3, #4]
 8004516:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800451a:	2b00      	cmp	r3, #0
 800451c:	d00b      	beq.n	8004536 <HAL_RCC_OscConfig+0x16e>
 800451e:	4b47      	ldr	r3, [pc, #284]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004520:	689b      	ldr	r3, [r3, #8]
 8004522:	f003 030c 	and.w	r3, r3, #12
 8004526:	2b0c      	cmp	r3, #12
 8004528:	d11c      	bne.n	8004564 <HAL_RCC_OscConfig+0x19c>
 800452a:	4b44      	ldr	r3, [pc, #272]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800452c:	685b      	ldr	r3, [r3, #4]
 800452e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004532:	2b00      	cmp	r3, #0
 8004534:	d116      	bne.n	8004564 <HAL_RCC_OscConfig+0x19c>
 8004536:	4b41      	ldr	r3, [pc, #260]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	f003 0302 	and.w	r3, r3, #2
 800453e:	2b00      	cmp	r3, #0
 8004540:	d005      	beq.n	800454e <HAL_RCC_OscConfig+0x186>
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	68db      	ldr	r3, [r3, #12]
 8004546:	2b01      	cmp	r3, #1
 8004548:	d001      	beq.n	800454e <HAL_RCC_OscConfig+0x186>
 800454a:	2301      	movs	r3, #1
 800454c:	e1d3      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 800454e:	4b3b      	ldr	r3, [pc, #236]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	691b      	ldr	r3, [r3, #16]
 800455a:	00db      	lsls	r3, r3, #3
 800455c:	4937      	ldr	r1, [pc, #220]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800455e:	4313      	orrs	r3, r2
 8004560:	600b      	str	r3, [r1, #0]
 8004562:	e03a      	b.n	80045da <HAL_RCC_OscConfig+0x212>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	68db      	ldr	r3, [r3, #12]
 8004568:	2b00      	cmp	r3, #0
 800456a:	d020      	beq.n	80045ae <HAL_RCC_OscConfig+0x1e6>
 800456c:	4b34      	ldr	r3, [pc, #208]	@ (8004640 <HAL_RCC_OscConfig+0x278>)
 800456e:	2201      	movs	r2, #1
 8004570:	601a      	str	r2, [r3, #0]
 8004572:	f7fe fd67 	bl	8003044 <HAL_GetTick>
 8004576:	6138      	str	r0, [r7, #16]
 8004578:	e008      	b.n	800458c <HAL_RCC_OscConfig+0x1c4>
 800457a:	f7fe fd63 	bl	8003044 <HAL_GetTick>
 800457e:	4602      	mov	r2, r0
 8004580:	693b      	ldr	r3, [r7, #16]
 8004582:	1ad3      	subs	r3, r2, r3
 8004584:	2b02      	cmp	r3, #2
 8004586:	d901      	bls.n	800458c <HAL_RCC_OscConfig+0x1c4>
 8004588:	2303      	movs	r3, #3
 800458a:	e1b4      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 800458c:	4b2b      	ldr	r3, [pc, #172]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	f003 0302 	and.w	r3, r3, #2
 8004594:	2b00      	cmp	r3, #0
 8004596:	d0f0      	beq.n	800457a <HAL_RCC_OscConfig+0x1b2>
 8004598:	4b28      	ldr	r3, [pc, #160]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	691b      	ldr	r3, [r3, #16]
 80045a4:	00db      	lsls	r3, r3, #3
 80045a6:	4925      	ldr	r1, [pc, #148]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80045a8:	4313      	orrs	r3, r2
 80045aa:	600b      	str	r3, [r1, #0]
 80045ac:	e015      	b.n	80045da <HAL_RCC_OscConfig+0x212>
 80045ae:	4b24      	ldr	r3, [pc, #144]	@ (8004640 <HAL_RCC_OscConfig+0x278>)
 80045b0:	2200      	movs	r2, #0
 80045b2:	601a      	str	r2, [r3, #0]
 80045b4:	f7fe fd46 	bl	8003044 <HAL_GetTick>
 80045b8:	6138      	str	r0, [r7, #16]
 80045ba:	e008      	b.n	80045ce <HAL_RCC_OscConfig+0x206>
 80045bc:	f7fe fd42 	bl	8003044 <HAL_GetTick>
 80045c0:	4602      	mov	r2, r0
 80045c2:	693b      	ldr	r3, [r7, #16]
 80045c4:	1ad3      	subs	r3, r2, r3
 80045c6:	2b02      	cmp	r3, #2
 80045c8:	d901      	bls.n	80045ce <HAL_RCC_OscConfig+0x206>
 80045ca:	2303      	movs	r3, #3
 80045cc:	e193      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80045ce:	4b1b      	ldr	r3, [pc, #108]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	f003 0302 	and.w	r3, r3, #2
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d1f0      	bne.n	80045bc <HAL_RCC_OscConfig+0x1f4>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	f003 0308 	and.w	r3, r3, #8
 80045e2:	2b00      	cmp	r3, #0
 80045e4:	d036      	beq.n	8004654 <HAL_RCC_OscConfig+0x28c>
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	695b      	ldr	r3, [r3, #20]
 80045ea:	2b00      	cmp	r3, #0
 80045ec:	d016      	beq.n	800461c <HAL_RCC_OscConfig+0x254>
 80045ee:	4b15      	ldr	r3, [pc, #84]	@ (8004644 <HAL_RCC_OscConfig+0x27c>)
 80045f0:	2201      	movs	r2, #1
 80045f2:	601a      	str	r2, [r3, #0]
 80045f4:	f7fe fd26 	bl	8003044 <HAL_GetTick>
 80045f8:	6138      	str	r0, [r7, #16]
 80045fa:	e008      	b.n	800460e <HAL_RCC_OscConfig+0x246>
 80045fc:	f7fe fd22 	bl	8003044 <HAL_GetTick>
 8004600:	4602      	mov	r2, r0
 8004602:	693b      	ldr	r3, [r7, #16]
 8004604:	1ad3      	subs	r3, r2, r3
 8004606:	2b02      	cmp	r3, #2
 8004608:	d901      	bls.n	800460e <HAL_RCC_OscConfig+0x246>
 800460a:	2303      	movs	r3, #3
 800460c:	e173      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 800460e:	4b0b      	ldr	r3, [pc, #44]	@ (800463c <HAL_RCC_OscConfig+0x274>)
 8004610:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004612:	f003 0302 	and.w	r3, r3, #2
 8004616:	2b00      	cmp	r3, #0
 8004618:	d0f0      	beq.n	80045fc <HAL_RCC_OscConfig+0x234>
 800461a:	e01b      	b.n	8004654 <HAL_RCC_OscConfig+0x28c>
 800461c:	4b09      	ldr	r3, [pc, #36]	@ (8004644 <HAL_RCC_OscConfig+0x27c>)
 800461e:	2200      	movs	r2, #0
 8004620:	601a      	str	r2, [r3, #0]
 8004622:	f7fe fd0f 	bl	8003044 <HAL_GetTick>
 8004626:	6138      	str	r0, [r7, #16]
 8004628:	e00e      	b.n	8004648 <HAL_RCC_OscConfig+0x280>
 800462a:	f7fe fd0b 	bl	8003044 <HAL_GetTick>
 800462e:	4602      	mov	r2, r0
 8004630:	693b      	ldr	r3, [r7, #16]
 8004632:	1ad3      	subs	r3, r2, r3
 8004634:	2b02      	cmp	r3, #2
 8004636:	d907      	bls.n	8004648 <HAL_RCC_OscConfig+0x280>
 8004638:	2303      	movs	r3, #3
 800463a:	e15c      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 800463c:	40023800 	.word	0x40023800
 8004640:	42470000 	.word	0x42470000
 8004644:	42470e80 	.word	0x42470e80
 8004648:	4b8a      	ldr	r3, [pc, #552]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800464a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800464c:	f003 0302 	and.w	r3, r3, #2
 8004650:	2b00      	cmp	r3, #0
 8004652:	d1ea      	bne.n	800462a <HAL_RCC_OscConfig+0x262>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	f003 0304 	and.w	r3, r3, #4
 800465c:	2b00      	cmp	r3, #0
 800465e:	f000 8097 	beq.w	8004790 <HAL_RCC_OscConfig+0x3c8>
 8004662:	2300      	movs	r3, #0
 8004664:	75fb      	strb	r3, [r7, #23]
 8004666:	4b83      	ldr	r3, [pc, #524]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004668:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800466a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800466e:	2b00      	cmp	r3, #0
 8004670:	d10f      	bne.n	8004692 <HAL_RCC_OscConfig+0x2ca>
 8004672:	2300      	movs	r3, #0
 8004674:	60bb      	str	r3, [r7, #8]
 8004676:	4b7f      	ldr	r3, [pc, #508]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004678:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800467a:	4a7e      	ldr	r2, [pc, #504]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800467c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004680:	6413      	str	r3, [r2, #64]	@ 0x40
 8004682:	4b7c      	ldr	r3, [pc, #496]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004684:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004686:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800468a:	60bb      	str	r3, [r7, #8]
 800468c:	68bb      	ldr	r3, [r7, #8]
 800468e:	2301      	movs	r3, #1
 8004690:	75fb      	strb	r3, [r7, #23]
 8004692:	4b79      	ldr	r3, [pc, #484]	@ (8004878 <HAL_RCC_OscConfig+0x4b0>)
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800469a:	2b00      	cmp	r3, #0
 800469c:	d118      	bne.n	80046d0 <HAL_RCC_OscConfig+0x308>
 800469e:	4b76      	ldr	r3, [pc, #472]	@ (8004878 <HAL_RCC_OscConfig+0x4b0>)
 80046a0:	681b      	ldr	r3, [r3, #0]
 80046a2:	4a75      	ldr	r2, [pc, #468]	@ (8004878 <HAL_RCC_OscConfig+0x4b0>)
 80046a4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80046a8:	6013      	str	r3, [r2, #0]
 80046aa:	f7fe fccb 	bl	8003044 <HAL_GetTick>
 80046ae:	6138      	str	r0, [r7, #16]
 80046b0:	e008      	b.n	80046c4 <HAL_RCC_OscConfig+0x2fc>
 80046b2:	f7fe fcc7 	bl	8003044 <HAL_GetTick>
 80046b6:	4602      	mov	r2, r0
 80046b8:	693b      	ldr	r3, [r7, #16]
 80046ba:	1ad3      	subs	r3, r2, r3
 80046bc:	2b02      	cmp	r3, #2
 80046be:	d901      	bls.n	80046c4 <HAL_RCC_OscConfig+0x2fc>
 80046c0:	2303      	movs	r3, #3
 80046c2:	e118      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80046c4:	4b6c      	ldr	r3, [pc, #432]	@ (8004878 <HAL_RCC_OscConfig+0x4b0>)
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80046cc:	2b00      	cmp	r3, #0
 80046ce:	d0f0      	beq.n	80046b2 <HAL_RCC_OscConfig+0x2ea>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	689b      	ldr	r3, [r3, #8]
 80046d4:	2b01      	cmp	r3, #1
 80046d6:	d106      	bne.n	80046e6 <HAL_RCC_OscConfig+0x31e>
 80046d8:	4b66      	ldr	r3, [pc, #408]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 80046da:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80046dc:	4a65      	ldr	r2, [pc, #404]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 80046de:	f043 0301 	orr.w	r3, r3, #1
 80046e2:	6713      	str	r3, [r2, #112]	@ 0x70
 80046e4:	e01c      	b.n	8004720 <HAL_RCC_OscConfig+0x358>
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	689b      	ldr	r3, [r3, #8]
 80046ea:	2b05      	cmp	r3, #5
 80046ec:	d10c      	bne.n	8004708 <HAL_RCC_OscConfig+0x340>
 80046ee:	4b61      	ldr	r3, [pc, #388]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 80046f0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80046f2:	4a60      	ldr	r2, [pc, #384]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 80046f4:	f043 0304 	orr.w	r3, r3, #4
 80046f8:	6713      	str	r3, [r2, #112]	@ 0x70
 80046fa:	4b5e      	ldr	r3, [pc, #376]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 80046fc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80046fe:	4a5d      	ldr	r2, [pc, #372]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004700:	f043 0301 	orr.w	r3, r3, #1
 8004704:	6713      	str	r3, [r2, #112]	@ 0x70
 8004706:	e00b      	b.n	8004720 <HAL_RCC_OscConfig+0x358>
 8004708:	4b5a      	ldr	r3, [pc, #360]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800470a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800470c:	4a59      	ldr	r2, [pc, #356]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800470e:	f023 0301 	bic.w	r3, r3, #1
 8004712:	6713      	str	r3, [r2, #112]	@ 0x70
 8004714:	4b57      	ldr	r3, [pc, #348]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004716:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004718:	4a56      	ldr	r2, [pc, #344]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800471a:	f023 0304 	bic.w	r3, r3, #4
 800471e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	689b      	ldr	r3, [r3, #8]
 8004724:	2b00      	cmp	r3, #0
 8004726:	d015      	beq.n	8004754 <HAL_RCC_OscConfig+0x38c>
 8004728:	f7fe fc8c 	bl	8003044 <HAL_GetTick>
 800472c:	6138      	str	r0, [r7, #16]
 800472e:	e00a      	b.n	8004746 <HAL_RCC_OscConfig+0x37e>
 8004730:	f7fe fc88 	bl	8003044 <HAL_GetTick>
 8004734:	4602      	mov	r2, r0
 8004736:	693b      	ldr	r3, [r7, #16]
 8004738:	1ad3      	subs	r3, r2, r3
 800473a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800473e:	4293      	cmp	r3, r2
 8004740:	d901      	bls.n	8004746 <HAL_RCC_OscConfig+0x37e>
 8004742:	2303      	movs	r3, #3
 8004744:	e0d7      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 8004746:	4b4b      	ldr	r3, [pc, #300]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004748:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800474a:	f003 0302 	and.w	r3, r3, #2
 800474e:	2b00      	cmp	r3, #0
 8004750:	d0ee      	beq.n	8004730 <HAL_RCC_OscConfig+0x368>
 8004752:	e014      	b.n	800477e <HAL_RCC_OscConfig+0x3b6>
 8004754:	f7fe fc76 	bl	8003044 <HAL_GetTick>
 8004758:	6138      	str	r0, [r7, #16]
 800475a:	e00a      	b.n	8004772 <HAL_RCC_OscConfig+0x3aa>
 800475c:	f7fe fc72 	bl	8003044 <HAL_GetTick>
 8004760:	4602      	mov	r2, r0
 8004762:	693b      	ldr	r3, [r7, #16]
 8004764:	1ad3      	subs	r3, r2, r3
 8004766:	f241 3288 	movw	r2, #5000	@ 0x1388
 800476a:	4293      	cmp	r3, r2
 800476c:	d901      	bls.n	8004772 <HAL_RCC_OscConfig+0x3aa>
 800476e:	2303      	movs	r3, #3
 8004770:	e0c1      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 8004772:	4b40      	ldr	r3, [pc, #256]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004774:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004776:	f003 0302 	and.w	r3, r3, #2
 800477a:	2b00      	cmp	r3, #0
 800477c:	d1ee      	bne.n	800475c <HAL_RCC_OscConfig+0x394>
 800477e:	7dfb      	ldrb	r3, [r7, #23]
 8004780:	2b01      	cmp	r3, #1
 8004782:	d105      	bne.n	8004790 <HAL_RCC_OscConfig+0x3c8>
 8004784:	4b3b      	ldr	r3, [pc, #236]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004786:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004788:	4a3a      	ldr	r2, [pc, #232]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800478a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800478e:	6413      	str	r3, [r2, #64]	@ 0x40
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	699b      	ldr	r3, [r3, #24]
 8004794:	2b00      	cmp	r3, #0
 8004796:	f000 80ad 	beq.w	80048f4 <HAL_RCC_OscConfig+0x52c>
 800479a:	4b36      	ldr	r3, [pc, #216]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800479c:	689b      	ldr	r3, [r3, #8]
 800479e:	f003 030c 	and.w	r3, r3, #12
 80047a2:	2b08      	cmp	r3, #8
 80047a4:	d060      	beq.n	8004868 <HAL_RCC_OscConfig+0x4a0>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	699b      	ldr	r3, [r3, #24]
 80047aa:	2b02      	cmp	r3, #2
 80047ac:	d145      	bne.n	800483a <HAL_RCC_OscConfig+0x472>
 80047ae:	4b33      	ldr	r3, [pc, #204]	@ (800487c <HAL_RCC_OscConfig+0x4b4>)
 80047b0:	2200      	movs	r2, #0
 80047b2:	601a      	str	r2, [r3, #0]
 80047b4:	f7fe fc46 	bl	8003044 <HAL_GetTick>
 80047b8:	6138      	str	r0, [r7, #16]
 80047ba:	e008      	b.n	80047ce <HAL_RCC_OscConfig+0x406>
 80047bc:	f7fe fc42 	bl	8003044 <HAL_GetTick>
 80047c0:	4602      	mov	r2, r0
 80047c2:	693b      	ldr	r3, [r7, #16]
 80047c4:	1ad3      	subs	r3, r2, r3
 80047c6:	2b02      	cmp	r3, #2
 80047c8:	d901      	bls.n	80047ce <HAL_RCC_OscConfig+0x406>
 80047ca:	2303      	movs	r3, #3
 80047cc:	e093      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80047ce:	4b29      	ldr	r3, [pc, #164]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80047d6:	2b00      	cmp	r3, #0
 80047d8:	d1f0      	bne.n	80047bc <HAL_RCC_OscConfig+0x3f4>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	69da      	ldr	r2, [r3, #28]
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	6a1b      	ldr	r3, [r3, #32]
 80047e2:	431a      	orrs	r2, r3
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047e8:	019b      	lsls	r3, r3, #6
 80047ea:	431a      	orrs	r2, r3
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80047f0:	085b      	lsrs	r3, r3, #1
 80047f2:	3b01      	subs	r3, #1
 80047f4:	041b      	lsls	r3, r3, #16
 80047f6:	431a      	orrs	r2, r3
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80047fc:	061b      	lsls	r3, r3, #24
 80047fe:	431a      	orrs	r2, r3
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004804:	071b      	lsls	r3, r3, #28
 8004806:	491b      	ldr	r1, [pc, #108]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 8004808:	4313      	orrs	r3, r2
 800480a:	604b      	str	r3, [r1, #4]
 800480c:	4b1b      	ldr	r3, [pc, #108]	@ (800487c <HAL_RCC_OscConfig+0x4b4>)
 800480e:	2201      	movs	r2, #1
 8004810:	601a      	str	r2, [r3, #0]
 8004812:	f7fe fc17 	bl	8003044 <HAL_GetTick>
 8004816:	6138      	str	r0, [r7, #16]
 8004818:	e008      	b.n	800482c <HAL_RCC_OscConfig+0x464>
 800481a:	f7fe fc13 	bl	8003044 <HAL_GetTick>
 800481e:	4602      	mov	r2, r0
 8004820:	693b      	ldr	r3, [r7, #16]
 8004822:	1ad3      	subs	r3, r2, r3
 8004824:	2b02      	cmp	r3, #2
 8004826:	d901      	bls.n	800482c <HAL_RCC_OscConfig+0x464>
 8004828:	2303      	movs	r3, #3
 800482a:	e064      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 800482c:	4b11      	ldr	r3, [pc, #68]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004834:	2b00      	cmp	r3, #0
 8004836:	d0f0      	beq.n	800481a <HAL_RCC_OscConfig+0x452>
 8004838:	e05c      	b.n	80048f4 <HAL_RCC_OscConfig+0x52c>
 800483a:	4b10      	ldr	r3, [pc, #64]	@ (800487c <HAL_RCC_OscConfig+0x4b4>)
 800483c:	2200      	movs	r2, #0
 800483e:	601a      	str	r2, [r3, #0]
 8004840:	f7fe fc00 	bl	8003044 <HAL_GetTick>
 8004844:	6138      	str	r0, [r7, #16]
 8004846:	e008      	b.n	800485a <HAL_RCC_OscConfig+0x492>
 8004848:	f7fe fbfc 	bl	8003044 <HAL_GetTick>
 800484c:	4602      	mov	r2, r0
 800484e:	693b      	ldr	r3, [r7, #16]
 8004850:	1ad3      	subs	r3, r2, r3
 8004852:	2b02      	cmp	r3, #2
 8004854:	d901      	bls.n	800485a <HAL_RCC_OscConfig+0x492>
 8004856:	2303      	movs	r3, #3
 8004858:	e04d      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 800485a:	4b06      	ldr	r3, [pc, #24]	@ (8004874 <HAL_RCC_OscConfig+0x4ac>)
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004862:	2b00      	cmp	r3, #0
 8004864:	d1f0      	bne.n	8004848 <HAL_RCC_OscConfig+0x480>
 8004866:	e045      	b.n	80048f4 <HAL_RCC_OscConfig+0x52c>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	699b      	ldr	r3, [r3, #24]
 800486c:	2b01      	cmp	r3, #1
 800486e:	d107      	bne.n	8004880 <HAL_RCC_OscConfig+0x4b8>
 8004870:	2301      	movs	r3, #1
 8004872:	e040      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 8004874:	40023800 	.word	0x40023800
 8004878:	40007000 	.word	0x40007000
 800487c:	42470060 	.word	0x42470060
 8004880:	4b1f      	ldr	r3, [pc, #124]	@ (8004900 <HAL_RCC_OscConfig+0x538>)
 8004882:	685b      	ldr	r3, [r3, #4]
 8004884:	60fb      	str	r3, [r7, #12]
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	699b      	ldr	r3, [r3, #24]
 800488a:	2b01      	cmp	r3, #1
 800488c:	d030      	beq.n	80048f0 <HAL_RCC_OscConfig+0x528>
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	69db      	ldr	r3, [r3, #28]
 8004898:	429a      	cmp	r2, r3
 800489a:	d129      	bne.n	80048f0 <HAL_RCC_OscConfig+0x528>
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	6a1b      	ldr	r3, [r3, #32]
 80048a6:	429a      	cmp	r2, r3
 80048a8:	d122      	bne.n	80048f0 <HAL_RCC_OscConfig+0x528>
 80048aa:	68fa      	ldr	r2, [r7, #12]
 80048ac:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80048b0:	4013      	ands	r3, r2
 80048b2:	687a      	ldr	r2, [r7, #4]
 80048b4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80048b6:	0192      	lsls	r2, r2, #6
 80048b8:	4293      	cmp	r3, r2
 80048ba:	d119      	bne.n	80048f0 <HAL_RCC_OscConfig+0x528>
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80048c6:	085b      	lsrs	r3, r3, #1
 80048c8:	3b01      	subs	r3, #1
 80048ca:	041b      	lsls	r3, r3, #16
 80048cc:	429a      	cmp	r2, r3
 80048ce:	d10f      	bne.n	80048f0 <HAL_RCC_OscConfig+0x528>
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80048da:	061b      	lsls	r3, r3, #24
 80048dc:	429a      	cmp	r2, r3
 80048de:	d107      	bne.n	80048f0 <HAL_RCC_OscConfig+0x528>
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80048ea:	071b      	lsls	r3, r3, #28
 80048ec:	429a      	cmp	r2, r3
 80048ee:	d001      	beq.n	80048f4 <HAL_RCC_OscConfig+0x52c>
 80048f0:	2301      	movs	r3, #1
 80048f2:	e000      	b.n	80048f6 <HAL_RCC_OscConfig+0x52e>
 80048f4:	2300      	movs	r3, #0
 80048f6:	4618      	mov	r0, r3
 80048f8:	3718      	adds	r7, #24
 80048fa:	46bd      	mov	sp, r7
 80048fc:	bd80      	pop	{r7, pc}
 80048fe:	bf00      	nop
 8004900:	40023800 	.word	0x40023800

08004904 <HAL_SPI_Init>:
 8004904:	b580      	push	{r7, lr}
 8004906:	b082      	sub	sp, #8
 8004908:	af00      	add	r7, sp, #0
 800490a:	6078      	str	r0, [r7, #4]
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	2b00      	cmp	r3, #0
 8004910:	d101      	bne.n	8004916 <HAL_SPI_Init+0x12>
 8004912:	2301      	movs	r3, #1
 8004914:	e07b      	b.n	8004a0e <HAL_SPI_Init+0x10a>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800491a:	2b00      	cmp	r3, #0
 800491c:	d108      	bne.n	8004930 <HAL_SPI_Init+0x2c>
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	685b      	ldr	r3, [r3, #4]
 8004922:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004926:	d009      	beq.n	800493c <HAL_SPI_Init+0x38>
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	2200      	movs	r2, #0
 800492c:	61da      	str	r2, [r3, #28]
 800492e:	e005      	b.n	800493c <HAL_SPI_Init+0x38>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	2200      	movs	r2, #0
 8004934:	611a      	str	r2, [r3, #16]
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	2200      	movs	r2, #0
 800493a:	615a      	str	r2, [r3, #20]
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	2200      	movs	r2, #0
 8004940:	629a      	str	r2, [r3, #40]	@ 0x28
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004948:	b2db      	uxtb	r3, r3
 800494a:	2b00      	cmp	r3, #0
 800494c:	d106      	bne.n	800495c <HAL_SPI_Init+0x58>
 800494e:	687b      	ldr	r3, [r7, #4]
 8004950:	2200      	movs	r2, #0
 8004952:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004956:	6878      	ldr	r0, [r7, #4]
 8004958:	f7fe f868 	bl	8002a2c <HAL_SPI_MspInit>
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2202      	movs	r2, #2
 8004960:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	681a      	ldr	r2, [r3, #0]
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004972:	601a      	str	r2, [r3, #0]
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	685b      	ldr	r3, [r3, #4]
 8004978:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	689b      	ldr	r3, [r3, #8]
 8004980:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8004984:	431a      	orrs	r2, r3
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	68db      	ldr	r3, [r3, #12]
 800498a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800498e:	431a      	orrs	r2, r3
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	691b      	ldr	r3, [r3, #16]
 8004994:	f003 0302 	and.w	r3, r3, #2
 8004998:	431a      	orrs	r2, r3
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	695b      	ldr	r3, [r3, #20]
 800499e:	f003 0301 	and.w	r3, r3, #1
 80049a2:	431a      	orrs	r2, r3
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	699b      	ldr	r3, [r3, #24]
 80049a8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80049ac:	431a      	orrs	r2, r3
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	69db      	ldr	r3, [r3, #28]
 80049b2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80049b6:	431a      	orrs	r2, r3
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	6a1b      	ldr	r3, [r3, #32]
 80049bc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80049c0:	ea42 0103 	orr.w	r1, r2, r3
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80049c8:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	430a      	orrs	r2, r1
 80049d2:	601a      	str	r2, [r3, #0]
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	699b      	ldr	r3, [r3, #24]
 80049d8:	0c1b      	lsrs	r3, r3, #16
 80049da:	f003 0104 	and.w	r1, r3, #4
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049e2:	f003 0210 	and.w	r2, r3, #16
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	430a      	orrs	r2, r1
 80049ec:	605a      	str	r2, [r3, #4]
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	69da      	ldr	r2, [r3, #28]
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80049fc:	61da      	str	r2, [r3, #28]
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	2200      	movs	r2, #0
 8004a02:	655a      	str	r2, [r3, #84]	@ 0x54
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	2201      	movs	r2, #1
 8004a08:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004a0c:	2300      	movs	r3, #0
 8004a0e:	4618      	mov	r0, r3
 8004a10:	3708      	adds	r7, #8
 8004a12:	46bd      	mov	sp, r7
 8004a14:	bd80      	pop	{r7, pc}

08004a16 <HAL_SPI_Transmit>:
 8004a16:	b580      	push	{r7, lr}
 8004a18:	b088      	sub	sp, #32
 8004a1a:	af00      	add	r7, sp, #0
 8004a1c:	60f8      	str	r0, [r7, #12]
 8004a1e:	60b9      	str	r1, [r7, #8]
 8004a20:	603b      	str	r3, [r7, #0]
 8004a22:	4613      	mov	r3, r2
 8004a24:	80fb      	strh	r3, [r7, #6]
 8004a26:	f7fe fb0d 	bl	8003044 <HAL_GetTick>
 8004a2a:	61f8      	str	r0, [r7, #28]
 8004a2c:	88fb      	ldrh	r3, [r7, #6]
 8004a2e:	837b      	strh	r3, [r7, #26]
 8004a30:	68fb      	ldr	r3, [r7, #12]
 8004a32:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004a36:	b2db      	uxtb	r3, r3
 8004a38:	2b01      	cmp	r3, #1
 8004a3a:	d001      	beq.n	8004a40 <HAL_SPI_Transmit+0x2a>
 8004a3c:	2302      	movs	r3, #2
 8004a3e:	e12a      	b.n	8004c96 <HAL_SPI_Transmit+0x280>
 8004a40:	68bb      	ldr	r3, [r7, #8]
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	d002      	beq.n	8004a4c <HAL_SPI_Transmit+0x36>
 8004a46:	88fb      	ldrh	r3, [r7, #6]
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d101      	bne.n	8004a50 <HAL_SPI_Transmit+0x3a>
 8004a4c:	2301      	movs	r3, #1
 8004a4e:	e122      	b.n	8004c96 <HAL_SPI_Transmit+0x280>
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8004a56:	2b01      	cmp	r3, #1
 8004a58:	d101      	bne.n	8004a5e <HAL_SPI_Transmit+0x48>
 8004a5a:	2302      	movs	r3, #2
 8004a5c:	e11b      	b.n	8004c96 <HAL_SPI_Transmit+0x280>
 8004a5e:	68fb      	ldr	r3, [r7, #12]
 8004a60:	2201      	movs	r2, #1
 8004a62:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004a66:	68fb      	ldr	r3, [r7, #12]
 8004a68:	2203      	movs	r2, #3
 8004a6a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	2200      	movs	r2, #0
 8004a72:	655a      	str	r2, [r3, #84]	@ 0x54
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	68ba      	ldr	r2, [r7, #8]
 8004a78:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	88fa      	ldrh	r2, [r7, #6]
 8004a7e:	869a      	strh	r2, [r3, #52]	@ 0x34
 8004a80:	68fb      	ldr	r3, [r7, #12]
 8004a82:	88fa      	ldrh	r2, [r7, #6]
 8004a84:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	2200      	movs	r2, #0
 8004a8a:	639a      	str	r2, [r3, #56]	@ 0x38
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	2200      	movs	r2, #0
 8004a90:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	2200      	movs	r2, #0
 8004a96:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004a98:	68fb      	ldr	r3, [r7, #12]
 8004a9a:	2200      	movs	r2, #0
 8004a9c:	645a      	str	r2, [r3, #68]	@ 0x44
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	2200      	movs	r2, #0
 8004aa2:	641a      	str	r2, [r3, #64]	@ 0x40
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	689b      	ldr	r3, [r3, #8]
 8004aa8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004aac:	d10f      	bne.n	8004ace <HAL_SPI_Transmit+0xb8>
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	681a      	ldr	r2, [r3, #0]
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004abc:	601a      	str	r2, [r3, #0]
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	681a      	ldr	r2, [r3, #0]
 8004ac4:	68fb      	ldr	r3, [r7, #12]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004acc:	601a      	str	r2, [r3, #0]
 8004ace:	68fb      	ldr	r3, [r7, #12]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ad8:	2b40      	cmp	r3, #64	@ 0x40
 8004ada:	d007      	beq.n	8004aec <HAL_SPI_Transmit+0xd6>
 8004adc:	68fb      	ldr	r3, [r7, #12]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	681a      	ldr	r2, [r3, #0]
 8004ae2:	68fb      	ldr	r3, [r7, #12]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004aea:	601a      	str	r2, [r3, #0]
 8004aec:	68fb      	ldr	r3, [r7, #12]
 8004aee:	68db      	ldr	r3, [r3, #12]
 8004af0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004af4:	d152      	bne.n	8004b9c <HAL_SPI_Transmit+0x186>
 8004af6:	68fb      	ldr	r3, [r7, #12]
 8004af8:	685b      	ldr	r3, [r3, #4]
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d002      	beq.n	8004b04 <HAL_SPI_Transmit+0xee>
 8004afe:	8b7b      	ldrh	r3, [r7, #26]
 8004b00:	2b01      	cmp	r3, #1
 8004b02:	d145      	bne.n	8004b90 <HAL_SPI_Transmit+0x17a>
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b08:	881a      	ldrh	r2, [r3, #0]
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	60da      	str	r2, [r3, #12]
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b14:	1c9a      	adds	r2, r3, #2
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	631a      	str	r2, [r3, #48]	@ 0x30
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004b1e:	b29b      	uxth	r3, r3
 8004b20:	3b01      	subs	r3, #1
 8004b22:	b29a      	uxth	r2, r3
 8004b24:	68fb      	ldr	r3, [r7, #12]
 8004b26:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004b28:	e032      	b.n	8004b90 <HAL_SPI_Transmit+0x17a>
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	681b      	ldr	r3, [r3, #0]
 8004b2e:	689b      	ldr	r3, [r3, #8]
 8004b30:	f003 0302 	and.w	r3, r3, #2
 8004b34:	2b02      	cmp	r3, #2
 8004b36:	d112      	bne.n	8004b5e <HAL_SPI_Transmit+0x148>
 8004b38:	68fb      	ldr	r3, [r7, #12]
 8004b3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b3c:	881a      	ldrh	r2, [r3, #0]
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	60da      	str	r2, [r3, #12]
 8004b44:	68fb      	ldr	r3, [r7, #12]
 8004b46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b48:	1c9a      	adds	r2, r3, #2
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	631a      	str	r2, [r3, #48]	@ 0x30
 8004b4e:	68fb      	ldr	r3, [r7, #12]
 8004b50:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004b52:	b29b      	uxth	r3, r3
 8004b54:	3b01      	subs	r3, #1
 8004b56:	b29a      	uxth	r2, r3
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004b5c:	e018      	b.n	8004b90 <HAL_SPI_Transmit+0x17a>
 8004b5e:	f7fe fa71 	bl	8003044 <HAL_GetTick>
 8004b62:	4602      	mov	r2, r0
 8004b64:	69fb      	ldr	r3, [r7, #28]
 8004b66:	1ad3      	subs	r3, r2, r3
 8004b68:	683a      	ldr	r2, [r7, #0]
 8004b6a:	429a      	cmp	r2, r3
 8004b6c:	d803      	bhi.n	8004b76 <HAL_SPI_Transmit+0x160>
 8004b6e:	683b      	ldr	r3, [r7, #0]
 8004b70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b74:	d102      	bne.n	8004b7c <HAL_SPI_Transmit+0x166>
 8004b76:	683b      	ldr	r3, [r7, #0]
 8004b78:	2b00      	cmp	r3, #0
 8004b7a:	d109      	bne.n	8004b90 <HAL_SPI_Transmit+0x17a>
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	2201      	movs	r2, #1
 8004b80:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004b84:	68fb      	ldr	r3, [r7, #12]
 8004b86:	2200      	movs	r2, #0
 8004b88:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004b8c:	2303      	movs	r3, #3
 8004b8e:	e082      	b.n	8004c96 <HAL_SPI_Transmit+0x280>
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004b94:	b29b      	uxth	r3, r3
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d1c7      	bne.n	8004b2a <HAL_SPI_Transmit+0x114>
 8004b9a:	e053      	b.n	8004c44 <HAL_SPI_Transmit+0x22e>
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	685b      	ldr	r3, [r3, #4]
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	d002      	beq.n	8004baa <HAL_SPI_Transmit+0x194>
 8004ba4:	8b7b      	ldrh	r3, [r7, #26]
 8004ba6:	2b01      	cmp	r3, #1
 8004ba8:	d147      	bne.n	8004c3a <HAL_SPI_Transmit+0x224>
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004bae:	68fb      	ldr	r3, [r7, #12]
 8004bb0:	681b      	ldr	r3, [r3, #0]
 8004bb2:	330c      	adds	r3, #12
 8004bb4:	7812      	ldrb	r2, [r2, #0]
 8004bb6:	701a      	strb	r2, [r3, #0]
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004bbc:	1c5a      	adds	r2, r3, #1
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	631a      	str	r2, [r3, #48]	@ 0x30
 8004bc2:	68fb      	ldr	r3, [r7, #12]
 8004bc4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004bc6:	b29b      	uxth	r3, r3
 8004bc8:	3b01      	subs	r3, #1
 8004bca:	b29a      	uxth	r2, r3
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004bd0:	e033      	b.n	8004c3a <HAL_SPI_Transmit+0x224>
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	689b      	ldr	r3, [r3, #8]
 8004bd8:	f003 0302 	and.w	r3, r3, #2
 8004bdc:	2b02      	cmp	r3, #2
 8004bde:	d113      	bne.n	8004c08 <HAL_SPI_Transmit+0x1f2>
 8004be0:	68fb      	ldr	r3, [r7, #12]
 8004be2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004be4:	68fb      	ldr	r3, [r7, #12]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	330c      	adds	r3, #12
 8004bea:	7812      	ldrb	r2, [r2, #0]
 8004bec:	701a      	strb	r2, [r3, #0]
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004bf2:	1c5a      	adds	r2, r3, #1
 8004bf4:	68fb      	ldr	r3, [r7, #12]
 8004bf6:	631a      	str	r2, [r3, #48]	@ 0x30
 8004bf8:	68fb      	ldr	r3, [r7, #12]
 8004bfa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004bfc:	b29b      	uxth	r3, r3
 8004bfe:	3b01      	subs	r3, #1
 8004c00:	b29a      	uxth	r2, r3
 8004c02:	68fb      	ldr	r3, [r7, #12]
 8004c04:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004c06:	e018      	b.n	8004c3a <HAL_SPI_Transmit+0x224>
 8004c08:	f7fe fa1c 	bl	8003044 <HAL_GetTick>
 8004c0c:	4602      	mov	r2, r0
 8004c0e:	69fb      	ldr	r3, [r7, #28]
 8004c10:	1ad3      	subs	r3, r2, r3
 8004c12:	683a      	ldr	r2, [r7, #0]
 8004c14:	429a      	cmp	r2, r3
 8004c16:	d803      	bhi.n	8004c20 <HAL_SPI_Transmit+0x20a>
 8004c18:	683b      	ldr	r3, [r7, #0]
 8004c1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c1e:	d102      	bne.n	8004c26 <HAL_SPI_Transmit+0x210>
 8004c20:	683b      	ldr	r3, [r7, #0]
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d109      	bne.n	8004c3a <HAL_SPI_Transmit+0x224>
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	2201      	movs	r2, #1
 8004c2a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	2200      	movs	r2, #0
 8004c32:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004c36:	2303      	movs	r3, #3
 8004c38:	e02d      	b.n	8004c96 <HAL_SPI_Transmit+0x280>
 8004c3a:	68fb      	ldr	r3, [r7, #12]
 8004c3c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004c3e:	b29b      	uxth	r3, r3
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	d1c6      	bne.n	8004bd2 <HAL_SPI_Transmit+0x1bc>
 8004c44:	69fa      	ldr	r2, [r7, #28]
 8004c46:	6839      	ldr	r1, [r7, #0]
 8004c48:	68f8      	ldr	r0, [r7, #12]
 8004c4a:	f000 fa59 	bl	8005100 <SPI_EndRxTxTransaction>
 8004c4e:	4603      	mov	r3, r0
 8004c50:	2b00      	cmp	r3, #0
 8004c52:	d002      	beq.n	8004c5a <HAL_SPI_Transmit+0x244>
 8004c54:	68fb      	ldr	r3, [r7, #12]
 8004c56:	2220      	movs	r2, #32
 8004c58:	655a      	str	r2, [r3, #84]	@ 0x54
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	689b      	ldr	r3, [r3, #8]
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d10a      	bne.n	8004c78 <HAL_SPI_Transmit+0x262>
 8004c62:	2300      	movs	r3, #0
 8004c64:	617b      	str	r3, [r7, #20]
 8004c66:	68fb      	ldr	r3, [r7, #12]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	68db      	ldr	r3, [r3, #12]
 8004c6c:	617b      	str	r3, [r7, #20]
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	689b      	ldr	r3, [r3, #8]
 8004c74:	617b      	str	r3, [r7, #20]
 8004c76:	697b      	ldr	r3, [r7, #20]
 8004c78:	68fb      	ldr	r3, [r7, #12]
 8004c7a:	2201      	movs	r2, #1
 8004c7c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004c80:	68fb      	ldr	r3, [r7, #12]
 8004c82:	2200      	movs	r2, #0
 8004c84:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d001      	beq.n	8004c94 <HAL_SPI_Transmit+0x27e>
 8004c90:	2301      	movs	r3, #1
 8004c92:	e000      	b.n	8004c96 <HAL_SPI_Transmit+0x280>
 8004c94:	2300      	movs	r3, #0
 8004c96:	4618      	mov	r0, r3
 8004c98:	3720      	adds	r7, #32
 8004c9a:	46bd      	mov	sp, r7
 8004c9c:	bd80      	pop	{r7, pc}

08004c9e <HAL_SPI_TransmitReceive>:
 8004c9e:	b580      	push	{r7, lr}
 8004ca0:	b08a      	sub	sp, #40	@ 0x28
 8004ca2:	af00      	add	r7, sp, #0
 8004ca4:	60f8      	str	r0, [r7, #12]
 8004ca6:	60b9      	str	r1, [r7, #8]
 8004ca8:	607a      	str	r2, [r7, #4]
 8004caa:	807b      	strh	r3, [r7, #2]
 8004cac:	2301      	movs	r3, #1
 8004cae:	627b      	str	r3, [r7, #36]	@ 0x24
 8004cb0:	f7fe f9c8 	bl	8003044 <HAL_GetTick>
 8004cb4:	6238      	str	r0, [r7, #32]
 8004cb6:	68fb      	ldr	r3, [r7, #12]
 8004cb8:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004cbc:	77fb      	strb	r3, [r7, #31]
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	685b      	ldr	r3, [r3, #4]
 8004cc2:	61bb      	str	r3, [r7, #24]
 8004cc4:	887b      	ldrh	r3, [r7, #2]
 8004cc6:	82fb      	strh	r3, [r7, #22]
 8004cc8:	7ffb      	ldrb	r3, [r7, #31]
 8004cca:	2b01      	cmp	r3, #1
 8004ccc:	d00c      	beq.n	8004ce8 <HAL_SPI_TransmitReceive+0x4a>
 8004cce:	69bb      	ldr	r3, [r7, #24]
 8004cd0:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004cd4:	d106      	bne.n	8004ce4 <HAL_SPI_TransmitReceive+0x46>
 8004cd6:	68fb      	ldr	r3, [r7, #12]
 8004cd8:	689b      	ldr	r3, [r3, #8]
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	d102      	bne.n	8004ce4 <HAL_SPI_TransmitReceive+0x46>
 8004cde:	7ffb      	ldrb	r3, [r7, #31]
 8004ce0:	2b04      	cmp	r3, #4
 8004ce2:	d001      	beq.n	8004ce8 <HAL_SPI_TransmitReceive+0x4a>
 8004ce4:	2302      	movs	r3, #2
 8004ce6:	e17f      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004ce8:	68bb      	ldr	r3, [r7, #8]
 8004cea:	2b00      	cmp	r3, #0
 8004cec:	d005      	beq.n	8004cfa <HAL_SPI_TransmitReceive+0x5c>
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	d002      	beq.n	8004cfa <HAL_SPI_TransmitReceive+0x5c>
 8004cf4:	887b      	ldrh	r3, [r7, #2]
 8004cf6:	2b00      	cmp	r3, #0
 8004cf8:	d101      	bne.n	8004cfe <HAL_SPI_TransmitReceive+0x60>
 8004cfa:	2301      	movs	r3, #1
 8004cfc:	e174      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8004d04:	2b01      	cmp	r3, #1
 8004d06:	d101      	bne.n	8004d0c <HAL_SPI_TransmitReceive+0x6e>
 8004d08:	2302      	movs	r3, #2
 8004d0a:	e16d      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	2201      	movs	r2, #1
 8004d10:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004d14:	68fb      	ldr	r3, [r7, #12]
 8004d16:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004d1a:	b2db      	uxtb	r3, r3
 8004d1c:	2b04      	cmp	r3, #4
 8004d1e:	d003      	beq.n	8004d28 <HAL_SPI_TransmitReceive+0x8a>
 8004d20:	68fb      	ldr	r3, [r7, #12]
 8004d22:	2205      	movs	r2, #5
 8004d24:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	2200      	movs	r2, #0
 8004d2c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	687a      	ldr	r2, [r7, #4]
 8004d32:	639a      	str	r2, [r3, #56]	@ 0x38
 8004d34:	68fb      	ldr	r3, [r7, #12]
 8004d36:	887a      	ldrh	r2, [r7, #2]
 8004d38:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004d3a:	68fb      	ldr	r3, [r7, #12]
 8004d3c:	887a      	ldrh	r2, [r7, #2]
 8004d3e:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8004d40:	68fb      	ldr	r3, [r7, #12]
 8004d42:	68ba      	ldr	r2, [r7, #8]
 8004d44:	631a      	str	r2, [r3, #48]	@ 0x30
 8004d46:	68fb      	ldr	r3, [r7, #12]
 8004d48:	887a      	ldrh	r2, [r7, #2]
 8004d4a:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004d4c:	68fb      	ldr	r3, [r7, #12]
 8004d4e:	887a      	ldrh	r2, [r7, #2]
 8004d50:	869a      	strh	r2, [r3, #52]	@ 0x34
 8004d52:	68fb      	ldr	r3, [r7, #12]
 8004d54:	2200      	movs	r2, #0
 8004d56:	641a      	str	r2, [r3, #64]	@ 0x40
 8004d58:	68fb      	ldr	r3, [r7, #12]
 8004d5a:	2200      	movs	r2, #0
 8004d5c:	645a      	str	r2, [r3, #68]	@ 0x44
 8004d5e:	68fb      	ldr	r3, [r7, #12]
 8004d60:	681b      	ldr	r3, [r3, #0]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004d68:	2b40      	cmp	r3, #64	@ 0x40
 8004d6a:	d007      	beq.n	8004d7c <HAL_SPI_TransmitReceive+0xde>
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	681a      	ldr	r2, [r3, #0]
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004d7a:	601a      	str	r2, [r3, #0]
 8004d7c:	68fb      	ldr	r3, [r7, #12]
 8004d7e:	68db      	ldr	r3, [r3, #12]
 8004d80:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004d84:	d17e      	bne.n	8004e84 <HAL_SPI_TransmitReceive+0x1e6>
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	685b      	ldr	r3, [r3, #4]
 8004d8a:	2b00      	cmp	r3, #0
 8004d8c:	d002      	beq.n	8004d94 <HAL_SPI_TransmitReceive+0xf6>
 8004d8e:	8afb      	ldrh	r3, [r7, #22]
 8004d90:	2b01      	cmp	r3, #1
 8004d92:	d16c      	bne.n	8004e6e <HAL_SPI_TransmitReceive+0x1d0>
 8004d94:	68fb      	ldr	r3, [r7, #12]
 8004d96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d98:	881a      	ldrh	r2, [r3, #0]
 8004d9a:	68fb      	ldr	r3, [r7, #12]
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	60da      	str	r2, [r3, #12]
 8004da0:	68fb      	ldr	r3, [r7, #12]
 8004da2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004da4:	1c9a      	adds	r2, r3, #2
 8004da6:	68fb      	ldr	r3, [r7, #12]
 8004da8:	631a      	str	r2, [r3, #48]	@ 0x30
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004dae:	b29b      	uxth	r3, r3
 8004db0:	3b01      	subs	r3, #1
 8004db2:	b29a      	uxth	r2, r3
 8004db4:	68fb      	ldr	r3, [r7, #12]
 8004db6:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004db8:	e059      	b.n	8004e6e <HAL_SPI_TransmitReceive+0x1d0>
 8004dba:	68fb      	ldr	r3, [r7, #12]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	689b      	ldr	r3, [r3, #8]
 8004dc0:	f003 0302 	and.w	r3, r3, #2
 8004dc4:	2b02      	cmp	r3, #2
 8004dc6:	d11b      	bne.n	8004e00 <HAL_SPI_TransmitReceive+0x162>
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004dcc:	b29b      	uxth	r3, r3
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d016      	beq.n	8004e00 <HAL_SPI_TransmitReceive+0x162>
 8004dd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004dd4:	2b01      	cmp	r3, #1
 8004dd6:	d113      	bne.n	8004e00 <HAL_SPI_TransmitReceive+0x162>
 8004dd8:	68fb      	ldr	r3, [r7, #12]
 8004dda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ddc:	881a      	ldrh	r2, [r3, #0]
 8004dde:	68fb      	ldr	r3, [r7, #12]
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	60da      	str	r2, [r3, #12]
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004de8:	1c9a      	adds	r2, r3, #2
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	631a      	str	r2, [r3, #48]	@ 0x30
 8004dee:	68fb      	ldr	r3, [r7, #12]
 8004df0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004df2:	b29b      	uxth	r3, r3
 8004df4:	3b01      	subs	r3, #1
 8004df6:	b29a      	uxth	r2, r3
 8004df8:	68fb      	ldr	r3, [r7, #12]
 8004dfa:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004dfc:	2300      	movs	r3, #0
 8004dfe:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e00:	68fb      	ldr	r3, [r7, #12]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	689b      	ldr	r3, [r3, #8]
 8004e06:	f003 0301 	and.w	r3, r3, #1
 8004e0a:	2b01      	cmp	r3, #1
 8004e0c:	d119      	bne.n	8004e42 <HAL_SPI_TransmitReceive+0x1a4>
 8004e0e:	68fb      	ldr	r3, [r7, #12]
 8004e10:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004e12:	b29b      	uxth	r3, r3
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	d014      	beq.n	8004e42 <HAL_SPI_TransmitReceive+0x1a4>
 8004e18:	68fb      	ldr	r3, [r7, #12]
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	68da      	ldr	r2, [r3, #12]
 8004e1e:	68fb      	ldr	r3, [r7, #12]
 8004e20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004e22:	b292      	uxth	r2, r2
 8004e24:	801a      	strh	r2, [r3, #0]
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004e2a:	1c9a      	adds	r2, r3, #2
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	639a      	str	r2, [r3, #56]	@ 0x38
 8004e30:	68fb      	ldr	r3, [r7, #12]
 8004e32:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004e34:	b29b      	uxth	r3, r3
 8004e36:	3b01      	subs	r3, #1
 8004e38:	b29a      	uxth	r2, r3
 8004e3a:	68fb      	ldr	r3, [r7, #12]
 8004e3c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004e3e:	2301      	movs	r3, #1
 8004e40:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e42:	f7fe f8ff 	bl	8003044 <HAL_GetTick>
 8004e46:	4602      	mov	r2, r0
 8004e48:	6a3b      	ldr	r3, [r7, #32]
 8004e4a:	1ad3      	subs	r3, r2, r3
 8004e4c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004e4e:	429a      	cmp	r2, r3
 8004e50:	d80d      	bhi.n	8004e6e <HAL_SPI_TransmitReceive+0x1d0>
 8004e52:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004e54:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e58:	d009      	beq.n	8004e6e <HAL_SPI_TransmitReceive+0x1d0>
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	2201      	movs	r2, #1
 8004e5e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004e62:	68fb      	ldr	r3, [r7, #12]
 8004e64:	2200      	movs	r2, #0
 8004e66:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004e6a:	2303      	movs	r3, #3
 8004e6c:	e0bc      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004e72:	b29b      	uxth	r3, r3
 8004e74:	2b00      	cmp	r3, #0
 8004e76:	d1a0      	bne.n	8004dba <HAL_SPI_TransmitReceive+0x11c>
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004e7c:	b29b      	uxth	r3, r3
 8004e7e:	2b00      	cmp	r3, #0
 8004e80:	d19b      	bne.n	8004dba <HAL_SPI_TransmitReceive+0x11c>
 8004e82:	e082      	b.n	8004f8a <HAL_SPI_TransmitReceive+0x2ec>
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	685b      	ldr	r3, [r3, #4]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d002      	beq.n	8004e92 <HAL_SPI_TransmitReceive+0x1f4>
 8004e8c:	8afb      	ldrh	r3, [r7, #22]
 8004e8e:	2b01      	cmp	r3, #1
 8004e90:	d171      	bne.n	8004f76 <HAL_SPI_TransmitReceive+0x2d8>
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	681b      	ldr	r3, [r3, #0]
 8004e9a:	330c      	adds	r3, #12
 8004e9c:	7812      	ldrb	r2, [r2, #0]
 8004e9e:	701a      	strb	r2, [r3, #0]
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ea4:	1c5a      	adds	r2, r3, #1
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	631a      	str	r2, [r3, #48]	@ 0x30
 8004eaa:	68fb      	ldr	r3, [r7, #12]
 8004eac:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004eae:	b29b      	uxth	r3, r3
 8004eb0:	3b01      	subs	r3, #1
 8004eb2:	b29a      	uxth	r2, r3
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004eb8:	e05d      	b.n	8004f76 <HAL_SPI_TransmitReceive+0x2d8>
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	689b      	ldr	r3, [r3, #8]
 8004ec0:	f003 0302 	and.w	r3, r3, #2
 8004ec4:	2b02      	cmp	r3, #2
 8004ec6:	d11c      	bne.n	8004f02 <HAL_SPI_TransmitReceive+0x264>
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004ecc:	b29b      	uxth	r3, r3
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	d017      	beq.n	8004f02 <HAL_SPI_TransmitReceive+0x264>
 8004ed2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ed4:	2b01      	cmp	r3, #1
 8004ed6:	d114      	bne.n	8004f02 <HAL_SPI_TransmitReceive+0x264>
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	330c      	adds	r3, #12
 8004ee2:	7812      	ldrb	r2, [r2, #0]
 8004ee4:	701a      	strb	r2, [r3, #0]
 8004ee6:	68fb      	ldr	r3, [r7, #12]
 8004ee8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004eea:	1c5a      	adds	r2, r3, #1
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	631a      	str	r2, [r3, #48]	@ 0x30
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004ef4:	b29b      	uxth	r3, r3
 8004ef6:	3b01      	subs	r3, #1
 8004ef8:	b29a      	uxth	r2, r3
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004efe:	2300      	movs	r3, #0
 8004f00:	627b      	str	r3, [r7, #36]	@ 0x24
 8004f02:	68fb      	ldr	r3, [r7, #12]
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	689b      	ldr	r3, [r3, #8]
 8004f08:	f003 0301 	and.w	r3, r3, #1
 8004f0c:	2b01      	cmp	r3, #1
 8004f0e:	d119      	bne.n	8004f44 <HAL_SPI_TransmitReceive+0x2a6>
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004f14:	b29b      	uxth	r3, r3
 8004f16:	2b00      	cmp	r3, #0
 8004f18:	d014      	beq.n	8004f44 <HAL_SPI_TransmitReceive+0x2a6>
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	68da      	ldr	r2, [r3, #12]
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004f24:	b2d2      	uxtb	r2, r2
 8004f26:	701a      	strb	r2, [r3, #0]
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004f2c:	1c5a      	adds	r2, r3, #1
 8004f2e:	68fb      	ldr	r3, [r7, #12]
 8004f30:	639a      	str	r2, [r3, #56]	@ 0x38
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004f36:	b29b      	uxth	r3, r3
 8004f38:	3b01      	subs	r3, #1
 8004f3a:	b29a      	uxth	r2, r3
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004f40:	2301      	movs	r3, #1
 8004f42:	627b      	str	r3, [r7, #36]	@ 0x24
 8004f44:	f7fe f87e 	bl	8003044 <HAL_GetTick>
 8004f48:	4602      	mov	r2, r0
 8004f4a:	6a3b      	ldr	r3, [r7, #32]
 8004f4c:	1ad3      	subs	r3, r2, r3
 8004f4e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004f50:	429a      	cmp	r2, r3
 8004f52:	d803      	bhi.n	8004f5c <HAL_SPI_TransmitReceive+0x2be>
 8004f54:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f5a:	d102      	bne.n	8004f62 <HAL_SPI_TransmitReceive+0x2c4>
 8004f5c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d109      	bne.n	8004f76 <HAL_SPI_TransmitReceive+0x2d8>
 8004f62:	68fb      	ldr	r3, [r7, #12]
 8004f64:	2201      	movs	r2, #1
 8004f66:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	2200      	movs	r2, #0
 8004f6e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004f72:	2303      	movs	r3, #3
 8004f74:	e038      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004f76:	68fb      	ldr	r3, [r7, #12]
 8004f78:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004f7a:	b29b      	uxth	r3, r3
 8004f7c:	2b00      	cmp	r3, #0
 8004f7e:	d19c      	bne.n	8004eba <HAL_SPI_TransmitReceive+0x21c>
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004f84:	b29b      	uxth	r3, r3
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d197      	bne.n	8004eba <HAL_SPI_TransmitReceive+0x21c>
 8004f8a:	6a3a      	ldr	r2, [r7, #32]
 8004f8c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004f8e:	68f8      	ldr	r0, [r7, #12]
 8004f90:	f000 f8b6 	bl	8005100 <SPI_EndRxTxTransaction>
 8004f94:	4603      	mov	r3, r0
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d008      	beq.n	8004fac <HAL_SPI_TransmitReceive+0x30e>
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	2220      	movs	r2, #32
 8004f9e:	655a      	str	r2, [r3, #84]	@ 0x54
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	2200      	movs	r2, #0
 8004fa4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004fa8:	2301      	movs	r3, #1
 8004faa:	e01d      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004fac:	68fb      	ldr	r3, [r7, #12]
 8004fae:	689b      	ldr	r3, [r3, #8]
 8004fb0:	2b00      	cmp	r3, #0
 8004fb2:	d10a      	bne.n	8004fca <HAL_SPI_TransmitReceive+0x32c>
 8004fb4:	2300      	movs	r3, #0
 8004fb6:	613b      	str	r3, [r7, #16]
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	68db      	ldr	r3, [r3, #12]
 8004fbe:	613b      	str	r3, [r7, #16]
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	689b      	ldr	r3, [r3, #8]
 8004fc6:	613b      	str	r3, [r7, #16]
 8004fc8:	693b      	ldr	r3, [r7, #16]
 8004fca:	68fb      	ldr	r3, [r7, #12]
 8004fcc:	2201      	movs	r2, #1
 8004fce:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004fd2:	68fb      	ldr	r3, [r7, #12]
 8004fd4:	2200      	movs	r2, #0
 8004fd6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004fda:	68fb      	ldr	r3, [r7, #12]
 8004fdc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004fde:	2b00      	cmp	r3, #0
 8004fe0:	d001      	beq.n	8004fe6 <HAL_SPI_TransmitReceive+0x348>
 8004fe2:	2301      	movs	r3, #1
 8004fe4:	e000      	b.n	8004fe8 <HAL_SPI_TransmitReceive+0x34a>
 8004fe6:	2300      	movs	r3, #0
 8004fe8:	4618      	mov	r0, r3
 8004fea:	3728      	adds	r7, #40	@ 0x28
 8004fec:	46bd      	mov	sp, r7
 8004fee:	bd80      	pop	{r7, pc}

08004ff0 <SPI_WaitFlagStateUntilTimeout>:
 8004ff0:	b580      	push	{r7, lr}
 8004ff2:	b088      	sub	sp, #32
 8004ff4:	af00      	add	r7, sp, #0
 8004ff6:	60f8      	str	r0, [r7, #12]
 8004ff8:	60b9      	str	r1, [r7, #8]
 8004ffa:	603b      	str	r3, [r7, #0]
 8004ffc:	4613      	mov	r3, r2
 8004ffe:	71fb      	strb	r3, [r7, #7]
 8005000:	f7fe f820 	bl	8003044 <HAL_GetTick>
 8005004:	4602      	mov	r2, r0
 8005006:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005008:	1a9b      	subs	r3, r3, r2
 800500a:	683a      	ldr	r2, [r7, #0]
 800500c:	4413      	add	r3, r2
 800500e:	61fb      	str	r3, [r7, #28]
 8005010:	f7fe f818 	bl	8003044 <HAL_GetTick>
 8005014:	61b8      	str	r0, [r7, #24]
 8005016:	4b39      	ldr	r3, [pc, #228]	@ (80050fc <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	015b      	lsls	r3, r3, #5
 800501c:	0d1b      	lsrs	r3, r3, #20
 800501e:	69fa      	ldr	r2, [r7, #28]
 8005020:	fb02 f303 	mul.w	r3, r2, r3
 8005024:	617b      	str	r3, [r7, #20]
 8005026:	e054      	b.n	80050d2 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005028:	683b      	ldr	r3, [r7, #0]
 800502a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800502e:	d050      	beq.n	80050d2 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005030:	f7fe f808 	bl	8003044 <HAL_GetTick>
 8005034:	4602      	mov	r2, r0
 8005036:	69bb      	ldr	r3, [r7, #24]
 8005038:	1ad3      	subs	r3, r2, r3
 800503a:	69fa      	ldr	r2, [r7, #28]
 800503c:	429a      	cmp	r2, r3
 800503e:	d902      	bls.n	8005046 <SPI_WaitFlagStateUntilTimeout+0x56>
 8005040:	69fb      	ldr	r3, [r7, #28]
 8005042:	2b00      	cmp	r3, #0
 8005044:	d13d      	bne.n	80050c2 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8005046:	68fb      	ldr	r3, [r7, #12]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	685a      	ldr	r2, [r3, #4]
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005054:	605a      	str	r2, [r3, #4]
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	685b      	ldr	r3, [r3, #4]
 800505a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800505e:	d111      	bne.n	8005084 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	689b      	ldr	r3, [r3, #8]
 8005064:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005068:	d004      	beq.n	8005074 <SPI_WaitFlagStateUntilTimeout+0x84>
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	689b      	ldr	r3, [r3, #8]
 800506e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005072:	d107      	bne.n	8005084 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	681a      	ldr	r2, [r3, #0]
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005082:	601a      	str	r2, [r3, #0]
 8005084:	68fb      	ldr	r3, [r7, #12]
 8005086:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005088:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800508c:	d10f      	bne.n	80050ae <SPI_WaitFlagStateUntilTimeout+0xbe>
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	681a      	ldr	r2, [r3, #0]
 8005094:	68fb      	ldr	r3, [r7, #12]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800509c:	601a      	str	r2, [r3, #0]
 800509e:	68fb      	ldr	r3, [r7, #12]
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	681a      	ldr	r2, [r3, #0]
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80050ac:	601a      	str	r2, [r3, #0]
 80050ae:	68fb      	ldr	r3, [r7, #12]
 80050b0:	2201      	movs	r2, #1
 80050b2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	2200      	movs	r2, #0
 80050ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80050be:	2303      	movs	r3, #3
 80050c0:	e017      	b.n	80050f2 <SPI_WaitFlagStateUntilTimeout+0x102>
 80050c2:	697b      	ldr	r3, [r7, #20]
 80050c4:	2b00      	cmp	r3, #0
 80050c6:	d101      	bne.n	80050cc <SPI_WaitFlagStateUntilTimeout+0xdc>
 80050c8:	2300      	movs	r3, #0
 80050ca:	61fb      	str	r3, [r7, #28]
 80050cc:	697b      	ldr	r3, [r7, #20]
 80050ce:	3b01      	subs	r3, #1
 80050d0:	617b      	str	r3, [r7, #20]
 80050d2:	68fb      	ldr	r3, [r7, #12]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	689a      	ldr	r2, [r3, #8]
 80050d8:	68bb      	ldr	r3, [r7, #8]
 80050da:	4013      	ands	r3, r2
 80050dc:	68ba      	ldr	r2, [r7, #8]
 80050de:	429a      	cmp	r2, r3
 80050e0:	bf0c      	ite	eq
 80050e2:	2301      	moveq	r3, #1
 80050e4:	2300      	movne	r3, #0
 80050e6:	b2db      	uxtb	r3, r3
 80050e8:	461a      	mov	r2, r3
 80050ea:	79fb      	ldrb	r3, [r7, #7]
 80050ec:	429a      	cmp	r2, r3
 80050ee:	d19b      	bne.n	8005028 <SPI_WaitFlagStateUntilTimeout+0x38>
 80050f0:	2300      	movs	r3, #0
 80050f2:	4618      	mov	r0, r3
 80050f4:	3720      	adds	r7, #32
 80050f6:	46bd      	mov	sp, r7
 80050f8:	bd80      	pop	{r7, pc}
 80050fa:	bf00      	nop
 80050fc:	2001373c 	.word	0x2001373c

08005100 <SPI_EndRxTxTransaction>:
 8005100:	b580      	push	{r7, lr}
 8005102:	b088      	sub	sp, #32
 8005104:	af02      	add	r7, sp, #8
 8005106:	60f8      	str	r0, [r7, #12]
 8005108:	60b9      	str	r1, [r7, #8]
 800510a:	607a      	str	r2, [r7, #4]
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	9300      	str	r3, [sp, #0]
 8005110:	68bb      	ldr	r3, [r7, #8]
 8005112:	2201      	movs	r2, #1
 8005114:	2102      	movs	r1, #2
 8005116:	68f8      	ldr	r0, [r7, #12]
 8005118:	f7ff ff6a 	bl	8004ff0 <SPI_WaitFlagStateUntilTimeout>
 800511c:	4603      	mov	r3, r0
 800511e:	2b00      	cmp	r3, #0
 8005120:	d007      	beq.n	8005132 <SPI_EndRxTxTransaction+0x32>
 8005122:	68fb      	ldr	r3, [r7, #12]
 8005124:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005126:	f043 0220 	orr.w	r2, r3, #32
 800512a:	68fb      	ldr	r3, [r7, #12]
 800512c:	655a      	str	r2, [r3, #84]	@ 0x54
 800512e:	2303      	movs	r3, #3
 8005130:	e032      	b.n	8005198 <SPI_EndRxTxTransaction+0x98>
 8005132:	4b1b      	ldr	r3, [pc, #108]	@ (80051a0 <SPI_EndRxTxTransaction+0xa0>)
 8005134:	681b      	ldr	r3, [r3, #0]
 8005136:	4a1b      	ldr	r2, [pc, #108]	@ (80051a4 <SPI_EndRxTxTransaction+0xa4>)
 8005138:	fba2 2303 	umull	r2, r3, r2, r3
 800513c:	0d5b      	lsrs	r3, r3, #21
 800513e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8005142:	fb02 f303 	mul.w	r3, r2, r3
 8005146:	617b      	str	r3, [r7, #20]
 8005148:	68fb      	ldr	r3, [r7, #12]
 800514a:	685b      	ldr	r3, [r3, #4]
 800514c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005150:	d112      	bne.n	8005178 <SPI_EndRxTxTransaction+0x78>
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	9300      	str	r3, [sp, #0]
 8005156:	68bb      	ldr	r3, [r7, #8]
 8005158:	2200      	movs	r2, #0
 800515a:	2180      	movs	r1, #128	@ 0x80
 800515c:	68f8      	ldr	r0, [r7, #12]
 800515e:	f7ff ff47 	bl	8004ff0 <SPI_WaitFlagStateUntilTimeout>
 8005162:	4603      	mov	r3, r0
 8005164:	2b00      	cmp	r3, #0
 8005166:	d016      	beq.n	8005196 <SPI_EndRxTxTransaction+0x96>
 8005168:	68fb      	ldr	r3, [r7, #12]
 800516a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800516c:	f043 0220 	orr.w	r2, r3, #32
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	655a      	str	r2, [r3, #84]	@ 0x54
 8005174:	2303      	movs	r3, #3
 8005176:	e00f      	b.n	8005198 <SPI_EndRxTxTransaction+0x98>
 8005178:	697b      	ldr	r3, [r7, #20]
 800517a:	2b00      	cmp	r3, #0
 800517c:	d00a      	beq.n	8005194 <SPI_EndRxTxTransaction+0x94>
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	3b01      	subs	r3, #1
 8005182:	617b      	str	r3, [r7, #20]
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	681b      	ldr	r3, [r3, #0]
 8005188:	689b      	ldr	r3, [r3, #8]
 800518a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800518e:	2b80      	cmp	r3, #128	@ 0x80
 8005190:	d0f2      	beq.n	8005178 <SPI_EndRxTxTransaction+0x78>
 8005192:	e000      	b.n	8005196 <SPI_EndRxTxTransaction+0x96>
 8005194:	bf00      	nop
 8005196:	2300      	movs	r3, #0
 8005198:	4618      	mov	r0, r3
 800519a:	3718      	adds	r7, #24
 800519c:	46bd      	mov	sp, r7
 800519e:	bd80      	pop	{r7, pc}
 80051a0:	2001373c 	.word	0x2001373c
 80051a4:	165e9f81 	.word	0x165e9f81

080051a8 <HAL_UART_Init>:
 80051a8:	b580      	push	{r7, lr}
 80051aa:	b082      	sub	sp, #8
 80051ac:	af00      	add	r7, sp, #0
 80051ae:	6078      	str	r0, [r7, #4]
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	2b00      	cmp	r3, #0
 80051b4:	d101      	bne.n	80051ba <HAL_UART_Init+0x12>
 80051b6:	2301      	movs	r3, #1
 80051b8:	e042      	b.n	8005240 <HAL_UART_Init+0x98>
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80051c0:	b2db      	uxtb	r3, r3
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d106      	bne.n	80051d4 <HAL_UART_Init+0x2c>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	2200      	movs	r2, #0
 80051ca:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80051ce:	6878      	ldr	r0, [r7, #4]
 80051d0:	f7fd fca6 	bl	8002b20 <HAL_UART_MspInit>
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	2224      	movs	r2, #36	@ 0x24
 80051d8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	68da      	ldr	r2, [r3, #12]
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80051ea:	60da      	str	r2, [r3, #12]
 80051ec:	6878      	ldr	r0, [r7, #4]
 80051ee:	f000 fe6b 	bl	8005ec8 <UART_SetConfig>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	681b      	ldr	r3, [r3, #0]
 80051f6:	691a      	ldr	r2, [r3, #16]
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005200:	611a      	str	r2, [r3, #16]
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	695a      	ldr	r2, [r3, #20]
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005210:	615a      	str	r2, [r3, #20]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	68da      	ldr	r2, [r3, #12]
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005220:	60da      	str	r2, [r3, #12]
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	2200      	movs	r2, #0
 8005226:	645a      	str	r2, [r3, #68]	@ 0x44
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	2220      	movs	r2, #32
 800522c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	2220      	movs	r2, #32
 8005234:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	2200      	movs	r2, #0
 800523c:	635a      	str	r2, [r3, #52]	@ 0x34
 800523e:	2300      	movs	r3, #0
 8005240:	4618      	mov	r0, r3
 8005242:	3708      	adds	r7, #8
 8005244:	46bd      	mov	sp, r7
 8005246:	bd80      	pop	{r7, pc}

08005248 <HAL_UART_Receive_DMA>:
 8005248:	b580      	push	{r7, lr}
 800524a:	b084      	sub	sp, #16
 800524c:	af00      	add	r7, sp, #0
 800524e:	60f8      	str	r0, [r7, #12]
 8005250:	60b9      	str	r1, [r7, #8]
 8005252:	4613      	mov	r3, r2
 8005254:	80fb      	strh	r3, [r7, #6]
 8005256:	68fb      	ldr	r3, [r7, #12]
 8005258:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800525c:	b2db      	uxtb	r3, r3
 800525e:	2b20      	cmp	r3, #32
 8005260:	d112      	bne.n	8005288 <HAL_UART_Receive_DMA+0x40>
 8005262:	68bb      	ldr	r3, [r7, #8]
 8005264:	2b00      	cmp	r3, #0
 8005266:	d002      	beq.n	800526e <HAL_UART_Receive_DMA+0x26>
 8005268:	88fb      	ldrh	r3, [r7, #6]
 800526a:	2b00      	cmp	r3, #0
 800526c:	d101      	bne.n	8005272 <HAL_UART_Receive_DMA+0x2a>
 800526e:	2301      	movs	r3, #1
 8005270:	e00b      	b.n	800528a <HAL_UART_Receive_DMA+0x42>
 8005272:	68fb      	ldr	r3, [r7, #12]
 8005274:	2200      	movs	r2, #0
 8005276:	631a      	str	r2, [r3, #48]	@ 0x30
 8005278:	88fb      	ldrh	r3, [r7, #6]
 800527a:	461a      	mov	r2, r3
 800527c:	68b9      	ldr	r1, [r7, #8]
 800527e:	68f8      	ldr	r0, [r7, #12]
 8005280:	f000 fbc2 	bl	8005a08 <UART_Start_Receive_DMA>
 8005284:	4603      	mov	r3, r0
 8005286:	e000      	b.n	800528a <HAL_UART_Receive_DMA+0x42>
 8005288:	2302      	movs	r3, #2
 800528a:	4618      	mov	r0, r3
 800528c:	3710      	adds	r7, #16
 800528e:	46bd      	mov	sp, r7
 8005290:	bd80      	pop	{r7, pc}
	...

08005294 <HAL_UART_IRQHandler>:
 8005294:	b580      	push	{r7, lr}
 8005296:	b0ba      	sub	sp, #232	@ 0xe8
 8005298:	af00      	add	r7, sp, #0
 800529a:	6078      	str	r0, [r7, #4]
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	68db      	ldr	r3, [r3, #12]
 80052ac:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	695b      	ldr	r3, [r3, #20]
 80052b6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80052ba:	2300      	movs	r3, #0
 80052bc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80052c0:	2300      	movs	r3, #0
 80052c2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80052c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80052ca:	f003 030f 	and.w	r3, r3, #15
 80052ce:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80052d2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80052d6:	2b00      	cmp	r3, #0
 80052d8:	d10f      	bne.n	80052fa <HAL_UART_IRQHandler+0x66>
 80052da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80052de:	f003 0320 	and.w	r3, r3, #32
 80052e2:	2b00      	cmp	r3, #0
 80052e4:	d009      	beq.n	80052fa <HAL_UART_IRQHandler+0x66>
 80052e6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80052ea:	f003 0320 	and.w	r3, r3, #32
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d003      	beq.n	80052fa <HAL_UART_IRQHandler+0x66>
 80052f2:	6878      	ldr	r0, [r7, #4]
 80052f4:	f000 fd29 	bl	8005d4a <UART_Receive_IT>
 80052f8:	e25b      	b.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 80052fa:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80052fe:	2b00      	cmp	r3, #0
 8005300:	f000 80de 	beq.w	80054c0 <HAL_UART_IRQHandler+0x22c>
 8005304:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005308:	f003 0301 	and.w	r3, r3, #1
 800530c:	2b00      	cmp	r3, #0
 800530e:	d106      	bne.n	800531e <HAL_UART_IRQHandler+0x8a>
 8005310:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005314:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005318:	2b00      	cmp	r3, #0
 800531a:	f000 80d1 	beq.w	80054c0 <HAL_UART_IRQHandler+0x22c>
 800531e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005322:	f003 0301 	and.w	r3, r3, #1
 8005326:	2b00      	cmp	r3, #0
 8005328:	d00b      	beq.n	8005342 <HAL_UART_IRQHandler+0xae>
 800532a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800532e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005332:	2b00      	cmp	r3, #0
 8005334:	d005      	beq.n	8005342 <HAL_UART_IRQHandler+0xae>
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800533a:	f043 0201 	orr.w	r2, r3, #1
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	645a      	str	r2, [r3, #68]	@ 0x44
 8005342:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005346:	f003 0304 	and.w	r3, r3, #4
 800534a:	2b00      	cmp	r3, #0
 800534c:	d00b      	beq.n	8005366 <HAL_UART_IRQHandler+0xd2>
 800534e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005352:	f003 0301 	and.w	r3, r3, #1
 8005356:	2b00      	cmp	r3, #0
 8005358:	d005      	beq.n	8005366 <HAL_UART_IRQHandler+0xd2>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800535e:	f043 0202 	orr.w	r2, r3, #2
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	645a      	str	r2, [r3, #68]	@ 0x44
 8005366:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800536a:	f003 0302 	and.w	r3, r3, #2
 800536e:	2b00      	cmp	r3, #0
 8005370:	d00b      	beq.n	800538a <HAL_UART_IRQHandler+0xf6>
 8005372:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005376:	f003 0301 	and.w	r3, r3, #1
 800537a:	2b00      	cmp	r3, #0
 800537c:	d005      	beq.n	800538a <HAL_UART_IRQHandler+0xf6>
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005382:	f043 0204 	orr.w	r2, r3, #4
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	645a      	str	r2, [r3, #68]	@ 0x44
 800538a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800538e:	f003 0308 	and.w	r3, r3, #8
 8005392:	2b00      	cmp	r3, #0
 8005394:	d011      	beq.n	80053ba <HAL_UART_IRQHandler+0x126>
 8005396:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800539a:	f003 0320 	and.w	r3, r3, #32
 800539e:	2b00      	cmp	r3, #0
 80053a0:	d105      	bne.n	80053ae <HAL_UART_IRQHandler+0x11a>
 80053a2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80053a6:	f003 0301 	and.w	r3, r3, #1
 80053aa:	2b00      	cmp	r3, #0
 80053ac:	d005      	beq.n	80053ba <HAL_UART_IRQHandler+0x126>
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053b2:	f043 0208 	orr.w	r2, r3, #8
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	645a      	str	r2, [r3, #68]	@ 0x44
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053be:	2b00      	cmp	r3, #0
 80053c0:	f000 81f2 	beq.w	80057a8 <HAL_UART_IRQHandler+0x514>
 80053c4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053c8:	f003 0320 	and.w	r3, r3, #32
 80053cc:	2b00      	cmp	r3, #0
 80053ce:	d008      	beq.n	80053e2 <HAL_UART_IRQHandler+0x14e>
 80053d0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053d4:	f003 0320 	and.w	r3, r3, #32
 80053d8:	2b00      	cmp	r3, #0
 80053da:	d002      	beq.n	80053e2 <HAL_UART_IRQHandler+0x14e>
 80053dc:	6878      	ldr	r0, [r7, #4]
 80053de:	f000 fcb4 	bl	8005d4a <UART_Receive_IT>
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	695b      	ldr	r3, [r3, #20]
 80053e8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053ec:	2b40      	cmp	r3, #64	@ 0x40
 80053ee:	bf0c      	ite	eq
 80053f0:	2301      	moveq	r3, #1
 80053f2:	2300      	movne	r3, #0
 80053f4:	b2db      	uxtb	r3, r3
 80053f6:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053fe:	f003 0308 	and.w	r3, r3, #8
 8005402:	2b00      	cmp	r3, #0
 8005404:	d103      	bne.n	800540e <HAL_UART_IRQHandler+0x17a>
 8005406:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800540a:	2b00      	cmp	r3, #0
 800540c:	d04f      	beq.n	80054ae <HAL_UART_IRQHandler+0x21a>
 800540e:	6878      	ldr	r0, [r7, #4]
 8005410:	f000 fbbc 	bl	8005b8c <UART_EndRxTransfer>
 8005414:	687b      	ldr	r3, [r7, #4]
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	695b      	ldr	r3, [r3, #20]
 800541a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800541e:	2b40      	cmp	r3, #64	@ 0x40
 8005420:	d141      	bne.n	80054a6 <HAL_UART_IRQHandler+0x212>
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	3314      	adds	r3, #20
 8005428:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800542c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005430:	e853 3f00 	ldrex	r3, [r3]
 8005434:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005438:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800543c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005440:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	681b      	ldr	r3, [r3, #0]
 8005448:	3314      	adds	r3, #20
 800544a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800544e:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8005452:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005456:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800545a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800545e:	e841 2300 	strex	r3, r2, [r1]
 8005462:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005466:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800546a:	2b00      	cmp	r3, #0
 800546c:	d1d9      	bne.n	8005422 <HAL_UART_IRQHandler+0x18e>
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005472:	2b00      	cmp	r3, #0
 8005474:	d013      	beq.n	800549e <HAL_UART_IRQHandler+0x20a>
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800547a:	4a7e      	ldr	r2, [pc, #504]	@ (8005674 <HAL_UART_IRQHandler+0x3e0>)
 800547c:	651a      	str	r2, [r3, #80]	@ 0x50
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005482:	4618      	mov	r0, r3
 8005484:	f7fe f8a2 	bl	80035cc <HAL_DMA_Abort_IT>
 8005488:	4603      	mov	r3, r0
 800548a:	2b00      	cmp	r3, #0
 800548c:	d016      	beq.n	80054bc <HAL_UART_IRQHandler+0x228>
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005492:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005494:	687a      	ldr	r2, [r7, #4]
 8005496:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005498:	4610      	mov	r0, r2
 800549a:	4798      	blx	r3
 800549c:	e00e      	b.n	80054bc <HAL_UART_IRQHandler+0x228>
 800549e:	6878      	ldr	r0, [r7, #4]
 80054a0:	f000 f99e 	bl	80057e0 <HAL_UART_ErrorCallback>
 80054a4:	e00a      	b.n	80054bc <HAL_UART_IRQHandler+0x228>
 80054a6:	6878      	ldr	r0, [r7, #4]
 80054a8:	f000 f99a 	bl	80057e0 <HAL_UART_ErrorCallback>
 80054ac:	e006      	b.n	80054bc <HAL_UART_IRQHandler+0x228>
 80054ae:	6878      	ldr	r0, [r7, #4]
 80054b0:	f000 f996 	bl	80057e0 <HAL_UART_ErrorCallback>
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	2200      	movs	r2, #0
 80054b8:	645a      	str	r2, [r3, #68]	@ 0x44
 80054ba:	e175      	b.n	80057a8 <HAL_UART_IRQHandler+0x514>
 80054bc:	bf00      	nop
 80054be:	e173      	b.n	80057a8 <HAL_UART_IRQHandler+0x514>
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80054c4:	2b01      	cmp	r3, #1
 80054c6:	f040 814f 	bne.w	8005768 <HAL_UART_IRQHandler+0x4d4>
 80054ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80054ce:	f003 0310 	and.w	r3, r3, #16
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	f000 8148 	beq.w	8005768 <HAL_UART_IRQHandler+0x4d4>
 80054d8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80054dc:	f003 0310 	and.w	r3, r3, #16
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	f000 8141 	beq.w	8005768 <HAL_UART_IRQHandler+0x4d4>
 80054e6:	2300      	movs	r3, #0
 80054e8:	60bb      	str	r3, [r7, #8]
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	60bb      	str	r3, [r7, #8]
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	685b      	ldr	r3, [r3, #4]
 80054f8:	60bb      	str	r3, [r7, #8]
 80054fa:	68bb      	ldr	r3, [r7, #8]
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	695b      	ldr	r3, [r3, #20]
 8005502:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005506:	2b40      	cmp	r3, #64	@ 0x40
 8005508:	f040 80b6 	bne.w	8005678 <HAL_UART_IRQHandler+0x3e4>
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	685b      	ldr	r3, [r3, #4]
 8005514:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8005518:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800551c:	2b00      	cmp	r3, #0
 800551e:	f000 8145 	beq.w	80057ac <HAL_UART_IRQHandler+0x518>
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005526:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800552a:	429a      	cmp	r2, r3
 800552c:	f080 813e 	bcs.w	80057ac <HAL_UART_IRQHandler+0x518>
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005536:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800553c:	69db      	ldr	r3, [r3, #28]
 800553e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005542:	f000 8088 	beq.w	8005656 <HAL_UART_IRQHandler+0x3c2>
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	330c      	adds	r3, #12
 800554c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005550:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8005554:	e853 3f00 	ldrex	r3, [r3]
 8005558:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800555c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005560:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005564:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	330c      	adds	r3, #12
 800556e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8005572:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005576:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800557a:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800557e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8005582:	e841 2300 	strex	r3, r2, [r1]
 8005586:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800558a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800558e:	2b00      	cmp	r3, #0
 8005590:	d1d9      	bne.n	8005546 <HAL_UART_IRQHandler+0x2b2>
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	3314      	adds	r3, #20
 8005598:	677b      	str	r3, [r7, #116]	@ 0x74
 800559a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800559c:	e853 3f00 	ldrex	r3, [r3]
 80055a0:	673b      	str	r3, [r7, #112]	@ 0x70
 80055a2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80055a4:	f023 0301 	bic.w	r3, r3, #1
 80055a8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	3314      	adds	r3, #20
 80055b2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80055b6:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80055ba:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80055bc:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80055be:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80055c2:	e841 2300 	strex	r3, r2, [r1]
 80055c6:	67bb      	str	r3, [r7, #120]	@ 0x78
 80055c8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	d1e1      	bne.n	8005592 <HAL_UART_IRQHandler+0x2fe>
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	3314      	adds	r3, #20
 80055d4:	663b      	str	r3, [r7, #96]	@ 0x60
 80055d6:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80055d8:	e853 3f00 	ldrex	r3, [r3]
 80055dc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80055de:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80055e0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80055e4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	3314      	adds	r3, #20
 80055ee:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80055f2:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80055f4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80055f6:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80055f8:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80055fa:	e841 2300 	strex	r3, r2, [r1]
 80055fe:	667b      	str	r3, [r7, #100]	@ 0x64
 8005600:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005602:	2b00      	cmp	r3, #0
 8005604:	d1e3      	bne.n	80055ce <HAL_UART_IRQHandler+0x33a>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	2220      	movs	r2, #32
 800560a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	2200      	movs	r2, #0
 8005612:	631a      	str	r2, [r3, #48]	@ 0x30
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	330c      	adds	r3, #12
 800561a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800561c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800561e:	e853 3f00 	ldrex	r3, [r3]
 8005622:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005624:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005626:	f023 0310 	bic.w	r3, r3, #16
 800562a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	681b      	ldr	r3, [r3, #0]
 8005632:	330c      	adds	r3, #12
 8005634:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8005638:	65ba      	str	r2, [r7, #88]	@ 0x58
 800563a:	657b      	str	r3, [r7, #84]	@ 0x54
 800563c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800563e:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005640:	e841 2300 	strex	r3, r2, [r1]
 8005644:	653b      	str	r3, [r7, #80]	@ 0x50
 8005646:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005648:	2b00      	cmp	r3, #0
 800564a:	d1e3      	bne.n	8005614 <HAL_UART_IRQHandler+0x380>
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005650:	4618      	mov	r0, r3
 8005652:	f7fd ff4b 	bl	80034ec <HAL_DMA_Abort>
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	2202      	movs	r2, #2
 800565a:	635a      	str	r2, [r3, #52]	@ 0x34
 800565c:	687b      	ldr	r3, [r7, #4]
 800565e:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005664:	b29b      	uxth	r3, r3
 8005666:	1ad3      	subs	r3, r2, r3
 8005668:	b29b      	uxth	r3, r3
 800566a:	4619      	mov	r1, r3
 800566c:	6878      	ldr	r0, [r7, #4]
 800566e:	f000 f8c1 	bl	80057f4 <HAL_UARTEx_RxEventCallback>
 8005672:	e09b      	b.n	80057ac <HAL_UART_IRQHandler+0x518>
 8005674:	08005c53 	.word	0x08005c53
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005680:	b29b      	uxth	r3, r3
 8005682:	1ad3      	subs	r3, r2, r3
 8005684:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800568c:	b29b      	uxth	r3, r3
 800568e:	2b00      	cmp	r3, #0
 8005690:	f000 808e 	beq.w	80057b0 <HAL_UART_IRQHandler+0x51c>
 8005694:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005698:	2b00      	cmp	r3, #0
 800569a:	f000 8089 	beq.w	80057b0 <HAL_UART_IRQHandler+0x51c>
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	330c      	adds	r3, #12
 80056a4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80056a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80056a8:	e853 3f00 	ldrex	r3, [r3]
 80056ac:	637b      	str	r3, [r7, #52]	@ 0x34
 80056ae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80056b0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80056b4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	681b      	ldr	r3, [r3, #0]
 80056bc:	330c      	adds	r3, #12
 80056be:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80056c2:	647a      	str	r2, [r7, #68]	@ 0x44
 80056c4:	643b      	str	r3, [r7, #64]	@ 0x40
 80056c6:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80056c8:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80056ca:	e841 2300 	strex	r3, r2, [r1]
 80056ce:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80056d0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d1e3      	bne.n	800569e <HAL_UART_IRQHandler+0x40a>
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	3314      	adds	r3, #20
 80056dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80056de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80056e0:	e853 3f00 	ldrex	r3, [r3]
 80056e4:	623b      	str	r3, [r7, #32]
 80056e6:	6a3b      	ldr	r3, [r7, #32]
 80056e8:	f023 0301 	bic.w	r3, r3, #1
 80056ec:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	3314      	adds	r3, #20
 80056f6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80056fa:	633a      	str	r2, [r7, #48]	@ 0x30
 80056fc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80056fe:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005700:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005702:	e841 2300 	strex	r3, r2, [r1]
 8005706:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005708:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800570a:	2b00      	cmp	r3, #0
 800570c:	d1e3      	bne.n	80056d6 <HAL_UART_IRQHandler+0x442>
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	2220      	movs	r2, #32
 8005712:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	2200      	movs	r2, #0
 800571a:	631a      	str	r2, [r3, #48]	@ 0x30
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	330c      	adds	r3, #12
 8005722:	613b      	str	r3, [r7, #16]
 8005724:	693b      	ldr	r3, [r7, #16]
 8005726:	e853 3f00 	ldrex	r3, [r3]
 800572a:	60fb      	str	r3, [r7, #12]
 800572c:	68fb      	ldr	r3, [r7, #12]
 800572e:	f023 0310 	bic.w	r3, r3, #16
 8005732:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	330c      	adds	r3, #12
 800573c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005740:	61fa      	str	r2, [r7, #28]
 8005742:	61bb      	str	r3, [r7, #24]
 8005744:	69b9      	ldr	r1, [r7, #24]
 8005746:	69fa      	ldr	r2, [r7, #28]
 8005748:	e841 2300 	strex	r3, r2, [r1]
 800574c:	617b      	str	r3, [r7, #20]
 800574e:	697b      	ldr	r3, [r7, #20]
 8005750:	2b00      	cmp	r3, #0
 8005752:	d1e3      	bne.n	800571c <HAL_UART_IRQHandler+0x488>
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	2202      	movs	r2, #2
 8005758:	635a      	str	r2, [r3, #52]	@ 0x34
 800575a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800575e:	4619      	mov	r1, r3
 8005760:	6878      	ldr	r0, [r7, #4]
 8005762:	f000 f847 	bl	80057f4 <HAL_UARTEx_RxEventCallback>
 8005766:	e023      	b.n	80057b0 <HAL_UART_IRQHandler+0x51c>
 8005768:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800576c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005770:	2b00      	cmp	r3, #0
 8005772:	d009      	beq.n	8005788 <HAL_UART_IRQHandler+0x4f4>
 8005774:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005778:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800577c:	2b00      	cmp	r3, #0
 800577e:	d003      	beq.n	8005788 <HAL_UART_IRQHandler+0x4f4>
 8005780:	6878      	ldr	r0, [r7, #4]
 8005782:	f000 fa7a 	bl	8005c7a <UART_Transmit_IT>
 8005786:	e014      	b.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 8005788:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800578c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005790:	2b00      	cmp	r3, #0
 8005792:	d00e      	beq.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 8005794:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005798:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800579c:	2b00      	cmp	r3, #0
 800579e:	d008      	beq.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 80057a0:	6878      	ldr	r0, [r7, #4]
 80057a2:	f000 faba 	bl	8005d1a <UART_EndTransmit_IT>
 80057a6:	e004      	b.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 80057a8:	bf00      	nop
 80057aa:	e002      	b.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 80057ac:	bf00      	nop
 80057ae:	e000      	b.n	80057b2 <HAL_UART_IRQHandler+0x51e>
 80057b0:	bf00      	nop
 80057b2:	37e8      	adds	r7, #232	@ 0xe8
 80057b4:	46bd      	mov	sp, r7
 80057b6:	bd80      	pop	{r7, pc}

080057b8 <HAL_UART_TxCpltCallback>:
 80057b8:	b480      	push	{r7}
 80057ba:	b083      	sub	sp, #12
 80057bc:	af00      	add	r7, sp, #0
 80057be:	6078      	str	r0, [r7, #4]
 80057c0:	bf00      	nop
 80057c2:	370c      	adds	r7, #12
 80057c4:	46bd      	mov	sp, r7
 80057c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057ca:	4770      	bx	lr

080057cc <HAL_UART_RxHalfCpltCallback>:
 80057cc:	b480      	push	{r7}
 80057ce:	b083      	sub	sp, #12
 80057d0:	af00      	add	r7, sp, #0
 80057d2:	6078      	str	r0, [r7, #4]
 80057d4:	bf00      	nop
 80057d6:	370c      	adds	r7, #12
 80057d8:	46bd      	mov	sp, r7
 80057da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057de:	4770      	bx	lr

080057e0 <HAL_UART_ErrorCallback>:
 80057e0:	b480      	push	{r7}
 80057e2:	b083      	sub	sp, #12
 80057e4:	af00      	add	r7, sp, #0
 80057e6:	6078      	str	r0, [r7, #4]
 80057e8:	bf00      	nop
 80057ea:	370c      	adds	r7, #12
 80057ec:	46bd      	mov	sp, r7
 80057ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057f2:	4770      	bx	lr

080057f4 <HAL_UARTEx_RxEventCallback>:
 80057f4:	b480      	push	{r7}
 80057f6:	b083      	sub	sp, #12
 80057f8:	af00      	add	r7, sp, #0
 80057fa:	6078      	str	r0, [r7, #4]
 80057fc:	460b      	mov	r3, r1
 80057fe:	807b      	strh	r3, [r7, #2]
 8005800:	bf00      	nop
 8005802:	370c      	adds	r7, #12
 8005804:	46bd      	mov	sp, r7
 8005806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800580a:	4770      	bx	lr

0800580c <UART_DMAReceiveCplt>:
 800580c:	b580      	push	{r7, lr}
 800580e:	b09c      	sub	sp, #112	@ 0x70
 8005810:	af00      	add	r7, sp, #0
 8005812:	6078      	str	r0, [r7, #4]
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005818:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005824:	2b00      	cmp	r3, #0
 8005826:	d172      	bne.n	800590e <UART_DMAReceiveCplt+0x102>
 8005828:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800582a:	2200      	movs	r2, #0
 800582c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800582e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005830:	681b      	ldr	r3, [r3, #0]
 8005832:	330c      	adds	r3, #12
 8005834:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005836:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005838:	e853 3f00 	ldrex	r3, [r3]
 800583c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800583e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005840:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005844:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005846:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	330c      	adds	r3, #12
 800584c:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 800584e:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005850:	657b      	str	r3, [r7, #84]	@ 0x54
 8005852:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8005854:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005856:	e841 2300 	strex	r3, r2, [r1]
 800585a:	653b      	str	r3, [r7, #80]	@ 0x50
 800585c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800585e:	2b00      	cmp	r3, #0
 8005860:	d1e5      	bne.n	800582e <UART_DMAReceiveCplt+0x22>
 8005862:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	3314      	adds	r3, #20
 8005868:	63bb      	str	r3, [r7, #56]	@ 0x38
 800586a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800586c:	e853 3f00 	ldrex	r3, [r3]
 8005870:	637b      	str	r3, [r7, #52]	@ 0x34
 8005872:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005874:	f023 0301 	bic.w	r3, r3, #1
 8005878:	667b      	str	r3, [r7, #100]	@ 0x64
 800587a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	3314      	adds	r3, #20
 8005880:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8005882:	647a      	str	r2, [r7, #68]	@ 0x44
 8005884:	643b      	str	r3, [r7, #64]	@ 0x40
 8005886:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8005888:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800588a:	e841 2300 	strex	r3, r2, [r1]
 800588e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005890:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005892:	2b00      	cmp	r3, #0
 8005894:	d1e5      	bne.n	8005862 <UART_DMAReceiveCplt+0x56>
 8005896:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	3314      	adds	r3, #20
 800589c:	627b      	str	r3, [r7, #36]	@ 0x24
 800589e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80058a0:	e853 3f00 	ldrex	r3, [r3]
 80058a4:	623b      	str	r3, [r7, #32]
 80058a6:	6a3b      	ldr	r3, [r7, #32]
 80058a8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80058ac:	663b      	str	r3, [r7, #96]	@ 0x60
 80058ae:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058b0:	681b      	ldr	r3, [r3, #0]
 80058b2:	3314      	adds	r3, #20
 80058b4:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 80058b6:	633a      	str	r2, [r7, #48]	@ 0x30
 80058b8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80058ba:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80058bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80058be:	e841 2300 	strex	r3, r2, [r1]
 80058c2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80058c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058c6:	2b00      	cmp	r3, #0
 80058c8:	d1e5      	bne.n	8005896 <UART_DMAReceiveCplt+0x8a>
 80058ca:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058cc:	2220      	movs	r2, #32
 80058ce:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80058d2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058d6:	2b01      	cmp	r3, #1
 80058d8:	d119      	bne.n	800590e <UART_DMAReceiveCplt+0x102>
 80058da:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	330c      	adds	r3, #12
 80058e0:	613b      	str	r3, [r7, #16]
 80058e2:	693b      	ldr	r3, [r7, #16]
 80058e4:	e853 3f00 	ldrex	r3, [r3]
 80058e8:	60fb      	str	r3, [r7, #12]
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	f023 0310 	bic.w	r3, r3, #16
 80058f0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80058f2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	330c      	adds	r3, #12
 80058f8:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 80058fa:	61fa      	str	r2, [r7, #28]
 80058fc:	61bb      	str	r3, [r7, #24]
 80058fe:	69b9      	ldr	r1, [r7, #24]
 8005900:	69fa      	ldr	r2, [r7, #28]
 8005902:	e841 2300 	strex	r3, r2, [r1]
 8005906:	617b      	str	r3, [r7, #20]
 8005908:	697b      	ldr	r3, [r7, #20]
 800590a:	2b00      	cmp	r3, #0
 800590c:	d1e5      	bne.n	80058da <UART_DMAReceiveCplt+0xce>
 800590e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005910:	2200      	movs	r2, #0
 8005912:	635a      	str	r2, [r3, #52]	@ 0x34
 8005914:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005916:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005918:	2b01      	cmp	r3, #1
 800591a:	d106      	bne.n	800592a <UART_DMAReceiveCplt+0x11e>
 800591c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800591e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005920:	4619      	mov	r1, r3
 8005922:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8005924:	f7ff ff66 	bl	80057f4 <HAL_UARTEx_RxEventCallback>
 8005928:	e002      	b.n	8005930 <UART_DMAReceiveCplt+0x124>
 800592a:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 800592c:	f7fd f834 	bl	8002998 <HAL_UART_RxCpltCallback>
 8005930:	bf00      	nop
 8005932:	3770      	adds	r7, #112	@ 0x70
 8005934:	46bd      	mov	sp, r7
 8005936:	bd80      	pop	{r7, pc}

08005938 <UART_DMARxHalfCplt>:
 8005938:	b580      	push	{r7, lr}
 800593a:	b084      	sub	sp, #16
 800593c:	af00      	add	r7, sp, #0
 800593e:	6078      	str	r0, [r7, #4]
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005944:	60fb      	str	r3, [r7, #12]
 8005946:	68fb      	ldr	r3, [r7, #12]
 8005948:	2201      	movs	r2, #1
 800594a:	635a      	str	r2, [r3, #52]	@ 0x34
 800594c:	68fb      	ldr	r3, [r7, #12]
 800594e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005950:	2b01      	cmp	r3, #1
 8005952:	d108      	bne.n	8005966 <UART_DMARxHalfCplt+0x2e>
 8005954:	68fb      	ldr	r3, [r7, #12]
 8005956:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005958:	085b      	lsrs	r3, r3, #1
 800595a:	b29b      	uxth	r3, r3
 800595c:	4619      	mov	r1, r3
 800595e:	68f8      	ldr	r0, [r7, #12]
 8005960:	f7ff ff48 	bl	80057f4 <HAL_UARTEx_RxEventCallback>
 8005964:	e002      	b.n	800596c <UART_DMARxHalfCplt+0x34>
 8005966:	68f8      	ldr	r0, [r7, #12]
 8005968:	f7ff ff30 	bl	80057cc <HAL_UART_RxHalfCpltCallback>
 800596c:	bf00      	nop
 800596e:	3710      	adds	r7, #16
 8005970:	46bd      	mov	sp, r7
 8005972:	bd80      	pop	{r7, pc}

08005974 <UART_DMAError>:
 8005974:	b580      	push	{r7, lr}
 8005976:	b084      	sub	sp, #16
 8005978:	af00      	add	r7, sp, #0
 800597a:	6078      	str	r0, [r7, #4]
 800597c:	2300      	movs	r3, #0
 800597e:	60fb      	str	r3, [r7, #12]
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005984:	60bb      	str	r3, [r7, #8]
 8005986:	68bb      	ldr	r3, [r7, #8]
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	695b      	ldr	r3, [r3, #20]
 800598c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005990:	2b80      	cmp	r3, #128	@ 0x80
 8005992:	bf0c      	ite	eq
 8005994:	2301      	moveq	r3, #1
 8005996:	2300      	movne	r3, #0
 8005998:	b2db      	uxtb	r3, r3
 800599a:	60fb      	str	r3, [r7, #12]
 800599c:	68bb      	ldr	r3, [r7, #8]
 800599e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80059a2:	b2db      	uxtb	r3, r3
 80059a4:	2b21      	cmp	r3, #33	@ 0x21
 80059a6:	d108      	bne.n	80059ba <UART_DMAError+0x46>
 80059a8:	68fb      	ldr	r3, [r7, #12]
 80059aa:	2b00      	cmp	r3, #0
 80059ac:	d005      	beq.n	80059ba <UART_DMAError+0x46>
 80059ae:	68bb      	ldr	r3, [r7, #8]
 80059b0:	2200      	movs	r2, #0
 80059b2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80059b4:	68b8      	ldr	r0, [r7, #8]
 80059b6:	f000 f8c1 	bl	8005b3c <UART_EndTxTransfer>
 80059ba:	68bb      	ldr	r3, [r7, #8]
 80059bc:	681b      	ldr	r3, [r3, #0]
 80059be:	695b      	ldr	r3, [r3, #20]
 80059c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80059c4:	2b40      	cmp	r3, #64	@ 0x40
 80059c6:	bf0c      	ite	eq
 80059c8:	2301      	moveq	r3, #1
 80059ca:	2300      	movne	r3, #0
 80059cc:	b2db      	uxtb	r3, r3
 80059ce:	60fb      	str	r3, [r7, #12]
 80059d0:	68bb      	ldr	r3, [r7, #8]
 80059d2:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80059d6:	b2db      	uxtb	r3, r3
 80059d8:	2b22      	cmp	r3, #34	@ 0x22
 80059da:	d108      	bne.n	80059ee <UART_DMAError+0x7a>
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	2b00      	cmp	r3, #0
 80059e0:	d005      	beq.n	80059ee <UART_DMAError+0x7a>
 80059e2:	68bb      	ldr	r3, [r7, #8]
 80059e4:	2200      	movs	r2, #0
 80059e6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80059e8:	68b8      	ldr	r0, [r7, #8]
 80059ea:	f000 f8cf 	bl	8005b8c <UART_EndRxTransfer>
 80059ee:	68bb      	ldr	r3, [r7, #8]
 80059f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80059f2:	f043 0210 	orr.w	r2, r3, #16
 80059f6:	68bb      	ldr	r3, [r7, #8]
 80059f8:	645a      	str	r2, [r3, #68]	@ 0x44
 80059fa:	68b8      	ldr	r0, [r7, #8]
 80059fc:	f7ff fef0 	bl	80057e0 <HAL_UART_ErrorCallback>
 8005a00:	bf00      	nop
 8005a02:	3710      	adds	r7, #16
 8005a04:	46bd      	mov	sp, r7
 8005a06:	bd80      	pop	{r7, pc}

08005a08 <UART_Start_Receive_DMA>:
 8005a08:	b580      	push	{r7, lr}
 8005a0a:	b098      	sub	sp, #96	@ 0x60
 8005a0c:	af00      	add	r7, sp, #0
 8005a0e:	60f8      	str	r0, [r7, #12]
 8005a10:	60b9      	str	r1, [r7, #8]
 8005a12:	4613      	mov	r3, r2
 8005a14:	80fb      	strh	r3, [r7, #6]
 8005a16:	68ba      	ldr	r2, [r7, #8]
 8005a18:	68fb      	ldr	r3, [r7, #12]
 8005a1a:	629a      	str	r2, [r3, #40]	@ 0x28
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	88fa      	ldrh	r2, [r7, #6]
 8005a20:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	2200      	movs	r2, #0
 8005a26:	645a      	str	r2, [r3, #68]	@ 0x44
 8005a28:	68fb      	ldr	r3, [r7, #12]
 8005a2a:	2222      	movs	r2, #34	@ 0x22
 8005a2c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005a30:	68fb      	ldr	r3, [r7, #12]
 8005a32:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005a34:	4a3e      	ldr	r2, [pc, #248]	@ (8005b30 <UART_Start_Receive_DMA+0x128>)
 8005a36:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005a38:	68fb      	ldr	r3, [r7, #12]
 8005a3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005a3c:	4a3d      	ldr	r2, [pc, #244]	@ (8005b34 <UART_Start_Receive_DMA+0x12c>)
 8005a3e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005a40:	68fb      	ldr	r3, [r7, #12]
 8005a42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005a44:	4a3c      	ldr	r2, [pc, #240]	@ (8005b38 <UART_Start_Receive_DMA+0x130>)
 8005a46:	64da      	str	r2, [r3, #76]	@ 0x4c
 8005a48:	68fb      	ldr	r3, [r7, #12]
 8005a4a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005a4c:	2200      	movs	r2, #0
 8005a4e:	651a      	str	r2, [r3, #80]	@ 0x50
 8005a50:	f107 0308 	add.w	r3, r7, #8
 8005a54:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005a56:	68fb      	ldr	r3, [r7, #12]
 8005a58:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	3304      	adds	r3, #4
 8005a60:	4619      	mov	r1, r3
 8005a62:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005a64:	681a      	ldr	r2, [r3, #0]
 8005a66:	88fb      	ldrh	r3, [r7, #6]
 8005a68:	f7fd fce8 	bl	800343c <HAL_DMA_Start_IT>
 8005a6c:	2300      	movs	r3, #0
 8005a6e:	613b      	str	r3, [r7, #16]
 8005a70:	68fb      	ldr	r3, [r7, #12]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	613b      	str	r3, [r7, #16]
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	685b      	ldr	r3, [r3, #4]
 8005a7e:	613b      	str	r3, [r7, #16]
 8005a80:	693b      	ldr	r3, [r7, #16]
 8005a82:	68fb      	ldr	r3, [r7, #12]
 8005a84:	691b      	ldr	r3, [r3, #16]
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d019      	beq.n	8005abe <UART_Start_Receive_DMA+0xb6>
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	330c      	adds	r3, #12
 8005a90:	643b      	str	r3, [r7, #64]	@ 0x40
 8005a92:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005a94:	e853 3f00 	ldrex	r3, [r3]
 8005a98:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005a9a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005a9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005aa0:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	330c      	adds	r3, #12
 8005aa8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005aaa:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005aac:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005aae:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8005ab0:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005ab2:	e841 2300 	strex	r3, r2, [r1]
 8005ab6:	647b      	str	r3, [r7, #68]	@ 0x44
 8005ab8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005aba:	2b00      	cmp	r3, #0
 8005abc:	d1e5      	bne.n	8005a8a <UART_Start_Receive_DMA+0x82>
 8005abe:	68fb      	ldr	r3, [r7, #12]
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	3314      	adds	r3, #20
 8005ac4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005ac6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005ac8:	e853 3f00 	ldrex	r3, [r3]
 8005acc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005ace:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ad0:	f043 0301 	orr.w	r3, r3, #1
 8005ad4:	657b      	str	r3, [r7, #84]	@ 0x54
 8005ad6:	68fb      	ldr	r3, [r7, #12]
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	3314      	adds	r3, #20
 8005adc:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8005ade:	63ba      	str	r2, [r7, #56]	@ 0x38
 8005ae0:	637b      	str	r3, [r7, #52]	@ 0x34
 8005ae2:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8005ae4:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8005ae6:	e841 2300 	strex	r3, r2, [r1]
 8005aea:	633b      	str	r3, [r7, #48]	@ 0x30
 8005aec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005aee:	2b00      	cmp	r3, #0
 8005af0:	d1e5      	bne.n	8005abe <UART_Start_Receive_DMA+0xb6>
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	3314      	adds	r3, #20
 8005af8:	61bb      	str	r3, [r7, #24]
 8005afa:	69bb      	ldr	r3, [r7, #24]
 8005afc:	e853 3f00 	ldrex	r3, [r3]
 8005b00:	617b      	str	r3, [r7, #20]
 8005b02:	697b      	ldr	r3, [r7, #20]
 8005b04:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005b08:	653b      	str	r3, [r7, #80]	@ 0x50
 8005b0a:	68fb      	ldr	r3, [r7, #12]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	3314      	adds	r3, #20
 8005b10:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8005b12:	627a      	str	r2, [r7, #36]	@ 0x24
 8005b14:	623b      	str	r3, [r7, #32]
 8005b16:	6a39      	ldr	r1, [r7, #32]
 8005b18:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005b1a:	e841 2300 	strex	r3, r2, [r1]
 8005b1e:	61fb      	str	r3, [r7, #28]
 8005b20:	69fb      	ldr	r3, [r7, #28]
 8005b22:	2b00      	cmp	r3, #0
 8005b24:	d1e5      	bne.n	8005af2 <UART_Start_Receive_DMA+0xea>
 8005b26:	2300      	movs	r3, #0
 8005b28:	4618      	mov	r0, r3
 8005b2a:	3760      	adds	r7, #96	@ 0x60
 8005b2c:	46bd      	mov	sp, r7
 8005b2e:	bd80      	pop	{r7, pc}
 8005b30:	0800580d 	.word	0x0800580d
 8005b34:	08005939 	.word	0x08005939
 8005b38:	08005975 	.word	0x08005975

08005b3c <UART_EndTxTransfer>:
 8005b3c:	b480      	push	{r7}
 8005b3e:	b089      	sub	sp, #36	@ 0x24
 8005b40:	af00      	add	r7, sp, #0
 8005b42:	6078      	str	r0, [r7, #4]
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	330c      	adds	r3, #12
 8005b4a:	60fb      	str	r3, [r7, #12]
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	e853 3f00 	ldrex	r3, [r3]
 8005b52:	60bb      	str	r3, [r7, #8]
 8005b54:	68bb      	ldr	r3, [r7, #8]
 8005b56:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8005b5a:	61fb      	str	r3, [r7, #28]
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	330c      	adds	r3, #12
 8005b62:	69fa      	ldr	r2, [r7, #28]
 8005b64:	61ba      	str	r2, [r7, #24]
 8005b66:	617b      	str	r3, [r7, #20]
 8005b68:	6979      	ldr	r1, [r7, #20]
 8005b6a:	69ba      	ldr	r2, [r7, #24]
 8005b6c:	e841 2300 	strex	r3, r2, [r1]
 8005b70:	613b      	str	r3, [r7, #16]
 8005b72:	693b      	ldr	r3, [r7, #16]
 8005b74:	2b00      	cmp	r3, #0
 8005b76:	d1e5      	bne.n	8005b44 <UART_EndTxTransfer+0x8>
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	2220      	movs	r2, #32
 8005b7c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005b80:	bf00      	nop
 8005b82:	3724      	adds	r7, #36	@ 0x24
 8005b84:	46bd      	mov	sp, r7
 8005b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b8a:	4770      	bx	lr

08005b8c <UART_EndRxTransfer>:
 8005b8c:	b480      	push	{r7}
 8005b8e:	b095      	sub	sp, #84	@ 0x54
 8005b90:	af00      	add	r7, sp, #0
 8005b92:	6078      	str	r0, [r7, #4]
 8005b94:	687b      	ldr	r3, [r7, #4]
 8005b96:	681b      	ldr	r3, [r3, #0]
 8005b98:	330c      	adds	r3, #12
 8005b9a:	637b      	str	r3, [r7, #52]	@ 0x34
 8005b9c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005b9e:	e853 3f00 	ldrex	r3, [r3]
 8005ba2:	633b      	str	r3, [r7, #48]	@ 0x30
 8005ba4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005ba6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005baa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	330c      	adds	r3, #12
 8005bb2:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005bb4:	643a      	str	r2, [r7, #64]	@ 0x40
 8005bb6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005bb8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005bba:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005bbc:	e841 2300 	strex	r3, r2, [r1]
 8005bc0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005bc2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005bc4:	2b00      	cmp	r3, #0
 8005bc6:	d1e5      	bne.n	8005b94 <UART_EndRxTransfer+0x8>
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	3314      	adds	r3, #20
 8005bce:	623b      	str	r3, [r7, #32]
 8005bd0:	6a3b      	ldr	r3, [r7, #32]
 8005bd2:	e853 3f00 	ldrex	r3, [r3]
 8005bd6:	61fb      	str	r3, [r7, #28]
 8005bd8:	69fb      	ldr	r3, [r7, #28]
 8005bda:	f023 0301 	bic.w	r3, r3, #1
 8005bde:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	681b      	ldr	r3, [r3, #0]
 8005be4:	3314      	adds	r3, #20
 8005be6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005be8:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005bea:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005bec:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005bee:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005bf0:	e841 2300 	strex	r3, r2, [r1]
 8005bf4:	627b      	str	r3, [r7, #36]	@ 0x24
 8005bf6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	d1e5      	bne.n	8005bc8 <UART_EndRxTransfer+0x3c>
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c00:	2b01      	cmp	r3, #1
 8005c02:	d119      	bne.n	8005c38 <UART_EndRxTransfer+0xac>
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	330c      	adds	r3, #12
 8005c0a:	60fb      	str	r3, [r7, #12]
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	e853 3f00 	ldrex	r3, [r3]
 8005c12:	60bb      	str	r3, [r7, #8]
 8005c14:	68bb      	ldr	r3, [r7, #8]
 8005c16:	f023 0310 	bic.w	r3, r3, #16
 8005c1a:	647b      	str	r3, [r7, #68]	@ 0x44
 8005c1c:	687b      	ldr	r3, [r7, #4]
 8005c1e:	681b      	ldr	r3, [r3, #0]
 8005c20:	330c      	adds	r3, #12
 8005c22:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005c24:	61ba      	str	r2, [r7, #24]
 8005c26:	617b      	str	r3, [r7, #20]
 8005c28:	6979      	ldr	r1, [r7, #20]
 8005c2a:	69ba      	ldr	r2, [r7, #24]
 8005c2c:	e841 2300 	strex	r3, r2, [r1]
 8005c30:	613b      	str	r3, [r7, #16]
 8005c32:	693b      	ldr	r3, [r7, #16]
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	d1e5      	bne.n	8005c04 <UART_EndRxTransfer+0x78>
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	2220      	movs	r2, #32
 8005c3c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	2200      	movs	r2, #0
 8005c44:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c46:	bf00      	nop
 8005c48:	3754      	adds	r7, #84	@ 0x54
 8005c4a:	46bd      	mov	sp, r7
 8005c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c50:	4770      	bx	lr

08005c52 <UART_DMAAbortOnError>:
 8005c52:	b580      	push	{r7, lr}
 8005c54:	b084      	sub	sp, #16
 8005c56:	af00      	add	r7, sp, #0
 8005c58:	6078      	str	r0, [r7, #4]
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c5e:	60fb      	str	r3, [r7, #12]
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	2200      	movs	r2, #0
 8005c64:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005c66:	68fb      	ldr	r3, [r7, #12]
 8005c68:	2200      	movs	r2, #0
 8005c6a:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005c6c:	68f8      	ldr	r0, [r7, #12]
 8005c6e:	f7ff fdb7 	bl	80057e0 <HAL_UART_ErrorCallback>
 8005c72:	bf00      	nop
 8005c74:	3710      	adds	r7, #16
 8005c76:	46bd      	mov	sp, r7
 8005c78:	bd80      	pop	{r7, pc}

08005c7a <UART_Transmit_IT>:
 8005c7a:	b480      	push	{r7}
 8005c7c:	b085      	sub	sp, #20
 8005c7e:	af00      	add	r7, sp, #0
 8005c80:	6078      	str	r0, [r7, #4]
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005c88:	b2db      	uxtb	r3, r3
 8005c8a:	2b21      	cmp	r3, #33	@ 0x21
 8005c8c:	d13e      	bne.n	8005d0c <UART_Transmit_IT+0x92>
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	689b      	ldr	r3, [r3, #8]
 8005c92:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005c96:	d114      	bne.n	8005cc2 <UART_Transmit_IT+0x48>
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	691b      	ldr	r3, [r3, #16]
 8005c9c:	2b00      	cmp	r3, #0
 8005c9e:	d110      	bne.n	8005cc2 <UART_Transmit_IT+0x48>
 8005ca0:	687b      	ldr	r3, [r7, #4]
 8005ca2:	6a1b      	ldr	r3, [r3, #32]
 8005ca4:	60fb      	str	r3, [r7, #12]
 8005ca6:	68fb      	ldr	r3, [r7, #12]
 8005ca8:	881b      	ldrh	r3, [r3, #0]
 8005caa:	461a      	mov	r2, r3
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005cb4:	605a      	str	r2, [r3, #4]
 8005cb6:	687b      	ldr	r3, [r7, #4]
 8005cb8:	6a1b      	ldr	r3, [r3, #32]
 8005cba:	1c9a      	adds	r2, r3, #2
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	621a      	str	r2, [r3, #32]
 8005cc0:	e008      	b.n	8005cd4 <UART_Transmit_IT+0x5a>
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	6a1b      	ldr	r3, [r3, #32]
 8005cc6:	1c59      	adds	r1, r3, #1
 8005cc8:	687a      	ldr	r2, [r7, #4]
 8005cca:	6211      	str	r1, [r2, #32]
 8005ccc:	781a      	ldrb	r2, [r3, #0]
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	605a      	str	r2, [r3, #4]
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005cd8:	b29b      	uxth	r3, r3
 8005cda:	3b01      	subs	r3, #1
 8005cdc:	b29b      	uxth	r3, r3
 8005cde:	687a      	ldr	r2, [r7, #4]
 8005ce0:	4619      	mov	r1, r3
 8005ce2:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d10f      	bne.n	8005d08 <UART_Transmit_IT+0x8e>
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	68da      	ldr	r2, [r3, #12]
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005cf6:	60da      	str	r2, [r3, #12]
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	681b      	ldr	r3, [r3, #0]
 8005cfc:	68da      	ldr	r2, [r3, #12]
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005d06:	60da      	str	r2, [r3, #12]
 8005d08:	2300      	movs	r3, #0
 8005d0a:	e000      	b.n	8005d0e <UART_Transmit_IT+0x94>
 8005d0c:	2302      	movs	r3, #2
 8005d0e:	4618      	mov	r0, r3
 8005d10:	3714      	adds	r7, #20
 8005d12:	46bd      	mov	sp, r7
 8005d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d18:	4770      	bx	lr

08005d1a <UART_EndTransmit_IT>:
 8005d1a:	b580      	push	{r7, lr}
 8005d1c:	b082      	sub	sp, #8
 8005d1e:	af00      	add	r7, sp, #0
 8005d20:	6078      	str	r0, [r7, #4]
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	681b      	ldr	r3, [r3, #0]
 8005d26:	68da      	ldr	r2, [r3, #12]
 8005d28:	687b      	ldr	r3, [r7, #4]
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005d30:	60da      	str	r2, [r3, #12]
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	2220      	movs	r2, #32
 8005d36:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005d3a:	6878      	ldr	r0, [r7, #4]
 8005d3c:	f7ff fd3c 	bl	80057b8 <HAL_UART_TxCpltCallback>
 8005d40:	2300      	movs	r3, #0
 8005d42:	4618      	mov	r0, r3
 8005d44:	3708      	adds	r7, #8
 8005d46:	46bd      	mov	sp, r7
 8005d48:	bd80      	pop	{r7, pc}

08005d4a <UART_Receive_IT>:
 8005d4a:	b580      	push	{r7, lr}
 8005d4c:	b08c      	sub	sp, #48	@ 0x30
 8005d4e:	af00      	add	r7, sp, #0
 8005d50:	6078      	str	r0, [r7, #4]
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005d58:	b2db      	uxtb	r3, r3
 8005d5a:	2b22      	cmp	r3, #34	@ 0x22
 8005d5c:	f040 80ae 	bne.w	8005ebc <UART_Receive_IT+0x172>
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	689b      	ldr	r3, [r3, #8]
 8005d64:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005d68:	d117      	bne.n	8005d9a <UART_Receive_IT+0x50>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	691b      	ldr	r3, [r3, #16]
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d113      	bne.n	8005d9a <UART_Receive_IT+0x50>
 8005d72:	2300      	movs	r3, #0
 8005d74:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005d7a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	681b      	ldr	r3, [r3, #0]
 8005d80:	685b      	ldr	r3, [r3, #4]
 8005d82:	b29b      	uxth	r3, r3
 8005d84:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005d88:	b29a      	uxth	r2, r3
 8005d8a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005d8c:	801a      	strh	r2, [r3, #0]
 8005d8e:	687b      	ldr	r3, [r7, #4]
 8005d90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005d92:	1c9a      	adds	r2, r3, #2
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	629a      	str	r2, [r3, #40]	@ 0x28
 8005d98:	e026      	b.n	8005de8 <UART_Receive_IT+0x9e>
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005d9e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005da0:	2300      	movs	r3, #0
 8005da2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005da4:	687b      	ldr	r3, [r7, #4]
 8005da6:	689b      	ldr	r3, [r3, #8]
 8005da8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005dac:	d007      	beq.n	8005dbe <UART_Receive_IT+0x74>
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	689b      	ldr	r3, [r3, #8]
 8005db2:	2b00      	cmp	r3, #0
 8005db4:	d10a      	bne.n	8005dcc <UART_Receive_IT+0x82>
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	691b      	ldr	r3, [r3, #16]
 8005dba:	2b00      	cmp	r3, #0
 8005dbc:	d106      	bne.n	8005dcc <UART_Receive_IT+0x82>
 8005dbe:	687b      	ldr	r3, [r7, #4]
 8005dc0:	681b      	ldr	r3, [r3, #0]
 8005dc2:	685b      	ldr	r3, [r3, #4]
 8005dc4:	b2da      	uxtb	r2, r3
 8005dc6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005dc8:	701a      	strb	r2, [r3, #0]
 8005dca:	e008      	b.n	8005dde <UART_Receive_IT+0x94>
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	685b      	ldr	r3, [r3, #4]
 8005dd2:	b2db      	uxtb	r3, r3
 8005dd4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005dd8:	b2da      	uxtb	r2, r3
 8005dda:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005ddc:	701a      	strb	r2, [r3, #0]
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005de2:	1c5a      	adds	r2, r3, #1
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	629a      	str	r2, [r3, #40]	@ 0x28
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005dec:	b29b      	uxth	r3, r3
 8005dee:	3b01      	subs	r3, #1
 8005df0:	b29b      	uxth	r3, r3
 8005df2:	687a      	ldr	r2, [r7, #4]
 8005df4:	4619      	mov	r1, r3
 8005df6:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005df8:	2b00      	cmp	r3, #0
 8005dfa:	d15d      	bne.n	8005eb8 <UART_Receive_IT+0x16e>
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	68da      	ldr	r2, [r3, #12]
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	f022 0220 	bic.w	r2, r2, #32
 8005e0a:	60da      	str	r2, [r3, #12]
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	68da      	ldr	r2, [r3, #12]
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005e1a:	60da      	str	r2, [r3, #12]
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	695a      	ldr	r2, [r3, #20]
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	681b      	ldr	r3, [r3, #0]
 8005e26:	f022 0201 	bic.w	r2, r2, #1
 8005e2a:	615a      	str	r2, [r3, #20]
 8005e2c:	687b      	ldr	r3, [r7, #4]
 8005e2e:	2220      	movs	r2, #32
 8005e30:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005e34:	687b      	ldr	r3, [r7, #4]
 8005e36:	2200      	movs	r2, #0
 8005e38:	635a      	str	r2, [r3, #52]	@ 0x34
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005e3e:	2b01      	cmp	r3, #1
 8005e40:	d135      	bne.n	8005eae <UART_Receive_IT+0x164>
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	2200      	movs	r2, #0
 8005e46:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	330c      	adds	r3, #12
 8005e4e:	617b      	str	r3, [r7, #20]
 8005e50:	697b      	ldr	r3, [r7, #20]
 8005e52:	e853 3f00 	ldrex	r3, [r3]
 8005e56:	613b      	str	r3, [r7, #16]
 8005e58:	693b      	ldr	r3, [r7, #16]
 8005e5a:	f023 0310 	bic.w	r3, r3, #16
 8005e5e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	330c      	adds	r3, #12
 8005e66:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005e68:	623a      	str	r2, [r7, #32]
 8005e6a:	61fb      	str	r3, [r7, #28]
 8005e6c:	69f9      	ldr	r1, [r7, #28]
 8005e6e:	6a3a      	ldr	r2, [r7, #32]
 8005e70:	e841 2300 	strex	r3, r2, [r1]
 8005e74:	61bb      	str	r3, [r7, #24]
 8005e76:	69bb      	ldr	r3, [r7, #24]
 8005e78:	2b00      	cmp	r3, #0
 8005e7a:	d1e5      	bne.n	8005e48 <UART_Receive_IT+0xfe>
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	f003 0310 	and.w	r3, r3, #16
 8005e86:	2b10      	cmp	r3, #16
 8005e88:	d10a      	bne.n	8005ea0 <UART_Receive_IT+0x156>
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	60fb      	str	r3, [r7, #12]
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	60fb      	str	r3, [r7, #12]
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	685b      	ldr	r3, [r3, #4]
 8005e9c:	60fb      	str	r3, [r7, #12]
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005ea4:	4619      	mov	r1, r3
 8005ea6:	6878      	ldr	r0, [r7, #4]
 8005ea8:	f7ff fca4 	bl	80057f4 <HAL_UARTEx_RxEventCallback>
 8005eac:	e002      	b.n	8005eb4 <UART_Receive_IT+0x16a>
 8005eae:	6878      	ldr	r0, [r7, #4]
 8005eb0:	f7fc fd72 	bl	8002998 <HAL_UART_RxCpltCallback>
 8005eb4:	2300      	movs	r3, #0
 8005eb6:	e002      	b.n	8005ebe <UART_Receive_IT+0x174>
 8005eb8:	2300      	movs	r3, #0
 8005eba:	e000      	b.n	8005ebe <UART_Receive_IT+0x174>
 8005ebc:	2302      	movs	r3, #2
 8005ebe:	4618      	mov	r0, r3
 8005ec0:	3730      	adds	r7, #48	@ 0x30
 8005ec2:	46bd      	mov	sp, r7
 8005ec4:	bd80      	pop	{r7, pc}
	...

08005ec8 <UART_SetConfig>:
 8005ec8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005ecc:	b0c0      	sub	sp, #256	@ 0x100
 8005ece:	af00      	add	r7, sp, #0
 8005ed0:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005ed4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	691b      	ldr	r3, [r3, #16]
 8005edc:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005ee0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ee4:	68d9      	ldr	r1, [r3, #12]
 8005ee6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005eea:	681a      	ldr	r2, [r3, #0]
 8005eec:	ea40 0301 	orr.w	r3, r0, r1
 8005ef0:	6113      	str	r3, [r2, #16]
 8005ef2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ef6:	689a      	ldr	r2, [r3, #8]
 8005ef8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005efc:	691b      	ldr	r3, [r3, #16]
 8005efe:	431a      	orrs	r2, r3
 8005f00:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f04:	695b      	ldr	r3, [r3, #20]
 8005f06:	431a      	orrs	r2, r3
 8005f08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f0c:	69db      	ldr	r3, [r3, #28]
 8005f0e:	4313      	orrs	r3, r2
 8005f10:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005f14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	68db      	ldr	r3, [r3, #12]
 8005f1c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005f20:	f021 010c 	bic.w	r1, r1, #12
 8005f24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f28:	681a      	ldr	r2, [r3, #0]
 8005f2a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005f2e:	430b      	orrs	r3, r1
 8005f30:	60d3      	str	r3, [r2, #12]
 8005f32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	695b      	ldr	r3, [r3, #20]
 8005f3a:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005f3e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f42:	6999      	ldr	r1, [r3, #24]
 8005f44:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f48:	681a      	ldr	r2, [r3, #0]
 8005f4a:	ea40 0301 	orr.w	r3, r0, r1
 8005f4e:	6153      	str	r3, [r2, #20]
 8005f50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f54:	681a      	ldr	r2, [r3, #0]
 8005f56:	4b8f      	ldr	r3, [pc, #572]	@ (8006194 <UART_SetConfig+0x2cc>)
 8005f58:	429a      	cmp	r2, r3
 8005f5a:	d005      	beq.n	8005f68 <UART_SetConfig+0xa0>
 8005f5c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f60:	681a      	ldr	r2, [r3, #0]
 8005f62:	4b8d      	ldr	r3, [pc, #564]	@ (8006198 <UART_SetConfig+0x2d0>)
 8005f64:	429a      	cmp	r2, r3
 8005f66:	d104      	bne.n	8005f72 <UART_SetConfig+0xaa>
 8005f68:	f7fe f870 	bl	800404c <HAL_RCC_GetPCLK2Freq>
 8005f6c:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005f70:	e003      	b.n	8005f7a <UART_SetConfig+0xb2>
 8005f72:	f7fe f857 	bl	8004024 <HAL_RCC_GetPCLK1Freq>
 8005f76:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005f7a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f7e:	69db      	ldr	r3, [r3, #28]
 8005f80:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005f84:	f040 810c 	bne.w	80061a0 <UART_SetConfig+0x2d8>
 8005f88:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005f8c:	2200      	movs	r2, #0
 8005f8e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005f92:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8005f96:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8005f9a:	4622      	mov	r2, r4
 8005f9c:	462b      	mov	r3, r5
 8005f9e:	1891      	adds	r1, r2, r2
 8005fa0:	65b9      	str	r1, [r7, #88]	@ 0x58
 8005fa2:	415b      	adcs	r3, r3
 8005fa4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005fa6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005faa:	4621      	mov	r1, r4
 8005fac:	eb12 0801 	adds.w	r8, r2, r1
 8005fb0:	4629      	mov	r1, r5
 8005fb2:	eb43 0901 	adc.w	r9, r3, r1
 8005fb6:	f04f 0200 	mov.w	r2, #0
 8005fba:	f04f 0300 	mov.w	r3, #0
 8005fbe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005fc2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005fc6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005fca:	4690      	mov	r8, r2
 8005fcc:	4699      	mov	r9, r3
 8005fce:	4623      	mov	r3, r4
 8005fd0:	eb18 0303 	adds.w	r3, r8, r3
 8005fd4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005fd8:	462b      	mov	r3, r5
 8005fda:	eb49 0303 	adc.w	r3, r9, r3
 8005fde:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005fe2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fe6:	685b      	ldr	r3, [r3, #4]
 8005fe8:	2200      	movs	r2, #0
 8005fea:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005fee:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005ff2:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005ff6:	460b      	mov	r3, r1
 8005ff8:	18db      	adds	r3, r3, r3
 8005ffa:	653b      	str	r3, [r7, #80]	@ 0x50
 8005ffc:	4613      	mov	r3, r2
 8005ffe:	eb42 0303 	adc.w	r3, r2, r3
 8006002:	657b      	str	r3, [r7, #84]	@ 0x54
 8006004:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8006008:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800600c:	f7fa f958 	bl	80002c0 <__aeabi_uldivmod>
 8006010:	4602      	mov	r2, r0
 8006012:	460b      	mov	r3, r1
 8006014:	4b61      	ldr	r3, [pc, #388]	@ (800619c <UART_SetConfig+0x2d4>)
 8006016:	fba3 2302 	umull	r2, r3, r3, r2
 800601a:	095b      	lsrs	r3, r3, #5
 800601c:	011c      	lsls	r4, r3, #4
 800601e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006022:	2200      	movs	r2, #0
 8006024:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006028:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 800602c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8006030:	4642      	mov	r2, r8
 8006032:	464b      	mov	r3, r9
 8006034:	1891      	adds	r1, r2, r2
 8006036:	64b9      	str	r1, [r7, #72]	@ 0x48
 8006038:	415b      	adcs	r3, r3
 800603a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800603c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006040:	4641      	mov	r1, r8
 8006042:	eb12 0a01 	adds.w	sl, r2, r1
 8006046:	4649      	mov	r1, r9
 8006048:	eb43 0b01 	adc.w	fp, r3, r1
 800604c:	f04f 0200 	mov.w	r2, #0
 8006050:	f04f 0300 	mov.w	r3, #0
 8006054:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006058:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800605c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006060:	4692      	mov	sl, r2
 8006062:	469b      	mov	fp, r3
 8006064:	4643      	mov	r3, r8
 8006066:	eb1a 0303 	adds.w	r3, sl, r3
 800606a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800606e:	464b      	mov	r3, r9
 8006070:	eb4b 0303 	adc.w	r3, fp, r3
 8006074:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006078:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800607c:	685b      	ldr	r3, [r3, #4]
 800607e:	2200      	movs	r2, #0
 8006080:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006084:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8006088:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800608c:	460b      	mov	r3, r1
 800608e:	18db      	adds	r3, r3, r3
 8006090:	643b      	str	r3, [r7, #64]	@ 0x40
 8006092:	4613      	mov	r3, r2
 8006094:	eb42 0303 	adc.w	r3, r2, r3
 8006098:	647b      	str	r3, [r7, #68]	@ 0x44
 800609a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800609e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80060a2:	f7fa f90d 	bl	80002c0 <__aeabi_uldivmod>
 80060a6:	4602      	mov	r2, r0
 80060a8:	460b      	mov	r3, r1
 80060aa:	4611      	mov	r1, r2
 80060ac:	4b3b      	ldr	r3, [pc, #236]	@ (800619c <UART_SetConfig+0x2d4>)
 80060ae:	fba3 2301 	umull	r2, r3, r3, r1
 80060b2:	095b      	lsrs	r3, r3, #5
 80060b4:	2264      	movs	r2, #100	@ 0x64
 80060b6:	fb02 f303 	mul.w	r3, r2, r3
 80060ba:	1acb      	subs	r3, r1, r3
 80060bc:	00db      	lsls	r3, r3, #3
 80060be:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80060c2:	4b36      	ldr	r3, [pc, #216]	@ (800619c <UART_SetConfig+0x2d4>)
 80060c4:	fba3 2302 	umull	r2, r3, r3, r2
 80060c8:	095b      	lsrs	r3, r3, #5
 80060ca:	005b      	lsls	r3, r3, #1
 80060cc:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80060d0:	441c      	add	r4, r3
 80060d2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80060d6:	2200      	movs	r2, #0
 80060d8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80060dc:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80060e0:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80060e4:	4642      	mov	r2, r8
 80060e6:	464b      	mov	r3, r9
 80060e8:	1891      	adds	r1, r2, r2
 80060ea:	63b9      	str	r1, [r7, #56]	@ 0x38
 80060ec:	415b      	adcs	r3, r3
 80060ee:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80060f0:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80060f4:	4641      	mov	r1, r8
 80060f6:	1851      	adds	r1, r2, r1
 80060f8:	6339      	str	r1, [r7, #48]	@ 0x30
 80060fa:	4649      	mov	r1, r9
 80060fc:	414b      	adcs	r3, r1
 80060fe:	637b      	str	r3, [r7, #52]	@ 0x34
 8006100:	f04f 0200 	mov.w	r2, #0
 8006104:	f04f 0300 	mov.w	r3, #0
 8006108:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 800610c:	4659      	mov	r1, fp
 800610e:	00cb      	lsls	r3, r1, #3
 8006110:	4651      	mov	r1, sl
 8006112:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006116:	4651      	mov	r1, sl
 8006118:	00ca      	lsls	r2, r1, #3
 800611a:	4610      	mov	r0, r2
 800611c:	4619      	mov	r1, r3
 800611e:	4603      	mov	r3, r0
 8006120:	4642      	mov	r2, r8
 8006122:	189b      	adds	r3, r3, r2
 8006124:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006128:	464b      	mov	r3, r9
 800612a:	460a      	mov	r2, r1
 800612c:	eb42 0303 	adc.w	r3, r2, r3
 8006130:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006134:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006138:	685b      	ldr	r3, [r3, #4]
 800613a:	2200      	movs	r2, #0
 800613c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8006140:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006144:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006148:	460b      	mov	r3, r1
 800614a:	18db      	adds	r3, r3, r3
 800614c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800614e:	4613      	mov	r3, r2
 8006150:	eb42 0303 	adc.w	r3, r2, r3
 8006154:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006156:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800615a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800615e:	f7fa f8af 	bl	80002c0 <__aeabi_uldivmod>
 8006162:	4602      	mov	r2, r0
 8006164:	460b      	mov	r3, r1
 8006166:	4b0d      	ldr	r3, [pc, #52]	@ (800619c <UART_SetConfig+0x2d4>)
 8006168:	fba3 1302 	umull	r1, r3, r3, r2
 800616c:	095b      	lsrs	r3, r3, #5
 800616e:	2164      	movs	r1, #100	@ 0x64
 8006170:	fb01 f303 	mul.w	r3, r1, r3
 8006174:	1ad3      	subs	r3, r2, r3
 8006176:	00db      	lsls	r3, r3, #3
 8006178:	3332      	adds	r3, #50	@ 0x32
 800617a:	4a08      	ldr	r2, [pc, #32]	@ (800619c <UART_SetConfig+0x2d4>)
 800617c:	fba2 2303 	umull	r2, r3, r2, r3
 8006180:	095b      	lsrs	r3, r3, #5
 8006182:	f003 0207 	and.w	r2, r3, #7
 8006186:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800618a:	681b      	ldr	r3, [r3, #0]
 800618c:	4422      	add	r2, r4
 800618e:	609a      	str	r2, [r3, #8]
 8006190:	e106      	b.n	80063a0 <UART_SetConfig+0x4d8>
 8006192:	bf00      	nop
 8006194:	40011000 	.word	0x40011000
 8006198:	40011400 	.word	0x40011400
 800619c:	51eb851f 	.word	0x51eb851f
 80061a0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80061a4:	2200      	movs	r2, #0
 80061a6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80061aa:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80061ae:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80061b2:	4642      	mov	r2, r8
 80061b4:	464b      	mov	r3, r9
 80061b6:	1891      	adds	r1, r2, r2
 80061b8:	6239      	str	r1, [r7, #32]
 80061ba:	415b      	adcs	r3, r3
 80061bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80061be:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80061c2:	4641      	mov	r1, r8
 80061c4:	1854      	adds	r4, r2, r1
 80061c6:	4649      	mov	r1, r9
 80061c8:	eb43 0501 	adc.w	r5, r3, r1
 80061cc:	f04f 0200 	mov.w	r2, #0
 80061d0:	f04f 0300 	mov.w	r3, #0
 80061d4:	00eb      	lsls	r3, r5, #3
 80061d6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80061da:	00e2      	lsls	r2, r4, #3
 80061dc:	4614      	mov	r4, r2
 80061de:	461d      	mov	r5, r3
 80061e0:	4643      	mov	r3, r8
 80061e2:	18e3      	adds	r3, r4, r3
 80061e4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80061e8:	464b      	mov	r3, r9
 80061ea:	eb45 0303 	adc.w	r3, r5, r3
 80061ee:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80061f2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80061f6:	685b      	ldr	r3, [r3, #4]
 80061f8:	2200      	movs	r2, #0
 80061fa:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80061fe:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006202:	f04f 0200 	mov.w	r2, #0
 8006206:	f04f 0300 	mov.w	r3, #0
 800620a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800620e:	4629      	mov	r1, r5
 8006210:	008b      	lsls	r3, r1, #2
 8006212:	4621      	mov	r1, r4
 8006214:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006218:	4621      	mov	r1, r4
 800621a:	008a      	lsls	r2, r1, #2
 800621c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8006220:	f7fa f84e 	bl	80002c0 <__aeabi_uldivmod>
 8006224:	4602      	mov	r2, r0
 8006226:	460b      	mov	r3, r1
 8006228:	4b60      	ldr	r3, [pc, #384]	@ (80063ac <UART_SetConfig+0x4e4>)
 800622a:	fba3 2302 	umull	r2, r3, r3, r2
 800622e:	095b      	lsrs	r3, r3, #5
 8006230:	011c      	lsls	r4, r3, #4
 8006232:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006236:	2200      	movs	r2, #0
 8006238:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800623c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8006240:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006244:	4642      	mov	r2, r8
 8006246:	464b      	mov	r3, r9
 8006248:	1891      	adds	r1, r2, r2
 800624a:	61b9      	str	r1, [r7, #24]
 800624c:	415b      	adcs	r3, r3
 800624e:	61fb      	str	r3, [r7, #28]
 8006250:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006254:	4641      	mov	r1, r8
 8006256:	1851      	adds	r1, r2, r1
 8006258:	6139      	str	r1, [r7, #16]
 800625a:	4649      	mov	r1, r9
 800625c:	414b      	adcs	r3, r1
 800625e:	617b      	str	r3, [r7, #20]
 8006260:	f04f 0200 	mov.w	r2, #0
 8006264:	f04f 0300 	mov.w	r3, #0
 8006268:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800626c:	4659      	mov	r1, fp
 800626e:	00cb      	lsls	r3, r1, #3
 8006270:	4651      	mov	r1, sl
 8006272:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006276:	4651      	mov	r1, sl
 8006278:	00ca      	lsls	r2, r1, #3
 800627a:	4610      	mov	r0, r2
 800627c:	4619      	mov	r1, r3
 800627e:	4603      	mov	r3, r0
 8006280:	4642      	mov	r2, r8
 8006282:	189b      	adds	r3, r3, r2
 8006284:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006288:	464b      	mov	r3, r9
 800628a:	460a      	mov	r2, r1
 800628c:	eb42 0303 	adc.w	r3, r2, r3
 8006290:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006294:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006298:	685b      	ldr	r3, [r3, #4]
 800629a:	2200      	movs	r2, #0
 800629c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800629e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80062a0:	f04f 0200 	mov.w	r2, #0
 80062a4:	f04f 0300 	mov.w	r3, #0
 80062a8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80062ac:	4649      	mov	r1, r9
 80062ae:	008b      	lsls	r3, r1, #2
 80062b0:	4641      	mov	r1, r8
 80062b2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80062b6:	4641      	mov	r1, r8
 80062b8:	008a      	lsls	r2, r1, #2
 80062ba:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80062be:	f7f9 ffff 	bl	80002c0 <__aeabi_uldivmod>
 80062c2:	4602      	mov	r2, r0
 80062c4:	460b      	mov	r3, r1
 80062c6:	4611      	mov	r1, r2
 80062c8:	4b38      	ldr	r3, [pc, #224]	@ (80063ac <UART_SetConfig+0x4e4>)
 80062ca:	fba3 2301 	umull	r2, r3, r3, r1
 80062ce:	095b      	lsrs	r3, r3, #5
 80062d0:	2264      	movs	r2, #100	@ 0x64
 80062d2:	fb02 f303 	mul.w	r3, r2, r3
 80062d6:	1acb      	subs	r3, r1, r3
 80062d8:	011b      	lsls	r3, r3, #4
 80062da:	3332      	adds	r3, #50	@ 0x32
 80062dc:	4a33      	ldr	r2, [pc, #204]	@ (80063ac <UART_SetConfig+0x4e4>)
 80062de:	fba2 2303 	umull	r2, r3, r2, r3
 80062e2:	095b      	lsrs	r3, r3, #5
 80062e4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80062e8:	441c      	add	r4, r3
 80062ea:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80062ee:	2200      	movs	r2, #0
 80062f0:	673b      	str	r3, [r7, #112]	@ 0x70
 80062f2:	677a      	str	r2, [r7, #116]	@ 0x74
 80062f4:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80062f8:	4642      	mov	r2, r8
 80062fa:	464b      	mov	r3, r9
 80062fc:	1891      	adds	r1, r2, r2
 80062fe:	60b9      	str	r1, [r7, #8]
 8006300:	415b      	adcs	r3, r3
 8006302:	60fb      	str	r3, [r7, #12]
 8006304:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006308:	4641      	mov	r1, r8
 800630a:	1851      	adds	r1, r2, r1
 800630c:	6039      	str	r1, [r7, #0]
 800630e:	4649      	mov	r1, r9
 8006310:	414b      	adcs	r3, r1
 8006312:	607b      	str	r3, [r7, #4]
 8006314:	f04f 0200 	mov.w	r2, #0
 8006318:	f04f 0300 	mov.w	r3, #0
 800631c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006320:	4659      	mov	r1, fp
 8006322:	00cb      	lsls	r3, r1, #3
 8006324:	4651      	mov	r1, sl
 8006326:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800632a:	4651      	mov	r1, sl
 800632c:	00ca      	lsls	r2, r1, #3
 800632e:	4610      	mov	r0, r2
 8006330:	4619      	mov	r1, r3
 8006332:	4603      	mov	r3, r0
 8006334:	4642      	mov	r2, r8
 8006336:	189b      	adds	r3, r3, r2
 8006338:	66bb      	str	r3, [r7, #104]	@ 0x68
 800633a:	464b      	mov	r3, r9
 800633c:	460a      	mov	r2, r1
 800633e:	eb42 0303 	adc.w	r3, r2, r3
 8006342:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006344:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006348:	685b      	ldr	r3, [r3, #4]
 800634a:	2200      	movs	r2, #0
 800634c:	663b      	str	r3, [r7, #96]	@ 0x60
 800634e:	667a      	str	r2, [r7, #100]	@ 0x64
 8006350:	f04f 0200 	mov.w	r2, #0
 8006354:	f04f 0300 	mov.w	r3, #0
 8006358:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 800635c:	4649      	mov	r1, r9
 800635e:	008b      	lsls	r3, r1, #2
 8006360:	4641      	mov	r1, r8
 8006362:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006366:	4641      	mov	r1, r8
 8006368:	008a      	lsls	r2, r1, #2
 800636a:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800636e:	f7f9 ffa7 	bl	80002c0 <__aeabi_uldivmod>
 8006372:	4602      	mov	r2, r0
 8006374:	460b      	mov	r3, r1
 8006376:	4b0d      	ldr	r3, [pc, #52]	@ (80063ac <UART_SetConfig+0x4e4>)
 8006378:	fba3 1302 	umull	r1, r3, r3, r2
 800637c:	095b      	lsrs	r3, r3, #5
 800637e:	2164      	movs	r1, #100	@ 0x64
 8006380:	fb01 f303 	mul.w	r3, r1, r3
 8006384:	1ad3      	subs	r3, r2, r3
 8006386:	011b      	lsls	r3, r3, #4
 8006388:	3332      	adds	r3, #50	@ 0x32
 800638a:	4a08      	ldr	r2, [pc, #32]	@ (80063ac <UART_SetConfig+0x4e4>)
 800638c:	fba2 2303 	umull	r2, r3, r2, r3
 8006390:	095b      	lsrs	r3, r3, #5
 8006392:	f003 020f 	and.w	r2, r3, #15
 8006396:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800639a:	681b      	ldr	r3, [r3, #0]
 800639c:	4422      	add	r2, r4
 800639e:	609a      	str	r2, [r3, #8]
 80063a0:	bf00      	nop
 80063a2:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80063a6:	46bd      	mov	sp, r7
 80063a8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80063ac:	51eb851f 	.word	0x51eb851f

080063b0 <MX_FATFS_Init>:
 80063b0:	b580      	push	{r7, lr}
 80063b2:	af00      	add	r7, sp, #0
 80063b4:	4904      	ldr	r1, [pc, #16]	@ (80063c8 <MX_FATFS_Init+0x18>)
 80063b6:	4805      	ldr	r0, [pc, #20]	@ (80063cc <MX_FATFS_Init+0x1c>)
 80063b8:	f000 f8ae 	bl	8006518 <FATFS_LinkDriver>
 80063bc:	4603      	mov	r3, r0
 80063be:	461a      	mov	r2, r3
 80063c0:	4b03      	ldr	r3, [pc, #12]	@ (80063d0 <MX_FATFS_Init+0x20>)
 80063c2:	701a      	strb	r2, [r3, #0]
 80063c4:	bf00      	nop
 80063c6:	bd80      	pop	{r7, pc}
 80063c8:	200139ec 	.word	0x200139ec
 80063cc:	20013748 	.word	0x20013748
 80063d0:	200139e8 	.word	0x200139e8

080063d4 <USER_initialize>:
 80063d4:	b580      	push	{r7, lr}
 80063d6:	b082      	sub	sp, #8
 80063d8:	af00      	add	r7, sp, #0
 80063da:	4603      	mov	r3, r0
 80063dc:	71fb      	strb	r3, [r7, #7]
 80063de:	79fb      	ldrb	r3, [r7, #7]
 80063e0:	4618      	mov	r0, r3
 80063e2:	f7fa fa99 	bl	8000918 <SD_disk_initialize>
 80063e6:	bf00      	nop
 80063e8:	4618      	mov	r0, r3
 80063ea:	3708      	adds	r7, #8
 80063ec:	46bd      	mov	sp, r7
 80063ee:	bd80      	pop	{r7, pc}

080063f0 <USER_status>:
 80063f0:	b580      	push	{r7, lr}
 80063f2:	b082      	sub	sp, #8
 80063f4:	af00      	add	r7, sp, #0
 80063f6:	4603      	mov	r3, r0
 80063f8:	71fb      	strb	r3, [r7, #7]
 80063fa:	79fb      	ldrb	r3, [r7, #7]
 80063fc:	4618      	mov	r0, r3
 80063fe:	f7fa fb71 	bl	8000ae4 <SD_disk_status>
 8006402:	bf00      	nop
 8006404:	4618      	mov	r0, r3
 8006406:	3708      	adds	r7, #8
 8006408:	46bd      	mov	sp, r7
 800640a:	bd80      	pop	{r7, pc}

0800640c <USER_read>:
 800640c:	b580      	push	{r7, lr}
 800640e:	b084      	sub	sp, #16
 8006410:	af00      	add	r7, sp, #0
 8006412:	60b9      	str	r1, [r7, #8]
 8006414:	607a      	str	r2, [r7, #4]
 8006416:	603b      	str	r3, [r7, #0]
 8006418:	4603      	mov	r3, r0
 800641a:	73fb      	strb	r3, [r7, #15]
 800641c:	7bf8      	ldrb	r0, [r7, #15]
 800641e:	683b      	ldr	r3, [r7, #0]
 8006420:	687a      	ldr	r2, [r7, #4]
 8006422:	68b9      	ldr	r1, [r7, #8]
 8006424:	f7fa fb74 	bl	8000b10 <SD_disk_read>
 8006428:	bf00      	nop
 800642a:	4618      	mov	r0, r3
 800642c:	3710      	adds	r7, #16
 800642e:	46bd      	mov	sp, r7
 8006430:	bd80      	pop	{r7, pc}

08006432 <USER_write>:
 8006432:	b580      	push	{r7, lr}
 8006434:	b084      	sub	sp, #16
 8006436:	af00      	add	r7, sp, #0
 8006438:	60b9      	str	r1, [r7, #8]
 800643a:	607a      	str	r2, [r7, #4]
 800643c:	603b      	str	r3, [r7, #0]
 800643e:	4603      	mov	r3, r0
 8006440:	73fb      	strb	r3, [r7, #15]
 8006442:	7bf8      	ldrb	r0, [r7, #15]
 8006444:	683b      	ldr	r3, [r7, #0]
 8006446:	687a      	ldr	r2, [r7, #4]
 8006448:	68b9      	ldr	r1, [r7, #8]
 800644a:	f7fa fbcb 	bl	8000be4 <SD_disk_write>
 800644e:	bf00      	nop
 8006450:	4618      	mov	r0, r3
 8006452:	3710      	adds	r7, #16
 8006454:	46bd      	mov	sp, r7
 8006456:	bd80      	pop	{r7, pc}

08006458 <USER_ioctl>:
 8006458:	b580      	push	{r7, lr}
 800645a:	b082      	sub	sp, #8
 800645c:	af00      	add	r7, sp, #0
 800645e:	4603      	mov	r3, r0
 8006460:	603a      	str	r2, [r7, #0]
 8006462:	71fb      	strb	r3, [r7, #7]
 8006464:	460b      	mov	r3, r1
 8006466:	71bb      	strb	r3, [r7, #6]
 8006468:	79fb      	ldrb	r3, [r7, #7]
 800646a:	79b9      	ldrb	r1, [r7, #6]
 800646c:	683a      	ldr	r2, [r7, #0]
 800646e:	4618      	mov	r0, r3
 8006470:	f7fa fc3c 	bl	8000cec <SD_disk_ioctl>
 8006474:	bf00      	nop
 8006476:	4618      	mov	r0, r3
 8006478:	3708      	adds	r7, #8
 800647a:	46bd      	mov	sp, r7
 800647c:	bd80      	pop	{r7, pc}
	...

08006480 <FATFS_LinkDriverEx>:
 8006480:	b480      	push	{r7}
 8006482:	b087      	sub	sp, #28
 8006484:	af00      	add	r7, sp, #0
 8006486:	60f8      	str	r0, [r7, #12]
 8006488:	60b9      	str	r1, [r7, #8]
 800648a:	4613      	mov	r3, r2
 800648c:	71fb      	strb	r3, [r7, #7]
 800648e:	2301      	movs	r3, #1
 8006490:	75fb      	strb	r3, [r7, #23]
 8006492:	2300      	movs	r3, #0
 8006494:	75bb      	strb	r3, [r7, #22]
 8006496:	4b1f      	ldr	r3, [pc, #124]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 8006498:	7a5b      	ldrb	r3, [r3, #9]
 800649a:	b2db      	uxtb	r3, r3
 800649c:	2b00      	cmp	r3, #0
 800649e:	d131      	bne.n	8006504 <FATFS_LinkDriverEx+0x84>
 80064a0:	4b1c      	ldr	r3, [pc, #112]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064a2:	7a5b      	ldrb	r3, [r3, #9]
 80064a4:	b2db      	uxtb	r3, r3
 80064a6:	461a      	mov	r2, r3
 80064a8:	4b1a      	ldr	r3, [pc, #104]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064aa:	2100      	movs	r1, #0
 80064ac:	5499      	strb	r1, [r3, r2]
 80064ae:	4b19      	ldr	r3, [pc, #100]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064b0:	7a5b      	ldrb	r3, [r3, #9]
 80064b2:	b2db      	uxtb	r3, r3
 80064b4:	4a17      	ldr	r2, [pc, #92]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064b6:	009b      	lsls	r3, r3, #2
 80064b8:	4413      	add	r3, r2
 80064ba:	68fa      	ldr	r2, [r7, #12]
 80064bc:	605a      	str	r2, [r3, #4]
 80064be:	4b15      	ldr	r3, [pc, #84]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064c0:	7a5b      	ldrb	r3, [r3, #9]
 80064c2:	b2db      	uxtb	r3, r3
 80064c4:	461a      	mov	r2, r3
 80064c6:	4b13      	ldr	r3, [pc, #76]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064c8:	4413      	add	r3, r2
 80064ca:	79fa      	ldrb	r2, [r7, #7]
 80064cc:	721a      	strb	r2, [r3, #8]
 80064ce:	4b11      	ldr	r3, [pc, #68]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064d0:	7a5b      	ldrb	r3, [r3, #9]
 80064d2:	b2db      	uxtb	r3, r3
 80064d4:	1c5a      	adds	r2, r3, #1
 80064d6:	b2d1      	uxtb	r1, r2
 80064d8:	4a0e      	ldr	r2, [pc, #56]	@ (8006514 <FATFS_LinkDriverEx+0x94>)
 80064da:	7251      	strb	r1, [r2, #9]
 80064dc:	75bb      	strb	r3, [r7, #22]
 80064de:	7dbb      	ldrb	r3, [r7, #22]
 80064e0:	3330      	adds	r3, #48	@ 0x30
 80064e2:	b2da      	uxtb	r2, r3
 80064e4:	68bb      	ldr	r3, [r7, #8]
 80064e6:	701a      	strb	r2, [r3, #0]
 80064e8:	68bb      	ldr	r3, [r7, #8]
 80064ea:	3301      	adds	r3, #1
 80064ec:	223a      	movs	r2, #58	@ 0x3a
 80064ee:	701a      	strb	r2, [r3, #0]
 80064f0:	68bb      	ldr	r3, [r7, #8]
 80064f2:	3302      	adds	r3, #2
 80064f4:	222f      	movs	r2, #47	@ 0x2f
 80064f6:	701a      	strb	r2, [r3, #0]
 80064f8:	68bb      	ldr	r3, [r7, #8]
 80064fa:	3303      	adds	r3, #3
 80064fc:	2200      	movs	r2, #0
 80064fe:	701a      	strb	r2, [r3, #0]
 8006500:	2300      	movs	r3, #0
 8006502:	75fb      	strb	r3, [r7, #23]
 8006504:	7dfb      	ldrb	r3, [r7, #23]
 8006506:	4618      	mov	r0, r3
 8006508:	371c      	adds	r7, #28
 800650a:	46bd      	mov	sp, r7
 800650c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006510:	4770      	bx	lr
 8006512:	bf00      	nop
 8006514:	200139f0 	.word	0x200139f0

08006518 <FATFS_LinkDriver>:
 8006518:	b580      	push	{r7, lr}
 800651a:	b082      	sub	sp, #8
 800651c:	af00      	add	r7, sp, #0
 800651e:	6078      	str	r0, [r7, #4]
 8006520:	6039      	str	r1, [r7, #0]
 8006522:	2200      	movs	r2, #0
 8006524:	6839      	ldr	r1, [r7, #0]
 8006526:	6878      	ldr	r0, [r7, #4]
 8006528:	f7ff ffaa 	bl	8006480 <FATFS_LinkDriverEx>
 800652c:	4603      	mov	r3, r0
 800652e:	4618      	mov	r0, r3
 8006530:	3708      	adds	r7, #8
 8006532:	46bd      	mov	sp, r7
 8006534:	bd80      	pop	{r7, pc}
	...

08006538 <srand>:
 8006538:	b538      	push	{r3, r4, r5, lr}
 800653a:	4b10      	ldr	r3, [pc, #64]	@ (800657c <srand+0x44>)
 800653c:	681d      	ldr	r5, [r3, #0]
 800653e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8006540:	4604      	mov	r4, r0
 8006542:	b9b3      	cbnz	r3, 8006572 <srand+0x3a>
 8006544:	2018      	movs	r0, #24
 8006546:	f000 fa9b 	bl	8006a80 <malloc>
 800654a:	4602      	mov	r2, r0
 800654c:	6328      	str	r0, [r5, #48]	@ 0x30
 800654e:	b920      	cbnz	r0, 800655a <srand+0x22>
 8006550:	4b0b      	ldr	r3, [pc, #44]	@ (8006580 <srand+0x48>)
 8006552:	480c      	ldr	r0, [pc, #48]	@ (8006584 <srand+0x4c>)
 8006554:	2146      	movs	r1, #70	@ 0x46
 8006556:	f000 fa2b 	bl	80069b0 <__assert_func>
 800655a:	490b      	ldr	r1, [pc, #44]	@ (8006588 <srand+0x50>)
 800655c:	4b0b      	ldr	r3, [pc, #44]	@ (800658c <srand+0x54>)
 800655e:	e9c0 1300 	strd	r1, r3, [r0]
 8006562:	4b0b      	ldr	r3, [pc, #44]	@ (8006590 <srand+0x58>)
 8006564:	6083      	str	r3, [r0, #8]
 8006566:	230b      	movs	r3, #11
 8006568:	8183      	strh	r3, [r0, #12]
 800656a:	2100      	movs	r1, #0
 800656c:	2001      	movs	r0, #1
 800656e:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8006572:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8006574:	2200      	movs	r2, #0
 8006576:	611c      	str	r4, [r3, #16]
 8006578:	615a      	str	r2, [r3, #20]
 800657a:	bd38      	pop	{r3, r4, r5, pc}
 800657c:	20013768 	.word	0x20013768
 8006580:	08014460 	.word	0x08014460
 8006584:	08014477 	.word	0x08014477
 8006588:	abcd330e 	.word	0xabcd330e
 800658c:	e66d1234 	.word	0xe66d1234
 8006590:	0005deec 	.word	0x0005deec

08006594 <rand>:
 8006594:	4b16      	ldr	r3, [pc, #88]	@ (80065f0 <rand+0x5c>)
 8006596:	b510      	push	{r4, lr}
 8006598:	681c      	ldr	r4, [r3, #0]
 800659a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800659c:	b9b3      	cbnz	r3, 80065cc <rand+0x38>
 800659e:	2018      	movs	r0, #24
 80065a0:	f000 fa6e 	bl	8006a80 <malloc>
 80065a4:	4602      	mov	r2, r0
 80065a6:	6320      	str	r0, [r4, #48]	@ 0x30
 80065a8:	b920      	cbnz	r0, 80065b4 <rand+0x20>
 80065aa:	4b12      	ldr	r3, [pc, #72]	@ (80065f4 <rand+0x60>)
 80065ac:	4812      	ldr	r0, [pc, #72]	@ (80065f8 <rand+0x64>)
 80065ae:	2152      	movs	r1, #82	@ 0x52
 80065b0:	f000 f9fe 	bl	80069b0 <__assert_func>
 80065b4:	4911      	ldr	r1, [pc, #68]	@ (80065fc <rand+0x68>)
 80065b6:	4b12      	ldr	r3, [pc, #72]	@ (8006600 <rand+0x6c>)
 80065b8:	e9c0 1300 	strd	r1, r3, [r0]
 80065bc:	4b11      	ldr	r3, [pc, #68]	@ (8006604 <rand+0x70>)
 80065be:	6083      	str	r3, [r0, #8]
 80065c0:	230b      	movs	r3, #11
 80065c2:	8183      	strh	r3, [r0, #12]
 80065c4:	2100      	movs	r1, #0
 80065c6:	2001      	movs	r0, #1
 80065c8:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80065cc:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80065ce:	480e      	ldr	r0, [pc, #56]	@ (8006608 <rand+0x74>)
 80065d0:	690b      	ldr	r3, [r1, #16]
 80065d2:	694c      	ldr	r4, [r1, #20]
 80065d4:	4a0d      	ldr	r2, [pc, #52]	@ (800660c <rand+0x78>)
 80065d6:	4358      	muls	r0, r3
 80065d8:	fb02 0004 	mla	r0, r2, r4, r0
 80065dc:	fba3 3202 	umull	r3, r2, r3, r2
 80065e0:	3301      	adds	r3, #1
 80065e2:	eb40 0002 	adc.w	r0, r0, r2
 80065e6:	e9c1 3004 	strd	r3, r0, [r1, #16]
 80065ea:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 80065ee:	bd10      	pop	{r4, pc}
 80065f0:	20013768 	.word	0x20013768
 80065f4:	08014460 	.word	0x08014460
 80065f8:	08014477 	.word	0x08014477
 80065fc:	abcd330e 	.word	0xabcd330e
 8006600:	e66d1234 	.word	0xe66d1234
 8006604:	0005deec 	.word	0x0005deec
 8006608:	5851f42d 	.word	0x5851f42d
 800660c:	4c957f2d 	.word	0x4c957f2d

08006610 <std>:
 8006610:	2300      	movs	r3, #0
 8006612:	b510      	push	{r4, lr}
 8006614:	4604      	mov	r4, r0
 8006616:	e9c0 3300 	strd	r3, r3, [r0]
 800661a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800661e:	6083      	str	r3, [r0, #8]
 8006620:	8181      	strh	r1, [r0, #12]
 8006622:	6643      	str	r3, [r0, #100]	@ 0x64
 8006624:	81c2      	strh	r2, [r0, #14]
 8006626:	6183      	str	r3, [r0, #24]
 8006628:	4619      	mov	r1, r3
 800662a:	2208      	movs	r2, #8
 800662c:	305c      	adds	r0, #92	@ 0x5c
 800662e:	f000 f914 	bl	800685a <memset>
 8006632:	4b0d      	ldr	r3, [pc, #52]	@ (8006668 <std+0x58>)
 8006634:	6263      	str	r3, [r4, #36]	@ 0x24
 8006636:	4b0d      	ldr	r3, [pc, #52]	@ (800666c <std+0x5c>)
 8006638:	62a3      	str	r3, [r4, #40]	@ 0x28
 800663a:	4b0d      	ldr	r3, [pc, #52]	@ (8006670 <std+0x60>)
 800663c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800663e:	4b0d      	ldr	r3, [pc, #52]	@ (8006674 <std+0x64>)
 8006640:	6323      	str	r3, [r4, #48]	@ 0x30
 8006642:	4b0d      	ldr	r3, [pc, #52]	@ (8006678 <std+0x68>)
 8006644:	6224      	str	r4, [r4, #32]
 8006646:	429c      	cmp	r4, r3
 8006648:	d006      	beq.n	8006658 <std+0x48>
 800664a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800664e:	4294      	cmp	r4, r2
 8006650:	d002      	beq.n	8006658 <std+0x48>
 8006652:	33d0      	adds	r3, #208	@ 0xd0
 8006654:	429c      	cmp	r4, r3
 8006656:	d105      	bne.n	8006664 <std+0x54>
 8006658:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800665c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006660:	f000 b9a2 	b.w	80069a8 <__retarget_lock_init_recursive>
 8006664:	bd10      	pop	{r4, pc}
 8006666:	bf00      	nop
 8006668:	080067d5 	.word	0x080067d5
 800666c:	080067f7 	.word	0x080067f7
 8006670:	0800682f 	.word	0x0800682f
 8006674:	08006853 	.word	0x08006853
 8006678:	200139fc 	.word	0x200139fc

0800667c <stdio_exit_handler>:
 800667c:	4a02      	ldr	r2, [pc, #8]	@ (8006688 <stdio_exit_handler+0xc>)
 800667e:	4903      	ldr	r1, [pc, #12]	@ (800668c <stdio_exit_handler+0x10>)
 8006680:	4803      	ldr	r0, [pc, #12]	@ (8006690 <stdio_exit_handler+0x14>)
 8006682:	f000 b869 	b.w	8006758 <_fwalk_sglue>
 8006686:	bf00      	nop
 8006688:	2001375c 	.word	0x2001375c
 800668c:	080072c1 	.word	0x080072c1
 8006690:	2001376c 	.word	0x2001376c

08006694 <cleanup_stdio>:
 8006694:	6841      	ldr	r1, [r0, #4]
 8006696:	4b0c      	ldr	r3, [pc, #48]	@ (80066c8 <cleanup_stdio+0x34>)
 8006698:	4299      	cmp	r1, r3
 800669a:	b510      	push	{r4, lr}
 800669c:	4604      	mov	r4, r0
 800669e:	d001      	beq.n	80066a4 <cleanup_stdio+0x10>
 80066a0:	f000 fe0e 	bl	80072c0 <_fflush_r>
 80066a4:	68a1      	ldr	r1, [r4, #8]
 80066a6:	4b09      	ldr	r3, [pc, #36]	@ (80066cc <cleanup_stdio+0x38>)
 80066a8:	4299      	cmp	r1, r3
 80066aa:	d002      	beq.n	80066b2 <cleanup_stdio+0x1e>
 80066ac:	4620      	mov	r0, r4
 80066ae:	f000 fe07 	bl	80072c0 <_fflush_r>
 80066b2:	68e1      	ldr	r1, [r4, #12]
 80066b4:	4b06      	ldr	r3, [pc, #24]	@ (80066d0 <cleanup_stdio+0x3c>)
 80066b6:	4299      	cmp	r1, r3
 80066b8:	d004      	beq.n	80066c4 <cleanup_stdio+0x30>
 80066ba:	4620      	mov	r0, r4
 80066bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80066c0:	f000 bdfe 	b.w	80072c0 <_fflush_r>
 80066c4:	bd10      	pop	{r4, pc}
 80066c6:	bf00      	nop
 80066c8:	200139fc 	.word	0x200139fc
 80066cc:	20013a64 	.word	0x20013a64
 80066d0:	20013acc 	.word	0x20013acc

080066d4 <global_stdio_init.part.0>:
 80066d4:	b510      	push	{r4, lr}
 80066d6:	4b0b      	ldr	r3, [pc, #44]	@ (8006704 <global_stdio_init.part.0+0x30>)
 80066d8:	4c0b      	ldr	r4, [pc, #44]	@ (8006708 <global_stdio_init.part.0+0x34>)
 80066da:	4a0c      	ldr	r2, [pc, #48]	@ (800670c <global_stdio_init.part.0+0x38>)
 80066dc:	601a      	str	r2, [r3, #0]
 80066de:	4620      	mov	r0, r4
 80066e0:	2200      	movs	r2, #0
 80066e2:	2104      	movs	r1, #4
 80066e4:	f7ff ff94 	bl	8006610 <std>
 80066e8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80066ec:	2201      	movs	r2, #1
 80066ee:	2109      	movs	r1, #9
 80066f0:	f7ff ff8e 	bl	8006610 <std>
 80066f4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80066f8:	2202      	movs	r2, #2
 80066fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80066fe:	2112      	movs	r1, #18
 8006700:	f7ff bf86 	b.w	8006610 <std>
 8006704:	20013b34 	.word	0x20013b34
 8006708:	200139fc 	.word	0x200139fc
 800670c:	0800667d 	.word	0x0800667d

08006710 <__sfp_lock_acquire>:
 8006710:	4801      	ldr	r0, [pc, #4]	@ (8006718 <__sfp_lock_acquire+0x8>)
 8006712:	f000 b94a 	b.w	80069aa <__retarget_lock_acquire_recursive>
 8006716:	bf00      	nop
 8006718:	20013b3d 	.word	0x20013b3d

0800671c <__sfp_lock_release>:
 800671c:	4801      	ldr	r0, [pc, #4]	@ (8006724 <__sfp_lock_release+0x8>)
 800671e:	f000 b945 	b.w	80069ac <__retarget_lock_release_recursive>
 8006722:	bf00      	nop
 8006724:	20013b3d 	.word	0x20013b3d

08006728 <__sinit>:
 8006728:	b510      	push	{r4, lr}
 800672a:	4604      	mov	r4, r0
 800672c:	f7ff fff0 	bl	8006710 <__sfp_lock_acquire>
 8006730:	6a23      	ldr	r3, [r4, #32]
 8006732:	b11b      	cbz	r3, 800673c <__sinit+0x14>
 8006734:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006738:	f7ff bff0 	b.w	800671c <__sfp_lock_release>
 800673c:	4b04      	ldr	r3, [pc, #16]	@ (8006750 <__sinit+0x28>)
 800673e:	6223      	str	r3, [r4, #32]
 8006740:	4b04      	ldr	r3, [pc, #16]	@ (8006754 <__sinit+0x2c>)
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	2b00      	cmp	r3, #0
 8006746:	d1f5      	bne.n	8006734 <__sinit+0xc>
 8006748:	f7ff ffc4 	bl	80066d4 <global_stdio_init.part.0>
 800674c:	e7f2      	b.n	8006734 <__sinit+0xc>
 800674e:	bf00      	nop
 8006750:	08006695 	.word	0x08006695
 8006754:	20013b34 	.word	0x20013b34

08006758 <_fwalk_sglue>:
 8006758:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800675c:	4607      	mov	r7, r0
 800675e:	4688      	mov	r8, r1
 8006760:	4614      	mov	r4, r2
 8006762:	2600      	movs	r6, #0
 8006764:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006768:	f1b9 0901 	subs.w	r9, r9, #1
 800676c:	d505      	bpl.n	800677a <_fwalk_sglue+0x22>
 800676e:	6824      	ldr	r4, [r4, #0]
 8006770:	2c00      	cmp	r4, #0
 8006772:	d1f7      	bne.n	8006764 <_fwalk_sglue+0xc>
 8006774:	4630      	mov	r0, r6
 8006776:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800677a:	89ab      	ldrh	r3, [r5, #12]
 800677c:	2b01      	cmp	r3, #1
 800677e:	d907      	bls.n	8006790 <_fwalk_sglue+0x38>
 8006780:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006784:	3301      	adds	r3, #1
 8006786:	d003      	beq.n	8006790 <_fwalk_sglue+0x38>
 8006788:	4629      	mov	r1, r5
 800678a:	4638      	mov	r0, r7
 800678c:	47c0      	blx	r8
 800678e:	4306      	orrs	r6, r0
 8006790:	3568      	adds	r5, #104	@ 0x68
 8006792:	e7e9      	b.n	8006768 <_fwalk_sglue+0x10>

08006794 <siprintf>:
 8006794:	b40e      	push	{r1, r2, r3}
 8006796:	b500      	push	{lr}
 8006798:	b09c      	sub	sp, #112	@ 0x70
 800679a:	ab1d      	add	r3, sp, #116	@ 0x74
 800679c:	9002      	str	r0, [sp, #8]
 800679e:	9006      	str	r0, [sp, #24]
 80067a0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80067a4:	4809      	ldr	r0, [pc, #36]	@ (80067cc <siprintf+0x38>)
 80067a6:	9107      	str	r1, [sp, #28]
 80067a8:	9104      	str	r1, [sp, #16]
 80067aa:	4909      	ldr	r1, [pc, #36]	@ (80067d0 <siprintf+0x3c>)
 80067ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80067b0:	9105      	str	r1, [sp, #20]
 80067b2:	6800      	ldr	r0, [r0, #0]
 80067b4:	9301      	str	r3, [sp, #4]
 80067b6:	a902      	add	r1, sp, #8
 80067b8:	f000 fa74 	bl	8006ca4 <_svfiprintf_r>
 80067bc:	9b02      	ldr	r3, [sp, #8]
 80067be:	2200      	movs	r2, #0
 80067c0:	701a      	strb	r2, [r3, #0]
 80067c2:	b01c      	add	sp, #112	@ 0x70
 80067c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80067c8:	b003      	add	sp, #12
 80067ca:	4770      	bx	lr
 80067cc:	20013768 	.word	0x20013768
 80067d0:	ffff0208 	.word	0xffff0208

080067d4 <__sread>:
 80067d4:	b510      	push	{r4, lr}
 80067d6:	460c      	mov	r4, r1
 80067d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067dc:	f000 f896 	bl	800690c <_read_r>
 80067e0:	2800      	cmp	r0, #0
 80067e2:	bfab      	itete	ge
 80067e4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80067e6:	89a3      	ldrhlt	r3, [r4, #12]
 80067e8:	181b      	addge	r3, r3, r0
 80067ea:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80067ee:	bfac      	ite	ge
 80067f0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80067f2:	81a3      	strhlt	r3, [r4, #12]
 80067f4:	bd10      	pop	{r4, pc}

080067f6 <__swrite>:
 80067f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067fa:	461f      	mov	r7, r3
 80067fc:	898b      	ldrh	r3, [r1, #12]
 80067fe:	05db      	lsls	r3, r3, #23
 8006800:	4605      	mov	r5, r0
 8006802:	460c      	mov	r4, r1
 8006804:	4616      	mov	r6, r2
 8006806:	d505      	bpl.n	8006814 <__swrite+0x1e>
 8006808:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800680c:	2302      	movs	r3, #2
 800680e:	2200      	movs	r2, #0
 8006810:	f000 f86a 	bl	80068e8 <_lseek_r>
 8006814:	89a3      	ldrh	r3, [r4, #12]
 8006816:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800681a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800681e:	81a3      	strh	r3, [r4, #12]
 8006820:	4632      	mov	r2, r6
 8006822:	463b      	mov	r3, r7
 8006824:	4628      	mov	r0, r5
 8006826:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800682a:	f000 b881 	b.w	8006930 <_write_r>

0800682e <__sseek>:
 800682e:	b510      	push	{r4, lr}
 8006830:	460c      	mov	r4, r1
 8006832:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006836:	f000 f857 	bl	80068e8 <_lseek_r>
 800683a:	1c43      	adds	r3, r0, #1
 800683c:	89a3      	ldrh	r3, [r4, #12]
 800683e:	bf15      	itete	ne
 8006840:	6560      	strne	r0, [r4, #84]	@ 0x54
 8006842:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8006846:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800684a:	81a3      	strheq	r3, [r4, #12]
 800684c:	bf18      	it	ne
 800684e:	81a3      	strhne	r3, [r4, #12]
 8006850:	bd10      	pop	{r4, pc}

08006852 <__sclose>:
 8006852:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006856:	f000 b825 	b.w	80068a4 <_close_r>

0800685a <memset>:
 800685a:	4402      	add	r2, r0
 800685c:	4603      	mov	r3, r0
 800685e:	4293      	cmp	r3, r2
 8006860:	d100      	bne.n	8006864 <memset+0xa>
 8006862:	4770      	bx	lr
 8006864:	f803 1b01 	strb.w	r1, [r3], #1
 8006868:	e7f9      	b.n	800685e <memset+0x4>
	...

0800686c <time>:
 800686c:	b5df      	push	{r0, r1, r2, r3, r4, r6, r7, lr}
 800686e:	4b0c      	ldr	r3, [pc, #48]	@ (80068a0 <time+0x34>)
 8006870:	f04f 36ff 	mov.w	r6, #4294967295
 8006874:	f04f 37ff 	mov.w	r7, #4294967295
 8006878:	4669      	mov	r1, sp
 800687a:	4604      	mov	r4, r0
 800687c:	2200      	movs	r2, #0
 800687e:	6818      	ldr	r0, [r3, #0]
 8006880:	e9cd 6700 	strd	r6, r7, [sp]
 8006884:	f000 f81e 	bl	80068c4 <_gettimeofday_r>
 8006888:	2800      	cmp	r0, #0
 800688a:	bfb8      	it	lt
 800688c:	e9cd 6700 	strdlt	r6, r7, [sp]
 8006890:	e9dd 0100 	ldrd	r0, r1, [sp]
 8006894:	b10c      	cbz	r4, 800689a <time+0x2e>
 8006896:	e9c4 0100 	strd	r0, r1, [r4]
 800689a:	b004      	add	sp, #16
 800689c:	bdd0      	pop	{r4, r6, r7, pc}
 800689e:	bf00      	nop
 80068a0:	20013768 	.word	0x20013768

080068a4 <_close_r>:
 80068a4:	b538      	push	{r3, r4, r5, lr}
 80068a6:	4d06      	ldr	r5, [pc, #24]	@ (80068c0 <_close_r+0x1c>)
 80068a8:	2300      	movs	r3, #0
 80068aa:	4604      	mov	r4, r0
 80068ac:	4608      	mov	r0, r1
 80068ae:	602b      	str	r3, [r5, #0]
 80068b0:	f7fc fabc 	bl	8002e2c <_close>
 80068b4:	1c43      	adds	r3, r0, #1
 80068b6:	d102      	bne.n	80068be <_close_r+0x1a>
 80068b8:	682b      	ldr	r3, [r5, #0]
 80068ba:	b103      	cbz	r3, 80068be <_close_r+0x1a>
 80068bc:	6023      	str	r3, [r4, #0]
 80068be:	bd38      	pop	{r3, r4, r5, pc}
 80068c0:	20013b38 	.word	0x20013b38

080068c4 <_gettimeofday_r>:
 80068c4:	b538      	push	{r3, r4, r5, lr}
 80068c6:	4d07      	ldr	r5, [pc, #28]	@ (80068e4 <_gettimeofday_r+0x20>)
 80068c8:	2300      	movs	r3, #0
 80068ca:	4604      	mov	r4, r0
 80068cc:	4608      	mov	r0, r1
 80068ce:	4611      	mov	r1, r2
 80068d0:	602b      	str	r3, [r5, #0]
 80068d2:	f001 f841 	bl	8007958 <_gettimeofday>
 80068d6:	1c43      	adds	r3, r0, #1
 80068d8:	d102      	bne.n	80068e0 <_gettimeofday_r+0x1c>
 80068da:	682b      	ldr	r3, [r5, #0]
 80068dc:	b103      	cbz	r3, 80068e0 <_gettimeofday_r+0x1c>
 80068de:	6023      	str	r3, [r4, #0]
 80068e0:	bd38      	pop	{r3, r4, r5, pc}
 80068e2:	bf00      	nop
 80068e4:	20013b38 	.word	0x20013b38

080068e8 <_lseek_r>:
 80068e8:	b538      	push	{r3, r4, r5, lr}
 80068ea:	4d07      	ldr	r5, [pc, #28]	@ (8006908 <_lseek_r+0x20>)
 80068ec:	4604      	mov	r4, r0
 80068ee:	4608      	mov	r0, r1
 80068f0:	4611      	mov	r1, r2
 80068f2:	2200      	movs	r2, #0
 80068f4:	602a      	str	r2, [r5, #0]
 80068f6:	461a      	mov	r2, r3
 80068f8:	f7fc fabf 	bl	8002e7a <_lseek>
 80068fc:	1c43      	adds	r3, r0, #1
 80068fe:	d102      	bne.n	8006906 <_lseek_r+0x1e>
 8006900:	682b      	ldr	r3, [r5, #0]
 8006902:	b103      	cbz	r3, 8006906 <_lseek_r+0x1e>
 8006904:	6023      	str	r3, [r4, #0]
 8006906:	bd38      	pop	{r3, r4, r5, pc}
 8006908:	20013b38 	.word	0x20013b38

0800690c <_read_r>:
 800690c:	b538      	push	{r3, r4, r5, lr}
 800690e:	4d07      	ldr	r5, [pc, #28]	@ (800692c <_read_r+0x20>)
 8006910:	4604      	mov	r4, r0
 8006912:	4608      	mov	r0, r1
 8006914:	4611      	mov	r1, r2
 8006916:	2200      	movs	r2, #0
 8006918:	602a      	str	r2, [r5, #0]
 800691a:	461a      	mov	r2, r3
 800691c:	f7fc fa4d 	bl	8002dba <_read>
 8006920:	1c43      	adds	r3, r0, #1
 8006922:	d102      	bne.n	800692a <_read_r+0x1e>
 8006924:	682b      	ldr	r3, [r5, #0]
 8006926:	b103      	cbz	r3, 800692a <_read_r+0x1e>
 8006928:	6023      	str	r3, [r4, #0]
 800692a:	bd38      	pop	{r3, r4, r5, pc}
 800692c:	20013b38 	.word	0x20013b38

08006930 <_write_r>:
 8006930:	b538      	push	{r3, r4, r5, lr}
 8006932:	4d07      	ldr	r5, [pc, #28]	@ (8006950 <_write_r+0x20>)
 8006934:	4604      	mov	r4, r0
 8006936:	4608      	mov	r0, r1
 8006938:	4611      	mov	r1, r2
 800693a:	2200      	movs	r2, #0
 800693c:	602a      	str	r2, [r5, #0]
 800693e:	461a      	mov	r2, r3
 8006940:	f7fc fa58 	bl	8002df4 <_write>
 8006944:	1c43      	adds	r3, r0, #1
 8006946:	d102      	bne.n	800694e <_write_r+0x1e>
 8006948:	682b      	ldr	r3, [r5, #0]
 800694a:	b103      	cbz	r3, 800694e <_write_r+0x1e>
 800694c:	6023      	str	r3, [r4, #0]
 800694e:	bd38      	pop	{r3, r4, r5, pc}
 8006950:	20013b38 	.word	0x20013b38

08006954 <__errno>:
 8006954:	4b01      	ldr	r3, [pc, #4]	@ (800695c <__errno+0x8>)
 8006956:	6818      	ldr	r0, [r3, #0]
 8006958:	4770      	bx	lr
 800695a:	bf00      	nop
 800695c:	20013768 	.word	0x20013768

08006960 <__libc_init_array>:
 8006960:	b570      	push	{r4, r5, r6, lr}
 8006962:	4d0d      	ldr	r5, [pc, #52]	@ (8006998 <__libc_init_array+0x38>)
 8006964:	4c0d      	ldr	r4, [pc, #52]	@ (800699c <__libc_init_array+0x3c>)
 8006966:	1b64      	subs	r4, r4, r5
 8006968:	10a4      	asrs	r4, r4, #2
 800696a:	2600      	movs	r6, #0
 800696c:	42a6      	cmp	r6, r4
 800696e:	d109      	bne.n	8006984 <__libc_init_array+0x24>
 8006970:	4d0b      	ldr	r5, [pc, #44]	@ (80069a0 <__libc_init_array+0x40>)
 8006972:	4c0c      	ldr	r4, [pc, #48]	@ (80069a4 <__libc_init_array+0x44>)
 8006974:	f000 fff8 	bl	8007968 <_init>
 8006978:	1b64      	subs	r4, r4, r5
 800697a:	10a4      	asrs	r4, r4, #2
 800697c:	2600      	movs	r6, #0
 800697e:	42a6      	cmp	r6, r4
 8006980:	d105      	bne.n	800698e <__libc_init_array+0x2e>
 8006982:	bd70      	pop	{r4, r5, r6, pc}
 8006984:	f855 3b04 	ldr.w	r3, [r5], #4
 8006988:	4798      	blx	r3
 800698a:	3601      	adds	r6, #1
 800698c:	e7ee      	b.n	800696c <__libc_init_array+0xc>
 800698e:	f855 3b04 	ldr.w	r3, [r5], #4
 8006992:	4798      	blx	r3
 8006994:	3601      	adds	r6, #1
 8006996:	e7f2      	b.n	800697e <__libc_init_array+0x1e>
 8006998:	08014548 	.word	0x08014548
 800699c:	08014548 	.word	0x08014548
 80069a0:	08014548 	.word	0x08014548
 80069a4:	0801454c 	.word	0x0801454c

080069a8 <__retarget_lock_init_recursive>:
 80069a8:	4770      	bx	lr

080069aa <__retarget_lock_acquire_recursive>:
 80069aa:	4770      	bx	lr

080069ac <__retarget_lock_release_recursive>:
 80069ac:	4770      	bx	lr
	...

080069b0 <__assert_func>:
 80069b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80069b2:	4614      	mov	r4, r2
 80069b4:	461a      	mov	r2, r3
 80069b6:	4b09      	ldr	r3, [pc, #36]	@ (80069dc <__assert_func+0x2c>)
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	4605      	mov	r5, r0
 80069bc:	68d8      	ldr	r0, [r3, #12]
 80069be:	b954      	cbnz	r4, 80069d6 <__assert_func+0x26>
 80069c0:	4b07      	ldr	r3, [pc, #28]	@ (80069e0 <__assert_func+0x30>)
 80069c2:	461c      	mov	r4, r3
 80069c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80069c8:	9100      	str	r1, [sp, #0]
 80069ca:	462b      	mov	r3, r5
 80069cc:	4905      	ldr	r1, [pc, #20]	@ (80069e4 <__assert_func+0x34>)
 80069ce:	f000 fc9f 	bl	8007310 <fiprintf>
 80069d2:	f000 fce7 	bl	80073a4 <abort>
 80069d6:	4b04      	ldr	r3, [pc, #16]	@ (80069e8 <__assert_func+0x38>)
 80069d8:	e7f4      	b.n	80069c4 <__assert_func+0x14>
 80069da:	bf00      	nop
 80069dc:	20013768 	.word	0x20013768
 80069e0:	0801450a 	.word	0x0801450a
 80069e4:	080144dc 	.word	0x080144dc
 80069e8:	080144cf 	.word	0x080144cf

080069ec <_free_r>:
 80069ec:	b538      	push	{r3, r4, r5, lr}
 80069ee:	4605      	mov	r5, r0
 80069f0:	2900      	cmp	r1, #0
 80069f2:	d041      	beq.n	8006a78 <_free_r+0x8c>
 80069f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80069f8:	1f0c      	subs	r4, r1, #4
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	bfb8      	it	lt
 80069fe:	18e4      	addlt	r4, r4, r3
 8006a00:	f000 f8e8 	bl	8006bd4 <__malloc_lock>
 8006a04:	4a1d      	ldr	r2, [pc, #116]	@ (8006a7c <_free_r+0x90>)
 8006a06:	6813      	ldr	r3, [r2, #0]
 8006a08:	b933      	cbnz	r3, 8006a18 <_free_r+0x2c>
 8006a0a:	6063      	str	r3, [r4, #4]
 8006a0c:	6014      	str	r4, [r2, #0]
 8006a0e:	4628      	mov	r0, r5
 8006a10:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006a14:	f000 b8e4 	b.w	8006be0 <__malloc_unlock>
 8006a18:	42a3      	cmp	r3, r4
 8006a1a:	d908      	bls.n	8006a2e <_free_r+0x42>
 8006a1c:	6820      	ldr	r0, [r4, #0]
 8006a1e:	1821      	adds	r1, r4, r0
 8006a20:	428b      	cmp	r3, r1
 8006a22:	bf01      	itttt	eq
 8006a24:	6819      	ldreq	r1, [r3, #0]
 8006a26:	685b      	ldreq	r3, [r3, #4]
 8006a28:	1809      	addeq	r1, r1, r0
 8006a2a:	6021      	streq	r1, [r4, #0]
 8006a2c:	e7ed      	b.n	8006a0a <_free_r+0x1e>
 8006a2e:	461a      	mov	r2, r3
 8006a30:	685b      	ldr	r3, [r3, #4]
 8006a32:	b10b      	cbz	r3, 8006a38 <_free_r+0x4c>
 8006a34:	42a3      	cmp	r3, r4
 8006a36:	d9fa      	bls.n	8006a2e <_free_r+0x42>
 8006a38:	6811      	ldr	r1, [r2, #0]
 8006a3a:	1850      	adds	r0, r2, r1
 8006a3c:	42a0      	cmp	r0, r4
 8006a3e:	d10b      	bne.n	8006a58 <_free_r+0x6c>
 8006a40:	6820      	ldr	r0, [r4, #0]
 8006a42:	4401      	add	r1, r0
 8006a44:	1850      	adds	r0, r2, r1
 8006a46:	4283      	cmp	r3, r0
 8006a48:	6011      	str	r1, [r2, #0]
 8006a4a:	d1e0      	bne.n	8006a0e <_free_r+0x22>
 8006a4c:	6818      	ldr	r0, [r3, #0]
 8006a4e:	685b      	ldr	r3, [r3, #4]
 8006a50:	6053      	str	r3, [r2, #4]
 8006a52:	4408      	add	r0, r1
 8006a54:	6010      	str	r0, [r2, #0]
 8006a56:	e7da      	b.n	8006a0e <_free_r+0x22>
 8006a58:	d902      	bls.n	8006a60 <_free_r+0x74>
 8006a5a:	230c      	movs	r3, #12
 8006a5c:	602b      	str	r3, [r5, #0]
 8006a5e:	e7d6      	b.n	8006a0e <_free_r+0x22>
 8006a60:	6820      	ldr	r0, [r4, #0]
 8006a62:	1821      	adds	r1, r4, r0
 8006a64:	428b      	cmp	r3, r1
 8006a66:	bf04      	itt	eq
 8006a68:	6819      	ldreq	r1, [r3, #0]
 8006a6a:	685b      	ldreq	r3, [r3, #4]
 8006a6c:	6063      	str	r3, [r4, #4]
 8006a6e:	bf04      	itt	eq
 8006a70:	1809      	addeq	r1, r1, r0
 8006a72:	6021      	streq	r1, [r4, #0]
 8006a74:	6054      	str	r4, [r2, #4]
 8006a76:	e7ca      	b.n	8006a0e <_free_r+0x22>
 8006a78:	bd38      	pop	{r3, r4, r5, pc}
 8006a7a:	bf00      	nop
 8006a7c:	20013b44 	.word	0x20013b44

08006a80 <malloc>:
 8006a80:	4b02      	ldr	r3, [pc, #8]	@ (8006a8c <malloc+0xc>)
 8006a82:	4601      	mov	r1, r0
 8006a84:	6818      	ldr	r0, [r3, #0]
 8006a86:	f000 b825 	b.w	8006ad4 <_malloc_r>
 8006a8a:	bf00      	nop
 8006a8c:	20013768 	.word	0x20013768

08006a90 <sbrk_aligned>:
 8006a90:	b570      	push	{r4, r5, r6, lr}
 8006a92:	4e0f      	ldr	r6, [pc, #60]	@ (8006ad0 <sbrk_aligned+0x40>)
 8006a94:	460c      	mov	r4, r1
 8006a96:	6831      	ldr	r1, [r6, #0]
 8006a98:	4605      	mov	r5, r0
 8006a9a:	b911      	cbnz	r1, 8006aa2 <sbrk_aligned+0x12>
 8006a9c:	f000 fc64 	bl	8007368 <_sbrk_r>
 8006aa0:	6030      	str	r0, [r6, #0]
 8006aa2:	4621      	mov	r1, r4
 8006aa4:	4628      	mov	r0, r5
 8006aa6:	f000 fc5f 	bl	8007368 <_sbrk_r>
 8006aaa:	1c43      	adds	r3, r0, #1
 8006aac:	d103      	bne.n	8006ab6 <sbrk_aligned+0x26>
 8006aae:	f04f 34ff 	mov.w	r4, #4294967295
 8006ab2:	4620      	mov	r0, r4
 8006ab4:	bd70      	pop	{r4, r5, r6, pc}
 8006ab6:	1cc4      	adds	r4, r0, #3
 8006ab8:	f024 0403 	bic.w	r4, r4, #3
 8006abc:	42a0      	cmp	r0, r4
 8006abe:	d0f8      	beq.n	8006ab2 <sbrk_aligned+0x22>
 8006ac0:	1a21      	subs	r1, r4, r0
 8006ac2:	4628      	mov	r0, r5
 8006ac4:	f000 fc50 	bl	8007368 <_sbrk_r>
 8006ac8:	3001      	adds	r0, #1
 8006aca:	d1f2      	bne.n	8006ab2 <sbrk_aligned+0x22>
 8006acc:	e7ef      	b.n	8006aae <sbrk_aligned+0x1e>
 8006ace:	bf00      	nop
 8006ad0:	20013b40 	.word	0x20013b40

08006ad4 <_malloc_r>:
 8006ad4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006ad8:	1ccd      	adds	r5, r1, #3
 8006ada:	f025 0503 	bic.w	r5, r5, #3
 8006ade:	3508      	adds	r5, #8
 8006ae0:	2d0c      	cmp	r5, #12
 8006ae2:	bf38      	it	cc
 8006ae4:	250c      	movcc	r5, #12
 8006ae6:	2d00      	cmp	r5, #0
 8006ae8:	4606      	mov	r6, r0
 8006aea:	db01      	blt.n	8006af0 <_malloc_r+0x1c>
 8006aec:	42a9      	cmp	r1, r5
 8006aee:	d904      	bls.n	8006afa <_malloc_r+0x26>
 8006af0:	230c      	movs	r3, #12
 8006af2:	6033      	str	r3, [r6, #0]
 8006af4:	2000      	movs	r0, #0
 8006af6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006afa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006bd0 <_malloc_r+0xfc>
 8006afe:	f000 f869 	bl	8006bd4 <__malloc_lock>
 8006b02:	f8d8 3000 	ldr.w	r3, [r8]
 8006b06:	461c      	mov	r4, r3
 8006b08:	bb44      	cbnz	r4, 8006b5c <_malloc_r+0x88>
 8006b0a:	4629      	mov	r1, r5
 8006b0c:	4630      	mov	r0, r6
 8006b0e:	f7ff ffbf 	bl	8006a90 <sbrk_aligned>
 8006b12:	1c43      	adds	r3, r0, #1
 8006b14:	4604      	mov	r4, r0
 8006b16:	d158      	bne.n	8006bca <_malloc_r+0xf6>
 8006b18:	f8d8 4000 	ldr.w	r4, [r8]
 8006b1c:	4627      	mov	r7, r4
 8006b1e:	2f00      	cmp	r7, #0
 8006b20:	d143      	bne.n	8006baa <_malloc_r+0xd6>
 8006b22:	2c00      	cmp	r4, #0
 8006b24:	d04b      	beq.n	8006bbe <_malloc_r+0xea>
 8006b26:	6823      	ldr	r3, [r4, #0]
 8006b28:	4639      	mov	r1, r7
 8006b2a:	4630      	mov	r0, r6
 8006b2c:	eb04 0903 	add.w	r9, r4, r3
 8006b30:	f000 fc1a 	bl	8007368 <_sbrk_r>
 8006b34:	4581      	cmp	r9, r0
 8006b36:	d142      	bne.n	8006bbe <_malloc_r+0xea>
 8006b38:	6821      	ldr	r1, [r4, #0]
 8006b3a:	1a6d      	subs	r5, r5, r1
 8006b3c:	4629      	mov	r1, r5
 8006b3e:	4630      	mov	r0, r6
 8006b40:	f7ff ffa6 	bl	8006a90 <sbrk_aligned>
 8006b44:	3001      	adds	r0, #1
 8006b46:	d03a      	beq.n	8006bbe <_malloc_r+0xea>
 8006b48:	6823      	ldr	r3, [r4, #0]
 8006b4a:	442b      	add	r3, r5
 8006b4c:	6023      	str	r3, [r4, #0]
 8006b4e:	f8d8 3000 	ldr.w	r3, [r8]
 8006b52:	685a      	ldr	r2, [r3, #4]
 8006b54:	bb62      	cbnz	r2, 8006bb0 <_malloc_r+0xdc>
 8006b56:	f8c8 7000 	str.w	r7, [r8]
 8006b5a:	e00f      	b.n	8006b7c <_malloc_r+0xa8>
 8006b5c:	6822      	ldr	r2, [r4, #0]
 8006b5e:	1b52      	subs	r2, r2, r5
 8006b60:	d420      	bmi.n	8006ba4 <_malloc_r+0xd0>
 8006b62:	2a0b      	cmp	r2, #11
 8006b64:	d917      	bls.n	8006b96 <_malloc_r+0xc2>
 8006b66:	1961      	adds	r1, r4, r5
 8006b68:	42a3      	cmp	r3, r4
 8006b6a:	6025      	str	r5, [r4, #0]
 8006b6c:	bf18      	it	ne
 8006b6e:	6059      	strne	r1, [r3, #4]
 8006b70:	6863      	ldr	r3, [r4, #4]
 8006b72:	bf08      	it	eq
 8006b74:	f8c8 1000 	streq.w	r1, [r8]
 8006b78:	5162      	str	r2, [r4, r5]
 8006b7a:	604b      	str	r3, [r1, #4]
 8006b7c:	4630      	mov	r0, r6
 8006b7e:	f000 f82f 	bl	8006be0 <__malloc_unlock>
 8006b82:	f104 000b 	add.w	r0, r4, #11
 8006b86:	1d23      	adds	r3, r4, #4
 8006b88:	f020 0007 	bic.w	r0, r0, #7
 8006b8c:	1ac2      	subs	r2, r0, r3
 8006b8e:	bf1c      	itt	ne
 8006b90:	1a1b      	subne	r3, r3, r0
 8006b92:	50a3      	strne	r3, [r4, r2]
 8006b94:	e7af      	b.n	8006af6 <_malloc_r+0x22>
 8006b96:	6862      	ldr	r2, [r4, #4]
 8006b98:	42a3      	cmp	r3, r4
 8006b9a:	bf0c      	ite	eq
 8006b9c:	f8c8 2000 	streq.w	r2, [r8]
 8006ba0:	605a      	strne	r2, [r3, #4]
 8006ba2:	e7eb      	b.n	8006b7c <_malloc_r+0xa8>
 8006ba4:	4623      	mov	r3, r4
 8006ba6:	6864      	ldr	r4, [r4, #4]
 8006ba8:	e7ae      	b.n	8006b08 <_malloc_r+0x34>
 8006baa:	463c      	mov	r4, r7
 8006bac:	687f      	ldr	r7, [r7, #4]
 8006bae:	e7b6      	b.n	8006b1e <_malloc_r+0x4a>
 8006bb0:	461a      	mov	r2, r3
 8006bb2:	685b      	ldr	r3, [r3, #4]
 8006bb4:	42a3      	cmp	r3, r4
 8006bb6:	d1fb      	bne.n	8006bb0 <_malloc_r+0xdc>
 8006bb8:	2300      	movs	r3, #0
 8006bba:	6053      	str	r3, [r2, #4]
 8006bbc:	e7de      	b.n	8006b7c <_malloc_r+0xa8>
 8006bbe:	230c      	movs	r3, #12
 8006bc0:	6033      	str	r3, [r6, #0]
 8006bc2:	4630      	mov	r0, r6
 8006bc4:	f000 f80c 	bl	8006be0 <__malloc_unlock>
 8006bc8:	e794      	b.n	8006af4 <_malloc_r+0x20>
 8006bca:	6005      	str	r5, [r0, #0]
 8006bcc:	e7d6      	b.n	8006b7c <_malloc_r+0xa8>
 8006bce:	bf00      	nop
 8006bd0:	20013b44 	.word	0x20013b44

08006bd4 <__malloc_lock>:
 8006bd4:	4801      	ldr	r0, [pc, #4]	@ (8006bdc <__malloc_lock+0x8>)
 8006bd6:	f7ff bee8 	b.w	80069aa <__retarget_lock_acquire_recursive>
 8006bda:	bf00      	nop
 8006bdc:	20013b3c 	.word	0x20013b3c

08006be0 <__malloc_unlock>:
 8006be0:	4801      	ldr	r0, [pc, #4]	@ (8006be8 <__malloc_unlock+0x8>)
 8006be2:	f7ff bee3 	b.w	80069ac <__retarget_lock_release_recursive>
 8006be6:	bf00      	nop
 8006be8:	20013b3c 	.word	0x20013b3c

08006bec <__ssputs_r>:
 8006bec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006bf0:	688e      	ldr	r6, [r1, #8]
 8006bf2:	461f      	mov	r7, r3
 8006bf4:	42be      	cmp	r6, r7
 8006bf6:	680b      	ldr	r3, [r1, #0]
 8006bf8:	4682      	mov	sl, r0
 8006bfa:	460c      	mov	r4, r1
 8006bfc:	4690      	mov	r8, r2
 8006bfe:	d82d      	bhi.n	8006c5c <__ssputs_r+0x70>
 8006c00:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006c04:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006c08:	d026      	beq.n	8006c58 <__ssputs_r+0x6c>
 8006c0a:	6965      	ldr	r5, [r4, #20]
 8006c0c:	6909      	ldr	r1, [r1, #16]
 8006c0e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006c12:	eba3 0901 	sub.w	r9, r3, r1
 8006c16:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006c1a:	1c7b      	adds	r3, r7, #1
 8006c1c:	444b      	add	r3, r9
 8006c1e:	106d      	asrs	r5, r5, #1
 8006c20:	429d      	cmp	r5, r3
 8006c22:	bf38      	it	cc
 8006c24:	461d      	movcc	r5, r3
 8006c26:	0553      	lsls	r3, r2, #21
 8006c28:	d527      	bpl.n	8006c7a <__ssputs_r+0x8e>
 8006c2a:	4629      	mov	r1, r5
 8006c2c:	f7ff ff52 	bl	8006ad4 <_malloc_r>
 8006c30:	4606      	mov	r6, r0
 8006c32:	b360      	cbz	r0, 8006c8e <__ssputs_r+0xa2>
 8006c34:	6921      	ldr	r1, [r4, #16]
 8006c36:	464a      	mov	r2, r9
 8006c38:	f000 fba6 	bl	8007388 <memcpy>
 8006c3c:	89a3      	ldrh	r3, [r4, #12]
 8006c3e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006c42:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006c46:	81a3      	strh	r3, [r4, #12]
 8006c48:	6126      	str	r6, [r4, #16]
 8006c4a:	6165      	str	r5, [r4, #20]
 8006c4c:	444e      	add	r6, r9
 8006c4e:	eba5 0509 	sub.w	r5, r5, r9
 8006c52:	6026      	str	r6, [r4, #0]
 8006c54:	60a5      	str	r5, [r4, #8]
 8006c56:	463e      	mov	r6, r7
 8006c58:	42be      	cmp	r6, r7
 8006c5a:	d900      	bls.n	8006c5e <__ssputs_r+0x72>
 8006c5c:	463e      	mov	r6, r7
 8006c5e:	6820      	ldr	r0, [r4, #0]
 8006c60:	4632      	mov	r2, r6
 8006c62:	4641      	mov	r1, r8
 8006c64:	f000 fb66 	bl	8007334 <memmove>
 8006c68:	68a3      	ldr	r3, [r4, #8]
 8006c6a:	1b9b      	subs	r3, r3, r6
 8006c6c:	60a3      	str	r3, [r4, #8]
 8006c6e:	6823      	ldr	r3, [r4, #0]
 8006c70:	4433      	add	r3, r6
 8006c72:	6023      	str	r3, [r4, #0]
 8006c74:	2000      	movs	r0, #0
 8006c76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006c7a:	462a      	mov	r2, r5
 8006c7c:	f000 fb99 	bl	80073b2 <_realloc_r>
 8006c80:	4606      	mov	r6, r0
 8006c82:	2800      	cmp	r0, #0
 8006c84:	d1e0      	bne.n	8006c48 <__ssputs_r+0x5c>
 8006c86:	6921      	ldr	r1, [r4, #16]
 8006c88:	4650      	mov	r0, sl
 8006c8a:	f7ff feaf 	bl	80069ec <_free_r>
 8006c8e:	230c      	movs	r3, #12
 8006c90:	f8ca 3000 	str.w	r3, [sl]
 8006c94:	89a3      	ldrh	r3, [r4, #12]
 8006c96:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006c9a:	81a3      	strh	r3, [r4, #12]
 8006c9c:	f04f 30ff 	mov.w	r0, #4294967295
 8006ca0:	e7e9      	b.n	8006c76 <__ssputs_r+0x8a>
	...

08006ca4 <_svfiprintf_r>:
 8006ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ca8:	4698      	mov	r8, r3
 8006caa:	898b      	ldrh	r3, [r1, #12]
 8006cac:	061b      	lsls	r3, r3, #24
 8006cae:	b09d      	sub	sp, #116	@ 0x74
 8006cb0:	4607      	mov	r7, r0
 8006cb2:	460d      	mov	r5, r1
 8006cb4:	4614      	mov	r4, r2
 8006cb6:	d510      	bpl.n	8006cda <_svfiprintf_r+0x36>
 8006cb8:	690b      	ldr	r3, [r1, #16]
 8006cba:	b973      	cbnz	r3, 8006cda <_svfiprintf_r+0x36>
 8006cbc:	2140      	movs	r1, #64	@ 0x40
 8006cbe:	f7ff ff09 	bl	8006ad4 <_malloc_r>
 8006cc2:	6028      	str	r0, [r5, #0]
 8006cc4:	6128      	str	r0, [r5, #16]
 8006cc6:	b930      	cbnz	r0, 8006cd6 <_svfiprintf_r+0x32>
 8006cc8:	230c      	movs	r3, #12
 8006cca:	603b      	str	r3, [r7, #0]
 8006ccc:	f04f 30ff 	mov.w	r0, #4294967295
 8006cd0:	b01d      	add	sp, #116	@ 0x74
 8006cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006cd6:	2340      	movs	r3, #64	@ 0x40
 8006cd8:	616b      	str	r3, [r5, #20]
 8006cda:	2300      	movs	r3, #0
 8006cdc:	9309      	str	r3, [sp, #36]	@ 0x24
 8006cde:	2320      	movs	r3, #32
 8006ce0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006ce4:	f8cd 800c 	str.w	r8, [sp, #12]
 8006ce8:	2330      	movs	r3, #48	@ 0x30
 8006cea:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8006e88 <_svfiprintf_r+0x1e4>
 8006cee:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006cf2:	f04f 0901 	mov.w	r9, #1
 8006cf6:	4623      	mov	r3, r4
 8006cf8:	469a      	mov	sl, r3
 8006cfa:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006cfe:	b10a      	cbz	r2, 8006d04 <_svfiprintf_r+0x60>
 8006d00:	2a25      	cmp	r2, #37	@ 0x25
 8006d02:	d1f9      	bne.n	8006cf8 <_svfiprintf_r+0x54>
 8006d04:	ebba 0b04 	subs.w	fp, sl, r4
 8006d08:	d00b      	beq.n	8006d22 <_svfiprintf_r+0x7e>
 8006d0a:	465b      	mov	r3, fp
 8006d0c:	4622      	mov	r2, r4
 8006d0e:	4629      	mov	r1, r5
 8006d10:	4638      	mov	r0, r7
 8006d12:	f7ff ff6b 	bl	8006bec <__ssputs_r>
 8006d16:	3001      	adds	r0, #1
 8006d18:	f000 80a7 	beq.w	8006e6a <_svfiprintf_r+0x1c6>
 8006d1c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006d1e:	445a      	add	r2, fp
 8006d20:	9209      	str	r2, [sp, #36]	@ 0x24
 8006d22:	f89a 3000 	ldrb.w	r3, [sl]
 8006d26:	2b00      	cmp	r3, #0
 8006d28:	f000 809f 	beq.w	8006e6a <_svfiprintf_r+0x1c6>
 8006d2c:	2300      	movs	r3, #0
 8006d2e:	f04f 32ff 	mov.w	r2, #4294967295
 8006d32:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006d36:	f10a 0a01 	add.w	sl, sl, #1
 8006d3a:	9304      	str	r3, [sp, #16]
 8006d3c:	9307      	str	r3, [sp, #28]
 8006d3e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006d42:	931a      	str	r3, [sp, #104]	@ 0x68
 8006d44:	4654      	mov	r4, sl
 8006d46:	2205      	movs	r2, #5
 8006d48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006d4c:	484e      	ldr	r0, [pc, #312]	@ (8006e88 <_svfiprintf_r+0x1e4>)
 8006d4e:	f7f9 fa67 	bl	8000220 <memchr>
 8006d52:	9a04      	ldr	r2, [sp, #16]
 8006d54:	b9d8      	cbnz	r0, 8006d8e <_svfiprintf_r+0xea>
 8006d56:	06d0      	lsls	r0, r2, #27
 8006d58:	bf44      	itt	mi
 8006d5a:	2320      	movmi	r3, #32
 8006d5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006d60:	0711      	lsls	r1, r2, #28
 8006d62:	bf44      	itt	mi
 8006d64:	232b      	movmi	r3, #43	@ 0x2b
 8006d66:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006d6a:	f89a 3000 	ldrb.w	r3, [sl]
 8006d6e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006d70:	d015      	beq.n	8006d9e <_svfiprintf_r+0xfa>
 8006d72:	9a07      	ldr	r2, [sp, #28]
 8006d74:	4654      	mov	r4, sl
 8006d76:	2000      	movs	r0, #0
 8006d78:	f04f 0c0a 	mov.w	ip, #10
 8006d7c:	4621      	mov	r1, r4
 8006d7e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006d82:	3b30      	subs	r3, #48	@ 0x30
 8006d84:	2b09      	cmp	r3, #9
 8006d86:	d94b      	bls.n	8006e20 <_svfiprintf_r+0x17c>
 8006d88:	b1b0      	cbz	r0, 8006db8 <_svfiprintf_r+0x114>
 8006d8a:	9207      	str	r2, [sp, #28]
 8006d8c:	e014      	b.n	8006db8 <_svfiprintf_r+0x114>
 8006d8e:	eba0 0308 	sub.w	r3, r0, r8
 8006d92:	fa09 f303 	lsl.w	r3, r9, r3
 8006d96:	4313      	orrs	r3, r2
 8006d98:	9304      	str	r3, [sp, #16]
 8006d9a:	46a2      	mov	sl, r4
 8006d9c:	e7d2      	b.n	8006d44 <_svfiprintf_r+0xa0>
 8006d9e:	9b03      	ldr	r3, [sp, #12]
 8006da0:	1d19      	adds	r1, r3, #4
 8006da2:	681b      	ldr	r3, [r3, #0]
 8006da4:	9103      	str	r1, [sp, #12]
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	bfbb      	ittet	lt
 8006daa:	425b      	neglt	r3, r3
 8006dac:	f042 0202 	orrlt.w	r2, r2, #2
 8006db0:	9307      	strge	r3, [sp, #28]
 8006db2:	9307      	strlt	r3, [sp, #28]
 8006db4:	bfb8      	it	lt
 8006db6:	9204      	strlt	r2, [sp, #16]
 8006db8:	7823      	ldrb	r3, [r4, #0]
 8006dba:	2b2e      	cmp	r3, #46	@ 0x2e
 8006dbc:	d10a      	bne.n	8006dd4 <_svfiprintf_r+0x130>
 8006dbe:	7863      	ldrb	r3, [r4, #1]
 8006dc0:	2b2a      	cmp	r3, #42	@ 0x2a
 8006dc2:	d132      	bne.n	8006e2a <_svfiprintf_r+0x186>
 8006dc4:	9b03      	ldr	r3, [sp, #12]
 8006dc6:	1d1a      	adds	r2, r3, #4
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	9203      	str	r2, [sp, #12]
 8006dcc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006dd0:	3402      	adds	r4, #2
 8006dd2:	9305      	str	r3, [sp, #20]
 8006dd4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8006e98 <_svfiprintf_r+0x1f4>
 8006dd8:	7821      	ldrb	r1, [r4, #0]
 8006dda:	2203      	movs	r2, #3
 8006ddc:	4650      	mov	r0, sl
 8006dde:	f7f9 fa1f 	bl	8000220 <memchr>
 8006de2:	b138      	cbz	r0, 8006df4 <_svfiprintf_r+0x150>
 8006de4:	9b04      	ldr	r3, [sp, #16]
 8006de6:	eba0 000a 	sub.w	r0, r0, sl
 8006dea:	2240      	movs	r2, #64	@ 0x40
 8006dec:	4082      	lsls	r2, r0
 8006dee:	4313      	orrs	r3, r2
 8006df0:	3401      	adds	r4, #1
 8006df2:	9304      	str	r3, [sp, #16]
 8006df4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006df8:	4824      	ldr	r0, [pc, #144]	@ (8006e8c <_svfiprintf_r+0x1e8>)
 8006dfa:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006dfe:	2206      	movs	r2, #6
 8006e00:	f7f9 fa0e 	bl	8000220 <memchr>
 8006e04:	2800      	cmp	r0, #0
 8006e06:	d036      	beq.n	8006e76 <_svfiprintf_r+0x1d2>
 8006e08:	4b21      	ldr	r3, [pc, #132]	@ (8006e90 <_svfiprintf_r+0x1ec>)
 8006e0a:	bb1b      	cbnz	r3, 8006e54 <_svfiprintf_r+0x1b0>
 8006e0c:	9b03      	ldr	r3, [sp, #12]
 8006e0e:	3307      	adds	r3, #7
 8006e10:	f023 0307 	bic.w	r3, r3, #7
 8006e14:	3308      	adds	r3, #8
 8006e16:	9303      	str	r3, [sp, #12]
 8006e18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e1a:	4433      	add	r3, r6
 8006e1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e1e:	e76a      	b.n	8006cf6 <_svfiprintf_r+0x52>
 8006e20:	fb0c 3202 	mla	r2, ip, r2, r3
 8006e24:	460c      	mov	r4, r1
 8006e26:	2001      	movs	r0, #1
 8006e28:	e7a8      	b.n	8006d7c <_svfiprintf_r+0xd8>
 8006e2a:	2300      	movs	r3, #0
 8006e2c:	3401      	adds	r4, #1
 8006e2e:	9305      	str	r3, [sp, #20]
 8006e30:	4619      	mov	r1, r3
 8006e32:	f04f 0c0a 	mov.w	ip, #10
 8006e36:	4620      	mov	r0, r4
 8006e38:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006e3c:	3a30      	subs	r2, #48	@ 0x30
 8006e3e:	2a09      	cmp	r2, #9
 8006e40:	d903      	bls.n	8006e4a <_svfiprintf_r+0x1a6>
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d0c6      	beq.n	8006dd4 <_svfiprintf_r+0x130>
 8006e46:	9105      	str	r1, [sp, #20]
 8006e48:	e7c4      	b.n	8006dd4 <_svfiprintf_r+0x130>
 8006e4a:	fb0c 2101 	mla	r1, ip, r1, r2
 8006e4e:	4604      	mov	r4, r0
 8006e50:	2301      	movs	r3, #1
 8006e52:	e7f0      	b.n	8006e36 <_svfiprintf_r+0x192>
 8006e54:	ab03      	add	r3, sp, #12
 8006e56:	9300      	str	r3, [sp, #0]
 8006e58:	462a      	mov	r2, r5
 8006e5a:	4b0e      	ldr	r3, [pc, #56]	@ (8006e94 <_svfiprintf_r+0x1f0>)
 8006e5c:	a904      	add	r1, sp, #16
 8006e5e:	4638      	mov	r0, r7
 8006e60:	f3af 8000 	nop.w
 8006e64:	1c42      	adds	r2, r0, #1
 8006e66:	4606      	mov	r6, r0
 8006e68:	d1d6      	bne.n	8006e18 <_svfiprintf_r+0x174>
 8006e6a:	89ab      	ldrh	r3, [r5, #12]
 8006e6c:	065b      	lsls	r3, r3, #25
 8006e6e:	f53f af2d 	bmi.w	8006ccc <_svfiprintf_r+0x28>
 8006e72:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006e74:	e72c      	b.n	8006cd0 <_svfiprintf_r+0x2c>
 8006e76:	ab03      	add	r3, sp, #12
 8006e78:	9300      	str	r3, [sp, #0]
 8006e7a:	462a      	mov	r2, r5
 8006e7c:	4b05      	ldr	r3, [pc, #20]	@ (8006e94 <_svfiprintf_r+0x1f0>)
 8006e7e:	a904      	add	r1, sp, #16
 8006e80:	4638      	mov	r0, r7
 8006e82:	f000 f879 	bl	8006f78 <_printf_i>
 8006e86:	e7ed      	b.n	8006e64 <_svfiprintf_r+0x1c0>
 8006e88:	0801450b 	.word	0x0801450b
 8006e8c:	08014515 	.word	0x08014515
 8006e90:	00000000 	.word	0x00000000
 8006e94:	08006bed 	.word	0x08006bed
 8006e98:	08014511 	.word	0x08014511

08006e9c <_printf_common>:
 8006e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006ea0:	4616      	mov	r6, r2
 8006ea2:	4698      	mov	r8, r3
 8006ea4:	688a      	ldr	r2, [r1, #8]
 8006ea6:	690b      	ldr	r3, [r1, #16]
 8006ea8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006eac:	4293      	cmp	r3, r2
 8006eae:	bfb8      	it	lt
 8006eb0:	4613      	movlt	r3, r2
 8006eb2:	6033      	str	r3, [r6, #0]
 8006eb4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8006eb8:	4607      	mov	r7, r0
 8006eba:	460c      	mov	r4, r1
 8006ebc:	b10a      	cbz	r2, 8006ec2 <_printf_common+0x26>
 8006ebe:	3301      	adds	r3, #1
 8006ec0:	6033      	str	r3, [r6, #0]
 8006ec2:	6823      	ldr	r3, [r4, #0]
 8006ec4:	0699      	lsls	r1, r3, #26
 8006ec6:	bf42      	ittt	mi
 8006ec8:	6833      	ldrmi	r3, [r6, #0]
 8006eca:	3302      	addmi	r3, #2
 8006ecc:	6033      	strmi	r3, [r6, #0]
 8006ece:	6825      	ldr	r5, [r4, #0]
 8006ed0:	f015 0506 	ands.w	r5, r5, #6
 8006ed4:	d106      	bne.n	8006ee4 <_printf_common+0x48>
 8006ed6:	f104 0a19 	add.w	sl, r4, #25
 8006eda:	68e3      	ldr	r3, [r4, #12]
 8006edc:	6832      	ldr	r2, [r6, #0]
 8006ede:	1a9b      	subs	r3, r3, r2
 8006ee0:	42ab      	cmp	r3, r5
 8006ee2:	dc26      	bgt.n	8006f32 <_printf_common+0x96>
 8006ee4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8006ee8:	6822      	ldr	r2, [r4, #0]
 8006eea:	3b00      	subs	r3, #0
 8006eec:	bf18      	it	ne
 8006eee:	2301      	movne	r3, #1
 8006ef0:	0692      	lsls	r2, r2, #26
 8006ef2:	d42b      	bmi.n	8006f4c <_printf_common+0xb0>
 8006ef4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8006ef8:	4641      	mov	r1, r8
 8006efa:	4638      	mov	r0, r7
 8006efc:	47c8      	blx	r9
 8006efe:	3001      	adds	r0, #1
 8006f00:	d01e      	beq.n	8006f40 <_printf_common+0xa4>
 8006f02:	6823      	ldr	r3, [r4, #0]
 8006f04:	6922      	ldr	r2, [r4, #16]
 8006f06:	f003 0306 	and.w	r3, r3, #6
 8006f0a:	2b04      	cmp	r3, #4
 8006f0c:	bf02      	ittt	eq
 8006f0e:	68e5      	ldreq	r5, [r4, #12]
 8006f10:	6833      	ldreq	r3, [r6, #0]
 8006f12:	1aed      	subeq	r5, r5, r3
 8006f14:	68a3      	ldr	r3, [r4, #8]
 8006f16:	bf0c      	ite	eq
 8006f18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006f1c:	2500      	movne	r5, #0
 8006f1e:	4293      	cmp	r3, r2
 8006f20:	bfc4      	itt	gt
 8006f22:	1a9b      	subgt	r3, r3, r2
 8006f24:	18ed      	addgt	r5, r5, r3
 8006f26:	2600      	movs	r6, #0
 8006f28:	341a      	adds	r4, #26
 8006f2a:	42b5      	cmp	r5, r6
 8006f2c:	d11a      	bne.n	8006f64 <_printf_common+0xc8>
 8006f2e:	2000      	movs	r0, #0
 8006f30:	e008      	b.n	8006f44 <_printf_common+0xa8>
 8006f32:	2301      	movs	r3, #1
 8006f34:	4652      	mov	r2, sl
 8006f36:	4641      	mov	r1, r8
 8006f38:	4638      	mov	r0, r7
 8006f3a:	47c8      	blx	r9
 8006f3c:	3001      	adds	r0, #1
 8006f3e:	d103      	bne.n	8006f48 <_printf_common+0xac>
 8006f40:	f04f 30ff 	mov.w	r0, #4294967295
 8006f44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f48:	3501      	adds	r5, #1
 8006f4a:	e7c6      	b.n	8006eda <_printf_common+0x3e>
 8006f4c:	18e1      	adds	r1, r4, r3
 8006f4e:	1c5a      	adds	r2, r3, #1
 8006f50:	2030      	movs	r0, #48	@ 0x30
 8006f52:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8006f56:	4422      	add	r2, r4
 8006f58:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006f5c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8006f60:	3302      	adds	r3, #2
 8006f62:	e7c7      	b.n	8006ef4 <_printf_common+0x58>
 8006f64:	2301      	movs	r3, #1
 8006f66:	4622      	mov	r2, r4
 8006f68:	4641      	mov	r1, r8
 8006f6a:	4638      	mov	r0, r7
 8006f6c:	47c8      	blx	r9
 8006f6e:	3001      	adds	r0, #1
 8006f70:	d0e6      	beq.n	8006f40 <_printf_common+0xa4>
 8006f72:	3601      	adds	r6, #1
 8006f74:	e7d9      	b.n	8006f2a <_printf_common+0x8e>
	...

08006f78 <_printf_i>:
 8006f78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006f7c:	7e0f      	ldrb	r7, [r1, #24]
 8006f7e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006f80:	2f78      	cmp	r7, #120	@ 0x78
 8006f82:	4691      	mov	r9, r2
 8006f84:	4680      	mov	r8, r0
 8006f86:	460c      	mov	r4, r1
 8006f88:	469a      	mov	sl, r3
 8006f8a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006f8e:	d807      	bhi.n	8006fa0 <_printf_i+0x28>
 8006f90:	2f62      	cmp	r7, #98	@ 0x62
 8006f92:	d80a      	bhi.n	8006faa <_printf_i+0x32>
 8006f94:	2f00      	cmp	r7, #0
 8006f96:	f000 80d2 	beq.w	800713e <_printf_i+0x1c6>
 8006f9a:	2f58      	cmp	r7, #88	@ 0x58
 8006f9c:	f000 80b9 	beq.w	8007112 <_printf_i+0x19a>
 8006fa0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006fa4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8006fa8:	e03a      	b.n	8007020 <_printf_i+0xa8>
 8006faa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006fae:	2b15      	cmp	r3, #21
 8006fb0:	d8f6      	bhi.n	8006fa0 <_printf_i+0x28>
 8006fb2:	a101      	add	r1, pc, #4	@ (adr r1, 8006fb8 <_printf_i+0x40>)
 8006fb4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006fb8:	08007011 	.word	0x08007011
 8006fbc:	08007025 	.word	0x08007025
 8006fc0:	08006fa1 	.word	0x08006fa1
 8006fc4:	08006fa1 	.word	0x08006fa1
 8006fc8:	08006fa1 	.word	0x08006fa1
 8006fcc:	08006fa1 	.word	0x08006fa1
 8006fd0:	08007025 	.word	0x08007025
 8006fd4:	08006fa1 	.word	0x08006fa1
 8006fd8:	08006fa1 	.word	0x08006fa1
 8006fdc:	08006fa1 	.word	0x08006fa1
 8006fe0:	08006fa1 	.word	0x08006fa1
 8006fe4:	08007125 	.word	0x08007125
 8006fe8:	0800704f 	.word	0x0800704f
 8006fec:	080070df 	.word	0x080070df
 8006ff0:	08006fa1 	.word	0x08006fa1
 8006ff4:	08006fa1 	.word	0x08006fa1
 8006ff8:	08007147 	.word	0x08007147
 8006ffc:	08006fa1 	.word	0x08006fa1
 8007000:	0800704f 	.word	0x0800704f
 8007004:	08006fa1 	.word	0x08006fa1
 8007008:	08006fa1 	.word	0x08006fa1
 800700c:	080070e7 	.word	0x080070e7
 8007010:	6833      	ldr	r3, [r6, #0]
 8007012:	1d1a      	adds	r2, r3, #4
 8007014:	681b      	ldr	r3, [r3, #0]
 8007016:	6032      	str	r2, [r6, #0]
 8007018:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800701c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007020:	2301      	movs	r3, #1
 8007022:	e09d      	b.n	8007160 <_printf_i+0x1e8>
 8007024:	6833      	ldr	r3, [r6, #0]
 8007026:	6820      	ldr	r0, [r4, #0]
 8007028:	1d19      	adds	r1, r3, #4
 800702a:	6031      	str	r1, [r6, #0]
 800702c:	0606      	lsls	r6, r0, #24
 800702e:	d501      	bpl.n	8007034 <_printf_i+0xbc>
 8007030:	681d      	ldr	r5, [r3, #0]
 8007032:	e003      	b.n	800703c <_printf_i+0xc4>
 8007034:	0645      	lsls	r5, r0, #25
 8007036:	d5fb      	bpl.n	8007030 <_printf_i+0xb8>
 8007038:	f9b3 5000 	ldrsh.w	r5, [r3]
 800703c:	2d00      	cmp	r5, #0
 800703e:	da03      	bge.n	8007048 <_printf_i+0xd0>
 8007040:	232d      	movs	r3, #45	@ 0x2d
 8007042:	426d      	negs	r5, r5
 8007044:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007048:	4859      	ldr	r0, [pc, #356]	@ (80071b0 <_printf_i+0x238>)
 800704a:	230a      	movs	r3, #10
 800704c:	e011      	b.n	8007072 <_printf_i+0xfa>
 800704e:	6821      	ldr	r1, [r4, #0]
 8007050:	6833      	ldr	r3, [r6, #0]
 8007052:	0608      	lsls	r0, r1, #24
 8007054:	f853 5b04 	ldr.w	r5, [r3], #4
 8007058:	d402      	bmi.n	8007060 <_printf_i+0xe8>
 800705a:	0649      	lsls	r1, r1, #25
 800705c:	bf48      	it	mi
 800705e:	b2ad      	uxthmi	r5, r5
 8007060:	2f6f      	cmp	r7, #111	@ 0x6f
 8007062:	4853      	ldr	r0, [pc, #332]	@ (80071b0 <_printf_i+0x238>)
 8007064:	6033      	str	r3, [r6, #0]
 8007066:	bf14      	ite	ne
 8007068:	230a      	movne	r3, #10
 800706a:	2308      	moveq	r3, #8
 800706c:	2100      	movs	r1, #0
 800706e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007072:	6866      	ldr	r6, [r4, #4]
 8007074:	60a6      	str	r6, [r4, #8]
 8007076:	2e00      	cmp	r6, #0
 8007078:	bfa2      	ittt	ge
 800707a:	6821      	ldrge	r1, [r4, #0]
 800707c:	f021 0104 	bicge.w	r1, r1, #4
 8007080:	6021      	strge	r1, [r4, #0]
 8007082:	b90d      	cbnz	r5, 8007088 <_printf_i+0x110>
 8007084:	2e00      	cmp	r6, #0
 8007086:	d04b      	beq.n	8007120 <_printf_i+0x1a8>
 8007088:	4616      	mov	r6, r2
 800708a:	fbb5 f1f3 	udiv	r1, r5, r3
 800708e:	fb03 5711 	mls	r7, r3, r1, r5
 8007092:	5dc7      	ldrb	r7, [r0, r7]
 8007094:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007098:	462f      	mov	r7, r5
 800709a:	42bb      	cmp	r3, r7
 800709c:	460d      	mov	r5, r1
 800709e:	d9f4      	bls.n	800708a <_printf_i+0x112>
 80070a0:	2b08      	cmp	r3, #8
 80070a2:	d10b      	bne.n	80070bc <_printf_i+0x144>
 80070a4:	6823      	ldr	r3, [r4, #0]
 80070a6:	07df      	lsls	r7, r3, #31
 80070a8:	d508      	bpl.n	80070bc <_printf_i+0x144>
 80070aa:	6923      	ldr	r3, [r4, #16]
 80070ac:	6861      	ldr	r1, [r4, #4]
 80070ae:	4299      	cmp	r1, r3
 80070b0:	bfde      	ittt	le
 80070b2:	2330      	movle	r3, #48	@ 0x30
 80070b4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80070b8:	f106 36ff 	addle.w	r6, r6, #4294967295
 80070bc:	1b92      	subs	r2, r2, r6
 80070be:	6122      	str	r2, [r4, #16]
 80070c0:	f8cd a000 	str.w	sl, [sp]
 80070c4:	464b      	mov	r3, r9
 80070c6:	aa03      	add	r2, sp, #12
 80070c8:	4621      	mov	r1, r4
 80070ca:	4640      	mov	r0, r8
 80070cc:	f7ff fee6 	bl	8006e9c <_printf_common>
 80070d0:	3001      	adds	r0, #1
 80070d2:	d14a      	bne.n	800716a <_printf_i+0x1f2>
 80070d4:	f04f 30ff 	mov.w	r0, #4294967295
 80070d8:	b004      	add	sp, #16
 80070da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070de:	6823      	ldr	r3, [r4, #0]
 80070e0:	f043 0320 	orr.w	r3, r3, #32
 80070e4:	6023      	str	r3, [r4, #0]
 80070e6:	4833      	ldr	r0, [pc, #204]	@ (80071b4 <_printf_i+0x23c>)
 80070e8:	2778      	movs	r7, #120	@ 0x78
 80070ea:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80070ee:	6823      	ldr	r3, [r4, #0]
 80070f0:	6831      	ldr	r1, [r6, #0]
 80070f2:	061f      	lsls	r7, r3, #24
 80070f4:	f851 5b04 	ldr.w	r5, [r1], #4
 80070f8:	d402      	bmi.n	8007100 <_printf_i+0x188>
 80070fa:	065f      	lsls	r7, r3, #25
 80070fc:	bf48      	it	mi
 80070fe:	b2ad      	uxthmi	r5, r5
 8007100:	6031      	str	r1, [r6, #0]
 8007102:	07d9      	lsls	r1, r3, #31
 8007104:	bf44      	itt	mi
 8007106:	f043 0320 	orrmi.w	r3, r3, #32
 800710a:	6023      	strmi	r3, [r4, #0]
 800710c:	b11d      	cbz	r5, 8007116 <_printf_i+0x19e>
 800710e:	2310      	movs	r3, #16
 8007110:	e7ac      	b.n	800706c <_printf_i+0xf4>
 8007112:	4827      	ldr	r0, [pc, #156]	@ (80071b0 <_printf_i+0x238>)
 8007114:	e7e9      	b.n	80070ea <_printf_i+0x172>
 8007116:	6823      	ldr	r3, [r4, #0]
 8007118:	f023 0320 	bic.w	r3, r3, #32
 800711c:	6023      	str	r3, [r4, #0]
 800711e:	e7f6      	b.n	800710e <_printf_i+0x196>
 8007120:	4616      	mov	r6, r2
 8007122:	e7bd      	b.n	80070a0 <_printf_i+0x128>
 8007124:	6833      	ldr	r3, [r6, #0]
 8007126:	6825      	ldr	r5, [r4, #0]
 8007128:	6961      	ldr	r1, [r4, #20]
 800712a:	1d18      	adds	r0, r3, #4
 800712c:	6030      	str	r0, [r6, #0]
 800712e:	062e      	lsls	r6, r5, #24
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	d501      	bpl.n	8007138 <_printf_i+0x1c0>
 8007134:	6019      	str	r1, [r3, #0]
 8007136:	e002      	b.n	800713e <_printf_i+0x1c6>
 8007138:	0668      	lsls	r0, r5, #25
 800713a:	d5fb      	bpl.n	8007134 <_printf_i+0x1bc>
 800713c:	8019      	strh	r1, [r3, #0]
 800713e:	2300      	movs	r3, #0
 8007140:	6123      	str	r3, [r4, #16]
 8007142:	4616      	mov	r6, r2
 8007144:	e7bc      	b.n	80070c0 <_printf_i+0x148>
 8007146:	6833      	ldr	r3, [r6, #0]
 8007148:	1d1a      	adds	r2, r3, #4
 800714a:	6032      	str	r2, [r6, #0]
 800714c:	681e      	ldr	r6, [r3, #0]
 800714e:	6862      	ldr	r2, [r4, #4]
 8007150:	2100      	movs	r1, #0
 8007152:	4630      	mov	r0, r6
 8007154:	f7f9 f864 	bl	8000220 <memchr>
 8007158:	b108      	cbz	r0, 800715e <_printf_i+0x1e6>
 800715a:	1b80      	subs	r0, r0, r6
 800715c:	6060      	str	r0, [r4, #4]
 800715e:	6863      	ldr	r3, [r4, #4]
 8007160:	6123      	str	r3, [r4, #16]
 8007162:	2300      	movs	r3, #0
 8007164:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007168:	e7aa      	b.n	80070c0 <_printf_i+0x148>
 800716a:	6923      	ldr	r3, [r4, #16]
 800716c:	4632      	mov	r2, r6
 800716e:	4649      	mov	r1, r9
 8007170:	4640      	mov	r0, r8
 8007172:	47d0      	blx	sl
 8007174:	3001      	adds	r0, #1
 8007176:	d0ad      	beq.n	80070d4 <_printf_i+0x15c>
 8007178:	6823      	ldr	r3, [r4, #0]
 800717a:	079b      	lsls	r3, r3, #30
 800717c:	d413      	bmi.n	80071a6 <_printf_i+0x22e>
 800717e:	68e0      	ldr	r0, [r4, #12]
 8007180:	9b03      	ldr	r3, [sp, #12]
 8007182:	4298      	cmp	r0, r3
 8007184:	bfb8      	it	lt
 8007186:	4618      	movlt	r0, r3
 8007188:	e7a6      	b.n	80070d8 <_printf_i+0x160>
 800718a:	2301      	movs	r3, #1
 800718c:	4632      	mov	r2, r6
 800718e:	4649      	mov	r1, r9
 8007190:	4640      	mov	r0, r8
 8007192:	47d0      	blx	sl
 8007194:	3001      	adds	r0, #1
 8007196:	d09d      	beq.n	80070d4 <_printf_i+0x15c>
 8007198:	3501      	adds	r5, #1
 800719a:	68e3      	ldr	r3, [r4, #12]
 800719c:	9903      	ldr	r1, [sp, #12]
 800719e:	1a5b      	subs	r3, r3, r1
 80071a0:	42ab      	cmp	r3, r5
 80071a2:	dcf2      	bgt.n	800718a <_printf_i+0x212>
 80071a4:	e7eb      	b.n	800717e <_printf_i+0x206>
 80071a6:	2500      	movs	r5, #0
 80071a8:	f104 0619 	add.w	r6, r4, #25
 80071ac:	e7f5      	b.n	800719a <_printf_i+0x222>
 80071ae:	bf00      	nop
 80071b0:	0801451c 	.word	0x0801451c
 80071b4:	0801452d 	.word	0x0801452d

080071b8 <__sflush_r>:
 80071b8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80071bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071c0:	0716      	lsls	r6, r2, #28
 80071c2:	4605      	mov	r5, r0
 80071c4:	460c      	mov	r4, r1
 80071c6:	d454      	bmi.n	8007272 <__sflush_r+0xba>
 80071c8:	684b      	ldr	r3, [r1, #4]
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	dc02      	bgt.n	80071d4 <__sflush_r+0x1c>
 80071ce:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80071d0:	2b00      	cmp	r3, #0
 80071d2:	dd48      	ble.n	8007266 <__sflush_r+0xae>
 80071d4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80071d6:	2e00      	cmp	r6, #0
 80071d8:	d045      	beq.n	8007266 <__sflush_r+0xae>
 80071da:	2300      	movs	r3, #0
 80071dc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80071e0:	682f      	ldr	r7, [r5, #0]
 80071e2:	6a21      	ldr	r1, [r4, #32]
 80071e4:	602b      	str	r3, [r5, #0]
 80071e6:	d030      	beq.n	800724a <__sflush_r+0x92>
 80071e8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80071ea:	89a3      	ldrh	r3, [r4, #12]
 80071ec:	0759      	lsls	r1, r3, #29
 80071ee:	d505      	bpl.n	80071fc <__sflush_r+0x44>
 80071f0:	6863      	ldr	r3, [r4, #4]
 80071f2:	1ad2      	subs	r2, r2, r3
 80071f4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80071f6:	b10b      	cbz	r3, 80071fc <__sflush_r+0x44>
 80071f8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80071fa:	1ad2      	subs	r2, r2, r3
 80071fc:	2300      	movs	r3, #0
 80071fe:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8007200:	6a21      	ldr	r1, [r4, #32]
 8007202:	4628      	mov	r0, r5
 8007204:	47b0      	blx	r6
 8007206:	1c43      	adds	r3, r0, #1
 8007208:	89a3      	ldrh	r3, [r4, #12]
 800720a:	d106      	bne.n	800721a <__sflush_r+0x62>
 800720c:	6829      	ldr	r1, [r5, #0]
 800720e:	291d      	cmp	r1, #29
 8007210:	d82b      	bhi.n	800726a <__sflush_r+0xb2>
 8007212:	4a2a      	ldr	r2, [pc, #168]	@ (80072bc <__sflush_r+0x104>)
 8007214:	410a      	asrs	r2, r1
 8007216:	07d6      	lsls	r6, r2, #31
 8007218:	d427      	bmi.n	800726a <__sflush_r+0xb2>
 800721a:	2200      	movs	r2, #0
 800721c:	6062      	str	r2, [r4, #4]
 800721e:	04d9      	lsls	r1, r3, #19
 8007220:	6922      	ldr	r2, [r4, #16]
 8007222:	6022      	str	r2, [r4, #0]
 8007224:	d504      	bpl.n	8007230 <__sflush_r+0x78>
 8007226:	1c42      	adds	r2, r0, #1
 8007228:	d101      	bne.n	800722e <__sflush_r+0x76>
 800722a:	682b      	ldr	r3, [r5, #0]
 800722c:	b903      	cbnz	r3, 8007230 <__sflush_r+0x78>
 800722e:	6560      	str	r0, [r4, #84]	@ 0x54
 8007230:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007232:	602f      	str	r7, [r5, #0]
 8007234:	b1b9      	cbz	r1, 8007266 <__sflush_r+0xae>
 8007236:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800723a:	4299      	cmp	r1, r3
 800723c:	d002      	beq.n	8007244 <__sflush_r+0x8c>
 800723e:	4628      	mov	r0, r5
 8007240:	f7ff fbd4 	bl	80069ec <_free_r>
 8007244:	2300      	movs	r3, #0
 8007246:	6363      	str	r3, [r4, #52]	@ 0x34
 8007248:	e00d      	b.n	8007266 <__sflush_r+0xae>
 800724a:	2301      	movs	r3, #1
 800724c:	4628      	mov	r0, r5
 800724e:	47b0      	blx	r6
 8007250:	4602      	mov	r2, r0
 8007252:	1c50      	adds	r0, r2, #1
 8007254:	d1c9      	bne.n	80071ea <__sflush_r+0x32>
 8007256:	682b      	ldr	r3, [r5, #0]
 8007258:	2b00      	cmp	r3, #0
 800725a:	d0c6      	beq.n	80071ea <__sflush_r+0x32>
 800725c:	2b1d      	cmp	r3, #29
 800725e:	d001      	beq.n	8007264 <__sflush_r+0xac>
 8007260:	2b16      	cmp	r3, #22
 8007262:	d11e      	bne.n	80072a2 <__sflush_r+0xea>
 8007264:	602f      	str	r7, [r5, #0]
 8007266:	2000      	movs	r0, #0
 8007268:	e022      	b.n	80072b0 <__sflush_r+0xf8>
 800726a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800726e:	b21b      	sxth	r3, r3
 8007270:	e01b      	b.n	80072aa <__sflush_r+0xf2>
 8007272:	690f      	ldr	r7, [r1, #16]
 8007274:	2f00      	cmp	r7, #0
 8007276:	d0f6      	beq.n	8007266 <__sflush_r+0xae>
 8007278:	0793      	lsls	r3, r2, #30
 800727a:	680e      	ldr	r6, [r1, #0]
 800727c:	bf08      	it	eq
 800727e:	694b      	ldreq	r3, [r1, #20]
 8007280:	600f      	str	r7, [r1, #0]
 8007282:	bf18      	it	ne
 8007284:	2300      	movne	r3, #0
 8007286:	eba6 0807 	sub.w	r8, r6, r7
 800728a:	608b      	str	r3, [r1, #8]
 800728c:	f1b8 0f00 	cmp.w	r8, #0
 8007290:	dde9      	ble.n	8007266 <__sflush_r+0xae>
 8007292:	6a21      	ldr	r1, [r4, #32]
 8007294:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8007296:	4643      	mov	r3, r8
 8007298:	463a      	mov	r2, r7
 800729a:	4628      	mov	r0, r5
 800729c:	47b0      	blx	r6
 800729e:	2800      	cmp	r0, #0
 80072a0:	dc08      	bgt.n	80072b4 <__sflush_r+0xfc>
 80072a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80072a6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80072aa:	81a3      	strh	r3, [r4, #12]
 80072ac:	f04f 30ff 	mov.w	r0, #4294967295
 80072b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80072b4:	4407      	add	r7, r0
 80072b6:	eba8 0800 	sub.w	r8, r8, r0
 80072ba:	e7e7      	b.n	800728c <__sflush_r+0xd4>
 80072bc:	dfbffffe 	.word	0xdfbffffe

080072c0 <_fflush_r>:
 80072c0:	b538      	push	{r3, r4, r5, lr}
 80072c2:	690b      	ldr	r3, [r1, #16]
 80072c4:	4605      	mov	r5, r0
 80072c6:	460c      	mov	r4, r1
 80072c8:	b913      	cbnz	r3, 80072d0 <_fflush_r+0x10>
 80072ca:	2500      	movs	r5, #0
 80072cc:	4628      	mov	r0, r5
 80072ce:	bd38      	pop	{r3, r4, r5, pc}
 80072d0:	b118      	cbz	r0, 80072da <_fflush_r+0x1a>
 80072d2:	6a03      	ldr	r3, [r0, #32]
 80072d4:	b90b      	cbnz	r3, 80072da <_fflush_r+0x1a>
 80072d6:	f7ff fa27 	bl	8006728 <__sinit>
 80072da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80072de:	2b00      	cmp	r3, #0
 80072e0:	d0f3      	beq.n	80072ca <_fflush_r+0xa>
 80072e2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80072e4:	07d0      	lsls	r0, r2, #31
 80072e6:	d404      	bmi.n	80072f2 <_fflush_r+0x32>
 80072e8:	0599      	lsls	r1, r3, #22
 80072ea:	d402      	bmi.n	80072f2 <_fflush_r+0x32>
 80072ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80072ee:	f7ff fb5c 	bl	80069aa <__retarget_lock_acquire_recursive>
 80072f2:	4628      	mov	r0, r5
 80072f4:	4621      	mov	r1, r4
 80072f6:	f7ff ff5f 	bl	80071b8 <__sflush_r>
 80072fa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80072fc:	07da      	lsls	r2, r3, #31
 80072fe:	4605      	mov	r5, r0
 8007300:	d4e4      	bmi.n	80072cc <_fflush_r+0xc>
 8007302:	89a3      	ldrh	r3, [r4, #12]
 8007304:	059b      	lsls	r3, r3, #22
 8007306:	d4e1      	bmi.n	80072cc <_fflush_r+0xc>
 8007308:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800730a:	f7ff fb4f 	bl	80069ac <__retarget_lock_release_recursive>
 800730e:	e7dd      	b.n	80072cc <_fflush_r+0xc>

08007310 <fiprintf>:
 8007310:	b40e      	push	{r1, r2, r3}
 8007312:	b503      	push	{r0, r1, lr}
 8007314:	4601      	mov	r1, r0
 8007316:	ab03      	add	r3, sp, #12
 8007318:	4805      	ldr	r0, [pc, #20]	@ (8007330 <fiprintf+0x20>)
 800731a:	f853 2b04 	ldr.w	r2, [r3], #4
 800731e:	6800      	ldr	r0, [r0, #0]
 8007320:	9301      	str	r3, [sp, #4]
 8007322:	f000 f89d 	bl	8007460 <_vfiprintf_r>
 8007326:	b002      	add	sp, #8
 8007328:	f85d eb04 	ldr.w	lr, [sp], #4
 800732c:	b003      	add	sp, #12
 800732e:	4770      	bx	lr
 8007330:	20013768 	.word	0x20013768

08007334 <memmove>:
 8007334:	4288      	cmp	r0, r1
 8007336:	b510      	push	{r4, lr}
 8007338:	eb01 0402 	add.w	r4, r1, r2
 800733c:	d902      	bls.n	8007344 <memmove+0x10>
 800733e:	4284      	cmp	r4, r0
 8007340:	4623      	mov	r3, r4
 8007342:	d807      	bhi.n	8007354 <memmove+0x20>
 8007344:	1e43      	subs	r3, r0, #1
 8007346:	42a1      	cmp	r1, r4
 8007348:	d008      	beq.n	800735c <memmove+0x28>
 800734a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800734e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007352:	e7f8      	b.n	8007346 <memmove+0x12>
 8007354:	4402      	add	r2, r0
 8007356:	4601      	mov	r1, r0
 8007358:	428a      	cmp	r2, r1
 800735a:	d100      	bne.n	800735e <memmove+0x2a>
 800735c:	bd10      	pop	{r4, pc}
 800735e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007362:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007366:	e7f7      	b.n	8007358 <memmove+0x24>

08007368 <_sbrk_r>:
 8007368:	b538      	push	{r3, r4, r5, lr}
 800736a:	4d06      	ldr	r5, [pc, #24]	@ (8007384 <_sbrk_r+0x1c>)
 800736c:	2300      	movs	r3, #0
 800736e:	4604      	mov	r4, r0
 8007370:	4608      	mov	r0, r1
 8007372:	602b      	str	r3, [r5, #0]
 8007374:	f7fb fd8e 	bl	8002e94 <_sbrk>
 8007378:	1c43      	adds	r3, r0, #1
 800737a:	d102      	bne.n	8007382 <_sbrk_r+0x1a>
 800737c:	682b      	ldr	r3, [r5, #0]
 800737e:	b103      	cbz	r3, 8007382 <_sbrk_r+0x1a>
 8007380:	6023      	str	r3, [r4, #0]
 8007382:	bd38      	pop	{r3, r4, r5, pc}
 8007384:	20013b38 	.word	0x20013b38

08007388 <memcpy>:
 8007388:	440a      	add	r2, r1
 800738a:	4291      	cmp	r1, r2
 800738c:	f100 33ff 	add.w	r3, r0, #4294967295
 8007390:	d100      	bne.n	8007394 <memcpy+0xc>
 8007392:	4770      	bx	lr
 8007394:	b510      	push	{r4, lr}
 8007396:	f811 4b01 	ldrb.w	r4, [r1], #1
 800739a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800739e:	4291      	cmp	r1, r2
 80073a0:	d1f9      	bne.n	8007396 <memcpy+0xe>
 80073a2:	bd10      	pop	{r4, pc}

080073a4 <abort>:
 80073a4:	b508      	push	{r3, lr}
 80073a6:	2006      	movs	r0, #6
 80073a8:	f000 fa2e 	bl	8007808 <raise>
 80073ac:	2001      	movs	r0, #1
 80073ae:	f7fb fcf9 	bl	8002da4 <_exit>

080073b2 <_realloc_r>:
 80073b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80073b6:	4680      	mov	r8, r0
 80073b8:	4615      	mov	r5, r2
 80073ba:	460c      	mov	r4, r1
 80073bc:	b921      	cbnz	r1, 80073c8 <_realloc_r+0x16>
 80073be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073c2:	4611      	mov	r1, r2
 80073c4:	f7ff bb86 	b.w	8006ad4 <_malloc_r>
 80073c8:	b92a      	cbnz	r2, 80073d6 <_realloc_r+0x24>
 80073ca:	f7ff fb0f 	bl	80069ec <_free_r>
 80073ce:	2400      	movs	r4, #0
 80073d0:	4620      	mov	r0, r4
 80073d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073d6:	f000 fa33 	bl	8007840 <_malloc_usable_size_r>
 80073da:	4285      	cmp	r5, r0
 80073dc:	4606      	mov	r6, r0
 80073de:	d802      	bhi.n	80073e6 <_realloc_r+0x34>
 80073e0:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80073e4:	d8f4      	bhi.n	80073d0 <_realloc_r+0x1e>
 80073e6:	4629      	mov	r1, r5
 80073e8:	4640      	mov	r0, r8
 80073ea:	f7ff fb73 	bl	8006ad4 <_malloc_r>
 80073ee:	4607      	mov	r7, r0
 80073f0:	2800      	cmp	r0, #0
 80073f2:	d0ec      	beq.n	80073ce <_realloc_r+0x1c>
 80073f4:	42b5      	cmp	r5, r6
 80073f6:	462a      	mov	r2, r5
 80073f8:	4621      	mov	r1, r4
 80073fa:	bf28      	it	cs
 80073fc:	4632      	movcs	r2, r6
 80073fe:	f7ff ffc3 	bl	8007388 <memcpy>
 8007402:	4621      	mov	r1, r4
 8007404:	4640      	mov	r0, r8
 8007406:	f7ff faf1 	bl	80069ec <_free_r>
 800740a:	463c      	mov	r4, r7
 800740c:	e7e0      	b.n	80073d0 <_realloc_r+0x1e>

0800740e <__sfputc_r>:
 800740e:	6893      	ldr	r3, [r2, #8]
 8007410:	3b01      	subs	r3, #1
 8007412:	2b00      	cmp	r3, #0
 8007414:	b410      	push	{r4}
 8007416:	6093      	str	r3, [r2, #8]
 8007418:	da08      	bge.n	800742c <__sfputc_r+0x1e>
 800741a:	6994      	ldr	r4, [r2, #24]
 800741c:	42a3      	cmp	r3, r4
 800741e:	db01      	blt.n	8007424 <__sfputc_r+0x16>
 8007420:	290a      	cmp	r1, #10
 8007422:	d103      	bne.n	800742c <__sfputc_r+0x1e>
 8007424:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007428:	f000 b932 	b.w	8007690 <__swbuf_r>
 800742c:	6813      	ldr	r3, [r2, #0]
 800742e:	1c58      	adds	r0, r3, #1
 8007430:	6010      	str	r0, [r2, #0]
 8007432:	7019      	strb	r1, [r3, #0]
 8007434:	4608      	mov	r0, r1
 8007436:	f85d 4b04 	ldr.w	r4, [sp], #4
 800743a:	4770      	bx	lr

0800743c <__sfputs_r>:
 800743c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800743e:	4606      	mov	r6, r0
 8007440:	460f      	mov	r7, r1
 8007442:	4614      	mov	r4, r2
 8007444:	18d5      	adds	r5, r2, r3
 8007446:	42ac      	cmp	r4, r5
 8007448:	d101      	bne.n	800744e <__sfputs_r+0x12>
 800744a:	2000      	movs	r0, #0
 800744c:	e007      	b.n	800745e <__sfputs_r+0x22>
 800744e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007452:	463a      	mov	r2, r7
 8007454:	4630      	mov	r0, r6
 8007456:	f7ff ffda 	bl	800740e <__sfputc_r>
 800745a:	1c43      	adds	r3, r0, #1
 800745c:	d1f3      	bne.n	8007446 <__sfputs_r+0xa>
 800745e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007460 <_vfiprintf_r>:
 8007460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007464:	460d      	mov	r5, r1
 8007466:	b09d      	sub	sp, #116	@ 0x74
 8007468:	4614      	mov	r4, r2
 800746a:	4698      	mov	r8, r3
 800746c:	4606      	mov	r6, r0
 800746e:	b118      	cbz	r0, 8007478 <_vfiprintf_r+0x18>
 8007470:	6a03      	ldr	r3, [r0, #32]
 8007472:	b90b      	cbnz	r3, 8007478 <_vfiprintf_r+0x18>
 8007474:	f7ff f958 	bl	8006728 <__sinit>
 8007478:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800747a:	07d9      	lsls	r1, r3, #31
 800747c:	d405      	bmi.n	800748a <_vfiprintf_r+0x2a>
 800747e:	89ab      	ldrh	r3, [r5, #12]
 8007480:	059a      	lsls	r2, r3, #22
 8007482:	d402      	bmi.n	800748a <_vfiprintf_r+0x2a>
 8007484:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007486:	f7ff fa90 	bl	80069aa <__retarget_lock_acquire_recursive>
 800748a:	89ab      	ldrh	r3, [r5, #12]
 800748c:	071b      	lsls	r3, r3, #28
 800748e:	d501      	bpl.n	8007494 <_vfiprintf_r+0x34>
 8007490:	692b      	ldr	r3, [r5, #16]
 8007492:	b99b      	cbnz	r3, 80074bc <_vfiprintf_r+0x5c>
 8007494:	4629      	mov	r1, r5
 8007496:	4630      	mov	r0, r6
 8007498:	f000 f938 	bl	800770c <__swsetup_r>
 800749c:	b170      	cbz	r0, 80074bc <_vfiprintf_r+0x5c>
 800749e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80074a0:	07dc      	lsls	r4, r3, #31
 80074a2:	d504      	bpl.n	80074ae <_vfiprintf_r+0x4e>
 80074a4:	f04f 30ff 	mov.w	r0, #4294967295
 80074a8:	b01d      	add	sp, #116	@ 0x74
 80074aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074ae:	89ab      	ldrh	r3, [r5, #12]
 80074b0:	0598      	lsls	r0, r3, #22
 80074b2:	d4f7      	bmi.n	80074a4 <_vfiprintf_r+0x44>
 80074b4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80074b6:	f7ff fa79 	bl	80069ac <__retarget_lock_release_recursive>
 80074ba:	e7f3      	b.n	80074a4 <_vfiprintf_r+0x44>
 80074bc:	2300      	movs	r3, #0
 80074be:	9309      	str	r3, [sp, #36]	@ 0x24
 80074c0:	2320      	movs	r3, #32
 80074c2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80074c6:	f8cd 800c 	str.w	r8, [sp, #12]
 80074ca:	2330      	movs	r3, #48	@ 0x30
 80074cc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800767c <_vfiprintf_r+0x21c>
 80074d0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80074d4:	f04f 0901 	mov.w	r9, #1
 80074d8:	4623      	mov	r3, r4
 80074da:	469a      	mov	sl, r3
 80074dc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80074e0:	b10a      	cbz	r2, 80074e6 <_vfiprintf_r+0x86>
 80074e2:	2a25      	cmp	r2, #37	@ 0x25
 80074e4:	d1f9      	bne.n	80074da <_vfiprintf_r+0x7a>
 80074e6:	ebba 0b04 	subs.w	fp, sl, r4
 80074ea:	d00b      	beq.n	8007504 <_vfiprintf_r+0xa4>
 80074ec:	465b      	mov	r3, fp
 80074ee:	4622      	mov	r2, r4
 80074f0:	4629      	mov	r1, r5
 80074f2:	4630      	mov	r0, r6
 80074f4:	f7ff ffa2 	bl	800743c <__sfputs_r>
 80074f8:	3001      	adds	r0, #1
 80074fa:	f000 80a7 	beq.w	800764c <_vfiprintf_r+0x1ec>
 80074fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007500:	445a      	add	r2, fp
 8007502:	9209      	str	r2, [sp, #36]	@ 0x24
 8007504:	f89a 3000 	ldrb.w	r3, [sl]
 8007508:	2b00      	cmp	r3, #0
 800750a:	f000 809f 	beq.w	800764c <_vfiprintf_r+0x1ec>
 800750e:	2300      	movs	r3, #0
 8007510:	f04f 32ff 	mov.w	r2, #4294967295
 8007514:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007518:	f10a 0a01 	add.w	sl, sl, #1
 800751c:	9304      	str	r3, [sp, #16]
 800751e:	9307      	str	r3, [sp, #28]
 8007520:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007524:	931a      	str	r3, [sp, #104]	@ 0x68
 8007526:	4654      	mov	r4, sl
 8007528:	2205      	movs	r2, #5
 800752a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800752e:	4853      	ldr	r0, [pc, #332]	@ (800767c <_vfiprintf_r+0x21c>)
 8007530:	f7f8 fe76 	bl	8000220 <memchr>
 8007534:	9a04      	ldr	r2, [sp, #16]
 8007536:	b9d8      	cbnz	r0, 8007570 <_vfiprintf_r+0x110>
 8007538:	06d1      	lsls	r1, r2, #27
 800753a:	bf44      	itt	mi
 800753c:	2320      	movmi	r3, #32
 800753e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007542:	0713      	lsls	r3, r2, #28
 8007544:	bf44      	itt	mi
 8007546:	232b      	movmi	r3, #43	@ 0x2b
 8007548:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800754c:	f89a 3000 	ldrb.w	r3, [sl]
 8007550:	2b2a      	cmp	r3, #42	@ 0x2a
 8007552:	d015      	beq.n	8007580 <_vfiprintf_r+0x120>
 8007554:	9a07      	ldr	r2, [sp, #28]
 8007556:	4654      	mov	r4, sl
 8007558:	2000      	movs	r0, #0
 800755a:	f04f 0c0a 	mov.w	ip, #10
 800755e:	4621      	mov	r1, r4
 8007560:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007564:	3b30      	subs	r3, #48	@ 0x30
 8007566:	2b09      	cmp	r3, #9
 8007568:	d94b      	bls.n	8007602 <_vfiprintf_r+0x1a2>
 800756a:	b1b0      	cbz	r0, 800759a <_vfiprintf_r+0x13a>
 800756c:	9207      	str	r2, [sp, #28]
 800756e:	e014      	b.n	800759a <_vfiprintf_r+0x13a>
 8007570:	eba0 0308 	sub.w	r3, r0, r8
 8007574:	fa09 f303 	lsl.w	r3, r9, r3
 8007578:	4313      	orrs	r3, r2
 800757a:	9304      	str	r3, [sp, #16]
 800757c:	46a2      	mov	sl, r4
 800757e:	e7d2      	b.n	8007526 <_vfiprintf_r+0xc6>
 8007580:	9b03      	ldr	r3, [sp, #12]
 8007582:	1d19      	adds	r1, r3, #4
 8007584:	681b      	ldr	r3, [r3, #0]
 8007586:	9103      	str	r1, [sp, #12]
 8007588:	2b00      	cmp	r3, #0
 800758a:	bfbb      	ittet	lt
 800758c:	425b      	neglt	r3, r3
 800758e:	f042 0202 	orrlt.w	r2, r2, #2
 8007592:	9307      	strge	r3, [sp, #28]
 8007594:	9307      	strlt	r3, [sp, #28]
 8007596:	bfb8      	it	lt
 8007598:	9204      	strlt	r2, [sp, #16]
 800759a:	7823      	ldrb	r3, [r4, #0]
 800759c:	2b2e      	cmp	r3, #46	@ 0x2e
 800759e:	d10a      	bne.n	80075b6 <_vfiprintf_r+0x156>
 80075a0:	7863      	ldrb	r3, [r4, #1]
 80075a2:	2b2a      	cmp	r3, #42	@ 0x2a
 80075a4:	d132      	bne.n	800760c <_vfiprintf_r+0x1ac>
 80075a6:	9b03      	ldr	r3, [sp, #12]
 80075a8:	1d1a      	adds	r2, r3, #4
 80075aa:	681b      	ldr	r3, [r3, #0]
 80075ac:	9203      	str	r2, [sp, #12]
 80075ae:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80075b2:	3402      	adds	r4, #2
 80075b4:	9305      	str	r3, [sp, #20]
 80075b6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800768c <_vfiprintf_r+0x22c>
 80075ba:	7821      	ldrb	r1, [r4, #0]
 80075bc:	2203      	movs	r2, #3
 80075be:	4650      	mov	r0, sl
 80075c0:	f7f8 fe2e 	bl	8000220 <memchr>
 80075c4:	b138      	cbz	r0, 80075d6 <_vfiprintf_r+0x176>
 80075c6:	9b04      	ldr	r3, [sp, #16]
 80075c8:	eba0 000a 	sub.w	r0, r0, sl
 80075cc:	2240      	movs	r2, #64	@ 0x40
 80075ce:	4082      	lsls	r2, r0
 80075d0:	4313      	orrs	r3, r2
 80075d2:	3401      	adds	r4, #1
 80075d4:	9304      	str	r3, [sp, #16]
 80075d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80075da:	4829      	ldr	r0, [pc, #164]	@ (8007680 <_vfiprintf_r+0x220>)
 80075dc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80075e0:	2206      	movs	r2, #6
 80075e2:	f7f8 fe1d 	bl	8000220 <memchr>
 80075e6:	2800      	cmp	r0, #0
 80075e8:	d03f      	beq.n	800766a <_vfiprintf_r+0x20a>
 80075ea:	4b26      	ldr	r3, [pc, #152]	@ (8007684 <_vfiprintf_r+0x224>)
 80075ec:	bb1b      	cbnz	r3, 8007636 <_vfiprintf_r+0x1d6>
 80075ee:	9b03      	ldr	r3, [sp, #12]
 80075f0:	3307      	adds	r3, #7
 80075f2:	f023 0307 	bic.w	r3, r3, #7
 80075f6:	3308      	adds	r3, #8
 80075f8:	9303      	str	r3, [sp, #12]
 80075fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80075fc:	443b      	add	r3, r7
 80075fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8007600:	e76a      	b.n	80074d8 <_vfiprintf_r+0x78>
 8007602:	fb0c 3202 	mla	r2, ip, r2, r3
 8007606:	460c      	mov	r4, r1
 8007608:	2001      	movs	r0, #1
 800760a:	e7a8      	b.n	800755e <_vfiprintf_r+0xfe>
 800760c:	2300      	movs	r3, #0
 800760e:	3401      	adds	r4, #1
 8007610:	9305      	str	r3, [sp, #20]
 8007612:	4619      	mov	r1, r3
 8007614:	f04f 0c0a 	mov.w	ip, #10
 8007618:	4620      	mov	r0, r4
 800761a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800761e:	3a30      	subs	r2, #48	@ 0x30
 8007620:	2a09      	cmp	r2, #9
 8007622:	d903      	bls.n	800762c <_vfiprintf_r+0x1cc>
 8007624:	2b00      	cmp	r3, #0
 8007626:	d0c6      	beq.n	80075b6 <_vfiprintf_r+0x156>
 8007628:	9105      	str	r1, [sp, #20]
 800762a:	e7c4      	b.n	80075b6 <_vfiprintf_r+0x156>
 800762c:	fb0c 2101 	mla	r1, ip, r1, r2
 8007630:	4604      	mov	r4, r0
 8007632:	2301      	movs	r3, #1
 8007634:	e7f0      	b.n	8007618 <_vfiprintf_r+0x1b8>
 8007636:	ab03      	add	r3, sp, #12
 8007638:	9300      	str	r3, [sp, #0]
 800763a:	462a      	mov	r2, r5
 800763c:	4b12      	ldr	r3, [pc, #72]	@ (8007688 <_vfiprintf_r+0x228>)
 800763e:	a904      	add	r1, sp, #16
 8007640:	4630      	mov	r0, r6
 8007642:	f3af 8000 	nop.w
 8007646:	4607      	mov	r7, r0
 8007648:	1c78      	adds	r0, r7, #1
 800764a:	d1d6      	bne.n	80075fa <_vfiprintf_r+0x19a>
 800764c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800764e:	07d9      	lsls	r1, r3, #31
 8007650:	d405      	bmi.n	800765e <_vfiprintf_r+0x1fe>
 8007652:	89ab      	ldrh	r3, [r5, #12]
 8007654:	059a      	lsls	r2, r3, #22
 8007656:	d402      	bmi.n	800765e <_vfiprintf_r+0x1fe>
 8007658:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800765a:	f7ff f9a7 	bl	80069ac <__retarget_lock_release_recursive>
 800765e:	89ab      	ldrh	r3, [r5, #12]
 8007660:	065b      	lsls	r3, r3, #25
 8007662:	f53f af1f 	bmi.w	80074a4 <_vfiprintf_r+0x44>
 8007666:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007668:	e71e      	b.n	80074a8 <_vfiprintf_r+0x48>
 800766a:	ab03      	add	r3, sp, #12
 800766c:	9300      	str	r3, [sp, #0]
 800766e:	462a      	mov	r2, r5
 8007670:	4b05      	ldr	r3, [pc, #20]	@ (8007688 <_vfiprintf_r+0x228>)
 8007672:	a904      	add	r1, sp, #16
 8007674:	4630      	mov	r0, r6
 8007676:	f7ff fc7f 	bl	8006f78 <_printf_i>
 800767a:	e7e4      	b.n	8007646 <_vfiprintf_r+0x1e6>
 800767c:	0801450b 	.word	0x0801450b
 8007680:	08014515 	.word	0x08014515
 8007684:	00000000 	.word	0x00000000
 8007688:	0800743d 	.word	0x0800743d
 800768c:	08014511 	.word	0x08014511

08007690 <__swbuf_r>:
 8007690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007692:	460e      	mov	r6, r1
 8007694:	4614      	mov	r4, r2
 8007696:	4605      	mov	r5, r0
 8007698:	b118      	cbz	r0, 80076a2 <__swbuf_r+0x12>
 800769a:	6a03      	ldr	r3, [r0, #32]
 800769c:	b90b      	cbnz	r3, 80076a2 <__swbuf_r+0x12>
 800769e:	f7ff f843 	bl	8006728 <__sinit>
 80076a2:	69a3      	ldr	r3, [r4, #24]
 80076a4:	60a3      	str	r3, [r4, #8]
 80076a6:	89a3      	ldrh	r3, [r4, #12]
 80076a8:	071a      	lsls	r2, r3, #28
 80076aa:	d501      	bpl.n	80076b0 <__swbuf_r+0x20>
 80076ac:	6923      	ldr	r3, [r4, #16]
 80076ae:	b943      	cbnz	r3, 80076c2 <__swbuf_r+0x32>
 80076b0:	4621      	mov	r1, r4
 80076b2:	4628      	mov	r0, r5
 80076b4:	f000 f82a 	bl	800770c <__swsetup_r>
 80076b8:	b118      	cbz	r0, 80076c2 <__swbuf_r+0x32>
 80076ba:	f04f 37ff 	mov.w	r7, #4294967295
 80076be:	4638      	mov	r0, r7
 80076c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80076c2:	6823      	ldr	r3, [r4, #0]
 80076c4:	6922      	ldr	r2, [r4, #16]
 80076c6:	1a98      	subs	r0, r3, r2
 80076c8:	6963      	ldr	r3, [r4, #20]
 80076ca:	b2f6      	uxtb	r6, r6
 80076cc:	4283      	cmp	r3, r0
 80076ce:	4637      	mov	r7, r6
 80076d0:	dc05      	bgt.n	80076de <__swbuf_r+0x4e>
 80076d2:	4621      	mov	r1, r4
 80076d4:	4628      	mov	r0, r5
 80076d6:	f7ff fdf3 	bl	80072c0 <_fflush_r>
 80076da:	2800      	cmp	r0, #0
 80076dc:	d1ed      	bne.n	80076ba <__swbuf_r+0x2a>
 80076de:	68a3      	ldr	r3, [r4, #8]
 80076e0:	3b01      	subs	r3, #1
 80076e2:	60a3      	str	r3, [r4, #8]
 80076e4:	6823      	ldr	r3, [r4, #0]
 80076e6:	1c5a      	adds	r2, r3, #1
 80076e8:	6022      	str	r2, [r4, #0]
 80076ea:	701e      	strb	r6, [r3, #0]
 80076ec:	6962      	ldr	r2, [r4, #20]
 80076ee:	1c43      	adds	r3, r0, #1
 80076f0:	429a      	cmp	r2, r3
 80076f2:	d004      	beq.n	80076fe <__swbuf_r+0x6e>
 80076f4:	89a3      	ldrh	r3, [r4, #12]
 80076f6:	07db      	lsls	r3, r3, #31
 80076f8:	d5e1      	bpl.n	80076be <__swbuf_r+0x2e>
 80076fa:	2e0a      	cmp	r6, #10
 80076fc:	d1df      	bne.n	80076be <__swbuf_r+0x2e>
 80076fe:	4621      	mov	r1, r4
 8007700:	4628      	mov	r0, r5
 8007702:	f7ff fddd 	bl	80072c0 <_fflush_r>
 8007706:	2800      	cmp	r0, #0
 8007708:	d0d9      	beq.n	80076be <__swbuf_r+0x2e>
 800770a:	e7d6      	b.n	80076ba <__swbuf_r+0x2a>

0800770c <__swsetup_r>:
 800770c:	b538      	push	{r3, r4, r5, lr}
 800770e:	4b29      	ldr	r3, [pc, #164]	@ (80077b4 <__swsetup_r+0xa8>)
 8007710:	4605      	mov	r5, r0
 8007712:	6818      	ldr	r0, [r3, #0]
 8007714:	460c      	mov	r4, r1
 8007716:	b118      	cbz	r0, 8007720 <__swsetup_r+0x14>
 8007718:	6a03      	ldr	r3, [r0, #32]
 800771a:	b90b      	cbnz	r3, 8007720 <__swsetup_r+0x14>
 800771c:	f7ff f804 	bl	8006728 <__sinit>
 8007720:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007724:	0719      	lsls	r1, r3, #28
 8007726:	d422      	bmi.n	800776e <__swsetup_r+0x62>
 8007728:	06da      	lsls	r2, r3, #27
 800772a:	d407      	bmi.n	800773c <__swsetup_r+0x30>
 800772c:	2209      	movs	r2, #9
 800772e:	602a      	str	r2, [r5, #0]
 8007730:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007734:	81a3      	strh	r3, [r4, #12]
 8007736:	f04f 30ff 	mov.w	r0, #4294967295
 800773a:	e033      	b.n	80077a4 <__swsetup_r+0x98>
 800773c:	0758      	lsls	r0, r3, #29
 800773e:	d512      	bpl.n	8007766 <__swsetup_r+0x5a>
 8007740:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007742:	b141      	cbz	r1, 8007756 <__swsetup_r+0x4a>
 8007744:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8007748:	4299      	cmp	r1, r3
 800774a:	d002      	beq.n	8007752 <__swsetup_r+0x46>
 800774c:	4628      	mov	r0, r5
 800774e:	f7ff f94d 	bl	80069ec <_free_r>
 8007752:	2300      	movs	r3, #0
 8007754:	6363      	str	r3, [r4, #52]	@ 0x34
 8007756:	89a3      	ldrh	r3, [r4, #12]
 8007758:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800775c:	81a3      	strh	r3, [r4, #12]
 800775e:	2300      	movs	r3, #0
 8007760:	6063      	str	r3, [r4, #4]
 8007762:	6923      	ldr	r3, [r4, #16]
 8007764:	6023      	str	r3, [r4, #0]
 8007766:	89a3      	ldrh	r3, [r4, #12]
 8007768:	f043 0308 	orr.w	r3, r3, #8
 800776c:	81a3      	strh	r3, [r4, #12]
 800776e:	6923      	ldr	r3, [r4, #16]
 8007770:	b94b      	cbnz	r3, 8007786 <__swsetup_r+0x7a>
 8007772:	89a3      	ldrh	r3, [r4, #12]
 8007774:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8007778:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800777c:	d003      	beq.n	8007786 <__swsetup_r+0x7a>
 800777e:	4621      	mov	r1, r4
 8007780:	4628      	mov	r0, r5
 8007782:	f000 f88b 	bl	800789c <__smakebuf_r>
 8007786:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800778a:	f013 0201 	ands.w	r2, r3, #1
 800778e:	d00a      	beq.n	80077a6 <__swsetup_r+0x9a>
 8007790:	2200      	movs	r2, #0
 8007792:	60a2      	str	r2, [r4, #8]
 8007794:	6962      	ldr	r2, [r4, #20]
 8007796:	4252      	negs	r2, r2
 8007798:	61a2      	str	r2, [r4, #24]
 800779a:	6922      	ldr	r2, [r4, #16]
 800779c:	b942      	cbnz	r2, 80077b0 <__swsetup_r+0xa4>
 800779e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80077a2:	d1c5      	bne.n	8007730 <__swsetup_r+0x24>
 80077a4:	bd38      	pop	{r3, r4, r5, pc}
 80077a6:	0799      	lsls	r1, r3, #30
 80077a8:	bf58      	it	pl
 80077aa:	6962      	ldrpl	r2, [r4, #20]
 80077ac:	60a2      	str	r2, [r4, #8]
 80077ae:	e7f4      	b.n	800779a <__swsetup_r+0x8e>
 80077b0:	2000      	movs	r0, #0
 80077b2:	e7f7      	b.n	80077a4 <__swsetup_r+0x98>
 80077b4:	20013768 	.word	0x20013768

080077b8 <_raise_r>:
 80077b8:	291f      	cmp	r1, #31
 80077ba:	b538      	push	{r3, r4, r5, lr}
 80077bc:	4605      	mov	r5, r0
 80077be:	460c      	mov	r4, r1
 80077c0:	d904      	bls.n	80077cc <_raise_r+0x14>
 80077c2:	2316      	movs	r3, #22
 80077c4:	6003      	str	r3, [r0, #0]
 80077c6:	f04f 30ff 	mov.w	r0, #4294967295
 80077ca:	bd38      	pop	{r3, r4, r5, pc}
 80077cc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80077ce:	b112      	cbz	r2, 80077d6 <_raise_r+0x1e>
 80077d0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80077d4:	b94b      	cbnz	r3, 80077ea <_raise_r+0x32>
 80077d6:	4628      	mov	r0, r5
 80077d8:	f000 f830 	bl	800783c <_getpid_r>
 80077dc:	4622      	mov	r2, r4
 80077de:	4601      	mov	r1, r0
 80077e0:	4628      	mov	r0, r5
 80077e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80077e6:	f000 b817 	b.w	8007818 <_kill_r>
 80077ea:	2b01      	cmp	r3, #1
 80077ec:	d00a      	beq.n	8007804 <_raise_r+0x4c>
 80077ee:	1c59      	adds	r1, r3, #1
 80077f0:	d103      	bne.n	80077fa <_raise_r+0x42>
 80077f2:	2316      	movs	r3, #22
 80077f4:	6003      	str	r3, [r0, #0]
 80077f6:	2001      	movs	r0, #1
 80077f8:	e7e7      	b.n	80077ca <_raise_r+0x12>
 80077fa:	2100      	movs	r1, #0
 80077fc:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007800:	4620      	mov	r0, r4
 8007802:	4798      	blx	r3
 8007804:	2000      	movs	r0, #0
 8007806:	e7e0      	b.n	80077ca <_raise_r+0x12>

08007808 <raise>:
 8007808:	4b02      	ldr	r3, [pc, #8]	@ (8007814 <raise+0xc>)
 800780a:	4601      	mov	r1, r0
 800780c:	6818      	ldr	r0, [r3, #0]
 800780e:	f7ff bfd3 	b.w	80077b8 <_raise_r>
 8007812:	bf00      	nop
 8007814:	20013768 	.word	0x20013768

08007818 <_kill_r>:
 8007818:	b538      	push	{r3, r4, r5, lr}
 800781a:	4d07      	ldr	r5, [pc, #28]	@ (8007838 <_kill_r+0x20>)
 800781c:	2300      	movs	r3, #0
 800781e:	4604      	mov	r4, r0
 8007820:	4608      	mov	r0, r1
 8007822:	4611      	mov	r1, r2
 8007824:	602b      	str	r3, [r5, #0]
 8007826:	f7fb faad 	bl	8002d84 <_kill>
 800782a:	1c43      	adds	r3, r0, #1
 800782c:	d102      	bne.n	8007834 <_kill_r+0x1c>
 800782e:	682b      	ldr	r3, [r5, #0]
 8007830:	b103      	cbz	r3, 8007834 <_kill_r+0x1c>
 8007832:	6023      	str	r3, [r4, #0]
 8007834:	bd38      	pop	{r3, r4, r5, pc}
 8007836:	bf00      	nop
 8007838:	20013b38 	.word	0x20013b38

0800783c <_getpid_r>:
 800783c:	f7fb ba9a 	b.w	8002d74 <_getpid>

08007840 <_malloc_usable_size_r>:
 8007840:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007844:	1f18      	subs	r0, r3, #4
 8007846:	2b00      	cmp	r3, #0
 8007848:	bfbc      	itt	lt
 800784a:	580b      	ldrlt	r3, [r1, r0]
 800784c:	18c0      	addlt	r0, r0, r3
 800784e:	4770      	bx	lr

08007850 <__swhatbuf_r>:
 8007850:	b570      	push	{r4, r5, r6, lr}
 8007852:	460c      	mov	r4, r1
 8007854:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007858:	2900      	cmp	r1, #0
 800785a:	b096      	sub	sp, #88	@ 0x58
 800785c:	4615      	mov	r5, r2
 800785e:	461e      	mov	r6, r3
 8007860:	da0d      	bge.n	800787e <__swhatbuf_r+0x2e>
 8007862:	89a3      	ldrh	r3, [r4, #12]
 8007864:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8007868:	f04f 0100 	mov.w	r1, #0
 800786c:	bf14      	ite	ne
 800786e:	2340      	movne	r3, #64	@ 0x40
 8007870:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8007874:	2000      	movs	r0, #0
 8007876:	6031      	str	r1, [r6, #0]
 8007878:	602b      	str	r3, [r5, #0]
 800787a:	b016      	add	sp, #88	@ 0x58
 800787c:	bd70      	pop	{r4, r5, r6, pc}
 800787e:	466a      	mov	r2, sp
 8007880:	f000 f848 	bl	8007914 <_fstat_r>
 8007884:	2800      	cmp	r0, #0
 8007886:	dbec      	blt.n	8007862 <__swhatbuf_r+0x12>
 8007888:	9901      	ldr	r1, [sp, #4]
 800788a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800788e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8007892:	4259      	negs	r1, r3
 8007894:	4159      	adcs	r1, r3
 8007896:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800789a:	e7eb      	b.n	8007874 <__swhatbuf_r+0x24>

0800789c <__smakebuf_r>:
 800789c:	898b      	ldrh	r3, [r1, #12]
 800789e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80078a0:	079d      	lsls	r5, r3, #30
 80078a2:	4606      	mov	r6, r0
 80078a4:	460c      	mov	r4, r1
 80078a6:	d507      	bpl.n	80078b8 <__smakebuf_r+0x1c>
 80078a8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80078ac:	6023      	str	r3, [r4, #0]
 80078ae:	6123      	str	r3, [r4, #16]
 80078b0:	2301      	movs	r3, #1
 80078b2:	6163      	str	r3, [r4, #20]
 80078b4:	b003      	add	sp, #12
 80078b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80078b8:	ab01      	add	r3, sp, #4
 80078ba:	466a      	mov	r2, sp
 80078bc:	f7ff ffc8 	bl	8007850 <__swhatbuf_r>
 80078c0:	9f00      	ldr	r7, [sp, #0]
 80078c2:	4605      	mov	r5, r0
 80078c4:	4639      	mov	r1, r7
 80078c6:	4630      	mov	r0, r6
 80078c8:	f7ff f904 	bl	8006ad4 <_malloc_r>
 80078cc:	b948      	cbnz	r0, 80078e2 <__smakebuf_r+0x46>
 80078ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80078d2:	059a      	lsls	r2, r3, #22
 80078d4:	d4ee      	bmi.n	80078b4 <__smakebuf_r+0x18>
 80078d6:	f023 0303 	bic.w	r3, r3, #3
 80078da:	f043 0302 	orr.w	r3, r3, #2
 80078de:	81a3      	strh	r3, [r4, #12]
 80078e0:	e7e2      	b.n	80078a8 <__smakebuf_r+0xc>
 80078e2:	89a3      	ldrh	r3, [r4, #12]
 80078e4:	6020      	str	r0, [r4, #0]
 80078e6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80078ea:	81a3      	strh	r3, [r4, #12]
 80078ec:	9b01      	ldr	r3, [sp, #4]
 80078ee:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80078f2:	b15b      	cbz	r3, 800790c <__smakebuf_r+0x70>
 80078f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80078f8:	4630      	mov	r0, r6
 80078fa:	f000 f81d 	bl	8007938 <_isatty_r>
 80078fe:	b128      	cbz	r0, 800790c <__smakebuf_r+0x70>
 8007900:	89a3      	ldrh	r3, [r4, #12]
 8007902:	f023 0303 	bic.w	r3, r3, #3
 8007906:	f043 0301 	orr.w	r3, r3, #1
 800790a:	81a3      	strh	r3, [r4, #12]
 800790c:	89a3      	ldrh	r3, [r4, #12]
 800790e:	431d      	orrs	r5, r3
 8007910:	81a5      	strh	r5, [r4, #12]
 8007912:	e7cf      	b.n	80078b4 <__smakebuf_r+0x18>

08007914 <_fstat_r>:
 8007914:	b538      	push	{r3, r4, r5, lr}
 8007916:	4d07      	ldr	r5, [pc, #28]	@ (8007934 <_fstat_r+0x20>)
 8007918:	2300      	movs	r3, #0
 800791a:	4604      	mov	r4, r0
 800791c:	4608      	mov	r0, r1
 800791e:	4611      	mov	r1, r2
 8007920:	602b      	str	r3, [r5, #0]
 8007922:	f7fb fa8f 	bl	8002e44 <_fstat>
 8007926:	1c43      	adds	r3, r0, #1
 8007928:	d102      	bne.n	8007930 <_fstat_r+0x1c>
 800792a:	682b      	ldr	r3, [r5, #0]
 800792c:	b103      	cbz	r3, 8007930 <_fstat_r+0x1c>
 800792e:	6023      	str	r3, [r4, #0]
 8007930:	bd38      	pop	{r3, r4, r5, pc}
 8007932:	bf00      	nop
 8007934:	20013b38 	.word	0x20013b38

08007938 <_isatty_r>:
 8007938:	b538      	push	{r3, r4, r5, lr}
 800793a:	4d06      	ldr	r5, [pc, #24]	@ (8007954 <_isatty_r+0x1c>)
 800793c:	2300      	movs	r3, #0
 800793e:	4604      	mov	r4, r0
 8007940:	4608      	mov	r0, r1
 8007942:	602b      	str	r3, [r5, #0]
 8007944:	f7fb fa8e 	bl	8002e64 <_isatty>
 8007948:	1c43      	adds	r3, r0, #1
 800794a:	d102      	bne.n	8007952 <_isatty_r+0x1a>
 800794c:	682b      	ldr	r3, [r5, #0]
 800794e:	b103      	cbz	r3, 8007952 <_isatty_r+0x1a>
 8007950:	6023      	str	r3, [r4, #0]
 8007952:	bd38      	pop	{r3, r4, r5, pc}
 8007954:	20013b38 	.word	0x20013b38

08007958 <_gettimeofday>:
 8007958:	4b02      	ldr	r3, [pc, #8]	@ (8007964 <_gettimeofday+0xc>)
 800795a:	2258      	movs	r2, #88	@ 0x58
 800795c:	601a      	str	r2, [r3, #0]
 800795e:	f04f 30ff 	mov.w	r0, #4294967295
 8007962:	4770      	bx	lr
 8007964:	20013b38 	.word	0x20013b38

08007968 <_init>:
 8007968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800796a:	bf00      	nop
 800796c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800796e:	bc08      	pop	{r3}
 8007970:	469e      	mov	lr, r3
 8007972:	4770      	bx	lr

08007974 <_fini>:
 8007974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007976:	bf00      	nop
 8007978:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800797a:	bc08      	pop	{r3}
 800797c:	469e      	mov	lr, r3
 800797e:	4770      	bx	lr
